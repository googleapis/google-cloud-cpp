// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: generator/integration_tests/test.proto

#include "generator/integration_tests/golden/v1/internal/golden_thing_admin_tracing_connection.h"
#include "google/cloud/internal/opentelemetry.h"
#include <memory>

namespace google {
namespace cloud {
namespace golden_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

#ifdef GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

GoldenThingAdminTracingConnection::GoldenThingAdminTracingConnection(
    std::shared_ptr<golden_v1::GoldenThingAdminConnection> child)
    : child_(std::move(child)) {}

StreamRange<google::test::admin::database::v1::Database>
GoldenThingAdminTracingConnection::ListDatabases(google::test::admin::database::v1::ListDatabasesRequest request) {
  return child_->ListDatabases(request);
}

future<StatusOr<google::test::admin::database::v1::Database>>
GoldenThingAdminTracingConnection::CreateDatabase(google::test::admin::database::v1::CreateDatabaseRequest const& request) {
  return child_->CreateDatabase(request);
}

StatusOr<google::test::admin::database::v1::Database>
GoldenThingAdminTracingConnection::GetDatabase(google::test::admin::database::v1::GetDatabaseRequest const& request) {
  return child_->GetDatabase(request);
}

future<StatusOr<google::test::admin::database::v1::UpdateDatabaseDdlMetadata>>
GoldenThingAdminTracingConnection::UpdateDatabaseDdl(google::test::admin::database::v1::UpdateDatabaseDdlRequest const& request) {
  return child_->UpdateDatabaseDdl(request);
}

Status
GoldenThingAdminTracingConnection::DropDatabase(google::test::admin::database::v1::DropDatabaseRequest const& request) {
  return child_->DropDatabase(request);
}

StatusOr<google::test::admin::database::v1::GetDatabaseDdlResponse>
GoldenThingAdminTracingConnection::GetDatabaseDdl(google::test::admin::database::v1::GetDatabaseDdlRequest const& request) {
  return child_->GetDatabaseDdl(request);
}

StatusOr<google::iam::v1::Policy>
GoldenThingAdminTracingConnection::SetIamPolicy(google::iam::v1::SetIamPolicyRequest const& request) {
  return child_->SetIamPolicy(request);
}

StatusOr<google::iam::v1::Policy>
GoldenThingAdminTracingConnection::GetIamPolicy(google::iam::v1::GetIamPolicyRequest const& request) {
  return child_->GetIamPolicy(request);
}

StatusOr<google::iam::v1::TestIamPermissionsResponse>
GoldenThingAdminTracingConnection::TestIamPermissions(google::iam::v1::TestIamPermissionsRequest const& request) {
  return child_->TestIamPermissions(request);
}

future<StatusOr<google::test::admin::database::v1::Backup>>
GoldenThingAdminTracingConnection::CreateBackup(google::test::admin::database::v1::CreateBackupRequest const& request) {
  return child_->CreateBackup(request);
}

StatusOr<google::test::admin::database::v1::Backup>
GoldenThingAdminTracingConnection::GetBackup(google::test::admin::database::v1::GetBackupRequest const& request) {
  return child_->GetBackup(request);
}

StatusOr<google::test::admin::database::v1::Backup>
GoldenThingAdminTracingConnection::UpdateBackup(google::test::admin::database::v1::UpdateBackupRequest const& request) {
  return child_->UpdateBackup(request);
}

Status
GoldenThingAdminTracingConnection::DeleteBackup(google::test::admin::database::v1::DeleteBackupRequest const& request) {
  return child_->DeleteBackup(request);
}

StreamRange<google::test::admin::database::v1::Backup>
GoldenThingAdminTracingConnection::ListBackups(google::test::admin::database::v1::ListBackupsRequest request) {
  return child_->ListBackups(request);
}

future<StatusOr<google::test::admin::database::v1::Database>>
GoldenThingAdminTracingConnection::RestoreDatabase(google::test::admin::database::v1::RestoreDatabaseRequest const& request) {
  return child_->RestoreDatabase(request);
}

StreamRange<google::longrunning::Operation>
GoldenThingAdminTracingConnection::ListDatabaseOperations(google::test::admin::database::v1::ListDatabaseOperationsRequest request) {
  return child_->ListDatabaseOperations(request);
}

StreamRange<google::longrunning::Operation>
GoldenThingAdminTracingConnection::ListBackupOperations(google::test::admin::database::v1::ListBackupOperationsRequest request) {
  return child_->ListBackupOperations(request);
}

future<StatusOr<google::test::admin::database::v1::Database>>
GoldenThingAdminTracingConnection::LongRunningWithoutRouting(google::test::admin::database::v1::RestoreDatabaseRequest const& request) {
  return child_->LongRunningWithoutRouting(request);
}

future<StatusOr<google::test::admin::database::v1::Database>>
GoldenThingAdminTracingConnection::AsyncGetDatabase(google::test::admin::database::v1::GetDatabaseRequest const& request) {
  return child_->AsyncGetDatabase(request);
}

future<Status>
GoldenThingAdminTracingConnection::AsyncDropDatabase(google::test::admin::database::v1::DropDatabaseRequest const& request) {
  return child_->AsyncDropDatabase(request);
}

#endif  // GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace golden_v1_internal
}  // namespace cloud
}  // namespace google
