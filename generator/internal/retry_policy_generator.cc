// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "generator/internal/retry_policy_generator.h"
#include "generator/internal/codegen_utils.h"
#include "generator/internal/printer.h"
#include <google/protobuf/descriptor.h>

namespace google {
namespace cloud {
namespace generator_internal {

RetryPolicyGenerator::RetryPolicyGenerator(
    google::protobuf::ServiceDescriptor const* service_descriptor,
    VarsDictionary service_vars,
    std::map<std::string, VarsDictionary> service_method_vars,
    google::protobuf::compiler::GeneratorContext* context)
    : ServiceCodeGenerator("retry_policy_header_path", service_descriptor,
                           std::move(service_vars),
                           std::move(service_method_vars), context) {}

Status RetryPolicyGenerator::GenerateHeader() {
  HeaderPrint(CopyrightLicenseFileHeader());
  HeaderPrint(  // clang-format off
    "// Generated by the Codegen C++ plugin.\n"
    "// If you make any local changes, they will be lost.\n"
    "// source: $proto_file_name$\n"
    "#ifndef $header_include_guard$\n"
    "#define $header_include_guard$\n"
    "\n");
  // clang-format on

  // includes
  HeaderLocalIncludes({vars("retry_traits_header_path"),
                       "google/cloud/internal/retry_policy.h",
                       "google/cloud/status.h", "google/cloud/version.h"});
  HeaderPrint("\n");

  auto result = HeaderOpenNamespaces();
  if (!result.ok()) return result;

  HeaderPrint(  // clang-format off
    "/// The base class for retry policies.\n"
    "using RetryPolicy = google::cloud::internal::TraitBasedRetryPolicy<\n"
    "    $product_internal_namespace$::RetryTraits>;\n"
    "\n"
    "/// A retry policy that limits based on time.\n"
    "using LimitedTimeRetryPolicy = google::cloud::internal::LimitedTimeRetryPolicy<\n"
    "    $product_internal_namespace$::RetryTraits>;\n"
    "\n"
    "/// A retry policy that limits the number of times a request can fail.\n"
    "using LimitedErrorCountRetryPolicy =\n"
    "    google::cloud::internal::LimitedErrorCountRetryPolicy<\n"
    "        $product_internal_namespace$::RetryTraits>;\n\n"
    //  clang-format on
  );

  HeaderCloseNamespaces();
  // close header guard
  HeaderPrint(  // clang-format off
    "#endif  // $header_include_guard$\n");
  // clang-format on
  return {};
}

Status RetryPolicyGenerator::GenerateCc() { return {}; }

}  // namespace generator_internal
}  // namespace cloud
}  // namespace google
