// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/compute_public_google_rest_v1.json
// revision: 20250511

syntax = "proto3";

package google.cloud.cpp.compute.v1;

// An interconnect attachment group resource allows customers to create,
// analyze, and expand highly available deployments.
message InterconnectAttachmentGroup {
  // Attachments in the AttachmentGroup. Keys are arbitrary user-specified
  // strings. Users are encouraged, but not required, to use their preferred
  // format for resource links as keys. Note that there are add-members and
  // remove-members methods in gcloud. The size of this map is limited by an
  // "Attachments per group" quota.
  map<string, InterconnectAttachmentGroupAttachment> attachments = 1
      [json_name = "attachments"];

  optional InterconnectAttachmentGroupConfigured configured = 2
      [json_name = "configured"];

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 3 [json_name = "creationTimestamp"];

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 4 [json_name = "description"];

  // Opaque system-generated token that uniquely identifies the configuration.
  // If provided when patching a configuration in update mode, the provided
  // token must match the current token or the update is rejected. This provides
  // a reliable means of doing read-modify-write (optimistic locking) as
  // described by AIP 154.
  optional string etag = 5 [json_name = "etag"];

  // [Output Only] The unique identifier for the resource type. The server
  // generates this identifier.
  optional string id = 6 [json_name = "id"];

  optional InterconnectAttachmentGroupIntent intent = 7 [json_name = "intent"];

  // The URL of an InterconnectGroup that groups these Attachments'
  // Interconnects. Customers do not need to set this unless directed by Google
  // Support.
  optional string interconnect_group = 8 [json_name = "interconnectGroup"];

  // [Output Only] Type of the resource. Always
  // compute#interconnectAttachmentGroup.
  optional string kind = 9 [json_name = "kind"];

  optional InterconnectAttachmentGroupLogicalStructure logical_structure = 10
      [json_name = "logicalStructure"];

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 11 [json_name = "name"];

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 12 [json_name = "selfLink"];
}

// An Attachment in this AttachmentGroup.
message InterconnectAttachmentGroupAttachment {
  optional string attachment = 1 [json_name = "attachment"];
}

// [Output Only] The redundancy this group is configured to support. The way a
// user queries what SLA their Attachment gets is by looking at this field of
// the Attachment's AttachmentGroup.
message InterconnectAttachmentGroupConfigured {
  optional InterconnectAttachmentGroupConfiguredAvailabilitySLA
      availability_sla = 1 [json_name = "availabilitySla"];
}

// [Output Only] Which SLA this group is configured to support, and why this
// group does or does not meet that SLA's requirements.
message InterconnectAttachmentGroupConfiguredAvailabilitySLA {
  // EFFECTIVE_SLA_UNSPECIFIED:
  // NO_SLA:
  // PRODUCTION_CRITICAL:
  // PRODUCTION_NON_CRITICAL:
  optional string effective_sla = 1 [json_name = "effectiveSla"];

  repeated
      InterconnectAttachmentGroupConfiguredAvailabilitySLAIntendedSlaBlockers
          intended_sla_blockers = 2 [json_name = "intendedSlaBlockers"];
}

// [Output Only] Reasons why configuration.availabilitySLA.sla differs from
// intent.availabilitySLA. This list is empty if and only if those are the same.
message
InterconnectAttachmentGroupConfiguredAvailabilitySLAIntendedSlaBlockers {
  // [Output Only] URLs of any particular Attachments to explain this blocker in
  // more detail.
  repeated string attachments = 1 [json_name = "attachments"];

  // BLOCKER_TYPE_UNSPECIFIED:
  // INCOMPATIBLE_METROS:
  // INCOMPATIBLE_REGIONS:
  // MISSING_GLOBAL_ROUTING:
  // NO_ATTACHMENTS:
  // NO_ATTACHMENTS_IN_METRO_AND_ZONE:
  // OTHER:
  optional string blocker_type = 2 [json_name = "blockerType"];

  // [Output Only] The url of Google Cloud public documentation explaining this
  // requirement. This is set for every type of requirement.
  optional string documentation_link = 3 [json_name = "documentationLink"];

  // [Output Only] A human-readable explanation of this requirement and why it's
  // not met. This is set for every type of requirement.
  optional string explanation = 4 [json_name = "explanation"];

  // [Output Only] Metros used to explain this blocker in more detail. These are
  // three-letter lowercase strings like "iad". This will be set for some
  // blockers (like NO_ATTACHMENTS_IN_METRO_AND_ZONE) but does not apply to
  // others.
  repeated string metros = 5 [json_name = "metros"];

  // [Output Only] Regions used to explain this blocker in more detail. These
  // are region names formatted like "us-central1". This will be set for some
  // blockers (like INCOMPATIBLE_REGIONS) but does not apply to others.
  repeated string regions = 6 [json_name = "regions"];

  // [Output Only] Zones used to explain this blocker in more detail. Format is
  // "zone1" and/or "zone2". This will be set for some blockers (like
  // MISSING_ZONE) but does not apply to others.
  repeated string zones = 7 [json_name = "zones"];
}

// The user's intent for this AttachmentGroup. This is the only required field
// besides the name that must be specified on group creation.
message InterconnectAttachmentGroupIntent {
  // AVAILABILITY_SLA_UNSPECIFIED:
  // NO_SLA:
  // PRODUCTION_CRITICAL:
  // PRODUCTION_NON_CRITICAL:
  optional string availability_sla = 1 [json_name = "availabilitySla"];
}

// [Output Only] An analysis of the logical layout of Attachments in this group.
// Every Attachment in the group is shown once in this structure.
message InterconnectAttachmentGroupLogicalStructure {
  repeated InterconnectAttachmentGroupLogicalStructureRegion regions = 1
      [json_name = "regions"];
}

// [Output Only] The regions Attachments in this group are in.
message InterconnectAttachmentGroupLogicalStructureRegion {
  repeated InterconnectAttachmentGroupLogicalStructureRegionMetro metros = 1
      [json_name = "metros"];

  // [Output Only] The name of a region, like "us-central1".
  optional string region = 2 [json_name = "region"];
}

// [Output Only] The metros of Attachments in this group in this region.
message InterconnectAttachmentGroupLogicalStructureRegionMetro {
  repeated InterconnectAttachmentGroupLogicalStructureRegionMetroFacility
      facilities = 1 [json_name = "facilities"];

  // [Output Only] The name of the metro, as a three-letter lowercase string
  // like "iad". This is the first component of the location of an Interconnect.
  optional string metro = 2 [json_name = "metro"];
}

// [Output Only] The facilities used for this group's Attachments'
// Interconnects.
message InterconnectAttachmentGroupLogicalStructureRegionMetroFacility {
  // [Output Only] The name of a facility, like "iad-1234".
  optional string facility = 1 [json_name = "facility"];

  repeated InterconnectAttachmentGroupLogicalStructureRegionMetroFacilityZone
      zones = 2 [json_name = "zones"];
}

// [Output Only] The zones that Attachments in this group are present in, in the
// given facilities. This is inherited from their Interconnects.
message InterconnectAttachmentGroupLogicalStructureRegionMetroFacilityZone {
  // [Output Only] URLs of Attachments in the given zone, to the given region,
  // on Interconnects in the given facility and metro. Every Attachment in the
  // AG has such an entry.
  repeated string attachments = 1 [json_name = "attachments"];

  // [Output Only] The name of a zone, either "zone1" or "zone2".
  optional string zone = 2 [json_name = "zone"];
}

// Response for the InterconnectAttachmentGroupsGetOperationalStatusResponse.
message InterconnectAttachmentGroupsGetOperationalStatusResponse {
  optional string etag = 1 [json_name = "etag"];

  optional InterconnectAttachmentGroupsOperationalStatus result = 2
      [json_name = "result"];
}

message InterconnectAttachmentGroupsListResponse {
  optional string etag = 1 [json_name = "etag"];

  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 2 [json_name = "id"];

  // A list of InterconnectAttachmentGroup resources.
  repeated InterconnectAttachmentGroup items = 3 [json_name = "items"];

  optional string kind = 4 [json_name = "kind"];

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 5 [json_name = "nextPageToken"];

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 6 [json_name = "selfLink"];

  // [Output Only] Unreachable resources. end_interface:
  // MixerListResponseWithEtagBuilder
  repeated string unreachables = 7 [json_name = "unreachables"];

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // QUOTA_INFO_UNAVAILABLE: Quota information is not available to client
    // requests (e.g: regions.list).
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1 [json_name = "code"];

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1 [json_name = "key"];

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2 [json_name = "value"];
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2 [json_name = "data"];

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3 [json_name = "message"];
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 8 [json_name = "warning"];
}

message InterconnectAttachmentGroupsOperationalStatus {
  repeated InterconnectAttachmentGroupsOperationalStatusAttachmentStatus
      attachment_statuses = 1 [json_name = "attachmentStatuses"];

  optional InterconnectAttachmentGroupConfigured configured = 2
      [json_name = "configured"];

  // Summarizes the status of the group.
  // DEGRADED:
  // FULLY_DOWN:
  // FULLY_UP:
  // UNSPECIFIED:
  optional string group_status = 3 [json_name = "groupStatus"];

  optional InterconnectAttachmentGroupIntent intent = 4 [json_name = "intent"];

  // The operational state of the group, including only active Attachments.
  optional InterconnectAttachmentGroupConfigured operational = 5
      [json_name = "operational"];
}

// The status of one Attachment in the group. List order is arbitrary.
message InterconnectAttachmentGroupsOperationalStatusAttachmentStatus {
  // Whether this Attachment is enabled. This becomes false when the customer
  // drains their Attachment.
  optional bool admin_enabled = 1 [json_name = "adminEnabled"];

  // The URL of the Attachment being described.
  optional string attachment = 2 [json_name = "attachment"];

  // Whether this Attachment is participating in the redundant configuration.
  // This will be ACTIVE if and only if the status below is CONNECTION_UP. Any
  // INACTIVE Attachments are excluded from the analysis that generates
  // operational.availabilitySLA.
  // ACTIVE:
  // INACTIVE:
  // UNSPECIFIED:
  optional string is_active = 3 [json_name = "isActive"];

  // Whether this Attachment is active, and if so, whether BGP is up. This is
  // based on the statuses available in the Pantheon UI here:
  // http://google3/java/com/google/cloud/boq/clientapi/gce/hybrid/api/interconnect_models.proto
  // ATTACHMENT_STATUS_UNKNOWN:
  // CONNECTION_DISABLED:
  // CONNECTION_DOWN:
  // CONNECTION_UP:
  // DEFUNCT:
  // IPSEC_CONFIGURATION_NEEDED_STATUS:
  // IPSEC_READY_TO_RESUME_FLOW_STATUS:
  // IPV4_DOWN_IPV6_UP:
  // IPV4_UP_IPV6_DOWN:
  // PARTNER_REQUEST_RECEIVED:
  // PENDING_CUSTOMER:
  // PENDING_PARTNER:
  // PROVISIONED:
  // ROUTER_CONFIGURATION_BROKEN:
  // UNPROVISIONED:
  optional string status = 4 [json_name = "status"];
}
