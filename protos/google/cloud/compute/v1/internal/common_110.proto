// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/compute_public_google_rest_v1.json
// revision: 20231110

syntax = "proto3";

package google.cloud.cpp.compute.v1;

import "google/cloud/compute/v1/internal/common_020.proto";

// Represents a Persistent Disk Snapshot resource. You can use snapshots to back
// up data on a regular interval. For more information, read Creating persistent
// disk snapshots.
message Snapshot {
  // [Output Only] The architecture of the snapshot. Valid values are ARM64 or
  // X86_64.
  // ARCHITECTURE_UNSPECIFIED: Default value indicating Architecture is not set.
  // ARM64: Machines with architecture ARM64
  // X86_64: Machines with architecture X86_64
  optional string architecture = 1 [json_name = "architecture"];

  // [Output Only] Set to true if snapshots are automatically created by
  // applying resource policy on the target disk.
  optional bool auto_created = 2 [json_name = "autoCreated"];

  // Creates the new snapshot in the snapshot chain labeled with the specified
  // name. The chain name must be 1-63 characters long and comply with RFC1035.
  // This is an uncommon option only for advanced service owners who needs to
  // create separate snapshot chains, for example, for chargeback tracking. When
  // you describe your snapshot resource, this field is visible only if it has a
  // non-empty value.
  optional string chain_name = 3 [json_name = "chainName"];

  // [Output Only] Size in bytes of the snapshot at creation time.
  optional string creation_size_bytes = 4 [json_name = "creationSizeBytes"];

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 5 [json_name = "creationTimestamp"];

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 6 [json_name = "description"];

  // [Output Only] Size of the source disk, specified in GB.
  optional string disk_size_gb = 7 [json_name = "diskSizeGb"];

  // [Output Only] Number of bytes downloaded to restore a snapshot to a disk.
  optional string download_bytes = 8 [json_name = "downloadBytes"];

  // [Output Only] A list of features to enable on the guest operating system.
  // Applicable only for bootable images. Read Enabling guest operating system
  // features to see a list of available options.
  repeated GuestOsFeature guest_os_features = 31
      [json_name = "guestOsFeatures"];

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 9 [json_name = "id"];

  // [Output Only] Type of the resource. Always compute#snapshot for Snapshot
  // resources.
  optional string kind = 10 [json_name = "kind"];

  // A fingerprint for the labels being applied to this snapshot, which is
  // essentially a hash of the labels set used for optimistic locking. The
  // fingerprint is initially generated by Compute Engine and changes after
  // every request to modify or update labels. You must always provide an
  // up-to-date fingerprint hash in order to update or change labels, otherwise
  // the request will fail with error 412 conditionNotMet. To see the latest
  // fingerprint, make a get() request to retrieve a snapshot.
  optional string label_fingerprint = 11 [json_name = "labelFingerprint"];

  // Labels to apply to this snapshot. These can be later modified by the
  // setLabels method. Label values may be empty.
  map<string, string> labels = 12 [json_name = "labels"];

  // [Output Only] Integer license codes indicating which licenses are attached
  // to this snapshot.
  repeated string license_codes = 13 [json_name = "licenseCodes"];

  // [Output Only] A list of public visible licenses that apply to this
  // snapshot. This can be because the original image had licenses attached
  // (such as a Windows image).
  repeated string licenses = 14 [json_name = "licenses"];

  // An opaque location hint used to place the snapshot close to other
  // resources. This field is for use by internal tools that use the public API.
  optional string location_hint = 15 [json_name = "locationHint"];

  // Name of the resource; provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 16 [json_name = "name"];

  // [Output Only] Reserved for future use.
  optional bool satisfies_pzs = 17 [json_name = "satisfiesPzs"];

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 18 [json_name = "selfLink"];

  // Encrypts the snapshot using a customer-supplied encryption key. After you
  // encrypt a snapshot using a customer-supplied key, you must provide the same
  // key if you use the snapshot later. For example, you must provide the
  // encryption key when you create a disk from the encrypted snapshot in a
  // future request. Customer-supplied encryption keys do not protect access to
  // metadata of the snapshot. If you do not provide an encryption key when
  // creating the snapshot, then the snapshot will be encrypted using an
  // automatically generated key and you do not need to provide a key to use the
  // snapshot later.
  optional CustomerEncryptionKey snapshot_encryption_key = 19
      [json_name = "snapshotEncryptionKey"];

  // Indicates the type of the snapshot.
  // ARCHIVE:
  // STANDARD:
  optional string snapshot_type = 20 [json_name = "snapshotType"];

  // The source disk used to create this snapshot.
  optional string source_disk = 21 [json_name = "sourceDisk"];

  // The customer-supplied encryption key of the source disk. Required if the
  // source disk is protected by a customer-supplied encryption key.
  optional CustomerEncryptionKey source_disk_encryption_key = 22
      [json_name = "sourceDiskEncryptionKey"];

  // The source disk whose recovery checkpoint will be used to create this
  // snapshot.
  optional string source_disk_for_recovery_checkpoint = 30
      [json_name = "sourceDiskForRecoveryCheckpoint"];

  // [Output Only] The ID value of the disk used to create this snapshot. This
  // value may be used to determine whether the snapshot was taken from the
  // current or a previous instance of a given disk name.
  optional string source_disk_id = 23 [json_name = "sourceDiskId"];

  // [Output Only] URL of the resource policy which created this scheduled
  // snapshot.
  optional string source_snapshot_schedule_policy = 24
      [json_name = "sourceSnapshotSchedulePolicy"];

  // [Output Only] ID of the resource policy which created this scheduled
  // snapshot.
  optional string source_snapshot_schedule_policy_id = 25
      [json_name = "sourceSnapshotSchedulePolicyId"];

  // [Output Only] The status of the snapshot. This can be CREATING, DELETING,
  // FAILED, READY, or UPLOADING.
  // CREATING: Snapshot creation is in progress.
  // DELETING: Snapshot is currently being deleted.
  // FAILED: Snapshot creation failed.
  // READY: Snapshot has been created successfully.
  // UPLOADING: Snapshot is being uploaded.
  optional string status = 26 [json_name = "status"];

  // [Output Only] A size of the storage used by the snapshot. As snapshots
  // share storage, this number is expected to change with snapshot
  // creation/deletion.
  optional string storage_bytes = 27 [json_name = "storageBytes"];

  // [Output Only] An indicator whether storageBytes is in a stable state or it
  // is being adjusted as a result of shared storage reallocation. This status
  // can either be UPDATING, meaning the size of the snapshot is being updated,
  // or UP_TO_DATE, meaning the size of the snapshot is up-to-date.
  // UPDATING:
  // UP_TO_DATE:
  optional string storage_bytes_status = 28 [json_name = "storageBytesStatus"];

  // Cloud Storage bucket storage location of the snapshot (regional or
  // multi-regional).
  repeated string storage_locations = 29 [json_name = "storageLocations"];
}
