// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/compute_public_google_rest_v1.json
// revision: 20240220

syntax = "proto3";

package google.cloud.cpp.compute.v1;

import "google/cloud/compute/v1/internal/common_066.proto";

// Represents an Interconnect Attachment (VLAN) resource. You can use
// Interconnect attachments (VLANS) to connect your Virtual Private Cloud
// networks to your on-premises networks through an Interconnect. For more
// information, read Creating VLAN Attachments.
message InterconnectAttachment {
  // Determines whether this Attachment will carry packets. Not present for
  // PARTNER_PROVIDER.
  optional bool admin_enabled = 1 [json_name = "adminEnabled"];

  // Provisioned bandwidth capacity for the interconnect attachment. For
  // attachments of type DEDICATED, the user can set the bandwidth. For
  // attachments of type PARTNER, the Google Partner that is operating the
  // interconnect must set the bandwidth. Output only for PARTNER type, mutable
  // for PARTNER_PROVIDER and DEDICATED, and can take one of the following
  // values: - BPS_50M: 50 Mbit/s - BPS_100M: 100 Mbit/s - BPS_200M: 200 Mbit/s
  // - BPS_300M: 300 Mbit/s - BPS_400M: 400 Mbit/s - BPS_500M: 500 Mbit/s -
  // BPS_1G: 1 Gbit/s - BPS_2G: 2 Gbit/s - BPS_5G: 5 Gbit/s - BPS_10G: 10 Gbit/s
  // - BPS_20G: 20 Gbit/s - BPS_50G: 50 Gbit/s
  // BPS_100M: 100 Mbit/s
  // BPS_10G: 10 Gbit/s
  // BPS_1G: 1 Gbit/s
  // BPS_200M: 200 Mbit/s
  // BPS_20G: 20 Gbit/s
  // BPS_2G: 2 Gbit/s
  // BPS_300M: 300 Mbit/s
  // BPS_400M: 400 Mbit/s
  // BPS_500M: 500 Mbit/s
  // BPS_50G: 50 Gbit/s
  // BPS_50M: 50 Mbit/s
  // BPS_5G: 5 Gbit/s
  optional string bandwidth = 2 [json_name = "bandwidth"];

  // This field is not available.
  repeated string candidate_ipv6_subnets = 3
      [json_name = "candidateIpv6Subnets"];

  // Up to 16 candidate prefixes that can be used to restrict the allocation of
  // cloudRouterIpAddress and customerRouterIpAddress for this attachment. All
  // prefixes must be within link-local address space (169.254.0.0/16) and must
  // be /29 or shorter (/28, /27, etc). Google will attempt to select an unused
  // /29 from the supplied candidate prefix(es). The request will fail if all
  // possible /29s are in use on Google's edge. If not supplied, Google will
  // randomly select an unused /29 from all of link-local space.
  repeated string candidate_subnets = 4 [json_name = "candidateSubnets"];

  // [Output Only] IPv4 address + prefix length to be configured on Cloud Router
  // Interface for this interconnect attachment.
  optional string cloud_router_ip_address = 5
      [json_name = "cloudRouterIpAddress"];

  // [Output Only] IPv6 address + prefix length to be configured on Cloud Router
  // Interface for this interconnect attachment.
  optional string cloud_router_ipv6_address = 6
      [json_name = "cloudRouterIpv6Address"];

  // This field is not available.
  optional string cloud_router_ipv6_interface_id = 7
      [json_name = "cloudRouterIpv6InterfaceId"];

  // [Output Only] Constraints for this attachment, if any. The attachment does
  // not work if these constraints are not met.
  optional InterconnectAttachmentConfigurationConstraints
      configuration_constraints = 36 [json_name = "configurationConstraints"];

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 8 [json_name = "creationTimestamp"];

  // [Output Only] IPv4 address + prefix length to be configured on the customer
  // router subinterface for this interconnect attachment.
  optional string customer_router_ip_address = 9
      [json_name = "customerRouterIpAddress"];

  // [Output Only] IPv6 address + prefix length to be configured on the customer
  // router subinterface for this interconnect attachment.
  optional string customer_router_ipv6_address = 10
      [json_name = "customerRouterIpv6Address"];

  // This field is not available.
  optional string customer_router_ipv6_interface_id = 11
      [json_name = "customerRouterIpv6InterfaceId"];

  // [Output Only] Dataplane version for this InterconnectAttachment. This field
  // is only present for Dataplane version 2 and higher. Absence of this field
  // in the API output indicates that the Dataplane is version 1.
  optional int32 dataplane_version = 12 [json_name = "dataplaneVersion"];

  // An optional description of this resource.
  optional string description = 13 [json_name = "description"];

  // Desired availability domain for the attachment. Only available for type
  // PARTNER, at creation time, and can take one of the following values: -
  // AVAILABILITY_DOMAIN_ANY - AVAILABILITY_DOMAIN_1 - AVAILABILITY_DOMAIN_2 For
  // improved reliability, customers should configure a pair of attachments, one
  // per availability domain. The selected availability domain will be provided
  // to the Partner via the pairing key, so that the provisioned circuit will
  // lie in the specified domain. If not specified, the value will default to
  // AVAILABILITY_DOMAIN_ANY.
  // AVAILABILITY_DOMAIN_1:
  // AVAILABILITY_DOMAIN_2:
  // AVAILABILITY_DOMAIN_ANY:
  optional string edge_availability_domain = 14
      [json_name = "edgeAvailabilityDomain"];

  // Indicates the user-supplied encryption option of this VLAN attachment
  // (interconnectAttachment). Can only be specified at attachment creation for
  // PARTNER or DEDICATED attachments. Possible values are: - NONE - This is the
  // default value, which means that the VLAN attachment carries unencrypted
  // traffic. VMs are able to send traffic to, or receive traffic from, such a
  // VLAN attachment. - IPSEC - The VLAN attachment carries only encrypted
  // traffic that is encrypted by an IPsec device, such as an HA VPN gateway or
  // third-party IPsec VPN. VMs cannot directly send traffic to, or receive
  // traffic from, such a VLAN attachment. To use *HA VPN over Cloud
  // Interconnect*, the VLAN attachment must be created with this option.
  // IPSEC: The interconnect attachment will carry only encrypted traffic that
  // is encrypted by an IPsec device such as HA VPN gateway; VMs cannot directly
  // send traffic to or receive traffic from such an interconnect attachment. To
  // use HA VPN over Cloud Interconnect, the interconnect attachment must be
  // created with this option.
  // NONE: This is the default value, which means the Interconnect Attachment
  // will carry unencrypted traffic. VMs will be able to send traffic to or
  // receive traffic from such interconnect attachment.
  optional string encryption = 15 [json_name = "encryption"];

  // [Output Only] Google reference ID, to be used when raising support tickets
  // with Google or otherwise to debug backend connectivity issues. [Deprecated]
  // This field is not used.
  optional string google_reference_id = 16 [json_name = "googleReferenceId"];

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 17 [json_name = "id"];

  // URL of the underlying Interconnect object that this attachment's traffic
  // will traverse through.
  optional string interconnect = 18 [json_name = "interconnect"];

  // A list of URLs of addresses that have been reserved for the VLAN
  // attachment. Used only for the VLAN attachment that has the encryption
  // option as IPSEC. The addresses must be regional internal IP address ranges.
  // When creating an HA VPN gateway over the VLAN attachment, if the attachment
  // is configured to use a regional internal IP address, then the VPN gateway's
  // IP address is allocated from the IP address range specified here. For
  // example, if the HA VPN gateway's interface 0 is paired to this VLAN
  // attachment, then a regional internal IP address for the VPN gateway
  // interface 0 will be allocated from the IP address specified for this VLAN
  // attachment. If this field is not specified when creating the VLAN
  // attachment, then later on when creating an HA VPN gateway on this VLAN
  // attachment, the HA VPN gateway's IP address is allocated from the regional
  // external IP address pool.
  repeated string ipsec_internal_addresses = 19
      [json_name = "ipsecInternalAddresses"];

  // [Output Only] Type of the resource. Always compute#interconnectAttachment
  // for interconnect attachments.
  optional string kind = 20 [json_name = "kind"];

  // A fingerprint for the labels being applied to this InterconnectAttachment,
  // which is essentially a hash of the labels set used for optimistic locking.
  // The fingerprint is initially generated by Compute Engine and changes after
  // every request to modify or update labels. You must always provide an
  // up-to-date fingerprint hash in order to update or change labels, otherwise
  // the request will fail with error 412 conditionNotMet. To see the latest
  // fingerprint, make a get() request to retrieve an InterconnectAttachment.
  optional string label_fingerprint = 37 [json_name = "labelFingerprint"];

  // Labels for this resource. These can only be added or modified by the
  // setLabels method. Each label key/value pair must comply with RFC1035. Label
  // values may be empty.
  map<string, string> labels = 38 [json_name = "labels"];

  // Maximum Transmission Unit (MTU), in bytes, of packets passing through this
  // interconnect attachment. Only 1440 and 1500 are allowed. If not specified,
  // the value will default to 1440.
  optional int32 mtu = 21 [json_name = "mtu"];

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 22 [json_name = "name"];

  // [Output Only] The current status of whether or not this interconnect
  // attachment is functional, which can take one of the following values: -
  // OS_ACTIVE: The attachment has been turned up and is ready to use. -
  // OS_UNPROVISIONED: The attachment is not ready to use yet, because turnup is
  // not complete.
  // OS_ACTIVE: Indicates that attachment has been turned up and is ready to
  // use.
  // OS_UNPROVISIONED: Indicates that attachment is not ready to use yet,
  // because turnup is not complete.
  optional string operational_status = 23 [json_name = "operationalStatus"];

  // [Output only for type PARTNER. Input only for PARTNER_PROVIDER. Not present
  // for DEDICATED]. The opaque identifier of a PARTNER attachment used to
  // initiate provisioning with a selected partner. Of the form
  // "XXXXX/region/domain"
  optional string pairing_key = 24 [json_name = "pairingKey"];

  // Optional BGP ASN for the router supplied by a Layer 3 Partner if they
  // configured BGP on behalf of the customer. Output only for PARTNER type,
  // input only for PARTNER_PROVIDER, not available for DEDICATED.
  optional string partner_asn = 25 [json_name = "partnerAsn"];

  // Informational metadata about Partner attachments from Partners to display
  // to customers. Output only for PARTNER type, mutable for PARTNER_PROVIDER,
  // not available for DEDICATED.
  optional InterconnectAttachmentPartnerMetadata partner_metadata = 26
      [json_name = "partnerMetadata"];

  // [Output Only] Information specific to an InterconnectAttachment. This
  // property is populated if the interconnect that this is attached to is of
  // type DEDICATED.
  optional InterconnectAttachmentPrivateInfo private_interconnect_info = 27
      [json_name = "privateInterconnectInfo"];

  // [Output Only] URL of the region where the regional interconnect attachment
  // resides. You must specify this field as part of the HTTP request URL. It is
  // not settable as a field in the request body.
  optional string region = 28 [json_name = "region"];

  // [Output Only] If the attachment is on a Cross-Cloud Interconnect
  // connection, this field contains the interconnect's remote location service
  // provider. Example values: "Amazon Web Services" "Microsoft Azure". The
  // field is set only for attachments on Cross-Cloud Interconnect connections.
  // Its value is copied from the InterconnectRemoteLocation remoteService
  // field.
  optional string remote_service = 39 [json_name = "remoteService"];

  // URL of the Cloud Router to be used for dynamic routing. This router must be
  // in the same region as this InterconnectAttachment. The
  // InterconnectAttachment will automatically connect the Interconnect to the
  // network & region within which the Cloud Router is configured.
  optional string router = 29 [json_name = "router"];

  // [Output Only] Reserved for future use.
  optional bool satisfies_pzs = 30 [json_name = "satisfiesPzs"];

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 31 [json_name = "selfLink"];

  // The stack type for this interconnect attachment to identify whether the
  // IPv6 feature is enabled or not. If not specified, IPV4_ONLY will be used.
  // This field can be both set at interconnect attachments creation and update
  // interconnect attachment operations.
  // IPV4_IPV6: The interconnect attachment can have both IPv4 and IPv6
  // addresses.
  // IPV4_ONLY: The interconnect attachment will only be assigned IPv4
  // addresses.
  optional string stack_type = 32 [json_name = "stackType"];

  // [Output Only] The current state of this attachment's functionality. Enum
  // values ACTIVE and UNPROVISIONED are shared by DEDICATED/PRIVATE, PARTNER,
  // and PARTNER_PROVIDER interconnect attachments, while enum values
  // PENDING_PARTNER, PARTNER_REQUEST_RECEIVED, and PENDING_CUSTOMER are used
  // for only PARTNER and PARTNER_PROVIDER interconnect attachments. This state
  // can take one of the following values: - ACTIVE: The attachment has been
  // turned up and is ready to use. - UNPROVISIONED: The attachment is not ready
  // to use yet, because turnup is not complete. - PENDING_PARTNER: A
  // newly-created PARTNER attachment that has not yet been configured on the
  // Partner side. - PARTNER_REQUEST_RECEIVED: A PARTNER attachment is in the
  // process of provisioning after a PARTNER_PROVIDER attachment was created
  // that references it. - PENDING_CUSTOMER: A PARTNER or PARTNER_PROVIDER
  // attachment that is waiting for a customer to activate it. - DEFUNCT: The
  // attachment was deleted externally and is no longer functional. This could
  // be because the associated Interconnect was removed, or because the other
  // side of a Partner attachment was deleted.
  // ACTIVE: Indicates that attachment has been turned up and is ready to use.
  // DEFUNCT: The attachment was deleted externally and is no longer functional.
  // This could be because the associated Interconnect was wiped out, or because
  // the other side of a Partner attachment was deleted.
  // PARTNER_REQUEST_RECEIVED: A PARTNER attachment is in the process of
  // provisioning after a PARTNER_PROVIDER attachment was created that
  // references it.
  // PENDING_CUSTOMER: PARTNER or PARTNER_PROVIDER attachment that is waiting
  // for the customer to activate.
  // PENDING_PARTNER: A newly created PARTNER attachment that has not yet been
  // configured on the Partner side.
  // STATE_UNSPECIFIED:
  // UNPROVISIONED: Indicates that attachment is not ready to use yet, because
  // turnup is not complete.
  optional string state = 33 [json_name = "state"];

  // Length of the IPv4 subnet mask. Allowed values: - 29 (default) - 30 The
  // default value is 29, except for Cross-Cloud Interconnect connections that
  // use an InterconnectRemoteLocation with a constraints.subnetLengthRange.min
  // equal to 30. For example, connections that use an Azure remote location
  // fall into this category. In these cases, the default value is 30, and
  // requesting 29 returns an error. Where both 29 and 30 are allowed, 29 is
  // preferred, because it gives Google Cloud Support more debugging visibility.
  optional int32 subnet_length = 40 [json_name = "subnetLength"];

  // The type of interconnect attachment this is, which can take one of the
  // following values: - DEDICATED: an attachment to a Dedicated Interconnect. -
  // PARTNER: an attachment to a Partner Interconnect, created by the customer.
  // - PARTNER_PROVIDER: an attachment to a Partner Interconnect, created by the
  // partner.
  // DEDICATED: Attachment to a dedicated interconnect.
  // PARTNER: Attachment to a partner interconnect, created by the customer.
  // PARTNER_PROVIDER: Attachment to a partner interconnect, created by the
  // partner.
  optional string type = 34 [json_name = "type"];

  // The IEEE 802.1Q VLAN tag for this attachment, in the range 2-4093. Only
  // specified at creation time.
  optional int32 vlan_tag8021q = 35 [json_name = "vlanTag8021q"];
}

message InterconnectAttachmentAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1 [json_name = "id"];

  // A list of InterconnectAttachmentsScopedList resources.
  map<string, InterconnectAttachmentsScopedList> items = 2
      [json_name = "items"];

  // [Output Only] Type of resource. Always
  // compute#interconnectAttachmentAggregatedList for aggregated lists of
  // interconnect attachments.
  optional string kind = 3 [json_name = "kind"];

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4 [json_name = "nextPageToken"];

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5 [json_name = "selfLink"];

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6 [json_name = "unreachables"];

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1 [json_name = "code"];

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1 [json_name = "key"];

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2 [json_name = "value"];
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2 [json_name = "data"];

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3 [json_name = "message"];
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7 [json_name = "warning"];
}

// Response to the list request, and contains a list of interconnect
// attachments.
message InterconnectAttachmentList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1 [json_name = "id"];

  // A list of InterconnectAttachment resources.
  repeated InterconnectAttachment items = 2 [json_name = "items"];

  // [Output Only] Type of resource. Always compute#interconnectAttachmentList
  // for lists of interconnect attachments.
  optional string kind = 3 [json_name = "kind"];

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4 [json_name = "nextPageToken"];

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5 [json_name = "selfLink"];

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1 [json_name = "code"];

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1 [json_name = "key"];

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2 [json_name = "value"];
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2 [json_name = "data"];

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3 [json_name = "message"];
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6 [json_name = "warning"];
}

// Informational metadata about Partner attachments from Partners to display to
// customers. These fields are propagated from PARTNER_PROVIDER attachments to
// their corresponding PARTNER attachments.
message InterconnectAttachmentPartnerMetadata {
  // Plain text name of the Interconnect this attachment is connected to, as
  // displayed in the Partner's portal. For instance "Chicago 1". This value may
  // be validated to match approved Partner values.
  optional string interconnect_name = 1 [json_name = "interconnectName"];

  // Plain text name of the Partner providing this attachment. This value may be
  // validated to match approved Partner values.
  optional string partner_name = 2 [json_name = "partnerName"];

  // URL of the Partner's portal for this Attachment. Partners may customise
  // this to be a deep link to the specific resource on the Partner portal. This
  // value may be validated to match approved Partner values.
  optional string portal_url = 3 [json_name = "portalUrl"];
}

// Information for an interconnect attachment when this belongs to an
// interconnect of type DEDICATED.
message InterconnectAttachmentPrivateInfo {
  // [Output Only] 802.1q encapsulation tag to be used for traffic between
  // Google and the customer, going to and from this network and region.
  optional uint32 tag8021q = 1 [json_name = "tag8021q"];
}

message InterconnectAttachmentsScopedList {
  // A list of interconnect attachments contained in this scope.
  repeated InterconnectAttachment interconnect_attachments = 1
      [json_name = "interconnectAttachments"];

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1 [json_name = "code"];

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1 [json_name = "key"];

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2 [json_name = "value"];
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2 [json_name = "data"];

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3 [json_name = "message"];
  }

  // Informational warning which replaces the list of addresses when the list is
  // empty.
  optional Warning warning = 2 [json_name = "warning"];
}
