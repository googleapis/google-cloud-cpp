// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/compute_public_google_rest_v1.json
// revision: 20230920

syntax = "proto3";

package google.cloud.cpp.compute.v1;

// Represents an IP Address resource. Google Compute Engine has two IP Address
// resources: * [Global (external and
// internal)](https://cloud.google.com/compute/docs/reference/rest/v1/globalAddresses)
// * [Regional (external and
// internal)](https://cloud.google.com/compute/docs/reference/rest/v1/addresses)
// For more information, see Reserving a static external IP address.
message Address {
  // The static IP address represented by this resource.
  optional string address = 1 [json_name = "address"];

  // The type of address to reserve, either INTERNAL or EXTERNAL. If
  // unspecified, defaults to EXTERNAL.
  // EXTERNAL: A publicly visible external IP address.
  // INTERNAL: A private network IP address, for use with an Instance or
  // Internal Load Balancer forwarding rule.
  // UNSPECIFIED_TYPE:
  optional string address_type = 2 [json_name = "addressType"];

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 3 [json_name = "creationTimestamp"];

  // An optional description of this resource. Provide this field when you
  // create the resource.
  optional string description = 4 [json_name = "description"];

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 5 [json_name = "id"];

  // The IP version that will be used by this address. Valid options are IPV4 or
  // IPV6.
  // IPV4:
  // IPV6:
  // UNSPECIFIED_VERSION:
  optional string ip_version = 6 [json_name = "ipVersion"];

  // The endpoint type of this address, which should be VM or NETLB. This is
  // used for deciding which type of endpoint this address can be used after the
  // external IPv6 address reservation.
  // NETLB: Reserved IPv6 address can be used on network load balancer.
  // VM: Reserved IPv6 address can be used on VM.
  optional string ipv6_endpoint_type = 7 [json_name = "ipv6EndpointType"];

  // [Output Only] Type of the resource. Always compute#address for addresses.
  optional string kind = 8 [json_name = "kind"];

  // A fingerprint for the labels being applied to this Address, which is
  // essentially a hash of the labels set used for optimistic locking. The
  // fingerprint is initially generated by Compute Engine and changes after
  // every request to modify or update labels. You must always provide an
  // up-to-date fingerprint hash in order to update or change labels, otherwise
  // the request will fail with error 412 conditionNotMet. To see the latest
  // fingerprint, make a get() request to retrieve an Address.
  optional string label_fingerprint = 19 [json_name = "labelFingerprint"];

  // Labels for this resource. These can only be added or modified by the
  // setLabels method. Each label key/value pair must comply with RFC1035. Label
  // values may be empty.
  map<string, string> labels = 20 [json_name = "labels"];

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a
  // lowercase letter, and all following characters (except for the last
  // character) must be a dash, lowercase letter, or digit. The last character
  // must be a lowercase letter or digit.
  optional string name = 9 [json_name = "name"];

  // The URL of the network in which to reserve the address. This field can only
  // be used with INTERNAL type with the VPC_PEERING purpose.
  optional string network = 10 [json_name = "network"];

  // This signifies the networking tier used for configuring this address and
  // can only take the following values: PREMIUM or STANDARD. Internal IP
  // addresses are always Premium Tier; global external IP addresses are always
  // Premium Tier; regional external IP addresses can be either Standard or
  // Premium Tier. If this field is not specified, it is assumed to be PREMIUM.
  // FIXED_STANDARD: Public internet quality with fixed bandwidth.
  // PREMIUM: High quality, Google-grade network tier, support for all
  // networking products.
  // STANDARD: Public internet quality, only limited support for other
  // networking products.
  // STANDARD_OVERRIDES_FIXED_STANDARD: (Output only) Temporary tier for
  // FIXED_STANDARD when fixed standard tier is expired or not configured.
  optional string network_tier = 11 [json_name = "networkTier"];

  // The prefix length if the resource represents an IP range.
  optional int32 prefix_length = 12 [json_name = "prefixLength"];

  // The purpose of this resource, which can be one of the following values: -
  // GCE_ENDPOINT for addresses that are used by VM instances, alias IP ranges,
  // load balancers, and similar resources. - DNS_RESOLVER for a DNS resolver
  // address in a subnetwork for a Cloud DNS inbound forwarder IP addresses
  // (regional internal IP address in a subnet of a VPC network) - VPC_PEERING
  // for global internal IP addresses used for private services access allocated
  // ranges. - NAT_AUTO for the regional external IP addresses used by Cloud NAT
  // when allocating addresses using automatic NAT IP address allocation. -
  // IPSEC_INTERCONNECT for addresses created from a private IP range that are
  // reserved for a VLAN attachment in an *HA VPN over Cloud Interconnect*
  // configuration. These addresses are regional resources. -
  // `SHARED_LOADBALANCER_VIP` for an internal IP address that is assigned to
  // multiple internal forwarding rules. - `PRIVATE_SERVICE_CONNECT` for a
  // private network address that is used to configure Private Service Connect.
  // Only global internal addresses can use this purpose.
  // DNS_RESOLVER: DNS resolver address in the subnetwork.
  // GCE_ENDPOINT: VM internal/alias IP, Internal LB service IP, etc.
  // IPSEC_INTERCONNECT: A regional internal IP address range reserved for the
  // VLAN attachment that is used in HA VPN over Cloud Interconnect. This
  // regional internal IP address range must not overlap with any IP address
  // range of subnet/route in the VPC network and its peering networks. After
  // the VLAN attachment is created with the reserved IP address range, when
  // creating a new VPN gateway, its interface IP address is allocated from the
  // associated VLAN attachmentâ€™s IP address range.
  // NAT_AUTO: External IP automatically reserved for Cloud NAT.
  // PRIVATE_SERVICE_CONNECT: A private network IP address that can be used to
  // configure Private Service Connect. This purpose can be specified only for
  // GLOBAL addresses of Type INTERNAL
  // SERVERLESS: A regional internal IP address range reserved for Serverless.
  // SHARED_LOADBALANCER_VIP: A private network IP address that can be shared by
  // multiple Internal Load Balancer forwarding rules.
  // VPC_PEERING: IP range for peer networks.
  optional string purpose = 13 [json_name = "purpose"];

  // [Output Only] The URL of the region where a regional address resides. For
  // regional addresses, you must specify the region as a path parameter in the
  // HTTP request URL. *This field is not applicable to global addresses.*
  optional string region = 14 [json_name = "region"];

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 15 [json_name = "selfLink"];

  // [Output Only] The status of the address, which can be one of RESERVING,
  // RESERVED, or IN_USE. An address that is RESERVING is currently in the
  // process of being reserved. A RESERVED address is currently reserved and
  // available to use. An IN_USE address is currently being used by another
  // resource and is not available.
  // IN_USE: Address is being used by another resource and is not available.
  // RESERVED: Address is reserved and available to use.
  // RESERVING: Address is being reserved.
  optional string status = 16 [json_name = "status"];

  // The URL of the subnetwork in which to reserve the address. If an IP address
  // is specified, it must be within the subnetwork's IP range. This field can
  // only be used with INTERNAL type with a GCE_ENDPOINT or DNS_RESOLVER
  // purpose.
  optional string subnetwork = 17 [json_name = "subnetwork"];

  // [Output Only] The URLs of the resources that are using this address.
  repeated string users = 18 [json_name = "users"];
}

// Contains a list of addresses.
message AddressList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1 [json_name = "id"];

  // A list of Address resources.
  repeated Address items = 2 [json_name = "items"];

  // [Output Only] Type of resource. Always compute#addressList for lists of
  // addresses.
  optional string kind = 3 [json_name = "kind"];

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4 [json_name = "nextPageToken"];

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5 [json_name = "selfLink"];

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1 [json_name = "code"];

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1 [json_name = "key"];

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2 [json_name = "value"];
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2 [json_name = "data"];

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3 [json_name = "message"];
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6 [json_name = "warning"];
}
