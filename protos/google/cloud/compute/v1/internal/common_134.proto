// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/compute_public_google_rest_v1.json
// revision: 20230920

syntax = "proto3";

package google.cloud.cpp.compute.v1;

// Represents a Cloud VPN Tunnel resource. For more information about VPN, read
// the the Cloud VPN Overview.
message VpnTunnel {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1 [json_name = "creationTimestamp"];

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 2 [json_name = "description"];

  // [Output Only] Detailed status message for the VPN tunnel.
  optional string detailed_status = 3 [json_name = "detailedStatus"];

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 4 [json_name = "id"];

  // IKE protocol version to use when establishing the VPN tunnel with the peer
  // VPN gateway. Acceptable IKE versions are 1 or 2. The default version is 2.
  optional int32 ike_version = 5 [json_name = "ikeVersion"];

  // [Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
  optional string kind = 6 [json_name = "kind"];

  // A fingerprint for the labels being applied to this VpnTunnel, which is
  // essentially a hash of the labels set used for optimistic locking. The
  // fingerprint is initially generated by Compute Engine and changes after
  // every request to modify or update labels. You must always provide an
  // up-to-date fingerprint hash in order to update or change labels, otherwise
  // the request will fail with error 412 conditionNotMet. To see the latest
  // fingerprint, make a get() request to retrieve a VpnTunnel.
  optional string label_fingerprint = 23 [json_name = "labelFingerprint"];

  // Labels for this resource. These can only be added or modified by the
  // setLabels method. Each label key/value pair must comply with RFC1035. Label
  // values may be empty.
  map<string, string> labels = 24 [json_name = "labels"];

  // Local traffic selector to use when establishing the VPN tunnel with the
  // peer VPN gateway. The value should be a CIDR formatted string, for example:
  // 192.168.0.0/16. The ranges must be disjoint. Only IPv4 is supported.
  repeated string local_traffic_selector = 7
      [json_name = "localTrafficSelector"];

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 8 [json_name = "name"];

  // URL of the peer side external VPN gateway to which this VPN tunnel is
  // connected. Provided by the client when the VPN tunnel is created. This
  // field is exclusive with the field peerGcpGateway.
  optional string peer_external_gateway = 9 [json_name = "peerExternalGateway"];

  // The interface ID of the external VPN gateway to which this VPN tunnel is
  // connected. Provided by the client when the VPN tunnel is created. Possible
  // values are: `0`, `1`, `2`, `3`. The number of IDs in use depends on the
  // external VPN gateway redundancy type.
  optional int32 peer_external_gateway_interface = 10
      [json_name = "peerExternalGatewayInterface"];

  // URL of the peer side HA VPN gateway to which this VPN tunnel is connected.
  // Provided by the client when the VPN tunnel is created. This field can be
  // used when creating highly available VPN from VPC network to VPC network,
  // the field is exclusive with the field peerExternalGateway. If provided, the
  // VPN tunnel will automatically use the same vpnGatewayInterface ID in the
  // peer Google Cloud VPN gateway.
  optional string peer_gcp_gateway = 11 [json_name = "peerGcpGateway"];

  // IP address of the peer VPN gateway. Only IPv4 is supported.
  optional string peer_ip = 12 [json_name = "peerIp"];

  // [Output Only] URL of the region where the VPN tunnel resides. You must
  // specify this field as part of the HTTP request URL. It is not settable as a
  // field in the request body.
  optional string region = 13 [json_name = "region"];

  // Remote traffic selectors to use when establishing the VPN tunnel with the
  // peer VPN gateway. The value should be a CIDR formatted string, for example:
  // 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
  repeated string remote_traffic_selector = 14
      [json_name = "remoteTrafficSelector"];

  // URL of the router resource to be used for dynamic routing.
  optional string router = 15 [json_name = "router"];

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 16 [json_name = "selfLink"];

  // Shared secret used to set the secure session between the Cloud VPN gateway
  // and the peer VPN gateway.
  optional string shared_secret = 17 [json_name = "sharedSecret"];

  // Hash of the shared secret.
  optional string shared_secret_hash = 18 [json_name = "sharedSecretHash"];

  // [Output Only] The status of the VPN tunnel, which can be one of the
  // following: - PROVISIONING: Resource is being allocated for the VPN tunnel.
  // - WAITING_FOR_FULL_CONFIG: Waiting to receive all VPN-related configs from
  // the user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule, and Route
  // resources are needed to setup the VPN tunnel. - FIRST_HANDSHAKE: Successful
  // first handshake with the peer VPN. - ESTABLISHED: Secure session is
  // successfully established with the peer VPN. - NETWORK_ERROR: Deprecated,
  // replaced by NO_INCOMING_PACKETS - AUTHORIZATION_ERROR: Auth error (for
  // example, bad shared secret). - NEGOTIATION_FAILURE: Handshake failed. -
  // DEPROVISIONING: Resources are being deallocated for the VPN tunnel. -
  // FAILED: Tunnel creation has failed and the tunnel is not ready to be used.
  // - NO_INCOMING_PACKETS: No incoming packets from peer. - REJECTED: Tunnel
  // configuration was rejected, can be result of being denied access. -
  // ALLOCATING_RESOURCES: Cloud VPN is in the process of allocating all
  // required resources. - STOPPED: Tunnel is stopped due to its Forwarding
  // Rules being deleted for Classic VPN tunnels or the project is in frozen
  // state. - PEER_IDENTITY_MISMATCH: Peer identity does not match peer IP,
  // probably behind NAT. - TS_NARROWING_NOT_ALLOWED: Traffic selector narrowing
  // not allowed for an HA-VPN tunnel.
  // ALLOCATING_RESOURCES: Cloud VPN is in the process of allocating all
  // required resources (specifically, a borg task).
  // AUTHORIZATION_ERROR: Auth error (e.g. bad shared secret).
  // DEPROVISIONING: Resources is being deallocated for the VPN tunnel.
  // ESTABLISHED: Secure session is successfully established with peer VPN.
  // FAILED: Tunnel creation has failed and the tunnel is not ready to be used.
  // FIRST_HANDSHAKE: Successful first handshake with peer VPN.
  // NEGOTIATION_FAILURE: Handshake failed.
  // NETWORK_ERROR: Deprecated, replaced by NO_INCOMING_PACKETS
  // NO_INCOMING_PACKETS: No incoming packets from peer
  // PROVISIONING: Resource is being allocated for the VPN tunnel.
  // REJECTED: Tunnel configuration was rejected, can be result of being
  // denylisted.
  // STOPPED: Tunnel is stopped due to its Forwarding Rules being deleted.
  // WAITING_FOR_FULL_CONFIG: Waiting to receive all VPN-related configs from
  // user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule and Route
  // resources are needed to setup VPN tunnel.
  optional string status = 19 [json_name = "status"];

  // URL of the Target VPN gateway with which this VPN tunnel is associated.
  // Provided by the client when the VPN tunnel is created.
  optional string target_vpn_gateway = 20 [json_name = "targetVpnGateway"];

  // URL of the VPN gateway with which this VPN tunnel is associated. Provided
  // by the client when the VPN tunnel is created. This must be used (instead of
  // target_vpn_gateway) if a High Availability VPN gateway resource is created.
  optional string vpn_gateway = 21 [json_name = "vpnGateway"];

  // The interface ID of the VPN gateway with which this VPN tunnel is
  // associated. Possible values are: `0`, `1`.
  optional int32 vpn_gateway_interface = 22 [json_name = "vpnGatewayInterface"];
}

message VpnTunnelAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1 [json_name = "id"];

  // A list of VpnTunnelsScopedList resources.
  map<string, VpnTunnelsScopedList> items = 2 [json_name = "items"];

  // [Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
  optional string kind = 3 [json_name = "kind"];

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4 [json_name = "nextPageToken"];

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5 [json_name = "selfLink"];

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6 [json_name = "unreachables"];

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1 [json_name = "code"];

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1 [json_name = "key"];

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2 [json_name = "value"];
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2 [json_name = "data"];

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3 [json_name = "message"];
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7 [json_name = "warning"];
}

// Contains a list of VpnTunnel resources.
message VpnTunnelList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1 [json_name = "id"];

  // A list of VpnTunnel resources.
  repeated VpnTunnel items = 2 [json_name = "items"];

  // [Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
  optional string kind = 3 [json_name = "kind"];

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4 [json_name = "nextPageToken"];

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5 [json_name = "selfLink"];

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1 [json_name = "code"];

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1 [json_name = "key"];

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2 [json_name = "value"];
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2 [json_name = "data"];

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3 [json_name = "message"];
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6 [json_name = "warning"];
}

message VpnTunnelsScopedList {
  // A list of VPN tunnels contained in this scope.
  repeated VpnTunnel vpn_tunnels = 1 [json_name = "vpnTunnels"];

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1 [json_name = "code"];

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1 [json_name = "key"];

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2 [json_name = "value"];
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2 [json_name = "data"];

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3 [json_name = "message"];
  }

  // Informational warning which replaces the list of addresses when the list is
  // empty.
  optional Warning warning = 2 [json_name = "warning"];
}
