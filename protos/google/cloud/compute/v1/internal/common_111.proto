// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/compute_public_google_rest_v1.json
// revision: 20250302

syntax = "proto3";

package google.cloud.cpp.compute.v1;

import "google/cloud/compute/v1/internal/common_031.proto";

  // The connection preference of service attachment. The value can be set to
  // ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service attachment is one that always
  // accepts the connection from consumer forwarding rules.
  // ACCEPT_AUTOMATIC:
  // ACCEPT_MANUAL:
  // CONNECTION_PREFERENCE_UNSPECIFIED:
  optional string connection_preference = 2
      [json_name = "connectionPreference"];

  // Specifies which consumer projects or networks are allowed to connect to the
  // service attachment. Each project or network has a connection limit. A given
  // service attachment can manage connections at either the project or network
  // level. Therefore, both the accept and reject lists for a given service
  // attachment must contain either only projects or only networks.
  repeated ServiceAttachmentConsumerProjectLimit consumer_accept_lists = 3
      [json_name = "consumerAcceptLists"];

  // Specifies a list of projects or networks that are not allowed to connect to
  // this service attachment. The project can be specified using its project ID
  // or project number and the network can be specified using its URL. A given
  // service attachment can manage connections at either the project or network
  // level. Therefore, both the reject and accept lists for a given service
  // attachment must contain either only projects or only networks.
  repeated string consumer_reject_lists = 4 [json_name = "consumerRejectLists"];

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 5 [json_name = "creationTimestamp"];

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 6 [json_name = "description"];

  // If specified, the domain name will be used during the integration between
  // the PSC connected endpoints and the Cloud DNS. For example, this is a valid
  // domain name: "p.mycompany.com.". Current max number of domain names
  // supported is 1.
  repeated string domain_names = 7 [json_name = "domainNames"];

  // If true, enable the proxy protocol which is for supplying client TCP/IP
  // address data in TCP connections that traverse proxies on their way to
  // destination servers.
  optional bool enable_proxy_protocol = 8 [json_name = "enableProxyProtocol"];

  // Fingerprint of this resource. A hash of the contents stored in this object.
  // This field is used in optimistic locking. This field will be ignored when
  // inserting a ServiceAttachment. An up-to-date fingerprint must be provided
  // in order to patch/update the ServiceAttachment; otherwise, the request will
  // fail with error 412 conditionNotMet. To see the latest fingerprint, make a
  // get() request to retrieve the ServiceAttachment.
  optional string fingerprint = 9 [json_name = "fingerprint"];

  // [Output Only] The unique identifier for the resource type. The server
  // generates this identifier.
  optional string id = 10 [json_name = "id"];

  // [Output Only] Type of the resource. Always compute#serviceAttachment for
  // service attachments.
  optional string kind = 11 [json_name = "kind"];

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 12 [json_name = "name"];

  // An array of URLs where each entry is the URL of a subnet provided by the
  // service producer to use for NAT in this service attachment.
  repeated string nat_subnets = 13 [json_name = "natSubnets"];

  // The URL of a forwarding rule with loadBalancingScheme INTERNAL* that is
  // serving the endpoint identified by this service attachment.
  optional string producer_forwarding_rule = 14
      [json_name = "producerForwardingRule"];

  // The number of consumer spokes that connected Private Service Connect
  // endpoints can be propagated to through Network Connectivity Center. This
  // limit lets the service producer limit how many propagated Private Service
  // Connect connections can be established to this service attachment from a
  // single consumer. If the connection preference of the service attachment is
  // ACCEPT_MANUAL, the limit applies to each project or network that is listed
  // in the consumer accept list. If the connection preference of the service
  // attachment is ACCEPT_AUTOMATIC, the limit applies to each project that
  // contains a connected endpoint. If unspecified, the default propagated
  // connection limit is 250.
  optional uint32 propagated_connection_limit = 20
      [json_name = "propagatedConnectionLimit"];

  // [Output Only] An 128-bit global unique ID of the PSC service attachment.
  optional Uint128 psc_service_attachment_id = 15
      [json_name = "pscServiceAttachmentId"];

  // This flag determines whether a consumer accept/reject list change can
  // reconcile the statuses of existing ACCEPTED or REJECTED PSC endpoints. - If
  // false, connection policy update will only affect existing PENDING PSC
  // endpoints. Existing ACCEPTED/REJECTED endpoints will remain untouched
  // regardless how the connection policy is modified . - If true, update will
  // affect both PENDING and ACCEPTED/REJECTED PSC endpoints. For example, an
  // ACCEPTED PSC endpoint will be moved to REJECTED if its project is added to
  // the reject list. For newly created service attachment, this boolean
  // defaults to false.
  optional bool reconcile_connections = 19 [json_name = "reconcileConnections"];

  // [Output Only] URL of the region where the service attachment resides. This
  // field applies only to the region resource. You must specify this field as
  // part of the HTTP request URL. It is not settable as a field in the request
  // body.
  optional string region = 16 [json_name = "region"];

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 17 [json_name = "selfLink"];

  // The URL of a service serving the endpoint identified by this service
  // attachment.
  optional string target_service = 18 [json_name = "targetService"];
}

// Configuration options for Cloud Armor Adaptive Protection (CAAP).
message SecurityPolicyAdaptiveProtectionConfig {
  // If set to true, enables Cloud Armor Machine Learning.
  optional SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig
      layer7_ddos_defense_config = 1 [json_name = "layer7DdosDefenseConfig"];
}

// Configuration options for L7 DDoS detection. This field is only supported in
// Global Security Policies of type CLOUD_ARMOR.
message SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig {
  // If set to true, enables CAAP for L7 DDoS detection. This field is only
  // supported in Global Security Policies of type CLOUD_ARMOR.
  optional bool enable = 1 [json_name = "enable"];

  // Rule visibility can be one of the following: STANDARD - opaque rules.
  // (default) PREMIUM - transparent rules. This field is only supported in
  // Global Security Policies of type CLOUD_ARMOR.
  // PREMIUM:
  // STANDARD:
  optional string rule_visibility = 2 [json_name = "ruleVisibility"];

  // Configuration options for layer7 adaptive protection for various
  // customizable thresholds.
  repeated
      SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfig
          threshold_configs = 3 [json_name = "thresholdConfigs"];
}

message
SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfig {
  optional float auto_deploy_confidence_threshold = 1
      [json_name = "autoDeployConfidenceThreshold"];

  optional int32 auto_deploy_expiration_sec = 2
      [json_name = "autoDeployExpirationSec"];

  optional float auto_deploy_impacted_baseline_threshold = 3
      [json_name = "autoDeployImpactedBaselineThreshold"];

  optional float auto_deploy_load_threshold = 4
      [json_name = "autoDeployLoadThreshold"];

  optional float detection_absolute_qps = 6
      [json_name = "detectionAbsoluteQps"];

  optional float detection_load_threshold = 7
      [json_name = "detectionLoadThreshold"];

  optional float detection_relative_to_baseline_qps = 8
      [json_name = "detectionRelativeToBaselineQps"];

  // The name must be 1-63 characters long, and comply with RFC1035. The name
  // must be unique within the security policy.
  optional string name = 5 [json_name = "name"];

  // Configuration options for enabling Adaptive Protection to operate on
  // specified granular traffic units.
  repeated
      SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigTrafficGranularityConfig
          traffic_granularity_configs = 9
      [json_name = "trafficGranularityConfigs"];
}

// Configurations to specifc granular traffic units processed by Adaptive
// Protection.
message
SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigTrafficGranularityConfig {
  // If enabled, traffic matching each unique value for the specified type
  // constitutes a separate traffic unit. It can only be set to true if `value`
  // is empty.
  optional bool enable_each_unique_value = 1
      [json_name = "enableEachUniqueValue"];

  // Type of this configuration.
  // HTTP_HEADER_HOST:
  // HTTP_PATH:
  // UNSPECIFIED_TYPE:
  optional string type = 2 [json_name = "type"];

  // Requests that match this value constitute a granular traffic unit.
  optional string value = 3 [json_name = "value"];
}

message SecurityPolicyAdvancedOptionsConfig {
  // Custom configuration to apply the JSON parsing. Only applicable when
  // json_parsing is set to STANDARD.
  optional SecurityPolicyAdvancedOptionsConfigJsonCustomConfig
      json_custom_config = 1 [json_name = "jsonCustomConfig"];

  // DISABLED:
  // STANDARD:
  // STANDARD_WITH_GRAPHQL:
  optional string json_parsing = 2 [json_name = "jsonParsing"];

  // NORMAL:
  // VERBOSE:
  optional string log_level = 3 [json_name = "logLevel"];

  // An optional list of case-insensitive request header names to use for
  // resolving the callers client IP address.
  repeated string user_ip_request_headers = 4
      [json_name = "userIpRequestHeaders"];
}

message SecurityPolicyAdvancedOptionsConfigJsonCustomConfig {
  // A list of custom Content-Type header values to apply the JSON parsing. As
  // per RFC 1341, a Content-Type header value has the following format:
  // Content-Type := type "/" subtype *[";" parameter] When configuring a custom
  // Content-Type header value, only the type/subtype needs to be specified, and
  // the parameters should be excluded.
  repeated string content_types = 1 [json_name = "contentTypes"];
}

message SecurityPolicyDdosProtectionConfig {
  // ADVANCED:
  // ADVANCED_PREVIEW:
  // STANDARD:
  optional string ddos_protection = 1 [json_name = "ddosProtection"];
}

message SecurityPolicyList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1 [json_name = "id"];

  // A list of ServiceAttachmentsScopedList resources.
  map<string, ServiceAttachmentsScopedList> items = 2 [json_name = "items"];

  // Type of resource.
  optional string kind = 3 [json_name = "kind"];

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4 [json_name = "nextPageToken"];

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5 [json_name = "selfLink"];

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6 [json_name = "unreachables"];

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // QUOTA_INFO_UNAVAILABLE: Quota information is not available to client
    // requests (e.g: regions.list).
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1 [json_name = "code"];

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1 [json_name = "key"];

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2 [json_name = "value"];
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2 [json_name = "data"];

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3 [json_name = "message"];
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7 [json_name = "warning"];
}

// [Output Only] A connection connected to this service attachment.
message ServiceAttachmentConnectedEndpoint {
  // The url of the consumer network.
  optional string consumer_network = 4 [json_name = "consumerNetwork"];

  // The url of a connected endpoint.
  optional string endpoint = 1 [json_name = "endpoint"];

  // The number of consumer Network Connectivity Center spokes that the
  // connected Private Service Connect endpoint has propagated to.
  optional uint32 propagated_connection_count = 5
      [json_name = "propagatedConnectionCount"];

  // The PSC connection id of the connected endpoint.
  optional string psc_connection_id = 2 [json_name = "pscConnectionId"];

  // The status of a connected endpoint to this service attachment.
  // ACCEPTED: The connection has been accepted by the producer.
  // CLOSED: The connection has been closed by the producer.
  // NEEDS_ATTENTION: The connection has been accepted by the producer, but the
  // producer needs to take further action before the forwarding rule can serve
  // traffic.
  // PENDING: The connection is pending acceptance by the producer.
  // REJECTED: The consumer is still connected but not using the connection.
  // STATUS_UNSPECIFIED:
  optional string status = 3 [json_name = "status"];
}

message ServiceAttachmentConsumerProjectLimit {
  // The value of the limit to set.
  optional uint32 connection_limit = 1 [json_name = "connectionLimit"];

  // The network URL for the network to set the limit for.
  optional string network_url = 2 [json_name = "networkUrl"];

  // The project id or number for the project to set the limit for.
  optional string project_id_or_num = 3 [json_name = "projectIdOrNum"];
}

message ServiceAttachmentList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1 [json_name = "id"];

  // A list of ServiceAttachment resources.
  repeated ServiceAttachment items = 2 [json_name = "items"];

  // [Output Only] Type of the resource. Always compute#serviceAttachment for
  // service attachments.
  optional string kind = 3 [json_name = "kind"];

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4 [json_name = "nextPageToken"];

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5 [json_name = "selfLink"];

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1 [json_name = "code"];

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1 [json_name = "key"];

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2 [json_name = "value"];
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2 [json_name = "data"];

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3 [json_name = "message"];
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6 [json_name = "warning"];
}

message ServiceAttachmentsScopedList {
  // A list of ServiceAttachments contained in this scope.
  repeated ServiceAttachment service_attachments = 1
      [json_name = "serviceAttachments"];

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1 [json_name = "code"];

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1 [json_name = "key"];

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2 [json_name = "value"];
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2 [json_name = "data"];

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3 [json_name = "message"];
  }

  // Informational warning which replaces the list of service attachments when
  // the list is empty.
  optional Warning warning = 2 [json_name = "warning"];
}

message Uint128 {
  optional string high = 1 [json_name = "high"];

  // User defined CEVAL expression. A CEVAL expression is used to specify match
  // criteria such as origin.ip, source.region_code and contents in the request
  // header. Expressions containing `evaluateThreatIntelligence` require Cloud
  // Armor Managed Protection Plus tier and are not supported in Edge Policies
  // nor in Regional Policies. Expressions containing
  // `evaluatePreconfiguredExpr('sourceiplist-*')` require Cloud Armor Managed
  // Protection Plus tier and are only supported in Global Security Policies.
  optional Expr expr = 2 [json_name = "expr"];

  // The configuration options available when specifying a user defined CEVAL
  // expression (i.e., 'expr').
  optional SecurityPolicyRuleMatcherExprOptions expr_options = 4
      [json_name = "exprOptions"];

  // Preconfigured versioned expression. If this field is specified, config must
  // also be specified. Available preconfigured expressions along with their
  // requirements are: SRC_IPS_V1 - must specify the corresponding src_ip_range
  // field in config.
  // SRC_IPS_V1: Matches the source IP address of a request to the IP ranges
  // supplied in config.
  optional string versioned_expr = 3 [json_name = "versionedExpr"];
}

message SecurityPolicyRuleMatcherConfig {
  // CIDR IP address range. Maximum number of src_ip_ranges allowed is 10.
  repeated string src_ip_ranges = 1 [json_name = "srcIpRanges"];
}

message SecurityPolicyRuleMatcherExprOptions {
  // reCAPTCHA configuration options to be applied for the rule. If the rule
  // does not evaluate reCAPTCHA tokens, this field has no effect.
  optional SecurityPolicyRuleMatcherExprOptionsRecaptchaOptions
      recaptcha_options = 1 [json_name = "recaptchaOptions"];
}

message SecurityPolicyRuleMatcherExprOptionsRecaptchaOptions {
  // A list of site keys to be used during the validation of reCAPTCHA
  // action-tokens. The provided site keys need to be created from reCAPTCHA API
  // under the same project where the security policy is created.
  repeated string action_token_site_keys = 1
      [json_name = "actionTokenSiteKeys"];

  // A list of site keys to be used during the validation of reCAPTCHA
  // session-tokens. The provided site keys need to be created from reCAPTCHA
  // API under the same project where the security policy is created.
  repeated string session_token_site_keys = 2
      [json_name = "sessionTokenSiteKeys"];
}

// Represents a match condition that incoming network traffic is evaluated
// against.
message SecurityPolicyRuleNetworkMatcher {
  // Destination IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
  repeated string dest_ip_ranges = 1 [json_name = "destIpRanges"];

  // Destination port numbers for TCP/UDP/SCTP. Each element can be a 16-bit
  // unsigned decimal number (e.g. "80") or range (e.g. "0-1023").
  repeated string dest_ports = 2 [json_name = "destPorts"];

  // IPv4 protocol / IPv6 next header (after extension headers). Each element
  // can be an 8-bit unsigned decimal number (e.g. "6"), range (e.g. "253-254"),
  // or one of the following protocol names: "tcp", "udp", "icmp", "esp", "ah",
  // "ipip", or "sctp".
  repeated string ip_protocols = 3 [json_name = "ipProtocols"];

  // BGP Autonomous System Number associated with the source IP address.
  repeated uint32 src_asns = 4 [json_name = "srcAsns"];

  // Source IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
  repeated string src_ip_ranges = 5 [json_name = "srcIpRanges"];

  // Source port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned
  // decimal number (e.g. "80") or range (e.g. "0-1023").
  repeated string src_ports = 6 [json_name = "srcPorts"];

  // Two-letter ISO 3166-1 alpha-2 country code associated with the source IP
  // address.
  repeated string src_region_codes = 7 [json_name = "srcRegionCodes"];

  // User-defined fields. Each element names a defined field and lists the
  // matching values for that field.
  repeated SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatch
      user_defined_fields = 8 [json_name = "userDefinedFields"];
}

message SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatch {
  // Name of the user-defined field, as given in the definition.
  optional string name = 1 [json_name = "name"];

  // Matching values of the field. Each element can be a 32-bit unsigned decimal
  // or hexadecimal (starting with "0x") number (e.g. "64") or range (e.g.
  // "0x400-0x7ff").
  repeated string values = 2 [json_name = "values"];
}

message SecurityPolicyRulePreconfiguredWafConfig {
  // A list of exclusions to apply during preconfigured WAF evaluation.
  repeated SecurityPolicyRulePreconfiguredWafConfigExclusion exclusions = 1
      [json_name = "exclusions"];
}

message SecurityPolicyRulePreconfiguredWafConfigExclusion {
  // A list of request cookie names whose value will be excluded from inspection
  // during preconfigured WAF evaluation.
  repeated SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams
      request_cookies_to_exclude = 1 [json_name = "requestCookiesToExclude"];

  // A list of request header names whose value will be excluded from inspection
  // during preconfigured WAF evaluation.
  repeated SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams
      request_headers_to_exclude = 2 [json_name = "requestHeadersToExclude"];

  // A list of request query parameter names whose value will be excluded from
  // inspection during preconfigured WAF evaluation. Note that the parameter can
  // be in the query string or in the POST body.
  repeated SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams
      request_query_params_to_exclude = 3
      [json_name = "requestQueryParamsToExclude"];

  // A list of request URIs from the request line to be excluded from inspection
  // during preconfigured WAF evaluation. When specifying this field, the query
  // or fragment part should be excluded.
  repeated SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams
      request_uris_to_exclude = 4 [json_name = "requestUrisToExclude"];

  // A list of target rule IDs under the WAF rule set to apply the preconfigured
  // WAF exclusion. If omitted, it refers to all the rule IDs under the WAF rule
  // set.
  repeated string target_rule_ids = 5 [json_name = "targetRuleIds"];

  // Target WAF rule set to apply the preconfigured WAF exclusion.
  optional string target_rule_set = 6 [json_name = "targetRuleSet"];
}

message SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams {
  // The match operator for the field.
  // CONTAINS: The operator matches if the field value contains the specified
  // value.
  // ENDS_WITH: The operator matches if the field value ends with the specified
  // value.
  // EQUALS: The operator matches if the field value equals the specified value.
  // EQUALS_ANY: The operator matches if the field value is any value.
  // STARTS_WITH: The operator matches if the field value starts with the
  // specified value.
  optional string op = 1 [json_name = "op"];

  // The value of the field.
  optional string val = 2 [json_name = "val"];
}

message SecurityPolicyRuleRateLimitOptions {
  // Can only be specified if the action for the rule is "rate_based_ban". If
  // specified, determines the time (in seconds) the traffic will continue to be
  // banned by the rate limit after the rate falls below the threshold.
  optional int32 ban_duration_sec = 1 [json_name = "banDurationSec"];

  // Can only be specified if the action for the rule is "rate_based_ban". If
  // specified, the key will be banned for the configured 'ban_duration_sec'
  // when the number of requests that exceed the 'rate_limit_threshold' also
  // exceed this 'ban_threshold'.
  optional SecurityPolicyRuleRateLimitOptionsThreshold ban_threshold = 2
      [json_name = "banThreshold"];

  // Action to take for requests that are under the configured rate limit
  // threshold. Valid option is "allow" only.
  optional string conform_action = 3 [json_name = "conformAction"];

  // Determines the key to enforce the rate_limit_threshold on. Possible values
  // are: - ALL: A single rate limit threshold is applied to all the requests
  // matching this rule. This is the default value if "enforceOnKey" is not
  // configured. - IP: The source IP address of the request is the key. Each IP
  // has this limit enforced separately. - HTTP_HEADER: The value of the HTTP
  // header whose name is configured under "enforceOnKeyName". The key value is
  // truncated to the first 128 bytes of the header value. If no such header is
  // present in the request, the key type defaults to ALL. - XFF_IP: The first
  // IP address (i.e. the originating client IP address) specified in the list
  // of IPs under X-Forwarded-For HTTP header. If no such header is present or
  // the value is not a valid IP, the key defaults to the source IP address of
  // the request i.e. key type IP. - HTTP_COOKIE: The value of the HTTP cookie
  // whose name is configured under "enforceOnKeyName". The key value is
  // truncated to the first 128 bytes of the cookie value. If no such cookie is
  // present in the request, the key type defaults to ALL. - HTTP_PATH: The URL
  // path of the HTTP request. The key value is truncated to the first 128
  // bytes. - SNI: Server name indication in the TLS session of the HTTPS
  // request. The key value is truncated to the first 128 bytes. The key type
  // defaults to ALL on a HTTP session. - REGION_CODE: The country/region from
  // which the request originates. - TLS_JA3_FINGERPRINT: JA3 TLS/SSL
  // fingerprint if the client connects using HTTPS, HTTP/2 or HTTP/3. If not
  // available, the key type defaults to ALL. - USER_IP: The IP address of the
  // originating client, which is resolved based on "userIpRequestHeaders"
  // configured with the security policy. If there is no "userIpRequestHeaders"
  // configuration or an IP address cannot be resolved from it, the key type
  // defaults to IP. - TLS_JA4_FINGERPRINT: JA4 TLS/SSL fingerprint if the
  // client connects using HTTPS, HTTP/2 or HTTP/3. If not available, the key
  // type defaults to ALL.
  // ALL:
  // HTTP_COOKIE:
  // HTTP_HEADER:
  // HTTP_PATH:
  // IP:
  // REGION_CODE:
  // SNI:
  // TLS_JA3_FINGERPRINT:
  // TLS_JA4_FINGERPRINT:
  // USER_IP:
  // XFF_IP:
  optional string enforce_on_key = 4 [json_name = "enforceOnKey"];

  // If specified, any combination of values of
  // enforce_on_key_type/enforce_on_key_name is treated as the key on which
  // ratelimit threshold/action is enforced. You can specify up to 3
  // enforce_on_key_configs. If enforce_on_key_configs is specified,
  // enforce_on_key must not be specified.
  repeated SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfig
      enforce_on_key_configs = 9 [json_name = "enforceOnKeyConfigs"];

  // Rate limit key name applicable only for the following key types:
  // HTTP_HEADER -- Name of the HTTP header whose value is taken as the key
  // value. HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the
  // key value.
  optional string enforce_on_key_name = 5 [json_name = "enforceOnKeyName"];

  // Action to take for requests that are above the configured rate limit
  // threshold, to either deny with a specified HTTP response code, or redirect
  // to a different endpoint. Valid options are `deny(STATUS)`, where valid
  // values for `STATUS` are 403, 404, 429, and 502, and `redirect`, where the
  // redirect parameters come from `exceedRedirectOptions` below. The `redirect`
  // action is only supported in Global Security Policies of type CLOUD_ARMOR.
  optional string exceed_action = 6 [json_name = "exceedAction"];

  // Parameters defining the redirect action that is used as the exceed action.
  // Cannot be specified if the exceed action is not redirect. This field is
  // only supported in Global Security Policies of type CLOUD_ARMOR.
  optional SecurityPolicyRuleRedirectOptions exceed_redirect_options = 7
      [json_name = "exceedRedirectOptions"];

  // Threshold at which to begin ratelimiting.
  optional SecurityPolicyRuleRateLimitOptionsThreshold rate_limit_threshold = 8
      [json_name = "rateLimitThreshold"];
}

message SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfig {
  // Rate limit key name applicable only for the following key types:
  // HTTP_HEADER -- Name of the HTTP header whose value is taken as the key
  // value. HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the
  // key value.
  optional string enforce_on_key_name = 1 [json_name = "enforceOnKeyName"];

  // Determines the key to enforce the rate_limit_threshold on. Possible values
  // are: - ALL: A single rate limit threshold is applied to all the requests
  // matching this rule. This is the default value if "enforceOnKeyConfigs" is
  // not configured. - IP: The source IP address of the request is the key. Each
  // IP has this limit enforced separately. - HTTP_HEADER: The value of the HTTP
  // header whose name is configured under "enforceOnKeyName". The key value is
  // truncated to the first 128 bytes of the header value. If no such header is
  // present in the request, the key type defaults to ALL. - XFF_IP: The first
  // IP address (i.e. the originating client IP address) specified in the list
  // of IPs under X-Forwarded-For HTTP header. If no such header is present or
  // the value is not a valid IP, the key defaults to the source IP address of
  // the request i.e. key type IP. - HTTP_COOKIE: The value of the HTTP cookie
  // whose name is configured under "enforceOnKeyName". The key value is
  // truncated to the first 128 bytes of the cookie value. If no such cookie is
  // present in the request, the key type defaults to ALL. - HTTP_PATH: The URL
  // path of the HTTP request. The key value is truncated to the first 128
  // bytes. - SNI: Server name indication in the TLS session of the HTTPS
  // request. The key value is truncated to the first 128 bytes. The key type
  // defaults to ALL on a HTTP session. - REGION_CODE: The country/region from
  // which the request originates. - TLS_JA3_FINGERPRINT: JA3 TLS/SSL
  // fingerprint if the client connects using HTTPS, HTTP/2 or HTTP/3. If not
  // available, the key type defaults to ALL. - USER_IP: The IP address of the
  // originating client, which is resolved based on "userIpRequestHeaders"
  // configured with the security policy. If there is no "userIpRequestHeaders"
  // configuration or an IP address cannot be resolved from it, the key type
  // defaults to IP. - TLS_JA4_FINGERPRINT: JA4 TLS/SSL fingerprint if the
  // client connects using HTTPS, HTTP/2 or HTTP/3. If not available, the key
  // type defaults to ALL.
  // ALL:
  // HTTP_COOKIE:
  // HTTP_HEADER:
  // HTTP_PATH:
  // IP:
  // REGION_CODE:
  // SNI:
  // TLS_JA3_FINGERPRINT:
  // TLS_JA4_FINGERPRINT:
  // USER_IP:
  // XFF_IP:
  optional string enforce_on_key_type = 2 [json_name = "enforceOnKeyType"];
}

message SecurityPolicyRuleRateLimitOptionsThreshold {
  // Number of HTTP(S) requests for calculating the threshold.
  optional int32 count = 1 [json_name = "count"];

  // Interval over which the threshold is computed.
  optional int32 interval_sec = 2 [json_name = "intervalSec"];
}

message SecurityPolicyRuleRedirectOptions {
  // Target for the redirect action. This is required if the type is
  // EXTERNAL_302 and cannot be specified for GOOGLE_RECAPTCHA.
  optional string target = 1 [json_name = "target"];

  // Type of the redirect action.
  // EXTERNAL_302:
  // GOOGLE_RECAPTCHA:
  optional string type = 2 [json_name = "type"];
}

message SecurityPolicyUserDefinedField {
  // The base relative to which 'offset' is measured. Possible values are: -
  // IPV4: Points to the beginning of the IPv4 header. - IPV6: Points to the
  // beginning of the IPv6 header. - TCP: Points to the beginning of the TCP
  // header, skipping over any IPv4 options or IPv6 extension headers. Not
  // present for non-first fragments. - UDP: Points to the beginning of the UDP
  // header, skipping over any IPv4 options or IPv6 extension headers. Not
  // present for non-first fragments. required
  // IPV4:
  // IPV6:
  // TCP:
  // UDP:
  optional string base = 1 [json_name = "base"];

  // If specified, apply this mask (bitwise AND) to the field to ignore bits
  // before matching. Encoded as a hexadecimal number (starting with "0x"). The
  // last byte of the field (in network byte order) corresponds to the least
  // significant byte of the mask.
  optional string mask = 2 [json_name = "mask"];

  // The name of this field. Must be unique within the policy.
  optional string name = 3 [json_name = "name"];

  // Offset of the first byte of the field (in network byte order) relative to
  // 'base'.
  optional int32 offset = 4 [json_name = "offset"];

  // Size of the field in bytes. Valid values: 1-4.
  optional int32 size = 5 [json_name = "size"];
}
