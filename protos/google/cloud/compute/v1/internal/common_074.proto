// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/compute_public_google_rest_v1.json
// revision: 20231003

syntax = "proto3";

package google.cloud.cpp.compute.v1;

// Opaque filter criteria used by load balancers to restrict routing
// configuration to a limited set of load balancing proxies. Proxies and
// sidecars involved in load balancing would typically present metadata to the
// load balancers that need to match criteria specified here. If a match takes
// place, the relevant configuration is made available to those proxies. For
// each metadataFilter in this list, if its filterMatchCriteria is set to
// MATCH_ANY, at least one of the filterLabels must match the corresponding
// label provided in the metadata. If its filterMatchCriteria is set to
// MATCH_ALL, then all of its filterLabels must match with corresponding labels
// provided in the metadata. An example for using metadataFilters would be: if
// load balancing involves Envoys, they receive routing configuration when
// values in metadataFilters match values supplied in of their XDS requests to
// loadbalancers.
message MetadataFilter {
  // The list of label value pairs that must match labels in the provided
  // metadata based on filterMatchCriteria This list must not be empty and can
  // have at the most 64 entries.
  repeated MetadataFilterLabelMatch filter_labels = 1
      [json_name = "filterLabels"];

  // Specifies how individual filter label matches within the list of
  // filterLabels and contributes toward the overall metadataFilter match.
  // Supported values are: - MATCH_ANY: at least one of the filterLabels must
  // have a matching label in the provided metadata. - MATCH_ALL: all
  // filterLabels must have matching labels in the provided metadata.
  // MATCH_ALL: Specifies that all filterLabels must match for the
  // metadataFilter to be considered a match.
  // MATCH_ANY: Specifies that any filterLabel must match for the metadataFilter
  // to be considered a match.
  // NOT_SET: Indicates that the match criteria was not set. A metadataFilter
  // must never be created with this value.
  optional string filter_match_criteria = 2 [json_name = "filterMatchCriteria"];
}

// MetadataFilter label name value pairs that are expected to match
// corresponding labels presented as metadata to the load balancer.
message MetadataFilterLabelMatch {
  // Name of metadata label. The name can have a maximum length of 1024
  // characters and must be at least 1 character long.
  optional string name = 1 [json_name = "name"];

  // The value of the label must match the specified value. value can have a
  // maximum length of 1024 characters.
  optional string value = 2 [json_name = "value"];
}
