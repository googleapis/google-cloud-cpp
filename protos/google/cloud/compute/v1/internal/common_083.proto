// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/compute_public_google_rest_v1.json
// revision: 20241231

syntax = "proto3";

package google.cloud.cpp.compute.v1;

// NetworkProfile represents a Google managed network profile resource.
message NetworkProfile {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1 [json_name = "creationTimestamp"];

  // [Output Only] An optional description of this resource.
  optional string description = 2 [json_name = "description"];

  // [Output Only] Features supported by the network.
  optional NetworkProfileNetworkFeatures features = 3 [json_name = "features"];

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 4 [json_name = "id"];

  // [Output Only] Type of the resource. Always compute#networkProfile for
  // network profiles.
  optional string kind = 5 [json_name = "kind"];

  // [Output Only] Location to which the network is restricted.
  optional NetworkProfileLocation location = 6 [json_name = "location"];

  // [Output Only] Name of the resource.
  optional string name = 7 [json_name = "name"];

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 8 [json_name = "selfLink"];

  // [Output Only] Server-defined URL for this resource with the resource id.
  optional string self_link_with_id = 9 [json_name = "selfLinkWithId"];

  // [Output Only] Zone to which the network is restricted.
  optional string zone = 10 [json_name = "zone"];
}

message NetworkProfileLocation {
  optional string name = 1 [json_name = "name"];

  // REGION:
  // ZONE:
  optional string scope = 2 [json_name = "scope"];
}

message NetworkProfileNetworkFeatures {
  // Specifies what address purposes are supported. If empty, all address
  // purposes are supported.
  repeated string address_purposes = 1 [json_name = "addressPurposes"];

  // Specifies whether alias IP ranges (and secondary address ranges) are
  // allowed.
  // ALIAS_IP_RANGES_ALLOWED:
  // ALIAS_IP_RANGES_BLOCKED:
  optional string allow_alias_ip_ranges = 2 [json_name = "allowAliasIpRanges"];

  // Specifies whether auto mode subnet creation is allowed.
  // AUTO_MODE_SUBNET_ALLOWED:
  // AUTO_MODE_SUBNET_BLOCKED:
  optional string allow_auto_mode_subnet = 3
      [json_name = "allowAutoModeSubnet"];

  // Specifies whether firewalls for Class D address ranges are supported.
  // CLASS_D_FIREWALLS_ALLOWED:
  // CLASS_D_FIREWALLS_BLOCKED:
  optional string allow_class_d_firewalls = 4
      [json_name = "allowClassDFirewalls"];

  // Specifies whether cloud NAT creation is allowed.
  // CLOUD_NAT_ALLOWED:
  // CLOUD_NAT_BLOCKED:
  optional string allow_cloud_nat = 5 [json_name = "allowCloudNat"];

  // Specifies whether cloud router creation is allowed.
  // CLOUD_ROUTER_ALLOWED:
  // CLOUD_ROUTER_BLOCKED:
  optional string allow_cloud_router = 6 [json_name = "allowCloudRouter"];

  // Specifies whether VMs are allowed to have external IP access on network
  // interfaces connected to this VPC.
  // EXTERNAL_IP_ACCESS_ALLOWED:
  // EXTERNAL_IP_ACCESS_BLOCKED:
  optional string allow_external_ip_access = 7
      [json_name = "allowExternalIpAccess"];

  // Specifies whether Cloud Interconnect creation is allowed.
  // INTERCONNECT_ALLOWED:
  // INTERCONNECT_BLOCKED:
  optional string allow_interconnect = 8 [json_name = "allowInterconnect"];

  // Specifies whether cloud load balancing is allowed.
  // LOAD_BALANCING_ALLOWED:
  // LOAD_BALANCING_BLOCKED:
  optional string allow_load_balancing = 9 [json_name = "allowLoadBalancing"];

  // Specifies whether multi-nic in the same network is allowed.
  // MULTI_NIC_IN_SAME_NETWORK_ALLOWED:
  // MULTI_NIC_IN_SAME_NETWORK_BLOCKED:
  optional string allow_multi_nic_in_same_network = 10
      [json_name = "allowMultiNicInSameNetwork"];

  // Specifies whether Packet Mirroring 1.0 is supported.
  // PACKET_MIRRORING_ALLOWED:
  // PACKET_MIRRORING_BLOCKED:
  optional string allow_packet_mirroring = 11
      [json_name = "allowPacketMirroring"];

  // Specifies whether private Google access is allowed.
  // PRIVATE_GOOGLE_ACCESS_ALLOWED:
  // PRIVATE_GOOGLE_ACCESS_BLOCKED:
  optional string allow_private_google_access = 12
      [json_name = "allowPrivateGoogleAccess"];

  // Specifies whether PSC creation is allowed.
  // PSC_ALLOWED:
  // PSC_BLOCKED:
  optional string allow_psc = 13 [json_name = "allowPsc"];

  // Specifies whether unicast within the same network is allowed.
  // SAME_NETWORK_UNICAST_ALLOWED:
  // SAME_NETWORK_UNICAST_BLOCKED:
  optional string allow_same_network_unicast = 14
      [json_name = "allowSameNetworkUnicast"];

  // Specifies whether static route creation is allowed.
  // STATIC_ROUTES_ALLOWED:
  // STATIC_ROUTES_BLOCKED:
  optional string allow_static_routes = 15 [json_name = "allowStaticRoutes"];

  // Specifies whether sub interfaces are allowed.
  // SUBINTERFACES_ALLOWED:
  // SUBINTERFACES_BLOCKED:
  optional string allow_sub_interfaces = 16 [json_name = "allowSubInterfaces"];

  // Specifies whether VPC peering is allowed.
  // VPC_PEERING_ALLOWED:
  // VPC_PEERING_BLOCKED:
  optional string allow_vpc_peering = 17 [json_name = "allowVpcPeering"];

  // Specifies whether VPN creation is allowed.
  // VPN_ALLOWED:
  // VPN_BLOCKED:
  optional string allow_vpn = 18 [json_name = "allowVpn"];

  // If set, limits the interface types that the network supports. If empty, all
  // interface types are supported.
  repeated string interface_types = 19 [json_name = "interfaceTypes"];

  // Specifies which subnetwork purposes are supported.
  repeated string subnet_purposes = 20 [json_name = "subnetPurposes"];

  // Specifies which subnetwork stack types are supported.
  repeated string subnet_stack_types = 21 [json_name = "subnetStackTypes"];

  // Specifies which type of unicast is supported.
  // UNICAST_SDN:
  // UNICAST_ULL:
  optional string unicast = 22 [json_name = "unicast"];
}

// Contains a list of network profiles.
message NetworkProfilesListResponse {
  optional string etag = 1 [json_name = "etag"];

  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 2 [json_name = "id"];

  // A list of NetworkProfile resources.
  repeated NetworkProfile items = 3 [json_name = "items"];

  // [Output Only] Type of resource. Always compute#networkProfileList for
  // network profiles.
  optional string kind = 4 [json_name = "kind"];

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 5 [json_name = "nextPageToken"];

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 6 [json_name = "selfLink"];

  // [Output Only] Unreachable resources. end_interface:
  // MixerListResponseWithEtagBuilder
  repeated string unreachables = 7 [json_name = "unreachables"];

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // QUOTA_INFO_UNAVAILABLE: Quota information is not available to client
    // requests (e.g: regions.list).
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1 [json_name = "code"];

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1 [json_name = "key"];

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2 [json_name = "value"];
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2 [json_name = "data"];

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3 [json_name = "message"];
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 8 [json_name = "warning"];
}
