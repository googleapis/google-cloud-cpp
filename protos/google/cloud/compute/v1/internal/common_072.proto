// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/compute_public_google_rest_v1.json
// revision: 20250511

syntax = "proto3";

package google.cloud.cpp.compute.v1;

// Diagnostics information about the Interconnect connection, which contains
// detailed and current technical information about Google's side of the
// connection.
message InterconnectDiagnostics {
  // A list of InterconnectDiagnostics.ARPEntry objects, describing individual
  // neighbors currently seen by the Google router in the ARP cache for the
  // Interconnect. This will be empty when the Interconnect is not bundled.
  repeated InterconnectDiagnosticsARPEntry arp_caches = 1
      [json_name = "arpCaches"];

  // The aggregation type of the bundle interface.
  // BUNDLE_AGGREGATION_TYPE_LACP: LACP is enabled.
  // BUNDLE_AGGREGATION_TYPE_STATIC: LACP is disabled.
  optional string bundle_aggregation_type = 2
      [json_name = "bundleAggregationType"];

  // The operational status of the bundle interface.
  // BUNDLE_OPERATIONAL_STATUS_DOWN: If bundleAggregationType is LACP: LACP is
  // not established and/or all links in the bundle have DOWN operational
  // status. If bundleAggregationType is STATIC: one or more links in the bundle
  // has DOWN operational status.
  // BUNDLE_OPERATIONAL_STATUS_UP: If bundleAggregationType is LACP: LACP is
  // established and at least one link in the bundle has UP operational status.
  // If bundleAggregationType is STATIC: all links in the bundle (typically just
  // one) have UP operational status.
  optional string bundle_operational_status = 3
      [json_name = "bundleOperationalStatus"];

  // A list of InterconnectDiagnostics.LinkStatus objects, describing the status
  // for each link on the Interconnect.
  repeated InterconnectDiagnosticsLinkStatus links = 4 [json_name = "links"];

  // The MAC address of the Interconnect's bundle interface.
  optional string mac_address = 5 [json_name = "macAddress"];
}

// Describing the ARP neighbor entries seen on this link
message InterconnectDiagnosticsARPEntry {
  // The IP address of this ARP neighbor.
  optional string ip_address = 1 [json_name = "ipAddress"];

  // The MAC address of this ARP neighbor.
  optional string mac_address = 2 [json_name = "macAddress"];
}

message InterconnectDiagnosticsLinkLACPStatus {
  // System ID of the port on Google's side of the LACP exchange.
  optional string google_system_id = 1 [json_name = "googleSystemId"];

  // System ID of the port on the neighbor's side of the LACP exchange.
  optional string neighbor_system_id = 2 [json_name = "neighborSystemId"];

  // The state of a LACP link, which can take one of the following values: -
  // ACTIVE: The link is configured and active within the bundle. - DETACHED:
  // The link is not configured within the bundle. This means that the rest of
  // the object should be empty.
  // ACTIVE: The link is configured and active within the bundle.
  // DETACHED: The link is not configured within the bundle, this means the rest
  // of the object should be empty.
  optional string state = 3 [json_name = "state"];
}

message InterconnectDiagnosticsLinkOpticalPower {
  // The status of the current value when compared to the warning and alarm
  // levels for the receiving or transmitting transceiver. Possible states
  // include: - OK: The value has not crossed a warning threshold. -
  // LOW_WARNING: The value has crossed below the low warning threshold. -
  // HIGH_WARNING: The value has crossed above the high warning threshold. -
  // LOW_ALARM: The value has crossed below the low alarm threshold. -
  // HIGH_ALARM: The value has crossed above the high alarm threshold.
  // HIGH_ALARM: The value has crossed above the high alarm threshold.
  // HIGH_WARNING: The value of the current optical power has crossed above the
  // high warning threshold.
  // LOW_ALARM: The value of the current optical power has crossed below the low
  // alarm threshold.
  // LOW_WARNING: The value of the current optical power has crossed below the
  // low warning threshold.
  // OK: The value of the current optical power has not crossed a warning
  // threshold.
  optional string state = 1 [json_name = "state"];

  // Value of the current receiving or transmitting optical power, read in dBm.
  // Take a known good optical value, give it a 10% margin and trigger warnings
  // relative to that value. In general, a -7dBm warning and a -11dBm alarm are
  // good optical value estimates for most links.
  optional float value = 2 [json_name = "value"];
}

message InterconnectDiagnosticsLinkStatus {
  // A list of InterconnectDiagnostics.ARPEntry objects, describing the ARP
  // neighbor entries seen on this link. This will be empty if the link is
  // bundled
  repeated InterconnectDiagnosticsARPEntry arp_caches = 1
      [json_name = "arpCaches"];

  // The unique ID for this link assigned during turn up by Google.
  optional string circuit_id = 2 [json_name = "circuitId"];

  // The Demarc address assigned by Google and provided in the LoA.
  optional string google_demarc = 3 [json_name = "googleDemarc"];

  optional InterconnectDiagnosticsLinkLACPStatus lacp_status = 4
      [json_name = "lacpStatus"];

  // Describes the status of MACsec encryption on this link.
  optional InterconnectDiagnosticsMacsecStatus macsec = 8
      [json_name = "macsec"];

  // The operational status of the link.
  // LINK_OPERATIONAL_STATUS_DOWN: The interface is unable to communicate with
  // the remote end.
  // LINK_OPERATIONAL_STATUS_UP: The interface has low level communication with
  // the remote end.
  optional string operational_status = 5 [json_name = "operationalStatus"];

  // An InterconnectDiagnostics.LinkOpticalPower object, describing the current
  // value and status of the received light level.
  optional InterconnectDiagnosticsLinkOpticalPower receiving_optical_power = 6
      [json_name = "receivingOpticalPower"];

  // An InterconnectDiagnostics.LinkOpticalPower object, describing the current
  // value and status of the transmitted light level.
  optional InterconnectDiagnosticsLinkOpticalPower transmitting_optical_power =
      7 [json_name = "transmittingOpticalPower"];
}

// Describes the status of MACsec encryption on the link.
message InterconnectDiagnosticsMacsecStatus {
  // Indicates the Connectivity Association Key Name (CKN) currently being used
  // if MACsec is operational.
  optional string ckn = 1 [json_name = "ckn"];

  // Indicates whether or not MACsec is operational on this link.
  optional bool operational = 2 [json_name = "operational"];
}
