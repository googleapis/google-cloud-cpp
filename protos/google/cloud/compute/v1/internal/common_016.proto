// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/compute_public_google_rest_v1.json
// revision: 20250302

syntax = "proto3";

package google.cloud.cpp.compute.v1;

import "google/cloud/compute/v1/internal/common_003.proto";

// A transient resource used in compute.instances.bulkInsert and
// compute.regionInstances.bulkInsert . This resource is not persisted anywhere,
// it is used only for processing the requests.
message BulkInsertInstanceResource {
  // The maximum number of instances to create.
  optional string count = 1 [json_name = "count"];

  // The instance properties defining the VM instances to be created. Required
  // if sourceInstanceTemplate is not provided.
  optional InstanceProperties instance_properties = 2
      [json_name = "instanceProperties"];

  // Policy for chosing target zone. For more information, see Create VMs in
  // bulk .
  optional LocationPolicy location_policy = 3 [json_name = "locationPolicy"];

  // The minimum number of instances to create. If no min_count is specified
  // then count is used as the default value. If min_count instances cannot be
  // created, then no instances will be created and instances already created
  // will be deleted.
  optional string min_count = 4 [json_name = "minCount"];

  // The string pattern used for the names of the VMs. Either name_pattern or
  // per_instance_properties must be set. The pattern must contain one
  // continuous sequence of placeholder hash characters (#) with each character
  // corresponding to one digit of the generated instance name. Example: a
  // name_pattern of inst-#### generates instance names such as inst-0001 and
  // inst-0002. If existing instances in the same project and zone have names
  // that match the name pattern then the generated instance numbers start after
  // the biggest existing number. For example, if there exists an instance with
  // name inst-0050, then instance names generated using the pattern inst-####
  // begin with inst-0051. The name pattern placeholder #...# can contain up to
  // 18 characters.
  optional string name_pattern = 5 [json_name = "namePattern"];

  // Per-instance properties to be set on individual instances. Keys of this map
  // specify requested instance names. Can be empty if name_pattern is used.
  map<string, BulkInsertInstanceResourcePerInstanceProperties>
      per_instance_properties = 6 [json_name = "perInstanceProperties"];

  // Specifies the instance template from which to create instances. You may
  // combine sourceInstanceTemplate with instanceProperties to override specific
  // values from an existing instance template. Bulk API follows the semantics
  // of JSON Merge Patch described by RFC 7396. It can be a full or partial URL.
  // For example, the following are all valid URLs to an instance template: -
  // https://www.googleapis.com/compute/v1/projects/project
  // /global/instanceTemplates/instanceTemplate -
  // projects/project/global/instanceTemplates/instanceTemplate -
  // global/instanceTemplates/instanceTemplate This field is optional.
  optional string source_instance_template = 7
      [json_name = "sourceInstanceTemplate"];
}

// Per-instance properties to be set on individual instances. To be extended in
// the future.
message BulkInsertInstanceResourcePerInstanceProperties {
  // Specifies the hostname of the instance. More details in:
  // https://cloud.google.com/compute/docs/instances/custom-hostname-vm#naming_convention
  optional string hostname = 2 [json_name = "hostname"];

  // Additional structured details about this error. Keys must match a regular
  // expression of `a-z+` but should ideally be lowerCamelCase. Also, they must
  // be limited to 64 characters in length. When identifying the current value
  // of an exceeded limit, the units should be contained in the key, not the
  // value. For example, rather than `{"instanceLimit": "100/request"}`, should
  // be returned as, `{"instanceLimitPerRequest": "100"}`, if the client exceeds
  // the number of instances that can be created in a single (batch) request.
  map<string, string> metadatas = 2 [json_name = "metadatas"];

  // The reason of the error. This is a constant value that identifies the
  // proximate cause of the error. Error reasons are unique within a particular
  // domain of errors. This should be at most 63 characters and match a regular
  // expression of `A-Z+[A-Z0-9]`, which represents UPPER_SNAKE_CASE.
  optional string reason = 3 [json_name = "reason"];
}

// Configuration for location policy among multiple possible locations (e.g.
// preferences for zone selection among zones in a single region).
message LocationPolicy {
  // Location configurations mapped by location name. Currently only zone names
  // are supported and must be represented as valid internal URLs, such as
  // zones/us-central1-a.
  map<string, LocationPolicyLocation> locations = 1 [json_name = "locations"];

  // Strategy for distributing VMs across zones in a region.
  // ANY: GCE picks zones for creating VM instances to fulfill the requested
  // number of VMs within present resource constraints and to maximize
  // utilization of unused zonal reservations. Recommended for batch workloads
  // that do not require high availability.
  // ANY_SINGLE_ZONE: GCE always selects a single zone for all the VMs,
  // optimizing for resource quotas, available reservations and general
  // capacity. Recommended for batch workloads that cannot tollerate
  // distribution over multiple zones. This the default shape in Bulk Insert and
  // Capacity Advisor APIs.
  // BALANCED: GCE prioritizes acquisition of resources, scheduling VMs in zones
  // where resources are available while distributing VMs as evenly as possible
  // across allowed zones to minimize the impact of zonal failure. Recommended
  // for highly available serving workloads.
  optional string target_shape = 2 [json_name = "targetShape"];
}

message LocationPolicyLocation {
  // Constraints that the caller requires on the result distribution in this
  // zone.
  optional LocationPolicyLocationConstraints constraints = 1
      [json_name = "constraints"];

  // Preference for a given location. Set to either ALLOW or DENY.
  // ALLOW: Location is allowed for use.
  // DENY: Location is prohibited.
  // PREFERENCE_UNSPECIFIED: Default value, unused.
  optional string preference = 2 [json_name = "preference"];
}

message InstancesBulkInsertOperationMetadata {
  // Status information per location (location name is key). Example key:
  // zones/us-central1-a
  map<string, BulkInsertOperationStatus> per_location_status = 1
      [json_name = "perLocationStatus"];
}

// Provides a localized error message that is safe to return to the user which
// can be attached to an RPC error.
message LocalizedMessage {
  // The locale used following the specification defined at
  // https://www.rfc-editor.org/rfc/bcp/bcp47.txt. Examples are: "en-US",
  // "fr-CH", "es-MX"
  optional string locale = 1 [json_name = "locale"];

  // The localized error message in the above locale.
  optional string message = 2 [json_name = "message"];
}

// Represents an Operation resource. Google Compute Engine has three Operation
// resources: * [Global](/compute/docs/reference/rest/v1/globalOperations) *
// [Regional](/compute/docs/reference/rest/v1/regionOperations) *
// [Zonal](/compute/docs/reference/rest/v1/zoneOperations) You can use an
// operation resource to manage asynchronous API requests. For more information,
// read Handling API responses. Operations can be global, regional or zonal. -
// For global operations, use the `globalOperations` resource. - For regional
// operations, use the `regionOperations` resource. - For zonal operations, use
// the `zoneOperations` resource. For more information, read Global, Regional,
// and Zonal Resources. Note that completed Operation resources have a limited
// retention period.
message Operation {
  // [Output Only] The value of `requestId` if you provided it in the request.
  // Not present otherwise.
  optional string client_operation_id = 1 [json_name = "clientOperationId"];

  // [Deprecated] This field is deprecated.
  optional string creation_timestamp = 2 [json_name = "creationTimestamp"];

  // [Output Only] A textual description of the operation, which is set when the
  // operation is created.
  optional string description = 3 [json_name = "description"];

  // [Output Only] The time that this operation was completed. This value is in
  // RFC3339 text format.
  optional string end_time = 4 [json_name = "endTime"];

  message Error {
    message ErrorsItem {
      // [Output Only] The error type identifier for this error.
      optional string code = 1 [json_name = "code"];

      message ErrorDetailsItem {
        optional ErrorInfo error_info = 1 [json_name = "errorInfo"];

        optional Help help = 2 [json_name = "help"];

        optional LocalizedMessage localized_message = 3
            [json_name = "localizedMessage"];

        optional QuotaExceededInfo quota_info = 4 [json_name = "quotaInfo"];
      }

      // [Output Only] An optional list of messages that contain the error
      // details. There is a set of defined message types to use for providing
      // details.The syntax depends on the error code. For example,
      // QuotaExceededInfo will have details when the error code is
      // QUOTA_EXCEEDED.
      repeated ErrorDetailsItem error_details = 2 [json_name = "errorDetails"];

      // [Output Only] Indicates the field in the request that caused the error.
      // This property is optional.
      optional string location = 3 [json_name = "location"];

      // [Output Only] An optional, human-readable error message.
      optional string message = 4 [json_name = "message"];
    }

    // [Output Only] The array of errors encountered while processing this
    // operation.
    repeated ErrorsItem errors = 1 [json_name = "errors"];
  }

  // [Output Only] If errors are generated during processing of the operation,
  // this field will be populated.
  optional Error error = 5 [json_name = "error"];

  // [Output Only] If the operation fails, this field contains the HTTP error
  // message that was returned, such as `NOT FOUND`.
  optional string http_error_message = 6 [json_name = "httpErrorMessage"];

  // [Output Only] If the operation fails, this field contains the HTTP error
  // status code that was returned. For example, a `404` means the resource was
  // not found.
  optional int32 http_error_status_code = 7 [json_name = "httpErrorStatusCode"];

  // [Output Only] The unique identifier for the operation. This identifier is
  // defined by the server.
  optional string id = 8 [json_name = "id"];

  // [Output Only] The time that this operation was requested. This value is in
  // RFC3339 text format.
  optional string insert_time = 9 [json_name = "insertTime"];

  optional InstancesBulkInsertOperationMetadata
      instances_bulk_insert_operation_metadata = 25
      [json_name = "instancesBulkInsertOperationMetadata"];

  // [Output Only] Type of the resource. Always `compute#operation` for
  // Operation resources.
  optional string kind = 10 [json_name = "kind"];

  // [Output Only] Name of the operation.
  optional string name = 11 [json_name = "name"];

  // [Output Only] An ID that represents a group of operations, such as when a
  // group of operations results from a `bulkInsert` API request.
  optional string operation_group_id = 12 [json_name = "operationGroupId"];

  // [Output Only] The type of operation, such as `insert`, `update`, or
  // `delete`, and so on.
  optional string operation_type = 13 [json_name = "operationType"];

  // [Output Only] An optional progress indicator that ranges from 0 to 100.
  // There is no requirement that this be linear or support any granularity of
  // operations. This should not be used to guess when the operation will be
  // complete. This number should monotonically increase as the operation
  // progresses.
  optional int32 progress = 14 [json_name = "progress"];

  // [Output Only] The URL of the region where the operation resides. Only
  // applicable when performing regional operations.
  optional string region = 15 [json_name = "region"];

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 16 [json_name = "selfLink"];

  // [Output Only] If the operation is for projects.setCommonInstanceMetadata,
  // this field will contain information on all underlying zonal actions and
  // their state.
  optional SetCommonInstanceMetadataOperationMetadata
      set_common_instance_metadata_operation_metadata = 26
      [json_name = "setCommonInstanceMetadataOperationMetadata"];

  // [Output Only] The time that this operation was started by the server. This
  // value is in RFC3339 text format.
  optional string start_time = 17 [json_name = "startTime"];

  // [Output Only] The status of the operation, which can be one of the
  // following: `PENDING`, `RUNNING`, or `DONE`.
  // DONE:
  // PENDING:
  // RUNNING:
  optional string status = 18 [json_name = "status"];

  // [Output Only] An optional textual description of the current status of the
  // operation.
  optional string status_message = 19 [json_name = "statusMessage"];

  // [Output Only] The unique target ID, which identifies a specific incarnation
  // of the target resource.
  optional string target_id = 20 [json_name = "targetId"];

  // [Output Only] The URL of the resource that the operation modifies. For
  // operations related to creating a snapshot, this points to the disk that the
  // snapshot was created from.
  optional string target_link = 21 [json_name = "targetLink"];

  // [Output Only] User who requested the operation, for example:
  // `user@example.com` or `alice_smith_identifier
  // (global/workforcePools/example-com-us-employees)`.
  optional string user = 22 [json_name = "user"];

  message WarningsItem {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // QUOTA_INFO_UNAVAILABLE: Quota information is not available to client
    // requests (e.g: regions.list).
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1 [json_name = "code"];

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1 [json_name = "key"];

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2 [json_name = "value"];
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2 [json_name = "data"];

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3 [json_name = "message"];
  }

  // [Output Only] If warning messages are generated during processing of the
  // operation, this field will be populated.
  repeated WarningsItem warnings = 23 [json_name = "warnings"];

  // [Output Only] The URL of the zone where the operation resides. Only
  // applicable when performing per-zone operations.
  optional string zone = 24 [json_name = "zone"];
}

// Additional details for quota exceeded error for resource quota.
message QuotaExceededInfo {
  // The map holding related quota dimensions.
  map<string, string> dimensions = 1 [json_name = "dimensions"];

  // Future quota limit being rolled out. The limit's unit depends on the quota
  // type or metric.
  optional double future_limit = 5 [json_name = "futureLimit"];

  // Current effective quota limit. The limit's unit depends on the quota type
  // or metric.
  optional double limit = 2 [json_name = "limit"];

  // The name of the quota limit.
  optional string limit_name = 3 [json_name = "limitName"];

  // The Compute Engine quota metric name.
  optional string metric_name = 4 [json_name = "metricName"];

  // Rollout status of the future quota limit.
  // IN_PROGRESS: IN_PROGRESS - A rollout is in process which will change the
  // limit value to future limit.
  // ROLLOUT_STATUS_UNSPECIFIED: ROLLOUT_STATUS_UNSPECIFIED - Rollout status is
  // not specified. The default value.
  optional string rollout_status = 6 [json_name = "rolloutStatus"];
}

message SetCommonInstanceMetadataOperationMetadata {
  // [Output Only] The client operation id.
  optional string client_operation_id = 1 [json_name = "clientOperationId"];

  // [Output Only] Status information per location (location name is key).
  // Example key: zones/us-central1-a
  map<string,
      SetCommonInstanceMetadataOperationMetadataPerLocationOperationInfo>
      per_location_operations = 2 [json_name = "perLocationOperations"];
}

message SetCommonInstanceMetadataOperationMetadataPerLocationOperationInfo {
  // [Output Only] If state is `ABANDONED` or `FAILED`, this field is populated.
  optional Status error = 1 [json_name = "error"];

  // [Output Only] Status of the action, which can be one of the following:
  // `PROPAGATING`, `PROPAGATED`, `ABANDONED`, `FAILED`, or `DONE`.
  // ABANDONED: Operation not tracked in this location e.g. zone is marked as
  // DOWN.
  // DONE: Operation has completed successfully.
  // FAILED: Operation is in an error state.
  // PROPAGATED: Operation is confirmed to be in the location.
  // PROPAGATING: Operation is not yet confirmed to have been created in the
  // location.
  // UNSPECIFIED:
  optional string state = 2 [json_name = "state"];
}

// The `Status` type defines a logical error model that is suitable for
// different programming environments, including REST APIs and RPC APIs. It is
// used by [gRPC](https://github.com/grpc). Each `Status` message contains three
// pieces of data: error code, error message, and error details. You can find
// out more about this error model and how to work with it in the [API Design
// Guide](https://cloud.google.com/apis/design/errors).
message Status {
  // The status code, which should be an enum value of google.rpc.Code.
  optional int32 code = 1 [json_name = "code"];

  // A list of messages that carry the error details. There is a common set of
  // message types for APIs to use.
  repeated google.protobuf.Any details = 2 [json_name = "details"];

  // A developer-facing error message, which should be in English. Any
  // user-facing error message should be localized and sent in the
  // google.rpc.Status.details field, or localized by the client.
  optional string message = 3 [json_name = "message"];
}
