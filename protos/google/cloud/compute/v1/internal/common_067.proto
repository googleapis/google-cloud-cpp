// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/compute_public_google_rest_v1.json
// revision: 20231003

syntax = "proto3";

package google.cloud.cpp.compute.v1;

import "google/cloud/compute/v1/internal/common_065.proto";

// Represents a Cross-Cloud Interconnect Remote Location resource. You can use
// this resource to find remote location details about an Interconnect
// attachment (VLAN).
message InterconnectRemoteLocation {
  // [Output Only] The postal address of the Point of Presence, each line in the
  // address is separated by a newline character.
  optional string address = 1 [json_name = "address"];

  // [Output Only] Subset of fields from InterconnectAttachment's
  // |configurationConstraints| field that apply to all attachments for this
  // remote location.
  optional InterconnectAttachmentConfigurationConstraints
      attachment_configuration_constraints = 2
      [json_name = "attachmentConfigurationConstraints"];

  // [Output Only] Metropolitan area designator that indicates which city an
  // interconnect is located. For example: "Chicago, IL", "Amsterdam,
  // Netherlands".
  optional string city = 3 [json_name = "city"];

  // [Output Only] Constraints on the parameters for creating Cross-Cloud
  // Interconnect and associated InterconnectAttachments.
  optional InterconnectRemoteLocationConstraints constraints = 4
      [json_name = "constraints"];

  // [Output Only] Continent for this location, which can take one of the
  // following values: - AFRICA - ASIA_PAC - EUROPE - NORTH_AMERICA -
  // SOUTH_AMERICA
  // AFRICA:
  // ASIA_PAC:
  // EUROPE:
  // NORTH_AMERICA:
  // SOUTH_AMERICA:
  optional string continent = 5 [json_name = "continent"];

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 6 [json_name = "creationTimestamp"];

  // [Output Only] An optional description of the resource.
  optional string description = 7 [json_name = "description"];

  // [Output Only] The name of the provider for this facility (e.g., EQUINIX).
  optional string facility_provider = 8 [json_name = "facilityProvider"];

  // [Output Only] A provider-assigned Identifier for this facility (e.g.,
  // Ashburn-DC1).
  optional string facility_provider_facility_id = 9
      [json_name = "facilityProviderFacilityId"];

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 10 [json_name = "id"];

  // [Output Only] Type of the resource. Always
  // compute#interconnectRemoteLocation for interconnect remote locations.
  optional string kind = 11 [json_name = "kind"];

  // [Output Only] Link Aggregation Control Protocol (LACP) constraints, which
  // can take one of the following values: LACP_SUPPORTED, LACP_UNSUPPORTED
  // LACP_SUPPORTED: LACP_SUPPORTED: LACP is supported, and enabled by default
  // on the Cross-Cloud Interconnect.
  // LACP_UNSUPPORTED: LACP_UNSUPPORTED: LACP is not supported and is not be
  // enabled on this port. GetDiagnostics shows bundleAggregationType as
  // "static". GCP does not support LAGs without LACP, so requestedLinkCount
  // must be 1.
  optional string lacp = 12 [json_name = "lacp"];

  // [Output Only] The maximum number of 100 Gbps ports supported in a link
  // aggregation group (LAG). When linkType is 100 Gbps, requestedLinkCount
  // cannot exceed max_lag_size_100_gbps.
  optional int32 max_lag_size100_gbps = 13 [json_name = "maxLagSize100Gbps"];

  // [Output Only] The maximum number of 10 Gbps ports supported in a link
  // aggregation group (LAG). When linkType is 10 Gbps, requestedLinkCount
  // cannot exceed max_lag_size_10_gbps.
  optional int32 max_lag_size10_gbps = 14 [json_name = "maxLagSize10Gbps"];

  // [Output Only] Name of the resource.
  optional string name = 15 [json_name = "name"];

  // [Output Only] The peeringdb identifier for this facility (corresponding
  // with a netfac type in peeringdb).
  optional string peeringdb_facility_id = 16
      [json_name = "peeringdbFacilityId"];

  // [Output Only] Permitted connections.
  repeated InterconnectRemoteLocationPermittedConnections
      permitted_connections = 17 [json_name = "permittedConnections"];

  // [Output Only] Indicates the service provider present at the remote
  // location. Example values: "Amazon Web Services", "Microsoft Azure".
  optional string remote_service = 18 [json_name = "remoteService"];

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 19 [json_name = "selfLink"];

  // [Output Only] The status of this InterconnectRemoteLocation, which can take
  // one of the following values: - CLOSED: The InterconnectRemoteLocation is
  // closed and is unavailable for provisioning new Cross-Cloud Interconnects. -
  // AVAILABLE: The InterconnectRemoteLocation is available for provisioning new
  // Cross-Cloud Interconnects.
  // AVAILABLE: The InterconnectRemoteLocation is available for provisioning new
  // Cross-Cloud Interconnects.
  // CLOSED: The InterconnectRemoteLocation is closed for provisioning new
  // Cross-Cloud Interconnects.
  optional string status = 20 [json_name = "status"];
}

message InterconnectRemoteLocationConstraints {
  // [Output Only] Port pair remote location constraints, which can take one of
  // the following values: PORT_PAIR_UNCONSTRAINED_REMOTE_LOCATION,
  // PORT_PAIR_MATCHING_REMOTE_LOCATION. GCP's API refers only to individual
  // ports, but the UI uses this field when ordering a pair of ports, to prevent
  // users from accidentally ordering something that is incompatible with their
  // cloud provider. Specifically, when ordering a redundant pair of Cross-Cloud
  // Interconnect ports, and one of them uses a remote location with
  // portPairMatchingRemoteLocation set to matching, the UI requires that both
  // ports use the same remote location.
  // PORT_PAIR_MATCHING_REMOTE_LOCATION: If PORT_PAIR_MATCHING_REMOTE_LOCATION,
  // the remote cloud provider allocates ports in pairs, and the user should
  // choose the same remote location for both ports.
  // PORT_PAIR_UNCONSTRAINED_REMOTE_LOCATION: If
  // PORT_PAIR_UNCONSTRAINED_REMOTE_LOCATION, a user may opt to provision a
  // redundant pair of Cross-Cloud Interconnects using two different remote
  // locations in the same city.
  optional string port_pair_remote_location = 1
      [json_name = "portPairRemoteLocation"];

  // [Output Only] Port pair VLAN constraints, which can take one of the
  // following values: PORT_PAIR_UNCONSTRAINED_VLAN, PORT_PAIR_MATCHING_VLAN
  // PORT_PAIR_MATCHING_VLAN: If PORT_PAIR_MATCHING_VLAN, the Interconnect for
  // this attachment is part of a pair of ports that should have matching VLAN
  // allocations. This occurs with Cross-Cloud Interconnect to Azure remote
  // locations. While GCP's API does not explicitly group pairs of ports, the UI
  // uses this field to ensure matching VLAN ids when configuring a redundant
  // VLAN pair.
  // PORT_PAIR_UNCONSTRAINED_VLAN: PORT_PAIR_UNCONSTRAINED_VLAN means there is
  // no constraint.
  optional string port_pair_vlan = 2 [json_name = "portPairVlan"];

  // [Output Only] [min-length, max-length] The minimum and maximum value
  // (inclusive) for the IPv4 subnet length. For example, an
  // interconnectRemoteLocation for Azure has {min: 30, max: 30} because Azure
  // requires /30 subnets. This range specifies the values supported by both
  // cloud providers. Interconnect currently supports /29 and /30 IPv4 subnet
  // lengths. If a remote cloud has no constraint on IPv4 subnet length, the
  // range would thus be {min: 29, max: 30}.
  optional InterconnectRemoteLocationConstraintsSubnetLengthRange
      subnet_length_range = 3 [json_name = "subnetLengthRange"];
}

message InterconnectRemoteLocationConstraintsSubnetLengthRange {
  optional int32 max = 1 [json_name = "max"];

  optional int32 min = 2 [json_name = "min"];
}

// Response to the list request, and contains a list of interconnect remote
// locations.
message InterconnectRemoteLocationList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1 [json_name = "id"];

  // A list of InterconnectRemoteLocation resources.
  repeated InterconnectRemoteLocation items = 2 [json_name = "items"];

  // [Output Only] Type of resource. Always
  // compute#interconnectRemoteLocationList for lists of interconnect remote
  // locations.
  optional string kind = 3 [json_name = "kind"];

  // [Output Only] This token lets you get the next page of results for list
  // requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4 [json_name = "nextPageToken"];

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5 [json_name = "selfLink"];

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1 [json_name = "code"];

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1 [json_name = "key"];

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2 [json_name = "value"];
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2 [json_name = "data"];

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3 [json_name = "message"];
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6 [json_name = "warning"];
}

message InterconnectRemoteLocationPermittedConnections {
  // [Output Only] URL of an Interconnect location that is permitted to connect
  // to this Interconnect remote location.
  optional string interconnect_location = 1
      [json_name = "interconnectLocation"];
}
