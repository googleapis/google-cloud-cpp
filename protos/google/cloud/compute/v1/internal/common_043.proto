// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/compute_public_google_rest_v1.json
// revision: 20240813

syntax = "proto3";

package google.cloud.cpp.compute.v1;

import "google/cloud/compute/v1/internal/common_007.proto";
import "google/cloud/compute/v1/internal/common_030.proto";
import "google/cloud/compute/v1/internal/common_114.proto";

message FutureReservation {
  reserved 14;
  // Future timestamp when the FR auto-created reservations will be deleted by
  // Compute Engine. Format of this field must be a valid
  // href="https://www.ietf.org/rfc/rfc3339.txt">RFC3339 value.
  optional string auto_created_reservations_delete_time = 1
      [json_name = "autoCreatedReservationsDeleteTime"];

  // Specifies the duration of auto-created reservations. It represents relative
  // time to future reservation start_time when auto-created reservations will
  // be automatically deleted by Compute Engine. Duration time unit is
  // represented as a count of seconds and fractions of seconds at nanosecond
  // resolution.
  optional Duration auto_created_reservations_duration = 2
      [json_name = "autoCreatedReservationsDuration"];

  // Setting for enabling or disabling automatic deletion for auto-created
  // reservation. If set to true, auto-created reservations will be deleted at
  // Future Reservation's end time (default) or at user's defined timestamp if
  // any of the [auto_created_reservations_delete_time,
  // auto_created_reservations_duration] values is specified. For keeping
  // auto-created reservation indefinitely, this value should be set to false.
  optional bool auto_delete_auto_created_reservations = 3
      [json_name = "autoDeleteAutoCreatedReservations"];

  // [Output Only] The creation timestamp for this future reservation in RFC3339
  // text format.
  optional string creation_timestamp = 4 [json_name = "creationTimestamp"];

  // An optional description of this resource. Provide this property when you
  // create the future reservation.
  optional string description = 5 [json_name = "description"];

  // [Output Only] A unique identifier for this future reservation. The server
  // defines this identifier.
  optional string id = 6 [json_name = "id"];

  // [Output Only] Type of the resource. Always compute#futureReservation for
  // future reservations.
  optional string kind = 7 [json_name = "kind"];

  // The name of the resource, provided by the client when initially creating
  // the resource. The resource name must be 1-63 characters long, and comply
  // with RFC1035. Specifically, the name must be 1-63 characters long and match
  // the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
  // character must be a lowercase letter, and all following characters must be
  // a dash, lowercase letter, or digit, except the last character, which cannot
  // be a dash.
  optional string name = 8 [json_name = "name"];

  // Name prefix for the reservations to be created at the time of delivery. The
  // name prefix must comply with RFC1035. Maximum allowed length for name
  // prefix is 20. Automatically created reservations name format will be
  // -date-####.
  optional string name_prefix = 9 [json_name = "namePrefix"];

  // Planning state before being submitted for evaluation
  // DRAFT: Future Reservation is being drafted.
  // PLANNING_STATUS_UNSPECIFIED:
  // SUBMITTED: Future Reservation has been submitted for evaluation by GCP.
  optional string planning_status = 10 [json_name = "planningStatus"];

  // [Output Only] Server-defined fully-qualified URL for this resource.
  optional string self_link = 11 [json_name = "selfLink"];

  // [Output Only] Server-defined URL for this resource with the resource id.
  optional string self_link_with_id = 12 [json_name = "selfLinkWithId"];

  // List of Projects/Folders to share with.
  optional ShareSettings share_settings = 13 [json_name = "shareSettings"];

  // Future Reservation configuration to indicate instance properties and total
  // count.
  optional FutureReservationSpecificSKUProperties specific_sku_properties = 15
      [json_name = "specificSkuProperties"];

  // [Output only] Status of the Future Reservation
  optional FutureReservationStatus status = 16 [json_name = "status"];

  // Time window for this Future Reservation.
  optional FutureReservationTimeWindow time_window = 17
      [json_name = "timeWindow"];

  // [Output Only] URL of the Zone where this future reservation resides.
  optional string zone = 18 [json_name = "zone"];
}

message FutureReservationSpecificSKUProperties {
  // Properties of the SKU instances being reserved.
  optional AllocationSpecificSKUAllocationReservedInstanceProperties
      instance_properties = 1 [json_name = "instanceProperties"];

  // The instance template that will be used to populate the
  // ReservedInstanceProperties of the future reservation
  optional string source_instance_template = 2
      [json_name = "sourceInstanceTemplate"];

  // Total number of instances for which capacity assurance is requested at a
  // future time period.
  optional string total_count = 3 [json_name = "totalCount"];
}

// [Output only] Represents status related to the future reservation.
message FutureReservationStatus {
  // [Output Only] The current status of the requested amendment.
  // AMENDMENT_APPROVED: The requested amendment to the Future Resevation has
  // been approved and applied by GCP.
  // AMENDMENT_DECLINED: The requested amendment to the Future Reservation has
  // been declined by GCP and the original state was restored.
  // AMENDMENT_IN_REVIEW: The requested amendment to the Future Reservation is
  // currently being reviewd by GCP.
  // AMENDMENT_STATUS_UNSPECIFIED:
  optional string amendment_status = 1 [json_name = "amendmentStatus"];

  // Fully qualified urls of the automatically created reservations at
  // start_time.
  repeated string auto_created_reservations = 2
      [json_name = "autoCreatedReservations"];

  // [Output Only] Represents the existing matching usage for the future
  // reservation.
  optional FutureReservationStatusExistingMatchingUsageInfo
      existing_matching_usage_info = 3
      [json_name = "existingMatchingUsageInfo"];

  // This count indicates the fulfilled capacity so far. This is set during
  // "PROVISIONING" state. This count also includes capacity delivered as part
  // of existing matching reservations.
  optional string fulfilled_count = 4 [json_name = "fulfilledCount"];

  // [Output Only] This field represents the future reservation before an
  // amendment was requested. If the amendment is declined, the Future
  // Reservation will be reverted to the last known good state. The last known
  // good state is not set when updating a future reservation whose Procurement
  // Status is DRAFTING.
  optional FutureReservationStatusLastKnownGoodState last_known_good_state = 5
      [json_name = "lastKnownGoodState"];

  // Time when Future Reservation would become LOCKED, after which no
  // modifications to Future Reservation will be allowed. Applicable only after
  // the Future Reservation is in the APPROVED state. The lock_time is an
  // RFC3339 string. The procurement_status will transition to PROCURING state
  // at this time.
  optional string lock_time = 6 [json_name = "lockTime"];

  // Current state of this Future Reservation
  // APPROVED: Future reservation is approved by GCP.
  // CANCELLED: Future reservation is cancelled by the customer.
  // COMMITTED: Future reservation is committed by the customer.
  // DECLINED: Future reservation is rejected by GCP.
  // DRAFTING: Related status for PlanningStatus.Draft. Transitions to
  // PENDING_APPROVAL upon user submitting FR.
  // FAILED: Future reservation failed. No additional reservations were
  // provided.
  // FAILED_PARTIALLY_FULFILLED: Future reservation is partially fulfilled.
  // Additional reservations were provided but did not reach total_count
  // reserved instance slots.
  // FULFILLED: Future reservation is fulfilled completely.
  // PENDING_AMENDMENT_APPROVAL: An Amendment to the Future Reservation has been
  // requested. If the Amendment is declined, the Future Reservation will be
  // restored to the last known good state.
  // PENDING_APPROVAL: Future reservation is pending approval by GCP.
  // PROCUREMENT_STATUS_UNSPECIFIED:
  // PROCURING: Future reservation is being procured by GCP. Beyond this point,
  // Future reservation is locked and no further modifications are allowed.
  // PROVISIONING: Future reservation capacity is being provisioned. This state
  // will be entered after start_time, while reservations are being created to
  // provide total_count reserved instance slots. This state will not persist
  // past start_time + 24h.
  optional string procurement_status = 7 [json_name = "procurementStatus"];

  optional FutureReservationStatusSpecificSKUProperties
      specific_sku_properties = 8 [json_name = "specificSkuProperties"];
}

// [Output Only] Represents the existing matching usage for the future
// reservation.
message FutureReservationStatusExistingMatchingUsageInfo {
  // Count to represent min(FR total_count,
  // matching_reserved_capacity+matching_unreserved_instances)
  optional string count = 1 [json_name = "count"];

  // Timestamp when the matching usage was calculated
  optional string timestamp = 2 [json_name = "timestamp"];
}

// The state that the future reservation will be reverted to should the
// amendment be declined.
message FutureReservationStatusLastKnownGoodState {
  // [Output Only] The description of the FutureReservation before an amendment
  // was requested.
  optional string description = 1 [json_name = "description"];

  // [Output Only] Represents the matching usage for the future reservation
  // before an amendment was requested.
  optional FutureReservationStatusExistingMatchingUsageInfo
      existing_matching_usage_info = 2
      [json_name = "existingMatchingUsageInfo"];

  optional FutureReservationStatusLastKnownGoodStateFutureReservationSpecs
      future_reservation_specs = 3 [json_name = "futureReservationSpecs"];

  // [Output Only] The lock time of the FutureReservation before an amendment
  // was requested.
  optional string lock_time = 4 [json_name = "lockTime"];

  // [Output Only] The name prefix of the Future Reservation before an amendment
  // was requested.
  optional string name_prefix = 5 [json_name = "namePrefix"];

  // [Output Only] The status of the last known good state for the Future
  // Reservation.
  // APPROVED: Future reservation is approved by GCP.
  // CANCELLED: Future reservation is cancelled by the customer.
  // COMMITTED: Future reservation is committed by the customer.
  // DECLINED: Future reservation is rejected by GCP.
  // DRAFTING: Related status for PlanningStatus.Draft. Transitions to
  // PENDING_APPROVAL upon user submitting FR.
  // FAILED: Future reservation failed. No additional reservations were
  // provided.
  // FAILED_PARTIALLY_FULFILLED: Future reservation is partially fulfilled.
  // Additional reservations were provided but did not reach total_count
  // reserved instance slots.
  // FULFILLED: Future reservation is fulfilled completely.
  // PENDING_AMENDMENT_APPROVAL: An Amendment to the Future Reservation has been
  // requested. If the Amendment is declined, the Future Reservation will be
  // restored to the last known good state.
  // PENDING_APPROVAL: Future reservation is pending approval by GCP.
  // PROCUREMENT_STATUS_UNSPECIFIED:
  // PROCURING: Future reservation is being procured by GCP. Beyond this point,
  // Future reservation is locked and no further modifications are allowed.
  // PROVISIONING: Future reservation capacity is being provisioned. This state
  // will be entered after start_time, while reservations are being created to
  // provide total_count reserved instance slots. This state will not persist
  // past start_time + 24h.
  optional string procurement_status = 6 [json_name = "procurementStatus"];
}

// The properties of the last known good state for the Future Reservation.
message FutureReservationStatusLastKnownGoodStateFutureReservationSpecs {
  // [Output Only] The previous share settings of the Future Reservation.
  optional ShareSettings share_settings = 1 [json_name = "shareSettings"];

  // [Output Only] The previous instance related properties of the Future
  // Reservation.
  optional FutureReservationSpecificSKUProperties specific_sku_properties = 2
      [json_name = "specificSkuProperties"];

  // [Output Only] The previous time window of the Future Reservation.
  optional FutureReservationTimeWindow time_window = 3
      [json_name = "timeWindow"];
}

// Properties to be set for the Future Reservation.
message FutureReservationStatusSpecificSKUProperties {
  // ID of the instance template used to populate the Future Reservation
  // properties.
  optional string source_instance_template_id = 1
      [json_name = "sourceInstanceTemplateId"];
}

message FutureReservationTimeWindow {
  optional Duration duration = 1 [json_name = "duration"];

  optional string end_time = 2 [json_name = "endTime"];

  // Start time of the Future Reservation. The start_time is an RFC3339 string.
  optional string start_time = 3 [json_name = "startTime"];
}

// Contains a list of future reservations.
message FutureReservationsAggregatedListResponse {
  optional string etag = 1 [json_name = "etag"];

  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 2 [json_name = "id"];

  // A list of Future reservation resources.
  map<string, FutureReservationsScopedList> items = 3 [json_name = "items"];

  // [Output Only] Type of resource. Always
  // compute#futureReservationsAggregatedListResponse for future resevation
  // aggregated list response.
  optional string kind = 4 [json_name = "kind"];

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 5 [json_name = "nextPageToken"];

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 6 [json_name = "selfLink"];

  // [Output Only] Unreachable resources.
  repeated string unreachables = 7 [json_name = "unreachables"];

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1 [json_name = "code"];

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1 [json_name = "key"];

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2 [json_name = "value"];
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2 [json_name = "data"];

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3 [json_name = "message"];
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 8 [json_name = "warning"];
}

message FutureReservationsListResponse {
  optional string etag = 1 [json_name = "etag"];

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 2 [json_name = "id"];

  // [Output Only] A list of future reservation resources.
  repeated FutureReservation items = 3 [json_name = "items"];

  // [Output Only] Type of resource.Always
  // compute#FutureReservationsListResponse for lists of reservations
  optional string kind = 4 [json_name = "kind"];

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 5 [json_name = "nextPageToken"];

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 6 [json_name = "selfLink"];

  // [Output Only] Unreachable resources.
  repeated string unreachables = 7 [json_name = "unreachables"];

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1 [json_name = "code"];

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1 [json_name = "key"];

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2 [json_name = "value"];
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2 [json_name = "data"];

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3 [json_name = "message"];
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 8 [json_name = "warning"];
}

message FutureReservationsScopedList {
  // A list of future reservations contained in this scope.
  repeated FutureReservation future_reservations = 1
      [json_name = "futureReservations"];

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1 [json_name = "code"];

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1 [json_name = "key"];

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2 [json_name = "value"];
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2 [json_name = "data"];

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3 [json_name = "message"];
  }

  // Informational warning which replaces the list of future reservations when
  // the list is empty.
  optional Warning warning = 2 [json_name = "warning"];
}
