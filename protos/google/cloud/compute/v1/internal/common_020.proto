// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/compute_public_google_rest_v1.json
// revision: 20231003

syntax = "proto3";

package google.cloud.cpp.compute.v1;

message CustomerEncryptionKey {
  // The name of the encryption key that is stored in Google Cloud KMS. For
  // example: "kmsKeyName": "projects/kms_project_id/locations/region/keyRings/
  // key_region/cryptoKeys/key The fully-qualifed key name may be returned for
  // resource GET requests. For example: "kmsKeyName":
  // "projects/kms_project_id/locations/region/keyRings/
  // key_region/cryptoKeys/key /cryptoKeyVersions/1
  optional string kms_key_name = 1 [json_name = "kmsKeyName"];

  // The service account being used for the encryption request for the given KMS
  // key. If absent, the Compute Engine default service account is used. For
  // example: "kmsKeyServiceAccount": "name@project_id.iam.gserviceaccount.com/
  optional string kms_key_service_account = 2
      [json_name = "kmsKeyServiceAccount"];

  // Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648
  // base64 to either encrypt or decrypt this resource. You can provide either
  // the rawKey or the rsaEncryptedKey. For example: "rawKey":
  // "SGVsbG8gZnJvbSBHb29nbGUgQ2xvdWQgUGxhdGZvcm0="
  optional string raw_key = 3 [json_name = "rawKey"];

  // Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit
  // customer-supplied encryption key to either encrypt or decrypt this
  // resource. You can provide either the rawKey or the rsaEncryptedKey. For
  // example: "rsaEncryptedKey":
  // "ieCx/NcW06PcT7Ep1X6LUTc/hLvUDYyzSZPPVCVPTVEohpeHASqC8uw5TzyO9U+Fka9JFH
  // z0mBibXUInrC/jEk014kCK/NPjYgEMOyssZ4ZINPKxlUh2zn1bV+MCaTICrdmuSBTWlUUiFoD
  // D6PYznLwh8ZNdaheCeZ8ewEXgFQ8V+sDroLaN3Xs3MDTXQEMMoNUXMCZEIpg9Vtp9x2oe=="
  // The key must meet the following requirements before you can provide it to
  // Compute Engine: 1. The key is wrapped using a RSA public key certificate
  // provided by Google. 2. After being wrapped, the key must be encoded in RFC
  // 4648 base64 encoding. Gets the RSA public key certificate provided by
  // Google at:
  // https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem
  optional string rsa_encrypted_key = 4 [json_name = "rsaEncryptedKey"];

  // [Output only] The RFC 4648 base64 encoded SHA-256 hash of the
  // customer-supplied encryption key that protects this resource.
  optional string sha256 = 5 [json_name = "sha256"];
}
