// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/compute_public_google_rest_v1.json
// revision: 20250511

syntax = "proto3";

package google.cloud.cpp.compute.v1;

import "google/cloud/compute/v1/internal/common_048.proto";

// Represents a reservation block resource.
message ReservationBlock {
  // [Output Only] The number of resources that are allocated in this
  // reservation block.
  optional int32 count = 1 [json_name = "count"];

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 2 [json_name = "creationTimestamp"];

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 3 [json_name = "id"];

  // [Output Only] The number of instances that are currently in use on this
  // reservation block.
  optional int32 in_use_count = 4 [json_name = "inUseCount"];

  // [Output Only] Type of the resource. Always compute#reservationBlock for
  // reservation blocks.
  optional string kind = 5 [json_name = "kind"];

  // [Output Only] The name of this reservation block generated by Google
  // Compute Engine. The name must be 1-63 characters long, and comply with
  // RFC1035 @pattern [a-z](?:[-a-z0-9]{0,61}[a-z0-9])?
  optional string name = 6 [json_name = "name"];

  // [Output Only] The physical topology of the reservation block.
  optional ReservationBlockPhysicalTopology physical_topology = 7
      [json_name = "physicalTopology"];

  // [Output Only] Maintenance information for this reservation block.
  optional GroupMaintenanceInfo reservation_maintenance = 8
      [json_name = "reservationMaintenance"];

  // [Output Only] Server-defined fully-qualified URL for this resource.
  optional string self_link = 9 [json_name = "selfLink"];

  // [Output Only] Server-defined URL for this resource with the resource id.
  optional string self_link_with_id = 10 [json_name = "selfLinkWithId"];

  // [Output Only] Status of the reservation block.
  // CREATING: Resources are being allocated for the reservation block.
  // DELETING: Reservation block is currently being deleted.
  // INVALID:
  // READY: Reservation block has allocated all its resources.
  optional string status = 11 [json_name = "status"];

  // [Output Only] Zone in which the reservation block resides.
  optional string zone = 12 [json_name = "zone"];
}

message ReservationBlockPhysicalTopology {
  // The hash of the capacity block within the cluster.
  optional string block = 1 [json_name = "block"];

  // The cluster name of the reservation block.
  optional string cluster = 2 [json_name = "cluster"];
}

message ReservationBlocksGetResponse {
  optional ReservationBlock resource = 1 [json_name = "resource"];
}

// A list of reservation blocks under a single reservation.
message ReservationBlocksListResponse {
  // Unique identifier for the resource; defined by the server.
  optional string id = 1 [json_name = "id"];

  // A list of reservation block resources.
  repeated ReservationBlock items = 2 [json_name = "items"];

  // Type of the resource. Always compute#reservationBlock for a list of
  // reservation blocks.
  optional string kind = 3 [json_name = "kind"];

  // This token allows you to get the next page of results for list requests. If
  // the number of results is larger than maxResults, use the nextPageToken as a
  // value for the query parameter pageToken in the next list request.
  // Subsequent list requests will have their own nextPageToken to continue
  // paging through the results.
  optional string next_page_token = 4 [json_name = "nextPageToken"];

  // Server-defined URL for this resource.
  optional string self_link = 5 [json_name = "selfLink"];

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // QUOTA_INFO_UNAVAILABLE: Quota information is not available to client
    // requests (e.g: regions.list).
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1 [json_name = "code"];

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1 [json_name = "key"];

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2 [json_name = "value"];
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2 [json_name = "data"];

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3 [json_name = "message"];
  }

  // Informational warning message.
  optional Warning warning = 6 [json_name = "warning"];
}

message ReservationsBlocksPerformMaintenanceRequest {
  // Specifies if all, running or unused hosts are in scope for this request.
  // ALL: Trigger maintenance for all hosts belonging to this reservation
  // irrespective of whether VMs are running on them or not.
  // MAINTENANCE_SCOPE_UNSPECIFIED: Internal only
  // RUNNING_VMS: Trigger maintenance only on the hosts belonging to this
  // reservation which have VMs running on them.
  // UNUSED_CAPACITY: Trigger maintenance only on the hosts belonging to this
  // reservation which do not have any VMs running on them. This is not allowed
  // for Standard ExR
  optional string maintenance_scope = 1 [json_name = "maintenanceScope"];
}
