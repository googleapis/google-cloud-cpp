// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/compute_public_google_rest_v1.json
// revision: 20250302

syntax = "proto3";

package google.cloud.cpp.compute.v1;

// Represents a Firewall Rule resource. Firewall rules allow or deny ingress
// traffic to, and egress traffic from your instances. For more information,
// read Firewall rules.
message Firewall {
  message AllowedItem {
    // The IP protocol to which this rule applies. The protocol type is required
    // when creating a firewall rule. This value can either be one of the
    // following well known protocol strings (tcp, udp, icmp, esp, ah, ipip,
    // sctp) or the IP protocol number.
    optional string ip_protocol = 1 [json_name = "IPProtocol"];

// Contains a list of firewalls.
message FirewallList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1 [json_name = "id"];

  // A list of Firewall resources.
  repeated Firewall items = 2 [json_name = "items"];

  // [Output Only] Type of resource. Always compute#firewallList for lists of
  // firewalls.
  optional string kind = 3 [json_name = "kind"];

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4 [json_name = "nextPageToken"];

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5 [json_name = "selfLink"];

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // QUOTA_INFO_UNAVAILABLE: Quota information is not available to client
    // requests (e.g: regions.list).
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1 [json_name = "code"];

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1 [json_name = "key"];

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2 [json_name = "value"];
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2 [json_name = "data"];

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3 [json_name = "message"];
  }

  // The list of ALLOW rules specified by this firewall. Each rule specifies a
  // protocol and port-range tuple that describes a permitted connection.
  repeated AllowedItem allowed = 1 [json_name = "allowed"];

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 2 [json_name = "creationTimestamp"];

  message DeniedItem {
    // The IP protocol to which this rule applies. The protocol type is required
    // when creating a firewall rule. This value can either be one of the
    // following well known protocol strings (tcp, udp, icmp, esp, ah, ipip,
    // sctp) or the IP protocol number.
    optional string ip_protocol = 1 [json_name = "IPProtocol"];

    // An optional list of ports to which this rule applies. This field is only
    // applicable for the UDP or TCP protocol. Each entry must be either an
    // integer or a range. If not specified, this rule applies to connections
    // through any port. Example inputs include: ["22"], ["80","443"], and
    // ["12345-12349"].
    repeated string ports = 2 [json_name = "ports"];
  }

  // The list of DENY rules specified by this firewall. Each rule specifies a
  // protocol and port-range tuple that describes a denied connection.
  repeated DeniedItem denied = 3 [json_name = "denied"];

  // An optional description of this resource. Provide this field when you
  // create the resource.
  optional string description = 4 [json_name = "description"];

  // If destination ranges are specified, the firewall rule applies only to
  // traffic that has destination IP address in these ranges. These ranges must
  // be expressed in CIDR format. Both IPv4 and IPv6 are supported.
  repeated string destination_ranges = 5 [json_name = "destinationRanges"];

  // Direction of traffic to which this firewall applies, either `INGRESS` or
  // `EGRESS`. The default is `INGRESS`. For `EGRESS` traffic, you cannot
  // specify the sourceTags fields.
  // EGRESS: Indicates that firewall should apply to outgoing traffic.
  // INGRESS: Indicates that firewall should apply to incoming traffic.
  optional string direction = 6 [json_name = "direction"];

  // Denotes whether the firewall rule is disabled. When set to true, the
  // firewall rule is not enforced and the network behaves as if it did not
  // exist. If this is unspecified, the firewall rule will be enabled.
  optional bool disabled = 7 [json_name = "disabled"];

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 8 [json_name = "id"];

  // [Output Only] Type of the resource. Always compute#firewall for firewall
  // rules.
  optional string kind = 9 [json_name = "kind"];

  // This field denotes the logging options for a particular firewall rule. If
  // logging is enabled, logs will be exported to Cloud Logging.
  optional FirewallLogConfig log_config = 10 [json_name = "logConfig"];

  // Name of the resource; provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a
  // lowercase letter, and all following characters (except for the last
  // character) must be a dash, lowercase letter, or digit. The last character
  // must be a lowercase letter or digit.
  optional string name = 11 [json_name = "name"];

  // URL of the network resource for this firewall rule. If not specified when
  // creating a firewall rule, the default network is used:
  // global/networks/default If you choose to specify this field, you can
  // specify the network as a full or partial URL. For example, the following
  // are all valid URLs: -
  // https://www.googleapis.com/compute/v1/projects/myproject/global/networks/my-network
  // - projects/myproject/global/networks/my-network - global/networks/default
  optional string network = 12 [json_name = "network"];

  // Priority for this rule. This is an integer between `0` and `65535`, both
  // inclusive. The default value is `1000`. Relative priorities determine which
  // rule takes effect if multiple rules apply. Lower values indicate higher
  // priority. For example, a rule with priority `0` has higher precedence than
  // a rule with priority `1`. DENY rules take precedence over ALLOW rules if
  // they have equal priority. Note that VPC networks have implied rules with a
  // priority of `65535`. To avoid conflicts with the implied rules, use a
  // priority number less than `65535`.
  optional int32 priority = 13 [json_name = "priority"];

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 14 [json_name = "selfLink"];

  // If source ranges are specified, the firewall rule applies only to traffic
  // that has a source IP address in these ranges. These ranges must be
  // expressed in CIDR format. One or both of sourceRanges and sourceTags may be
  // set. If both fields are set, the rule applies to traffic that has a source
  // IP address within sourceRanges OR a source IP from a resource with a
  // matching tag listed in the sourceTags field. The connection does not need
  // to match both fields for the rule to apply. Both IPv4 and IPv6 are
  // supported.
  repeated string source_ranges = 15 [json_name = "sourceRanges"];

  // If source service accounts are specified, the firewall rules apply only to
  // traffic originating from an instance with a service account in this list.
  // Source service accounts cannot be used to control traffic to an instance's
  // external IP address because service accounts are associated with an
  // instance, not an IP address. sourceRanges can be set at the same time as
  // sourceServiceAccounts. If both are set, the firewall applies to traffic
  // that has a source IP address within the sourceRanges OR a source IP that
  // belongs to an instance with service account listed in sourceServiceAccount.
  // The connection does not need to match both fields for the firewall to
  // apply. sourceServiceAccounts cannot be used at the same time as sourceTags
  // or targetTags.
  repeated string source_service_accounts = 16
      [json_name = "sourceServiceAccounts"];

  // If source tags are specified, the firewall rule applies only to traffic
  // with source IPs that match the primary network interfaces of VM instances
  // that have the tag and are in the same VPC network. Source tags cannot be
  // used to control traffic to an instance's external IP address, it only
  // applies to traffic between instances in the same virtual network. Because
  // tags are associated with instances, not IP addresses. One or both of
  // sourceRanges and sourceTags may be set. If both fields are set, the
  // firewall applies to traffic that has a source IP address within
  // sourceRanges OR a source IP from a resource with a matching tag listed in
  // the sourceTags field. The connection does not need to match both fields for
  // the firewall to apply.
  repeated string source_tags = 17 [json_name = "sourceTags"];

  // A list of service accounts indicating sets of instances located in the
  // network that may make network connections as specified in allowed[].
  // targetServiceAccounts cannot be used at the same time as targetTags or
  // sourceTags. If neither targetServiceAccounts nor targetTags are specified,
  // the firewall rule applies to all instances on the specified network.
  repeated string target_service_accounts = 18
      [json_name = "targetServiceAccounts"];

  // A list of tags that controls which instances the firewall rule applies to.
  // If targetTags are specified, then the firewall rule applies only to
  // instances in the VPC network that have one of those tags. If no targetTags
  // are specified, the firewall rule applies to all instances on the specified
  // network.
  repeated string target_tags = 19 [json_name = "targetTags"];
}

// The available logging options for a firewall rule.
message FirewallLogConfig {
  // This field denotes whether to enable logging for a particular firewall
  // rule.
  optional bool enable = 1 [json_name = "enable"];

  // This field can only be specified for a particular firewall rule if logging
  // is enabled for that rule. This field denotes whether to include or exclude
  // metadata for firewall logs.
  // EXCLUDE_ALL_METADATA:
  // INCLUDE_ALL_METADATA:
  optional string metadata = 2 [json_name = "metadata"];
}
