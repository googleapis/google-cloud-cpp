// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/compute_public_google_rest_v1.json
// revision: 20230920

syntax = "proto3";

package google.cloud.cpp.compute.v1;

import "google/cloud/compute/v1/internal/common_020.proto";
import "google/cloud/compute/v1/internal/common_022.proto";
import "google/cloud/compute/v1/internal/common_033.proto";
import "google/cloud/compute/v1/internal/common_047.proto";

// Represents an Image resource. You can use images to create boot disks for
// your VM instances. For more information, read Images.
message Image {
  // The architecture of the image. Valid values are ARM64 or X86_64.
  // ARCHITECTURE_UNSPECIFIED: Default value indicating Architecture is not set.
  // ARM64: Machines with architecture ARM64
  // X86_64: Machines with architecture X86_64
  optional string architecture = 1 [json_name = "architecture"];

  // Size of the image tar.gz archive stored in Google Cloud Storage (in bytes).
  optional string archive_size_bytes = 2 [json_name = "archiveSizeBytes"];

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 3 [json_name = "creationTimestamp"];

  // The deprecation status associated with this image.
  optional DeprecationStatus deprecated = 4 [json_name = "deprecated"];

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 5 [json_name = "description"];

  // Size of the image when restored onto a persistent disk (in GB).
  optional string disk_size_gb = 6 [json_name = "diskSizeGb"];

  // The name of the image family to which this image belongs. The image family
  // name can be from a publicly managed image family provided by Compute
  // Engine, or from a custom image family you create. For example,
  // centos-stream-9 is a publicly available image family. For more information,
  // see Image family best practices. When creating disks, you can specify an
  // image family instead of a specific image name. The image family always
  // returns its latest image that is not deprecated. The name of the image
  // family must comply with RFC1035.
  optional string family = 7 [json_name = "family"];

  // A list of features to enable on the guest operating system. Applicable only
  // for bootable images. To see a list of available options, see the
  // guestOSfeatures[].type parameter.
  repeated GuestOsFeature guest_os_features = 8 [json_name = "guestOsFeatures"];

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 9 [json_name = "id"];

  // Encrypts the image using a customer-supplied encryption key. After you
  // encrypt an image with a customer-supplied key, you must provide the same
  // key if you use the image later (e.g. to create a disk from the image).
  // Customer-supplied encryption keys do not protect access to metadata of the
  // disk. If you do not provide an encryption key when creating the image, then
  // the disk will be encrypted using an automatically generated key and you do
  // not need to provide a key to use the image later.
  optional CustomerEncryptionKey image_encryption_key = 10
      [json_name = "imageEncryptionKey"];

  // [Output Only] Type of the resource. Always compute#image for images.
  optional string kind = 11 [json_name = "kind"];

  // A fingerprint for the labels being applied to this image, which is
  // essentially a hash of the labels used for optimistic locking. The
  // fingerprint is initially generated by Compute Engine and changes after
  // every request to modify or update labels. You must always provide an
  // up-to-date fingerprint hash in order to update or change labels, otherwise
  // the request will fail with error 412 conditionNotMet. To see the latest
  // fingerprint, make a get() request to retrieve an image.
  optional string label_fingerprint = 12 [json_name = "labelFingerprint"];

  // Labels to apply to this image. These can be later modified by the setLabels
  // method.
  map<string, string> labels = 13 [json_name = "labels"];

  // Integer license codes indicating which licenses are attached to this image.
  repeated string license_codes = 14 [json_name = "licenseCodes"];

  // Any applicable license URI.
  repeated string licenses = 15 [json_name = "licenses"];

  // Name of the resource; provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 16 [json_name = "name"];

  message RawDisk {
    // The format used to encode and transmit the block device, which should be
    // TAR. This is just a container and transmission format and not a runtime
    // format. Provided by the client when the disk image is created.
    // TAR:
    optional string container_type = 1 [json_name = "containerType"];

    // [Deprecated] This field is deprecated. An optional SHA1 checksum of the
    // disk image before unpackaging provided by the client when the disk image
    // is created.
    optional string sha1_checksum = 2 [json_name = "sha1Checksum"];

    // The full Google Cloud Storage URL where the raw disk image archive is
    // stored. The following are valid formats for the URL: -
    // https://storage.googleapis.com/bucket_name/image_archive_name -
    // https://storage.googleapis.com/bucket_name/folder_name/
    // image_archive_name In order to create an image, you must provide the full
    // or partial URL of one of the following: - The rawDisk.source URL - The
    // sourceDisk URL - The sourceImage URL - The sourceSnapshot URL
    optional string source = 3 [json_name = "source"];
  }

  // The parameters of the raw disk image.
  optional RawDisk raw_disk = 17 [json_name = "rawDisk"];

  // [Output Only] Reserved for future use.
  optional bool satisfies_pzs = 18 [json_name = "satisfiesPzs"];

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 19 [json_name = "selfLink"];

  // Set the secure boot keys of shielded instance.
  optional InitialStateConfig shielded_instance_initial_state = 20
      [json_name = "shieldedInstanceInitialState"];

  // URL of the source disk used to create this image. For example, the
  // following are valid values: -
  // https://www.googleapis.com/compute/v1/projects/project/zones/zone
  // /disks/disk - projects/project/zones/zone/disks/disk -
  // zones/zone/disks/disk In order to create an image, you must provide the
  // full or partial URL of one of the following: - The rawDisk.source URL - The
  // sourceDisk URL - The sourceImage URL - The sourceSnapshot URL
  optional string source_disk = 21 [json_name = "sourceDisk"];

  // The customer-supplied encryption key of the source disk. Required if the
  // source disk is protected by a customer-supplied encryption key.
  optional CustomerEncryptionKey source_disk_encryption_key = 22
      [json_name = "sourceDiskEncryptionKey"];

  // [Output Only] The ID value of the disk used to create this image. This
  // value may be used to determine whether the image was taken from the current
  // or a previous instance of a given disk name.
  optional string source_disk_id = 23 [json_name = "sourceDiskId"];

  // URL of the source image used to create this image. The following are valid
  // formats for the URL: -
  // https://www.googleapis.com/compute/v1/projects/project_id/global/
  // images/image_name - projects/project_id/global/images/image_name In order
  // to create an image, you must provide the full or partial URL of one of the
  // following: - The rawDisk.source URL - The sourceDisk URL - The sourceImage
  // URL - The sourceSnapshot URL
  optional string source_image = 24 [json_name = "sourceImage"];

  // The customer-supplied encryption key of the source image. Required if the
  // source image is protected by a customer-supplied encryption key.
  optional CustomerEncryptionKey source_image_encryption_key = 25
      [json_name = "sourceImageEncryptionKey"];

  // [Output Only] The ID value of the image used to create this image. This
  // value may be used to determine whether the image was taken from the current
  // or a previous instance of a given image name.
  optional string source_image_id = 26 [json_name = "sourceImageId"];

  // URL of the source snapshot used to create this image. The following are
  // valid formats for the URL: -
  // https://www.googleapis.com/compute/v1/projects/project_id/global/
  // snapshots/snapshot_name -
  // projects/project_id/global/snapshots/snapshot_name In order to create an
  // image, you must provide the full or partial URL of one of the following: -
  // The rawDisk.source URL - The sourceDisk URL - The sourceImage URL - The
  // sourceSnapshot URL
  optional string source_snapshot = 27 [json_name = "sourceSnapshot"];

  // The customer-supplied encryption key of the source snapshot. Required if
  // the source snapshot is protected by a customer-supplied encryption key.
  optional CustomerEncryptionKey source_snapshot_encryption_key = 28
      [json_name = "sourceSnapshotEncryptionKey"];

  // [Output Only] The ID value of the snapshot used to create this image. This
  // value may be used to determine whether the snapshot was taken from the
  // current or a previous instance of a given snapshot name.
  optional string source_snapshot_id = 29 [json_name = "sourceSnapshotId"];

  // The type of the image used to create this disk. The default and only valid
  // value is RAW.
  // RAW:
  optional string source_type = 30 [json_name = "sourceType"];

  // [Output Only] The status of the image. An image can be used to create other
  // resources, such as instances, only after the image has been successfully
  // created and the status is set to READY. Possible values are FAILED,
  // PENDING, or READY.
  // DELETING: Image is deleting.
  // FAILED: Image creation failed due to an error.
  // PENDING: Image hasn't been created as yet.
  // READY: Image has been successfully created.
  optional string status = 31 [json_name = "status"];

  // Cloud Storage bucket storage location of the image (regional or
  // multi-regional).
  repeated string storage_locations = 32 [json_name = "storageLocations"];
}
