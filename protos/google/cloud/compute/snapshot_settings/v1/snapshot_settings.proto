// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/compute_public_google_rest_v1.json
// revision: 20240220

syntax = "proto3";

package google.cloud.cpp.compute.snapshot_settings.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/cloud/compute/v1/internal/common_016.proto";
import "google/cloud/compute/v1/internal/common_114.proto";
import "google/cloud/extended_operations.proto";

// Service for the snapshotSettings resource.
// https://cloud.google.com/compute/docs/reference/rest/v1/snapshotSettings
service SnapshotSettings {
  option (google.api.default_host) = "compute.googleapis.com";
  option (google.api.oauth_scopes) =
      "https://www.googleapis.com/auth/cloud-platform,"
      "https://www.googleapis.com/auth/compute,"
      "https://www.googleapis.com/auth/compute.readonly";

  // Get snapshot settings.
  // https://cloud.google.com/compute/docs/reference/rest/v1/snapshotSettings/get
  rpc GetSnapshotSettings(GetSnapshotSettingsRequest)
      returns (google.cloud.cpp.compute.v1.SnapshotSettings) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/snapshotSettings"
    };
    option (google.api.method_signature) = "project";
  }

  // Patch snapshot settings.
  // https://cloud.google.com/compute/docs/reference/rest/v1/snapshotSettings/patch
  rpc PatchSnapshotSettings(PatchSnapshotSettingsRequest)
      returns (google.cloud.cpp.compute.v1.Operation) {
    option (google.api.http) = {
      patch: "/compute/v1/projects/{project}/global/snapshotSettings"
      body: "snapshot_settings_resource"
    };
    option (google.api.method_signature) =
        "project,update_mask,snapshot_settings_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }
}

// Request message for GetSnapshotSettings.
message GetSnapshotSettingsRequest {
  // Project ID for this request.
  string project = 1
      [(google.api.field_behavior) = REQUIRED, json_name = "project"];
}

// Request message for PatchSnapshotSettings.
message PatchSnapshotSettingsRequest {
  // Project ID for this request.
  string project = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project",
    json_name = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so
  // that if you must retry your request, the server will know to ignore the
  // request if it has already been completed. For example, consider a situation
  // where you make an initial request and the request times out. If you make
  // the request again with the same request ID, the server can check if
  // original operation with the same request ID was received, and if so, will
  // ignore the second request. This prevents clients from accidentally creating
  // duplicate commitments. The request ID must be a valid UUID with the
  // exception that zero UUID is not supported (
  // 00000000-0000-0000-0000-000000000000).
  optional string request_id = 2 [json_name = "requestId"];

  // The SnapshotSettings for this request.
  optional google.cloud.cpp.compute.v1.SnapshotSettings
      snapshot_settings_resource = 3 [json_name = "__json_request_body"];

  // update_mask indicates fields to be updated as part of this request.
  optional string update_mask = 4 [json_name = "updateMask"];
}
