// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/compute_public_google_rest_v1.json
// revision: 20231110

syntax = "proto3";

package google.cloud.cpp.compute.region_url_maps.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/cloud/compute/v1/internal/common_016.proto";
import "google/cloud/compute/v1/internal/common_019.proto";
import "google/cloud/compute/v1/internal/common_100.proto";
import "google/cloud/extended_operations.proto";

// Service for the regionUrlMaps resource.
// https://cloud.google.com/compute/docs/reference/rest/v1/regionUrlMaps
service RegionUrlMaps {
  option (google.api.default_host) = "compute.googleapis.com";
  option (google.api.oauth_scopes) =
      "https://www.googleapis.com/auth/cloud-platform,"
      "https://www.googleapis.com/auth/compute,"
      "https://www.googleapis.com/auth/compute.readonly";

  // Deletes the specified UrlMap resource.
  // https://cloud.google.com/compute/docs/reference/rest/v1/regionUrlMaps/delete
  rpc DeleteUrlMap(DeleteUrlMapRequest)
      returns (google.cloud.cpp.compute.v1.Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/urlMaps/{url_map}"
    };
    option (google.api.method_signature) = "project,region,url_map";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified UrlMap resource.
  // https://cloud.google.com/compute/docs/reference/rest/v1/regionUrlMaps/get
  rpc GetUrlMap(GetUrlMapRequest) returns (google.cloud.cpp.compute.v1.UrlMap) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/urlMaps/{url_map}"
    };
    option (google.api.method_signature) = "project,region,url_map";
  }

  // Creates a UrlMap resource in the specified project using the data included
  // in the request.
  // https://cloud.google.com/compute/docs/reference/rest/v1/regionUrlMaps/insert
  rpc InsertUrlMap(InsertUrlMapRequest)
      returns (google.cloud.cpp.compute.v1.Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/regions/{region}/urlMaps"
      body: "url_map_resource"
    };
    option (google.api.method_signature) = "project,region,url_map_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves the list of UrlMap resources available to the specified project
  // in the specified region.
  // https://cloud.google.com/compute/docs/reference/rest/v1/regionUrlMaps/list
  rpc ListRegionUrlMaps(ListRegionUrlMapsRequest)
      returns (google.cloud.cpp.compute.v1.UrlMapList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/urlMaps"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Patches the specified UrlMap resource with the data included in the
  // request. This method supports PATCH semantics and uses JSON merge patch
  // format and processing rules.
  // https://cloud.google.com/compute/docs/reference/rest/v1/regionUrlMaps/patch
  rpc PatchUrlMap(PatchUrlMapRequest)
      returns (google.cloud.cpp.compute.v1.Operation) {
    option (google.api.http) = {
      patch: "/compute/v1/projects/{project}/regions/{region}/urlMaps/{url_map}"
      body: "url_map_resource"
    };
    option (google.api.method_signature) =
        "project,region,url_map,url_map_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Updates the specified UrlMap resource with the data included in the
  // request.
  // https://cloud.google.com/compute/docs/reference/rest/v1/regionUrlMaps/update
  rpc UpdateUrlMap(UpdateUrlMapRequest)
      returns (google.cloud.cpp.compute.v1.Operation) {
    option (google.api.http) = {
      put: "/compute/v1/projects/{project}/regions/{region}/urlMaps/{url_map}"
      body: "url_map_resource"
    };
    option (google.api.method_signature) =
        "project,region,url_map,url_map_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Runs static validation for the UrlMap. In particular, the tests of the
  // provided UrlMap will be run. Calling this method does NOT create the
  // UrlMap.
  // https://cloud.google.com/compute/docs/reference/rest/v1/regionUrlMaps/validate
  rpc Validate(ValidateRequest)
      returns (google.cloud.cpp.compute.v1.UrlMapsValidateResponse) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/regions/{region}/urlMaps/{url_map}/validate"
      body: "region_url_maps_validate_request_resource"
    };
    option (google.api.method_signature) =
        "project,region,url_map,region_url_maps_validate_request_resource";
  }
}

// Request message for DeleteUrlMap.
message DeleteUrlMapRequest {
  // Project ID for this request.
  string project = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project",
    json_name = "project"
  ];

  // Name of the region scoping this request.
  string region = 2 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region",
    json_name = "region"
  ];

  // begin_interface: MixerMutationRequestBuilder Request ID to support
  // idempotency.
  optional string request_id = 3 [json_name = "requestId"];

  // Name of the UrlMap resource to delete.
  string url_map = 4
      [(google.api.field_behavior) = REQUIRED, json_name = "urlMap"];
}

// Request message for GetUrlMap.
message GetUrlMapRequest {
  // Project ID for this request.
  string project = 1
      [(google.api.field_behavior) = REQUIRED, json_name = "project"];

  // Name of the region scoping this request.
  string region = 2
      [(google.api.field_behavior) = REQUIRED, json_name = "region"];

  // Name of the UrlMap resource to return.
  string url_map = 3
      [(google.api.field_behavior) = REQUIRED, json_name = "urlMap"];
}

// Request message for InsertUrlMap.
message InsertUrlMapRequest {
  // Project ID for this request.
  string project = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project",
    json_name = "project"
  ];

  // Name of the region scoping this request.
  string region = 2 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region",
    json_name = "region"
  ];

  // begin_interface: MixerMutationRequestBuilder Request ID to support
  // idempotency.
  optional string request_id = 3 [json_name = "requestId"];

  // The UrlMap for this request.
  optional google.cloud.cpp.compute.v1.UrlMap url_map_resource = 4
      [json_name = "__json_request_body"];
}

// Request message for ListRegionUrlMaps.
message ListRegionUrlMapsRequest {
  // A filter expression that filters resources listed in the response. Most
  // Compute resources support two types of filter expressions: expressions that
  // support regular expressions and expressions that follow API improvement
  // proposal AIP-160. These two types of filter expressions cannot be mixed in
  // one request. If you want to use AIP-160, your expression must specify the
  // field name, an operator, and the value that you want to use for filtering.
  // The value must be a string, a number, or a boolean. The operator must be
  // either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are
  // filtering Compute Engine instances, you can exclude instances named
  // `example-instance` by specifying `name != example-instance`. The `:*`
  // comparison can be used to test whether a key has been defined. For example,
  // to find all objects with `owner` label use: ``` labels.owner:* ``` You can
  // also filter nested fields. For example, you could specify
  // `scheduling.automaticRestart = false` to include instances only if they are
  // not scheduled for automatic restarts. You can use filtering on nested
  // fields to filter based on resource labels. To filter on multiple
  // expressions, provide each separate expression within parentheses. For
  // example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel
  // Skylake") ``` By default, each expression is an `AND` expression. However,
  // you can include `AND` and `OR` expressions explicitly. For example: ```
  // (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
  // (scheduling.automaticRestart = true) ``` If you want to use a regular
  // expression, use the `eq` (equal) or `ne` (not equal) operator against a
  // single un-parenthesized expression with or without quotes or against
  // multiple parenthesized expressions. Examples: `fieldname eq unquoted
  // literal` `fieldname eq 'single quoted literal'` `fieldname eq "double
  // quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The
  // literal value is interpreted as a regular expression using Google RE2
  // library syntax. The literal value must match the entire field. For example,
  // to filter for instances that do not end with name "instance", you would use
  // `name ne .*instance`. You cannot combine constraints on multiple fields
  // using regular expressions.
  optional string filter = 1 [json_name = "filter"];

  // The maximum number of results per page that should be returned. If the
  // number of available results is larger than `maxResults`, Compute Engine
  // returns a `nextPageToken` that can be used to get the next page of results
  // in subsequent list requests. Acceptable values are `0` to `500`, inclusive.
  // (Default: `500`)
  optional uint32 max_results = 2 [json_name = "maxResults"];

  // Sorts list results by a certain order. By default, results are returned in
  // alphanumerical order based on the resource name. You can also sort results
  // in descending order based on the creation timestamp using
  // `orderBy="creationTimestamp desc"`. This sorts results based on the
  // `creationTimestamp` field in reverse chronological order (newest result
  // first). Use this to sort resources like operations so that the newest
  // operation is returned first. Currently, only sorting by `name` or
  // `creationTimestamp desc` is supported.
  optional string order_by = 3 [json_name = "orderBy"];

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken`
  // returned by a previous list request to get the next page of results.
  optional string page_token = 4 [json_name = "pageToken"];

  // Project ID for this request.
  string project = 5
      [(google.api.field_behavior) = REQUIRED, json_name = "project"];

  // Name of the region scoping this request.
  string region = 6
      [(google.api.field_behavior) = REQUIRED, json_name = "region"];

  // Opt-in for partial success behavior which provides partial results in case
  // of failure. The default value is false.
  optional bool return_partial_success = 7 [json_name = "returnPartialSuccess"];
}

// Request message for PatchUrlMap.
message PatchUrlMapRequest {
  // Project ID for this request.
  string project = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project",
    json_name = "project"
  ];

  // Name of the region scoping this request.
  string region = 2 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region",
    json_name = "region"
  ];

  // begin_interface: MixerMutationRequestBuilder Request ID to support
  // idempotency.
  optional string request_id = 3 [json_name = "requestId"];

  // Name of the UrlMap resource to patch.
  string url_map = 4
      [(google.api.field_behavior) = REQUIRED, json_name = "urlMap"];

  // The UrlMap for this request.
  optional google.cloud.cpp.compute.v1.UrlMap url_map_resource = 5
      [json_name = "__json_request_body"];
}

// Request message for UpdateUrlMap.
message UpdateUrlMapRequest {
  // Project ID for this request.
  string project = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project",
    json_name = "project"
  ];

  // Name of the region scoping this request.
  string region = 2 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region",
    json_name = "region"
  ];

  // begin_interface: MixerMutationRequestBuilder Request ID to support
  // idempotency.
  optional string request_id = 3 [json_name = "requestId"];

  // Name of the UrlMap resource to update.
  string url_map = 4
      [(google.api.field_behavior) = REQUIRED, json_name = "urlMap"];

  // The UrlMap for this request.
  optional google.cloud.cpp.compute.v1.UrlMap url_map_resource = 5
      [json_name = "__json_request_body"];
}

// Request message for Validate.
message ValidateRequest {
  // Project ID for this request.
  string project = 1
      [(google.api.field_behavior) = REQUIRED, json_name = "project"];

  // Name of the region scoping this request.
  string region = 2
      [(google.api.field_behavior) = REQUIRED, json_name = "region"];

  // The RegionUrlMapsValidateRequest for this request.
  optional google.cloud.cpp.compute.v1.RegionUrlMapsValidateRequest
      region_url_maps_validate_request_resource = 3
      [json_name = "__json_request_body"];

  // Name of the UrlMap resource to be validated as.
  string url_map = 4
      [(google.api.field_behavior) = REQUIRED, json_name = "urlMap"];
}
