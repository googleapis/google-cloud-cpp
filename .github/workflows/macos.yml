name: macOS-Builds

on:
  workflow_call:
    inputs:
      checkout-ref:
        required: true
        description: "The ref we want to compile"
        type: string

permissions:
  contents: read

jobs:
  bazel:
    name: bazel / ${{ matrix.os }} / ${{ matrix.shard }}
    runs-on: ${{ matrix.os }}-xl
    permissions:
      contents: 'read'
      id-token: 'write'
    strategy:
      # Continue other builds even if one fails
      fail-fast: false
      matrix:
        os: [ macos-12 ]
        shard: [ 'Core', 'Compute', 'Larger Libraries', 'Other' ]
        include:
        - shard: Core
          targets:
          - //google/cloud:all
          - //google/cloud/bigtable/...
          - //google/cloud/pubsub/...
          - //google/cloud/spanner/...
          - //google/cloud/storage/...
          # Include the top-level examples because they require the libs anyway.
          - //examples/...
        - shard: Compute
          targets:
          - //google/cloud/compute/...
        - shard: Larger Libraries
          targets:
          # I just picked the libraries with 5 or more clients.
          - //google/cloud/aiplatform/...
          - //google/cloud/sql/...
          - //google/cloud/appengine/...
          - //google/cloud/monitoring/...
          - //google/cloud/retail/...
          - //google/cloud/talent/...
          - //google/cloud/dataproc/...
          - //google/cloud/contentwarehouse/...
        - shard: Other
          targets:
          - //...
          - -//google/cloud:all
          - -//google/cloud/bigtable/...
          - -//google/cloud/pubsub/...
          - -//google/cloud/spanner/...
          - -//google/cloud/storage/...
          - -//examples/...
          - -//google/cloud/compute/...
          - -//google/cloud/aiplatform/...
          - -//google/cloud/sql/...
          - -//google/cloud/appengine/...
          - -//google/cloud/monitoring/...
          - -//google/cloud/retail/...
          - -//google/cloud/talent/...
          - -//google/cloud/dataproc/...
          - -//google/cloud/contentwarehouse/...
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ inputs.checkout-ref }}
    - id: auth
      uses: google-github-actions/auth@v1
      with:
        create_credentials_file: true
        credentials_json: ${{ secrets.BUILD_CACHE_KEY }}
    - run: brew install bash
    - run: |
        /usr/local/bin/bash ci/gha/builds/macos-bazel.sh ${{ join(matrix.targets, ' ') }}
    env:
      USE_BAZEL_VERSION: 6.2.1
      BAZEL_REMOTE_CACHE: https://storage.googleapis.com/cloud-cpp-gha-cache/bazel-cache/${{ matrix.os }}

  cmake:
    name: bazel / ${{ matrix.os }} / ${{ matrix.shard }}
    runs-on: ${{ matrix.os }}-xl
    permissions:
      contents: 'read'
      id-token: 'write'
    strategy:
      # Continue other builds even if one fails
      fail-fast: false
      matrix:
        os: [ macos-12 ]
        shard: [ 'Core', 'Compute', 'Larger Libraries', 'Other' ]
        include:
        - shard: Core
          features:
          - bigtable
          - pubsub
          - spanner
          - storage
        - shard: Compute
          features:
          - compute
        - shard: Larger Libraries
          features:
          # I just picked the libraries with 5 or more clients.
          - aiplatform
          - sql
          - appengine
          - monitoring
          - retail
          - talent
          - dataproc
          - contentwarehouse
        - shard: Other
          features:
          - __ga_libraries__
          - __experimental_libraries__
          - -bigtable
          - -pubsub
          - -spanner
          - -storage
          - -compute
          - -aiplatform
          - -sql
          - -appengine
          - -monitoring
          - -retail
          - -talent
          - -dataproc
          - -contentwarehouse
          # Disabled on macOS because GID_MAX is (1) a system macro, (2) not
          # protected with Protobuf v21
          - -storagetransfer
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ inputs.checkout-ref }}
    - id: auth
      uses: google-github-actions/auth@v1
      with:
        create_credentials_file: true
        credentials_json: ${{ secrets.BUILD_CACHE_KEY }}
    - uses: google-github-actions/setup-gcloud@v1
    - name: vcpkg-version
      id: vcpkg-version
      run: |
        echo "version=$(cat ci/etc/vcpkg-version.txt)" >> "${GITHUB_OUTPUT}"
      shell: bash
    - run: brew install bash ninja
    - name: download-sccache
      working-directory: "${{runner.temp}}"
      run: |
        curl -fsSL https://github.com/mozilla/sccache/releases/download/v0.5.4/sccache-v0.5.4-x86_64-apple-darwin.tar.gz | \
          tar -zxf - --strip-components=1 && \
        chmod +x sccache && \
        mv sccache /Users/runner/.cargo/bin/sccache
    - name: vcpkg-download
      working-directory: "${{runner.temp}}"
      run: |
        mkdir -p vcpkg
        curl -fsSL "https://github.com/microsoft/vcpkg/archive/${{ steps.vcpkg-version.outputs.version }}.tar.gz" |
            tar -C vcpkg --strip-components=1 -zxf -
        vcpkg/bootstrap-vcpkg.sh -disableMetrics
    - run: |
        env VCPKG_ROOT="${{ runner.temp }}/vcpkg" /usr/local/bin/bash ci/gha/builds/macos-cmake.sh ${{ join(matrix.features, ',') }}
    env:
      USE_BAZEL_VERSION: 6.2.1
      BAZEL_REMOTE_CACHE: https://storage.googleapis.com/cloud-cpp-gha-cache/bazel-cache/${{ matrix.os }}
      SCCACHE_GCS_BUCKET: cloud-cpp-gha-cache
      SCCACHE_GCS_KEY_PREFIX: sccache/${{ matrix.os }}
      SCCACHE_GCS_RW_MODE: READ_WRITE
      SCCACHE_IGNORE_SERVER_IO_ERROR: 1
      VCPKG_BINARY_SOURCES: x-gcs,gs://cloud-cpp-gha-cache/vcpkg-cache/${{ matrix.os }},readwrite
