name: macOS-Builds

on:
  workflow_call:
    inputs:
      checkout-ref:
        required: true
        description: "The ref we want to compile"
        type: string

permissions:
  contents: read

jobs:
  bazel:
    name: bazel + ${{ matrix.os }} + ${{ matrix.shard }}
    runs-on: ${{ matrix.os }}-xl
    permissions:
      contents: 'read'
      id-token: 'write'
    strategy:
      # Continue other builds even if one fails
      fail-fast: false
      matrix:
        os: [ macos-12 ]
        shard: [ 'Core', 'Compute', 'Larger Libraries', 'Other' ]
        include:
        - shard: Core
          targets:
          - //google/cloud:all
          # - //generator/...  # Does not build on macOS
          # - //docfx/...      # Does not build on macOS
          - +//google/cloud/bigtable/...
          - +//google/cloud/pubsub/...
          - +//google/cloud/spanner/...
          - +//google/cloud/storage/...
          # Include the top-level examples because they require the libs anyway.
          - +//examples/...
        - shard: Compute
          targets:
          - //google/cloud/compute/...
        - shard: Larger Libraries
          targets:
          # Run this:
          #
          # git grep -l 'class.*Client' 'google/cloud/**_client.h' |
          #    egrep -v "(bigtable/|internal/|pubsub/|spanner/|storage/)" |
          #    cut -f -3 -d/| sort | uniq -c | sort -n |
          #    awk '{ s += $1; print s, $0}'
          #
          # and pick the approximate midpoint
          - //google/cloud/servicecontrol/...
          - +//google/cloud/support/...
          - +//google/cloud/video/...
          - +//google/cloud/datacatalog/...
          - +//google/cloud/iam/...
          - +//google/cloud/kms/...
          - +//google/cloud/beyondcorp/...
          - +//google/cloud/contentwarehouse/...
          - +//google/cloud/dataproc/...
          - +//google/cloud/talent/...
          - +//google/cloud/retail/...
          - +//google/cloud/bigquery/...
          - +//google/cloud/appengine/...
          - +//google/cloud/monitoring/...
          - +//google/cloud/sql/...
          - +//google/cloud/dialogflow_cx/...
          - +//google/cloud/aiplatform/...
          - +//google/cloud/dialogflow_es/...
        - shard: Other
          targets:
          - //...
          # From Core
          - -//generator/...
          - -//docfx/...
          - -//google/cloud:all
          - -//google/cloud/bigtable/...
          - -//google/cloud/pubsub/...
          - -//google/cloud/spanner/...
          - -//google/cloud/storage/...
          - -//examples/...
          # From Compute
          - -//google/cloud/compute/...
          # From Large Libraries
          - -//google/cloud/servicecontrol/...
          - -//google/cloud/support/...
          - -//google/cloud/video/...
          - -//google/cloud/datacatalog/...
          - -//google/cloud/iam/...
          - -//google/cloud/kms/...
          - -//google/cloud/beyondcorp/...
          - -//google/cloud/contentwarehouse/...
          - -//google/cloud/dataproc/...
          - -//google/cloud/talent/...
          - -//google/cloud/retail/...
          - -//google/cloud/bigquery/...
          - -//google/cloud/appengine/...
          - -//google/cloud/monitoring/...
          - -//google/cloud/sql/...
          - -//google/cloud/dialogflow_cx/...
          - -//google/cloud/aiplatform/...
          - -//google/cloud/dialogflow_es/...
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ inputs.checkout-ref }}
    - uses: google-github-actions/auth@v1
      with:
        create_credentials_file: true
        credentials_json: ${{ secrets.BUILD_CACHE_KEY }}
    - name: Install bash >= 5.x
      run: brew install bash
    - name: Build google-cloud-cpp
      run: |
        /usr/local/bin/bash ci/gha/builds/macos-bazel.sh ${{ join(matrix.targets, ' ') }}
    env:
      USE_BAZEL_VERSION: 6.2.1
      BAZEL_REMOTE_CACHE: https://storage.googleapis.com/cloud-cpp-gha-cache/bazel-cache/${{ matrix.os }}

  cmake:
    name: cmake + ${{ matrix.os }} + ${{ matrix.shard }}
    runs-on: ${{ matrix.os }}-xl
    permissions:
      contents: 'read'
      id-token: 'write'
    strategy:
      # Continue other builds even if one fails
      fail-fast: false
      matrix:
        os: [ macos-12 ]
        shard: [ 'Core', 'Compute', 'Larger Libraries', 'Other' ]
        include:
        - shard: Core
          features:
          - bigtable
          - pubsub
          - spanner
          - storage
        - shard: Compute
          features:
          - compute
        - shard: Larger Libraries
          features:
          # See above
          - servicecontrol
          - support
          - video
          - datacatalog
          - iam
          - kms
          - beyondcorp
          - contentwarehouse
          - dataproc
          - talent
          - retail
          - bigquery
          - appengine
          - monitoring
          - sql
          - dialogflow_cx
          - aiplatform
          - dialogflow_es
        - shard: Other
          features:
          - __ga_libraries__
          - __experimental_libraries__
          - -bigtable
          - -pubsub
          - -spanner
          - -storage
          - -compute
          - -servicecontrol
          - -support
          - -video
          - -datacatalog
          - -iam
          - -kms
          - -beyondcorp
          - -contentwarehouse
          - -dataproc
          - -talent
          - -retail
          - -bigquery
          - -appengine
          - -monitoring
          - -sql
          - -dialogflow_cx
          - -aiplatform
          - -dialogflow_es
          # Disabled on macOS because GID_MAX is (1) a system macro, (2) not
          # protected with Protobuf v21
          - -storagetransfer
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ inputs.checkout-ref }}
    - uses: google-github-actions/auth@v1
      with:
        create_credentials_file: true
        credentials_json: ${{ secrets.BUILD_CACHE_KEY }}
    - uses: google-github-actions/setup-gcloud@v1
    - name: Get vcpkg version
      id: vcpkg-version
      shell: bash
      run: |
        echo "version=$(cat ci/etc/vcpkg-version.txt)" >> "${GITHUB_OUTPUT}"
    - name: Install bash >= 5.x and Ninja
      run: brew install bash ninja
    - name: Download and Install sccache
      working-directory: "${{runner.temp}}"
      run: |
        curl -fsSL https://github.com/mozilla/sccache/releases/download/v0.5.4/sccache-v0.5.4-x86_64-apple-darwin.tar.gz | \
          tar -zxf - --strip-components=1 && \
        chmod +x sccache && \
        mv sccache /Users/runner/.cargo/bin/sccache
    - name: Download and Install vcpkg
      working-directory: "${{runner.temp}}"
      run: |
        mkdir -p vcpkg
        curl -fsSL "https://github.com/microsoft/vcpkg/archive/${{ steps.vcpkg-version.outputs.version }}.tar.gz" |
            tar -C vcpkg --strip-components=1 -zxf -
        vcpkg/bootstrap-vcpkg.sh -disableMetrics
    - name: Build google-cloud-cpp
      run: |
        export VCPKG_ROOT="${{ runner.temp }}/vcpkg"
        /usr/local/bin/bash ci/gha/builds/macos-cmake.sh ${{ join(matrix.features, ',') }}
    env:
      USE_BAZEL_VERSION: 6.2.1
      BAZEL_REMOTE_CACHE: https://storage.googleapis.com/cloud-cpp-gha-cache/bazel-cache/${{ matrix.os }}
      SCCACHE_GCS_BUCKET: cloud-cpp-gha-cache
      SCCACHE_GCS_KEY_PREFIX: sccache/${{ matrix.os }}
      SCCACHE_GCS_RW_MODE: READ_WRITE
      SCCACHE_IGNORE_SERVER_IO_ERROR: 1
      VCPKG_BINARY_SOURCES: x-gcs,gs://cloud-cpp-gha-cache/vcpkg-cache/${{ matrix.os }},readwrite
