# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load(":docfx.bzl", "docfx_hdrs", "docfx_srcs")
load(":docfx_testing.bzl", "docfx_testing_hdrs", "docfx_testing_srcs")
load(":unit_tests.bzl", "unit_tests")

package(default_visibility = ["//visibility:private"])

licenses(["notice"])  # Apache 2.0

cc_library(
    name = "docfx",
    srcs = docfx_srcs,
    hdrs = docfx_hdrs,
    copts = ["-std=c++17"],
    target_compatible_with = select({
        "@platforms//os:macos": ["@platforms//:incompatible"],
        "@platforms//os:windows": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
    deps = [
        "@com_github_jbeder_yaml_cpp//:yaml-cpp",
        "@com_github_nlohmann_json//:json",
        "@com_github_zeux_pugixml//:pugixml",
    ],
)

cc_library(
    name = "docfx_testing",
    srcs = docfx_testing_srcs,
    hdrs = docfx_testing_hdrs,
    copts = ["-std=c++17"],
    target_compatible_with = select({
        "@platforms//os:macos": ["@platforms//:incompatible"],
        "@platforms//os:windows": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
    deps = [
        ":docfx",
        "@com_github_jbeder_yaml_cpp//:yaml-cpp",
        "@com_github_nlohmann_json//:json",
        "@com_github_zeux_pugixml//:pugixml",
    ],
)

[cc_test(
    name = test.replace("/", "_").replace(".cc", ""),
    srcs = [test],
    copts = ["-std=c++17"],
    deps = [
        ":docfx",
        ":docfx_testing",
        "@com_github_zeux_pugixml//:pugixml",
        "@com_google_googletest//:gtest_main",
    ],
) for test in unit_tests]

cc_binary(
    name = "doxygen2docfx",
    srcs = ["doxygen2docfx.cc"],
    copts = ["-std=c++17"],
    visibility = ["//visibility:private"],
    deps = [":docfx"],
)
