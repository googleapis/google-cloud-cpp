// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/parametermanager/v1/service.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_PARAMETERMANAGER_V1_PARAMETER_MANAGER_CONNECTION_IDEMPOTENCY_POLICY_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_PARAMETERMANAGER_V1_PARAMETER_MANAGER_CONNECTION_IDEMPOTENCY_POLICY_H

#include "google/cloud/idempotency.h"
#include "google/cloud/version.h"
#include <google/cloud/location/locations.grpc.pb.h>
#include <google/cloud/parametermanager/v1/service.grpc.pb.h>
#include <memory>

namespace google {
namespace cloud {
namespace parametermanager_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

class ParameterManagerConnectionIdempotencyPolicy {
 public:
  virtual ~ParameterManagerConnectionIdempotencyPolicy();

  /// Create a new copy of this object.
  virtual std::unique_ptr<ParameterManagerConnectionIdempotencyPolicy> clone()
      const;

  virtual google::cloud::Idempotency ListParameters(
      google::cloud::parametermanager::v1::ListParametersRequest request);

  virtual google::cloud::Idempotency GetParameter(
      google::cloud::parametermanager::v1::GetParameterRequest const& request);

  virtual google::cloud::Idempotency CreateParameter(
      google::cloud::parametermanager::v1::CreateParameterRequest const&
          request);

  virtual google::cloud::Idempotency UpdateParameter(
      google::cloud::parametermanager::v1::UpdateParameterRequest const&
          request);

  virtual google::cloud::Idempotency DeleteParameter(
      google::cloud::parametermanager::v1::DeleteParameterRequest const&
          request);

  virtual google::cloud::Idempotency ListParameterVersions(
      google::cloud::parametermanager::v1::ListParameterVersionsRequest
          request);

  virtual google::cloud::Idempotency GetParameterVersion(
      google::cloud::parametermanager::v1::GetParameterVersionRequest const&
          request);

  virtual google::cloud::Idempotency RenderParameterVersion(
      google::cloud::parametermanager::v1::RenderParameterVersionRequest const&
          request);

  virtual google::cloud::Idempotency CreateParameterVersion(
      google::cloud::parametermanager::v1::CreateParameterVersionRequest const&
          request);

  virtual google::cloud::Idempotency UpdateParameterVersion(
      google::cloud::parametermanager::v1::UpdateParameterVersionRequest const&
          request);

  virtual google::cloud::Idempotency DeleteParameterVersion(
      google::cloud::parametermanager::v1::DeleteParameterVersionRequest const&
          request);

  virtual google::cloud::Idempotency ListLocations(
      google::cloud::location::ListLocationsRequest request);

  virtual google::cloud::Idempotency GetLocation(
      google::cloud::location::GetLocationRequest const& request);
};

std::unique_ptr<ParameterManagerConnectionIdempotencyPolicy>
MakeDefaultParameterManagerConnectionIdempotencyPolicy();

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace parametermanager_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_PARAMETERMANAGER_V1_PARAMETER_MANAGER_CONNECTION_IDEMPOTENCY_POLICY_H
