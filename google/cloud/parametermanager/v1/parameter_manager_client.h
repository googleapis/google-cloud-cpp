// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/parametermanager/v1/service.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_PARAMETERMANAGER_V1_PARAMETER_MANAGER_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_PARAMETERMANAGER_V1_PARAMETER_MANAGER_CLIENT_H

#include "google/cloud/parametermanager/v1/parameter_manager_connection.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <map>
#include <memory>
#include <string>

namespace google {
namespace cloud {
namespace parametermanager_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service describing handlers for resources
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class ParameterManagerClient {
 public:
  explicit ParameterManagerClient(
      std::shared_ptr<ParameterManagerConnection> connection,
      Options opts = {});
  ~ParameterManagerClient();

  ///@{
  /// @name Copy and move support
  ParameterManagerClient(ParameterManagerClient const&) = default;
  ParameterManagerClient& operator=(ParameterManagerClient const&) = default;
  ParameterManagerClient(ParameterManagerClient&&) = default;
  ParameterManagerClient& operator=(ParameterManagerClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(ParameterManagerClient const& a,
                         ParameterManagerClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(ParameterManagerClient const& a,
                         ParameterManagerClient const& b) {
    return !(a == b);
  }
  ///@}

  // clang-format off
  ///
  /// Lists Parameters in a given project and location.
  ///
  /// @param parent  Required. Parent value for ListParametersRequest in the format
  ///  `projects/*/locations/*`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.cloud.parametermanager.v1.Parameter], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.parametermanager.v1.ListParametersRequest]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L210}
  /// [google.cloud.parametermanager.v1.Parameter]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L177}
  ///
  // clang-format on
  StreamRange<google::cloud::parametermanager::v1::Parameter> ListParameters(
      std::string const& parent, Options opts = {});

  // clang-format off
  ///
  /// Lists Parameters in a given project and location.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.parametermanager.v1.ListParametersRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.cloud.parametermanager.v1.Parameter], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.parametermanager.v1.ListParametersRequest]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L210}
  /// [google.cloud.parametermanager.v1.Parameter]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L177}
  ///
  // clang-format on
  StreamRange<google::cloud::parametermanager::v1::Parameter> ListParameters(
      google::cloud::parametermanager::v1::ListParametersRequest request,
      Options opts = {});

  // clang-format off
  ///
  /// Gets details of a single Parameter.
  ///
  /// @param name  Required. Name of the resource in the format
  ///  `projects/*/locations/*/parameters/*`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.parametermanager.v1.Parameter])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.parametermanager.v1.GetParameterRequest]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L248}
  /// [google.cloud.parametermanager.v1.Parameter]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L177}
  ///
  // clang-format on
  StatusOr<google::cloud::parametermanager::v1::Parameter> GetParameter(
      std::string const& name, Options opts = {});

  // clang-format off
  ///
  /// Gets details of a single Parameter.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.parametermanager.v1.GetParameterRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.parametermanager.v1.Parameter])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.parametermanager.v1.GetParameterRequest]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L248}
  /// [google.cloud.parametermanager.v1.Parameter]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L177}
  ///
  // clang-format on
  StatusOr<google::cloud::parametermanager::v1::Parameter> GetParameter(
      google::cloud::parametermanager::v1::GetParameterRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Creates a new Parameter in a given project and location.
  ///
  /// @param parent  Required. Value for parent in the format
  ///  `projects/*/locations/*`.
  /// @param parameter  Required. The Parameter resource being created
  /// @param parameter_id  Required. Id of the Parameter resource
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.parametermanager.v1.Parameter])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.parametermanager.v1.CreateParameterRequest]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L260}
  /// [google.cloud.parametermanager.v1.Parameter]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L177}
  ///
  // clang-format on
  StatusOr<google::cloud::parametermanager::v1::Parameter> CreateParameter(
      std::string const& parent,
      google::cloud::parametermanager::v1::Parameter const& parameter,
      std::string const& parameter_id, Options opts = {});

  // clang-format off
  ///
  /// Creates a new Parameter in a given project and location.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.parametermanager.v1.CreateParameterRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.parametermanager.v1.Parameter])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.parametermanager.v1.CreateParameterRequest]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L260}
  /// [google.cloud.parametermanager.v1.Parameter]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L177}
  ///
  // clang-format on
  StatusOr<google::cloud::parametermanager::v1::Parameter> CreateParameter(
      google::cloud::parametermanager::v1::CreateParameterRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Updates a single Parameter.
  ///
  /// @param parameter  Required. The Parameter resource being updated
  /// @param update_mask  Optional. Field mask is used to specify the fields to be overwritten in the
  ///  Parameter resource by the update.
  ///  The fields specified in the update_mask are relative to the resource, not
  ///  the full request. A mutable field will be overwritten if it is in the
  ///  mask. If the user does not provide a mask then all mutable fields present
  ///  in the request will be overwritten.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.parametermanager.v1.Parameter])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.parametermanager.v1.Parameter]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L177}
  /// [google.cloud.parametermanager.v1.UpdateParameterRequest]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L296}
  ///
  // clang-format on
  StatusOr<google::cloud::parametermanager::v1::Parameter> UpdateParameter(
      google::cloud::parametermanager::v1::Parameter const& parameter,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  // clang-format off
  ///
  /// Updates a single Parameter.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.parametermanager.v1.UpdateParameterRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.parametermanager.v1.Parameter])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.parametermanager.v1.Parameter]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L177}
  /// [google.cloud.parametermanager.v1.UpdateParameterRequest]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L296}
  ///
  // clang-format on
  StatusOr<google::cloud::parametermanager::v1::Parameter> UpdateParameter(
      google::cloud::parametermanager::v1::UpdateParameterRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Deletes a single Parameter.
  ///
  /// @param name  Required. Name of the resource in the format
  ///  `projects/*/locations/*/parameters/*`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [`Status`] object. If the request failed, the
  ///     status contains the details of the failure.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.parametermanager.v1.DeleteParameterRequest]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L329}
  ///
  // clang-format on
  Status DeleteParameter(std::string const& name, Options opts = {});

  // clang-format off
  ///
  /// Deletes a single Parameter.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.parametermanager.v1.DeleteParameterRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [`Status`] object. If the request failed, the
  ///     status contains the details of the failure.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.parametermanager.v1.DeleteParameterRequest]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L329}
  ///
  // clang-format on
  Status DeleteParameter(
      google::cloud::parametermanager::v1::DeleteParameterRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Lists ParameterVersions in a given project, location, and parameter.
  ///
  /// @param parent  Required. Parent value for ListParameterVersionsRequest in the format
  ///  `projects/*/locations/*/parameters/*`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.cloud.parametermanager.v1.ParameterVersion], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.parametermanager.v1.ListParameterVersionsRequest]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L402}
  /// [google.cloud.parametermanager.v1.ParameterVersion]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L359}
  ///
  // clang-format on
  StreamRange<google::cloud::parametermanager::v1::ParameterVersion>
  ListParameterVersions(std::string const& parent, Options opts = {});

  // clang-format off
  ///
  /// Lists ParameterVersions in a given project, location, and parameter.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.parametermanager.v1.ListParameterVersionsRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.cloud.parametermanager.v1.ParameterVersion], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.parametermanager.v1.ListParameterVersionsRequest]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L402}
  /// [google.cloud.parametermanager.v1.ParameterVersion]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L359}
  ///
  // clang-format on
  StreamRange<google::cloud::parametermanager::v1::ParameterVersion>
  ListParameterVersions(
      google::cloud::parametermanager::v1::ListParameterVersionsRequest request,
      Options opts = {});

  // clang-format off
  ///
  /// Gets details of a single ParameterVersion.
  ///
  /// @param name  Required. Name of the resource in the format
  ///  `projects/*/locations/*/parameters/*/versions/*`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.parametermanager.v1.ParameterVersion])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.parametermanager.v1.GetParameterVersionRequest]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L440}
  /// [google.cloud.parametermanager.v1.ParameterVersion]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L359}
  ///
  // clang-format on
  StatusOr<google::cloud::parametermanager::v1::ParameterVersion>
  GetParameterVersion(std::string const& name, Options opts = {});

  // clang-format off
  ///
  /// Gets details of a single ParameterVersion.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.parametermanager.v1.GetParameterVersionRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.parametermanager.v1.ParameterVersion])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.parametermanager.v1.GetParameterVersionRequest]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L440}
  /// [google.cloud.parametermanager.v1.ParameterVersion]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L359}
  ///
  // clang-format on
  StatusOr<google::cloud::parametermanager::v1::ParameterVersion>
  GetParameterVersion(
      google::cloud::parametermanager::v1::GetParameterVersionRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Gets rendered version of a ParameterVersion.
  ///
  /// @param name  Required. Name of the resource
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.parametermanager.v1.RenderParameterVersionResponse])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.parametermanager.v1.RenderParameterVersionRequest]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L457}
  /// [google.cloud.parametermanager.v1.RenderParameterVersionResponse]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L468}
  ///
  // clang-format on
  StatusOr<google::cloud::parametermanager::v1::RenderParameterVersionResponse>
  RenderParameterVersion(std::string const& name, Options opts = {});

  // clang-format off
  ///
  /// Gets rendered version of a ParameterVersion.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.parametermanager.v1.RenderParameterVersionRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.parametermanager.v1.RenderParameterVersionResponse])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.parametermanager.v1.RenderParameterVersionRequest]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L457}
  /// [google.cloud.parametermanager.v1.RenderParameterVersionResponse]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L468}
  ///
  // clang-format on
  StatusOr<google::cloud::parametermanager::v1::RenderParameterVersionResponse>
  RenderParameterVersion(
      google::cloud::parametermanager::v1::RenderParameterVersionRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Creates a new ParameterVersion in a given project, location, and parameter.
  ///
  /// @param parent  Required. Value for parent in the format
  ///  `projects/*/locations/*/parameters/*`.
  /// @param parameter_version  Required. The ParameterVersion resource being created
  /// @param parameter_version_id  Required. Id of the ParameterVersion resource
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.parametermanager.v1.ParameterVersion])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.parametermanager.v1.CreateParameterVersionRequest]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L489}
  /// [google.cloud.parametermanager.v1.ParameterVersion]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L359}
  ///
  // clang-format on
  StatusOr<google::cloud::parametermanager::v1::ParameterVersion>
  CreateParameterVersion(
      std::string const& parent,
      google::cloud::parametermanager::v1::ParameterVersion const&
          parameter_version,
      std::string const& parameter_version_id, Options opts = {});

  // clang-format off
  ///
  /// Creates a new ParameterVersion in a given project, location, and parameter.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.parametermanager.v1.CreateParameterVersionRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.parametermanager.v1.ParameterVersion])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.parametermanager.v1.CreateParameterVersionRequest]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L489}
  /// [google.cloud.parametermanager.v1.ParameterVersion]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L359}
  ///
  // clang-format on
  StatusOr<google::cloud::parametermanager::v1::ParameterVersion>
  CreateParameterVersion(
      google::cloud::parametermanager::v1::CreateParameterVersionRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Updates a single ParameterVersion.
  ///
  /// @param parameter_version  Required. The ParameterVersion resource being updated
  /// @param update_mask  Optional. Field mask is used to specify the fields to be overwritten in the
  ///  ParameterVersion resource by the update.
  ///  The fields specified in the update_mask are relative to the resource, not
  ///  the full request. A mutable field will be overwritten if it is in the
  ///  mask. If the user does not provide a mask then all mutable fields present
  ///  in the request will be overwritten.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.parametermanager.v1.ParameterVersion])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.parametermanager.v1.ParameterVersion]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L359}
  /// [google.cloud.parametermanager.v1.UpdateParameterVersionRequest]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L526}
  ///
  // clang-format on
  StatusOr<google::cloud::parametermanager::v1::ParameterVersion>
  UpdateParameterVersion(
      google::cloud::parametermanager::v1::ParameterVersion const&
          parameter_version,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  // clang-format off
  ///
  /// Updates a single ParameterVersion.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.parametermanager.v1.UpdateParameterVersionRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.parametermanager.v1.ParameterVersion])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.parametermanager.v1.ParameterVersion]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L359}
  /// [google.cloud.parametermanager.v1.UpdateParameterVersionRequest]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L526}
  ///
  // clang-format on
  StatusOr<google::cloud::parametermanager::v1::ParameterVersion>
  UpdateParameterVersion(
      google::cloud::parametermanager::v1::UpdateParameterVersionRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Deletes a single ParameterVersion.
  ///
  /// @param name  Required. Name of the resource in the format
  ///  `projects/*/locations/*/parameters/*/versions/*`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [`Status`] object. If the request failed, the
  ///     status contains the details of the failure.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.parametermanager.v1.DeleteParameterVersionRequest]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L560}
  ///
  // clang-format on
  Status DeleteParameterVersion(std::string const& name, Options opts = {});

  // clang-format off
  ///
  /// Deletes a single ParameterVersion.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.parametermanager.v1.DeleteParameterVersionRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [`Status`] object. If the request failed, the
  ///     status contains the details of the failure.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.parametermanager.v1.DeleteParameterVersionRequest]: @googleapis_reference_link{google/cloud/parametermanager/v1/service.proto#L560}
  ///
  // clang-format on
  Status DeleteParameterVersion(
      google::cloud::parametermanager::v1::DeleteParameterVersionRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Lists information about the supported locations for this service.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.location.ListLocationsRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.cloud.location.Location], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.location.ListLocationsRequest]: @googleapis_reference_link{google/cloud/location/locations.proto#L58}
  /// [google.cloud.location.Location]: @googleapis_reference_link{google/cloud/location/locations.proto#L88}
  ///
  // clang-format on
  StreamRange<google::cloud::location::Location> ListLocations(
      google::cloud::location::ListLocationsRequest request, Options opts = {});

  // clang-format off
  ///
  /// Gets information about a location.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.location.GetLocationRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.location.Location])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.location.GetLocationRequest]: @googleapis_reference_link{google/cloud/location/locations.proto#L82}
  /// [google.cloud.location.Location]: @googleapis_reference_link{google/cloud/location/locations.proto#L88}
  ///
  // clang-format on
  StatusOr<google::cloud::location::Location> GetLocation(
      google::cloud::location::GetLocationRequest const& request,
      Options opts = {});

 private:
  std::shared_ptr<ParameterManagerConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace parametermanager_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_PARAMETERMANAGER_V1_PARAMETER_MANAGER_CLIENT_H
