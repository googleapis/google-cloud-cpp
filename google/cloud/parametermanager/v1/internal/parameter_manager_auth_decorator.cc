// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/parametermanager/v1/service.proto

#include "google/cloud/parametermanager/v1/internal/parameter_manager_auth_decorator.h"
#include <google/cloud/parametermanager/v1/service.grpc.pb.h>
#include <memory>
#include <utility>

namespace google {
namespace cloud {
namespace parametermanager_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

ParameterManagerAuth::ParameterManagerAuth(
    std::shared_ptr<google::cloud::internal::GrpcAuthenticationStrategy> auth,
    std::shared_ptr<ParameterManagerStub> child)
    : auth_(std::move(auth)), child_(std::move(child)) {}

StatusOr<google::cloud::parametermanager::v1::ListParametersResponse>
ParameterManagerAuth::ListParameters(
    grpc::ClientContext& context, Options const& options,
    google::cloud::parametermanager::v1::ListParametersRequest const& request) {
  auto status = auth_->ConfigureContext(context);
  if (!status.ok()) return status;
  return child_->ListParameters(context, options, request);
}

StatusOr<google::cloud::parametermanager::v1::Parameter>
ParameterManagerAuth::GetParameter(
    grpc::ClientContext& context, Options const& options,
    google::cloud::parametermanager::v1::GetParameterRequest const& request) {
  auto status = auth_->ConfigureContext(context);
  if (!status.ok()) return status;
  return child_->GetParameter(context, options, request);
}

StatusOr<google::cloud::parametermanager::v1::Parameter>
ParameterManagerAuth::CreateParameter(
    grpc::ClientContext& context, Options const& options,
    google::cloud::parametermanager::v1::CreateParameterRequest const&
        request) {
  auto status = auth_->ConfigureContext(context);
  if (!status.ok()) return status;
  return child_->CreateParameter(context, options, request);
}

StatusOr<google::cloud::parametermanager::v1::Parameter>
ParameterManagerAuth::UpdateParameter(
    grpc::ClientContext& context, Options const& options,
    google::cloud::parametermanager::v1::UpdateParameterRequest const&
        request) {
  auto status = auth_->ConfigureContext(context);
  if (!status.ok()) return status;
  return child_->UpdateParameter(context, options, request);
}

Status ParameterManagerAuth::DeleteParameter(
    grpc::ClientContext& context, Options const& options,
    google::cloud::parametermanager::v1::DeleteParameterRequest const&
        request) {
  auto status = auth_->ConfigureContext(context);
  if (!status.ok()) return status;
  return child_->DeleteParameter(context, options, request);
}

StatusOr<google::cloud::parametermanager::v1::ListParameterVersionsResponse>
ParameterManagerAuth::ListParameterVersions(
    grpc::ClientContext& context, Options const& options,
    google::cloud::parametermanager::v1::ListParameterVersionsRequest const&
        request) {
  auto status = auth_->ConfigureContext(context);
  if (!status.ok()) return status;
  return child_->ListParameterVersions(context, options, request);
}

StatusOr<google::cloud::parametermanager::v1::ParameterVersion>
ParameterManagerAuth::GetParameterVersion(
    grpc::ClientContext& context, Options const& options,
    google::cloud::parametermanager::v1::GetParameterVersionRequest const&
        request) {
  auto status = auth_->ConfigureContext(context);
  if (!status.ok()) return status;
  return child_->GetParameterVersion(context, options, request);
}

StatusOr<google::cloud::parametermanager::v1::RenderParameterVersionResponse>
ParameterManagerAuth::RenderParameterVersion(
    grpc::ClientContext& context, Options const& options,
    google::cloud::parametermanager::v1::RenderParameterVersionRequest const&
        request) {
  auto status = auth_->ConfigureContext(context);
  if (!status.ok()) return status;
  return child_->RenderParameterVersion(context, options, request);
}

StatusOr<google::cloud::parametermanager::v1::ParameterVersion>
ParameterManagerAuth::CreateParameterVersion(
    grpc::ClientContext& context, Options const& options,
    google::cloud::parametermanager::v1::CreateParameterVersionRequest const&
        request) {
  auto status = auth_->ConfigureContext(context);
  if (!status.ok()) return status;
  return child_->CreateParameterVersion(context, options, request);
}

StatusOr<google::cloud::parametermanager::v1::ParameterVersion>
ParameterManagerAuth::UpdateParameterVersion(
    grpc::ClientContext& context, Options const& options,
    google::cloud::parametermanager::v1::UpdateParameterVersionRequest const&
        request) {
  auto status = auth_->ConfigureContext(context);
  if (!status.ok()) return status;
  return child_->UpdateParameterVersion(context, options, request);
}

Status ParameterManagerAuth::DeleteParameterVersion(
    grpc::ClientContext& context, Options const& options,
    google::cloud::parametermanager::v1::DeleteParameterVersionRequest const&
        request) {
  auto status = auth_->ConfigureContext(context);
  if (!status.ok()) return status;
  return child_->DeleteParameterVersion(context, options, request);
}

StatusOr<google::cloud::location::ListLocationsResponse>
ParameterManagerAuth::ListLocations(
    grpc::ClientContext& context, Options const& options,
    google::cloud::location::ListLocationsRequest const& request) {
  auto status = auth_->ConfigureContext(context);
  if (!status.ok()) return status;
  return child_->ListLocations(context, options, request);
}

StatusOr<google::cloud::location::Location> ParameterManagerAuth::GetLocation(
    grpc::ClientContext& context, Options const& options,
    google::cloud::location::GetLocationRequest const& request) {
  auto status = auth_->ConfigureContext(context);
  if (!status.ok()) return status;
  return child_->GetLocation(context, options, request);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace parametermanager_v1_internal
}  // namespace cloud
}  // namespace google
