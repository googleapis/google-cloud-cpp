// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/networkconnectivity/v1/data_transfer.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_NETWORKCONNECTIVITY_V1_INTERNAL_DATA_TRANSFER_TRACING_STUB_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_NETWORKCONNECTIVITY_V1_INTERNAL_DATA_TRANSFER_TRACING_STUB_H

#include "google/cloud/networkconnectivity/v1/internal/data_transfer_stub.h"
#include "google/cloud/internal/trace_propagator.h"
#include "google/cloud/options.h"
#include "google/cloud/version.h"
#include <memory>

namespace google {
namespace cloud {
namespace networkconnectivity_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

#ifdef GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

class DataTransferServiceTracingStub : public DataTransferServiceStub {
 public:
  ~DataTransferServiceTracingStub() override = default;

  explicit DataTransferServiceTracingStub(
      std::shared_ptr<DataTransferServiceStub> child);

  StatusOr<google::cloud::networkconnectivity::v1::
               ListMulticloudDataTransferConfigsResponse>
  ListMulticloudDataTransferConfigs(
      grpc::ClientContext& context, Options const& options,
      google::cloud::networkconnectivity::v1::
          ListMulticloudDataTransferConfigsRequest const& request) override;

  StatusOr<google::cloud::networkconnectivity::v1::MulticloudDataTransferConfig>
  GetMulticloudDataTransferConfig(
      grpc::ClientContext& context, Options const& options,
      google::cloud::networkconnectivity::v1::
          GetMulticloudDataTransferConfigRequest const& request) override;

  future<StatusOr<google::longrunning::Operation>>
  AsyncCreateMulticloudDataTransferConfig(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::networkconnectivity::v1::
          CreateMulticloudDataTransferConfigRequest const& request) override;

  StatusOr<google::longrunning::Operation> CreateMulticloudDataTransferConfig(
      grpc::ClientContext& context, Options options,
      google::cloud::networkconnectivity::v1::
          CreateMulticloudDataTransferConfigRequest const& request) override;

  future<StatusOr<google::longrunning::Operation>>
  AsyncUpdateMulticloudDataTransferConfig(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::networkconnectivity::v1::
          UpdateMulticloudDataTransferConfigRequest const& request) override;

  StatusOr<google::longrunning::Operation> UpdateMulticloudDataTransferConfig(
      grpc::ClientContext& context, Options options,
      google::cloud::networkconnectivity::v1::
          UpdateMulticloudDataTransferConfigRequest const& request) override;

  future<StatusOr<google::longrunning::Operation>>
  AsyncDeleteMulticloudDataTransferConfig(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::networkconnectivity::v1::
          DeleteMulticloudDataTransferConfigRequest const& request) override;

  StatusOr<google::longrunning::Operation> DeleteMulticloudDataTransferConfig(
      grpc::ClientContext& context, Options options,
      google::cloud::networkconnectivity::v1::
          DeleteMulticloudDataTransferConfigRequest const& request) override;

  StatusOr<google::cloud::networkconnectivity::v1::ListDestinationsResponse>
  ListDestinations(
      grpc::ClientContext& context, Options const& options,
      google::cloud::networkconnectivity::v1::ListDestinationsRequest const&
          request) override;

  StatusOr<google::cloud::networkconnectivity::v1::Destination> GetDestination(
      grpc::ClientContext& context, Options const& options,
      google::cloud::networkconnectivity::v1::GetDestinationRequest const&
          request) override;

  future<StatusOr<google::longrunning::Operation>> AsyncCreateDestination(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::networkconnectivity::v1::CreateDestinationRequest const&
          request) override;

  StatusOr<google::longrunning::Operation> CreateDestination(
      grpc::ClientContext& context, Options options,
      google::cloud::networkconnectivity::v1::CreateDestinationRequest const&
          request) override;

  future<StatusOr<google::longrunning::Operation>> AsyncUpdateDestination(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::networkconnectivity::v1::UpdateDestinationRequest const&
          request) override;

  StatusOr<google::longrunning::Operation> UpdateDestination(
      grpc::ClientContext& context, Options options,
      google::cloud::networkconnectivity::v1::UpdateDestinationRequest const&
          request) override;

  future<StatusOr<google::longrunning::Operation>> AsyncDeleteDestination(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::networkconnectivity::v1::DeleteDestinationRequest const&
          request) override;

  StatusOr<google::longrunning::Operation> DeleteDestination(
      grpc::ClientContext& context, Options options,
      google::cloud::networkconnectivity::v1::DeleteDestinationRequest const&
          request) override;

  StatusOr<google::cloud::networkconnectivity::v1::
               MulticloudDataTransferSupportedService>
  GetMulticloudDataTransferSupportedService(
      grpc::ClientContext& context, Options const& options,
      google::cloud::networkconnectivity::v1::
          GetMulticloudDataTransferSupportedServiceRequest const& request)
      override;

  StatusOr<google::cloud::networkconnectivity::v1::
               ListMulticloudDataTransferSupportedServicesResponse>
  ListMulticloudDataTransferSupportedServices(
      grpc::ClientContext& context, Options const& options,
      google::cloud::networkconnectivity::v1::
          ListMulticloudDataTransferSupportedServicesRequest const& request)
      override;

  StatusOr<google::cloud::location::ListLocationsResponse> ListLocations(
      grpc::ClientContext& context, Options const& options,
      google::cloud::location::ListLocationsRequest const& request) override;

  StatusOr<google::cloud::location::Location> GetLocation(
      grpc::ClientContext& context, Options const& options,
      google::cloud::location::GetLocationRequest const& request) override;

  StatusOr<google::iam::v1::Policy> SetIamPolicy(
      grpc::ClientContext& context, Options const& options,
      google::iam::v1::SetIamPolicyRequest const& request) override;

  StatusOr<google::iam::v1::Policy> GetIamPolicy(
      grpc::ClientContext& context, Options const& options,
      google::iam::v1::GetIamPolicyRequest const& request) override;

  StatusOr<google::iam::v1::TestIamPermissionsResponse> TestIamPermissions(
      grpc::ClientContext& context, Options const& options,
      google::iam::v1::TestIamPermissionsRequest const& request) override;

  StatusOr<google::longrunning::ListOperationsResponse> ListOperations(
      grpc::ClientContext& context, Options const& options,
      google::longrunning::ListOperationsRequest const& request) override;

  StatusOr<google::longrunning::Operation> GetOperation(
      grpc::ClientContext& context, Options const& options,
      google::longrunning::GetOperationRequest const& request) override;

  Status DeleteOperation(
      grpc::ClientContext& context, Options const& options,
      google::longrunning::DeleteOperationRequest const& request) override;

  Status CancelOperation(
      grpc::ClientContext& context, Options const& options,
      google::longrunning::CancelOperationRequest const& request) override;

  future<StatusOr<google::longrunning::Operation>> AsyncGetOperation(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::longrunning::GetOperationRequest const& request) override;

  future<Status> AsyncCancelOperation(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::longrunning::CancelOperationRequest const& request) override;

 private:
  std::shared_ptr<DataTransferServiceStub> child_;
  std::shared_ptr<opentelemetry::context::propagation::TextMapPropagator>
      propagator_;
};

#endif  // GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

/**
 * Applies the tracing decorator to the given stub.
 *
 * The stub is only decorated if the library has been compiled with
 * OpenTelemetry.
 */
std::shared_ptr<DataTransferServiceStub> MakeDataTransferServiceTracingStub(
    std::shared_ptr<DataTransferServiceStub> stub);

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace networkconnectivity_v1_internal
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_NETWORKCONNECTIVITY_V1_INTERNAL_DATA_TRANSFER_TRACING_STUB_H
