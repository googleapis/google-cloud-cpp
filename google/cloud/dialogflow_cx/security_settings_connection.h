// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/dialogflow/cx/v3/security_settings.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_DIALOGFLOW_CX_SECURITY_SETTINGS_CONNECTION_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_DIALOGFLOW_CX_SECURITY_SETTINGS_CONNECTION_H

#include "google/cloud/dialogflow_cx/internal/security_settings_retry_traits.h"
#include "google/cloud/dialogflow_cx/internal/security_settings_stub.h"
#include "google/cloud/dialogflow_cx/security_settings_connection_idempotency_policy.h"
#include "google/cloud/backoff_policy.h"
#include "google/cloud/options.h"
#include "google/cloud/status_or.h"
#include "google/cloud/stream_range.h"
#include "google/cloud/version.h"
#include <memory>

namespace google {
namespace cloud {
namespace dialogflow_cx {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

using SecuritySettingsServiceRetryPolicy =
    ::google::cloud::internal::TraitBasedRetryPolicy<
        dialogflow_cx_internal::SecuritySettingsServiceRetryTraits>;

using SecuritySettingsServiceLimitedTimeRetryPolicy =
    ::google::cloud::internal::LimitedTimeRetryPolicy<
        dialogflow_cx_internal::SecuritySettingsServiceRetryTraits>;

using SecuritySettingsServiceLimitedErrorCountRetryPolicy =
    ::google::cloud::internal::LimitedErrorCountRetryPolicy<
        dialogflow_cx_internal::SecuritySettingsServiceRetryTraits>;

class SecuritySettingsServiceConnection {
 public:
  virtual ~SecuritySettingsServiceConnection() = 0;

  virtual Options options() { return Options{}; }

  virtual StatusOr<google::cloud::dialogflow::cx::v3::SecuritySettings>
  CreateSecuritySettings(
      google::cloud::dialogflow::cx::v3::CreateSecuritySettingsRequest const&
          request);

  virtual StatusOr<google::cloud::dialogflow::cx::v3::SecuritySettings>
  GetSecuritySettings(
      google::cloud::dialogflow::cx::v3::GetSecuritySettingsRequest const&
          request);

  virtual StatusOr<google::cloud::dialogflow::cx::v3::SecuritySettings>
  UpdateSecuritySettings(
      google::cloud::dialogflow::cx::v3::UpdateSecuritySettingsRequest const&
          request);

  virtual StreamRange<google::cloud::dialogflow::cx::v3::SecuritySettings>
  ListSecuritySettings(
      google::cloud::dialogflow::cx::v3::ListSecuritySettingsRequest request);

  virtual Status DeleteSecuritySettings(
      google::cloud::dialogflow::cx::v3::DeleteSecuritySettingsRequest const&
          request);
};

std::shared_ptr<SecuritySettingsServiceConnection>
MakeSecuritySettingsServiceConnection(Options options = {});

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace dialogflow_cx
}  // namespace cloud
}  // namespace google

namespace google {
namespace cloud {
namespace dialogflow_cx_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

std::shared_ptr<dialogflow_cx::SecuritySettingsServiceConnection>
MakeSecuritySettingsServiceConnection(
    std::shared_ptr<SecuritySettingsServiceStub> stub, Options options);

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace dialogflow_cx_internal
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_DIALOGFLOW_CX_SECURITY_SETTINGS_CONNECTION_H
