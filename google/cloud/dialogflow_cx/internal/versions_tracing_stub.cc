// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/dialogflow/cx/v3/version.proto

#include "google/cloud/dialogflow_cx/internal/versions_tracing_stub.h"

namespace google {
namespace cloud {
namespace dialogflow_cx_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

VersionsTracingStub::VersionsTracingStub(std::shared_ptr<VersionsStub> child)
    : child_(std::move(child)) {}

StatusOr<google::cloud::dialogflow::cx::v3::ListVersionsResponse>
VersionsTracingStub::ListVersions(
    grpc::ClientContext& context,
    google::cloud::dialogflow::cx::v3::ListVersionsRequest const& request) {
  return child_->ListVersions(context, request);
}

StatusOr<google::cloud::dialogflow::cx::v3::Version>
VersionsTracingStub::GetVersion(
    grpc::ClientContext& context,
    google::cloud::dialogflow::cx::v3::GetVersionRequest const& request) {
  return child_->GetVersion(context, request);
}

future<StatusOr<google::longrunning::Operation>>
VersionsTracingStub::AsyncCreateVersion(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::dialogflow::cx::v3::CreateVersionRequest const& request) {
  return child_->AsyncCreateVersion(cq, std::move(context), request);
}

StatusOr<google::cloud::dialogflow::cx::v3::Version>
VersionsTracingStub::UpdateVersion(
    grpc::ClientContext& context,
    google::cloud::dialogflow::cx::v3::UpdateVersionRequest const& request) {
  return child_->UpdateVersion(context, request);
}

Status VersionsTracingStub::DeleteVersion(
    grpc::ClientContext& context,
    google::cloud::dialogflow::cx::v3::DeleteVersionRequest const& request) {
  return child_->DeleteVersion(context, request);
}

future<StatusOr<google::longrunning::Operation>>
VersionsTracingStub::AsyncLoadVersion(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::dialogflow::cx::v3::LoadVersionRequest const& request) {
  return child_->AsyncLoadVersion(cq, std::move(context), request);
}

StatusOr<google::cloud::dialogflow::cx::v3::CompareVersionsResponse>
VersionsTracingStub::CompareVersions(
    grpc::ClientContext& context,
    google::cloud::dialogflow::cx::v3::CompareVersionsRequest const& request) {
  return child_->CompareVersions(context, request);
}

future<StatusOr<google::longrunning::Operation>>
VersionsTracingStub::AsyncGetOperation(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::longrunning::GetOperationRequest const& request) {
  return child_->AsyncGetOperation(cq, std::move(context), request);
}

future<Status> VersionsTracingStub::AsyncCancelOperation(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::longrunning::CancelOperationRequest const& request) {
  return child_->AsyncCancelOperation(cq, std::move(context), request);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace dialogflow_cx_internal
}  // namespace cloud
}  // namespace google
