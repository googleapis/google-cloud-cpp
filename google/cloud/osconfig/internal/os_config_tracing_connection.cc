// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/osconfig/v1/osconfig_service.proto

#include "google/cloud/osconfig/internal/os_config_tracing_connection.h"
#include "google/cloud/internal/opentelemetry.h"
#include <memory>

namespace google {
namespace cloud {
namespace osconfig_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

#ifdef GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

OsConfigServiceTracingConnection::OsConfigServiceTracingConnection(
    std::shared_ptr<osconfig::OsConfigServiceConnection> child)
    : child_(std::move(child)) {}

StatusOr<google::cloud::osconfig::v1::PatchJob>
OsConfigServiceTracingConnection::ExecutePatchJob(
    google::cloud::osconfig::v1::ExecutePatchJobRequest const& request) {
  return child_->ExecutePatchJob(request);
}

StatusOr<google::cloud::osconfig::v1::PatchJob>
OsConfigServiceTracingConnection::GetPatchJob(
    google::cloud::osconfig::v1::GetPatchJobRequest const& request) {
  return child_->GetPatchJob(request);
}

StatusOr<google::cloud::osconfig::v1::PatchJob>
OsConfigServiceTracingConnection::CancelPatchJob(
    google::cloud::osconfig::v1::CancelPatchJobRequest const& request) {
  return child_->CancelPatchJob(request);
}

StreamRange<google::cloud::osconfig::v1::PatchJob>
OsConfigServiceTracingConnection::ListPatchJobs(
    google::cloud::osconfig::v1::ListPatchJobsRequest request) {
  return child_->ListPatchJobs(request);
}

StreamRange<google::cloud::osconfig::v1::PatchJobInstanceDetails>
OsConfigServiceTracingConnection::ListPatchJobInstanceDetails(
    google::cloud::osconfig::v1::ListPatchJobInstanceDetailsRequest request) {
  return child_->ListPatchJobInstanceDetails(request);
}

StatusOr<google::cloud::osconfig::v1::PatchDeployment>
OsConfigServiceTracingConnection::CreatePatchDeployment(
    google::cloud::osconfig::v1::CreatePatchDeploymentRequest const& request) {
  return child_->CreatePatchDeployment(request);
}

StatusOr<google::cloud::osconfig::v1::PatchDeployment>
OsConfigServiceTracingConnection::GetPatchDeployment(
    google::cloud::osconfig::v1::GetPatchDeploymentRequest const& request) {
  return child_->GetPatchDeployment(request);
}

StreamRange<google::cloud::osconfig::v1::PatchDeployment>
OsConfigServiceTracingConnection::ListPatchDeployments(
    google::cloud::osconfig::v1::ListPatchDeploymentsRequest request) {
  return child_->ListPatchDeployments(request);
}

Status OsConfigServiceTracingConnection::DeletePatchDeployment(
    google::cloud::osconfig::v1::DeletePatchDeploymentRequest const& request) {
  return child_->DeletePatchDeployment(request);
}

StatusOr<google::cloud::osconfig::v1::PatchDeployment>
OsConfigServiceTracingConnection::UpdatePatchDeployment(
    google::cloud::osconfig::v1::UpdatePatchDeploymentRequest const& request) {
  return child_->UpdatePatchDeployment(request);
}

StatusOr<google::cloud::osconfig::v1::PatchDeployment>
OsConfigServiceTracingConnection::PausePatchDeployment(
    google::cloud::osconfig::v1::PausePatchDeploymentRequest const& request) {
  return child_->PausePatchDeployment(request);
}

StatusOr<google::cloud::osconfig::v1::PatchDeployment>
OsConfigServiceTracingConnection::ResumePatchDeployment(
    google::cloud::osconfig::v1::ResumePatchDeploymentRequest const& request) {
  return child_->ResumePatchDeployment(request);
}

#endif  // GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace osconfig_internal
}  // namespace cloud
}  // namespace google
