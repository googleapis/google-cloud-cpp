/*!

@mainpage Distributed Cloud Edge Container API C++ Client Library

An idiomatic C++ client library for the
[Distributed Cloud Edge Container API][cloud-service-docs], a service that
allows you to run Kubernetes clusters on dedicated hardware provided and
maintained by Google that is separate from the Google Cloud data center.

While this library is **GA**, please note that the Google Cloud C++ client
libraries do **not** follow [Semantic Versioning](https://semver.org/).

@tableofcontents{HTML:2}

## Quickstart

The following shows the code that you'll run in the
`google/cloud/edgecontainer/quickstart/` directory,
which should give you a taste of the Distributed Cloud Edge Container API C++ client library API.

@snippet quickstart.cc all

## Main classes

<!-- inject-client-list-start -->
The main class in this library is
[\c edgecontainer_v1::EdgeContainerClient](@ref google::cloud::edgecontainer_v1::EdgeContainerClient).
All RPCs are exposed as member functions of this class. Other classes provide
helpers, retry policies, configuration parameters, and infrastructure to mock
[\c edgecontainer_v1::EdgeContainerClient](@ref google::cloud::edgecontainer_v1::EdgeContainerClient) when testing your
application.
<!-- inject-client-list-end -->

## Retry, Backoff, and Idempotency Policies.

The library automatically retries requests that fail with transient errors, and
uses [exponential backoff] to backoff between retries. Application developers
can override the default policies.

## More Information

- @ref common-error-handling - describes how the library reports errors.
- @ref edgecontainer-override-endpoint - describes how to override the default
  endpoint.
- @ref edgecontainer-override-authentication - describes how to change the
  authentication credentials used by the library.
- @ref edgecontainer-env - describes environment variables that can configure the behavior of the library.

[cloud-service-docs]: https://cloud.google.com/distributed-cloud/edge/latest/docs
[exponential backoff]: https://en.wikipedia.org/wiki/Exponential_backoff

*/
