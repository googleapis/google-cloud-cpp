// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/configdelivery/v1/config_delivery.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_CONFIGDELIVERY_V1_INTERNAL_CONFIG_DELIVERY_TRACING_STUB_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_CONFIGDELIVERY_V1_INTERNAL_CONFIG_DELIVERY_TRACING_STUB_H

#include "google/cloud/configdelivery/v1/internal/config_delivery_stub.h"
#include "google/cloud/internal/trace_propagator.h"
#include "google/cloud/options.h"
#include "google/cloud/version.h"
#include <memory>

namespace google {
namespace cloud {
namespace configdelivery_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

#ifdef GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

class ConfigDeliveryTracingStub : public ConfigDeliveryStub {
 public:
  ~ConfigDeliveryTracingStub() override = default;

  explicit ConfigDeliveryTracingStub(std::shared_ptr<ConfigDeliveryStub> child);

  StatusOr<google::cloud::configdelivery::v1::ListResourceBundlesResponse>
  ListResourceBundles(
      grpc::ClientContext& context, Options const& options,
      google::cloud::configdelivery::v1::ListResourceBundlesRequest const&
          request) override;

  StatusOr<google::cloud::configdelivery::v1::ResourceBundle> GetResourceBundle(
      grpc::ClientContext& context, Options const& options,
      google::cloud::configdelivery::v1::GetResourceBundleRequest const&
          request) override;

  future<StatusOr<google::longrunning::Operation>> AsyncCreateResourceBundle(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::configdelivery::v1::CreateResourceBundleRequest const&
          request) override;

  StatusOr<google::longrunning::Operation> CreateResourceBundle(
      grpc::ClientContext& context, Options options,
      google::cloud::configdelivery::v1::CreateResourceBundleRequest const&
          request) override;

  future<StatusOr<google::longrunning::Operation>> AsyncUpdateResourceBundle(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::configdelivery::v1::UpdateResourceBundleRequest const&
          request) override;

  StatusOr<google::longrunning::Operation> UpdateResourceBundle(
      grpc::ClientContext& context, Options options,
      google::cloud::configdelivery::v1::UpdateResourceBundleRequest const&
          request) override;

  future<StatusOr<google::longrunning::Operation>> AsyncDeleteResourceBundle(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::configdelivery::v1::DeleteResourceBundleRequest const&
          request) override;

  StatusOr<google::longrunning::Operation> DeleteResourceBundle(
      grpc::ClientContext& context, Options options,
      google::cloud::configdelivery::v1::DeleteResourceBundleRequest const&
          request) override;

  StatusOr<google::cloud::configdelivery::v1::ListFleetPackagesResponse>
  ListFleetPackages(
      grpc::ClientContext& context, Options const& options,
      google::cloud::configdelivery::v1::ListFleetPackagesRequest const&
          request) override;

  StatusOr<google::cloud::configdelivery::v1::FleetPackage> GetFleetPackage(
      grpc::ClientContext& context, Options const& options,
      google::cloud::configdelivery::v1::GetFleetPackageRequest const& request)
      override;

  future<StatusOr<google::longrunning::Operation>> AsyncCreateFleetPackage(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::configdelivery::v1::CreateFleetPackageRequest const&
          request) override;

  StatusOr<google::longrunning::Operation> CreateFleetPackage(
      grpc::ClientContext& context, Options options,
      google::cloud::configdelivery::v1::CreateFleetPackageRequest const&
          request) override;

  future<StatusOr<google::longrunning::Operation>> AsyncUpdateFleetPackage(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::configdelivery::v1::UpdateFleetPackageRequest const&
          request) override;

  StatusOr<google::longrunning::Operation> UpdateFleetPackage(
      grpc::ClientContext& context, Options options,
      google::cloud::configdelivery::v1::UpdateFleetPackageRequest const&
          request) override;

  future<StatusOr<google::longrunning::Operation>> AsyncDeleteFleetPackage(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::configdelivery::v1::DeleteFleetPackageRequest const&
          request) override;

  StatusOr<google::longrunning::Operation> DeleteFleetPackage(
      grpc::ClientContext& context, Options options,
      google::cloud::configdelivery::v1::DeleteFleetPackageRequest const&
          request) override;

  StatusOr<google::cloud::configdelivery::v1::ListReleasesResponse>
  ListReleases(grpc::ClientContext& context, Options const& options,
               google::cloud::configdelivery::v1::ListReleasesRequest const&
                   request) override;

  StatusOr<google::cloud::configdelivery::v1::Release> GetRelease(
      grpc::ClientContext& context, Options const& options,
      google::cloud::configdelivery::v1::GetReleaseRequest const& request)
      override;

  future<StatusOr<google::longrunning::Operation>> AsyncCreateRelease(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::configdelivery::v1::CreateReleaseRequest const& request)
      override;

  StatusOr<google::longrunning::Operation> CreateRelease(
      grpc::ClientContext& context, Options options,
      google::cloud::configdelivery::v1::CreateReleaseRequest const& request)
      override;

  future<StatusOr<google::longrunning::Operation>> AsyncUpdateRelease(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::configdelivery::v1::UpdateReleaseRequest const& request)
      override;

  StatusOr<google::longrunning::Operation> UpdateRelease(
      grpc::ClientContext& context, Options options,
      google::cloud::configdelivery::v1::UpdateReleaseRequest const& request)
      override;

  future<StatusOr<google::longrunning::Operation>> AsyncDeleteRelease(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::configdelivery::v1::DeleteReleaseRequest const& request)
      override;

  StatusOr<google::longrunning::Operation> DeleteRelease(
      grpc::ClientContext& context, Options options,
      google::cloud::configdelivery::v1::DeleteReleaseRequest const& request)
      override;

  StatusOr<google::cloud::configdelivery::v1::ListVariantsResponse>
  ListVariants(grpc::ClientContext& context, Options const& options,
               google::cloud::configdelivery::v1::ListVariantsRequest const&
                   request) override;

  StatusOr<google::cloud::configdelivery::v1::Variant> GetVariant(
      grpc::ClientContext& context, Options const& options,
      google::cloud::configdelivery::v1::GetVariantRequest const& request)
      override;

  future<StatusOr<google::longrunning::Operation>> AsyncCreateVariant(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::configdelivery::v1::CreateVariantRequest const& request)
      override;

  StatusOr<google::longrunning::Operation> CreateVariant(
      grpc::ClientContext& context, Options options,
      google::cloud::configdelivery::v1::CreateVariantRequest const& request)
      override;

  future<StatusOr<google::longrunning::Operation>> AsyncUpdateVariant(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::configdelivery::v1::UpdateVariantRequest const& request)
      override;

  StatusOr<google::longrunning::Operation> UpdateVariant(
      grpc::ClientContext& context, Options options,
      google::cloud::configdelivery::v1::UpdateVariantRequest const& request)
      override;

  future<StatusOr<google::longrunning::Operation>> AsyncDeleteVariant(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::configdelivery::v1::DeleteVariantRequest const& request)
      override;

  StatusOr<google::longrunning::Operation> DeleteVariant(
      grpc::ClientContext& context, Options options,
      google::cloud::configdelivery::v1::DeleteVariantRequest const& request)
      override;

  StatusOr<google::cloud::configdelivery::v1::ListRolloutsResponse>
  ListRollouts(grpc::ClientContext& context, Options const& options,
               google::cloud::configdelivery::v1::ListRolloutsRequest const&
                   request) override;

  StatusOr<google::cloud::configdelivery::v1::Rollout> GetRollout(
      grpc::ClientContext& context, Options const& options,
      google::cloud::configdelivery::v1::GetRolloutRequest const& request)
      override;

  future<StatusOr<google::longrunning::Operation>> AsyncSuspendRollout(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::configdelivery::v1::SuspendRolloutRequest const& request)
      override;

  StatusOr<google::longrunning::Operation> SuspendRollout(
      grpc::ClientContext& context, Options options,
      google::cloud::configdelivery::v1::SuspendRolloutRequest const& request)
      override;

  future<StatusOr<google::longrunning::Operation>> AsyncResumeRollout(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::configdelivery::v1::ResumeRolloutRequest const& request)
      override;

  StatusOr<google::longrunning::Operation> ResumeRollout(
      grpc::ClientContext& context, Options options,
      google::cloud::configdelivery::v1::ResumeRolloutRequest const& request)
      override;

  future<StatusOr<google::longrunning::Operation>> AsyncAbortRollout(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::configdelivery::v1::AbortRolloutRequest const& request)
      override;

  StatusOr<google::longrunning::Operation> AbortRollout(
      grpc::ClientContext& context, Options options,
      google::cloud::configdelivery::v1::AbortRolloutRequest const& request)
      override;

  StatusOr<google::cloud::location::ListLocationsResponse> ListLocations(
      grpc::ClientContext& context, Options const& options,
      google::cloud::location::ListLocationsRequest const& request) override;

  StatusOr<google::cloud::location::Location> GetLocation(
      grpc::ClientContext& context, Options const& options,
      google::cloud::location::GetLocationRequest const& request) override;

  StatusOr<google::longrunning::ListOperationsResponse> ListOperations(
      grpc::ClientContext& context, Options const& options,
      google::longrunning::ListOperationsRequest const& request) override;

  StatusOr<google::longrunning::Operation> GetOperation(
      grpc::ClientContext& context, Options const& options,
      google::longrunning::GetOperationRequest const& request) override;

  Status DeleteOperation(
      grpc::ClientContext& context, Options const& options,
      google::longrunning::DeleteOperationRequest const& request) override;

  Status CancelOperation(
      grpc::ClientContext& context, Options const& options,
      google::longrunning::CancelOperationRequest const& request) override;

  future<StatusOr<google::longrunning::Operation>> AsyncGetOperation(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::longrunning::GetOperationRequest const& request) override;

  future<Status> AsyncCancelOperation(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::longrunning::CancelOperationRequest const& request) override;

 private:
  std::shared_ptr<ConfigDeliveryStub> child_;
  std::shared_ptr<opentelemetry::context::propagation::TextMapPropagator>
      propagator_;
};

#endif  // GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

/**
 * Applies the tracing decorator to the given stub.
 *
 * The stub is only decorated if the library has been compiled with
 * OpenTelemetry.
 */
std::shared_ptr<ConfigDeliveryStub> MakeConfigDeliveryTracingStub(
    std::shared_ptr<ConfigDeliveryStub> stub);

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace configdelivery_v1_internal
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_CONFIGDELIVERY_V1_INTERNAL_CONFIG_DELIVERY_TRACING_STUB_H
