// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/language/v1/language_service.proto

#include "google/cloud/language/internal/language_tracing_stub.h"

namespace google {
namespace cloud {
namespace language_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

LanguageServiceTracingStub::LanguageServiceTracingStub(
    std::shared_ptr<LanguageServiceStub> child)
    : child_(std::move(child)) {}

StatusOr<google::cloud::language::v1::AnalyzeSentimentResponse>
LanguageServiceTracingStub::AnalyzeSentiment(
    grpc::ClientContext& context,
    google::cloud::language::v1::AnalyzeSentimentRequest const& request) {
  return child_->AnalyzeSentiment(context, request);
}

StatusOr<google::cloud::language::v1::AnalyzeEntitiesResponse>
LanguageServiceTracingStub::AnalyzeEntities(
    grpc::ClientContext& context,
    google::cloud::language::v1::AnalyzeEntitiesRequest const& request) {
  return child_->AnalyzeEntities(context, request);
}

StatusOr<google::cloud::language::v1::AnalyzeEntitySentimentResponse>
LanguageServiceTracingStub::AnalyzeEntitySentiment(
    grpc::ClientContext& context,
    google::cloud::language::v1::AnalyzeEntitySentimentRequest const& request) {
  return child_->AnalyzeEntitySentiment(context, request);
}

StatusOr<google::cloud::language::v1::AnalyzeSyntaxResponse>
LanguageServiceTracingStub::AnalyzeSyntax(
    grpc::ClientContext& context,
    google::cloud::language::v1::AnalyzeSyntaxRequest const& request) {
  return child_->AnalyzeSyntax(context, request);
}

StatusOr<google::cloud::language::v1::ClassifyTextResponse>
LanguageServiceTracingStub::ClassifyText(
    grpc::ClientContext& context,
    google::cloud::language::v1::ClassifyTextRequest const& request) {
  return child_->ClassifyText(context, request);
}

StatusOr<google::cloud::language::v1::AnnotateTextResponse>
LanguageServiceTracingStub::AnnotateText(
    grpc::ClientContext& context,
    google::cloud::language::v1::AnnotateTextRequest const& request) {
  return child_->AnnotateText(context, request);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace language_internal
}  // namespace cloud
}  // namespace google
