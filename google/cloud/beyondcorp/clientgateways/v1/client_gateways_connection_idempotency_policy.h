// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source:
// google/cloud/beyondcorp/clientgateways/v1/client_gateways_service.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BEYONDCORP_CLIENTGATEWAYS_V1_CLIENT_GATEWAYS_CONNECTION_IDEMPOTENCY_POLICY_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BEYONDCORP_CLIENTGATEWAYS_V1_CLIENT_GATEWAYS_CONNECTION_IDEMPOTENCY_POLICY_H

#include "google/cloud/idempotency.h"
#include "google/cloud/version.h"
#include <google/cloud/beyondcorp/clientgateways/v1/client_gateways_service.grpc.pb.h>
#include <memory>

namespace google {
namespace cloud {
namespace beyondcorp_clientgateways_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

class ClientGatewaysServiceConnectionIdempotencyPolicy {
 public:
  virtual ~ClientGatewaysServiceConnectionIdempotencyPolicy();

  /// Create a new copy of this object.
  virtual std::unique_ptr<ClientGatewaysServiceConnectionIdempotencyPolicy>
  clone() const;

  virtual google::cloud::Idempotency ListClientGateways(
      google::cloud::beyondcorp::clientgateways::v1::ListClientGatewaysRequest
          request);

  virtual google::cloud::Idempotency GetClientGateway(
      google::cloud::beyondcorp::clientgateways::v1::
          GetClientGatewayRequest const& request);

  virtual google::cloud::Idempotency CreateClientGateway(
      google::cloud::beyondcorp::clientgateways::v1::
          CreateClientGatewayRequest const& request);

  virtual google::cloud::Idempotency DeleteClientGateway(
      google::cloud::beyondcorp::clientgateways::v1::
          DeleteClientGatewayRequest const& request);
};

std::unique_ptr<ClientGatewaysServiceConnectionIdempotencyPolicy>
MakeDefaultClientGatewaysServiceConnectionIdempotencyPolicy();

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace beyondcorp_clientgateways_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BEYONDCORP_CLIENTGATEWAYS_V1_CLIENT_GATEWAYS_CONNECTION_IDEMPOTENCY_POLICY_H
