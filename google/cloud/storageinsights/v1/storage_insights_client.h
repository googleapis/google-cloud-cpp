// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/storageinsights/v1/storageinsights.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_STORAGEINSIGHTS_V1_STORAGE_INSIGHTS_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_STORAGEINSIGHTS_V1_STORAGE_INSIGHTS_CLIENT_H

#include "google/cloud/storageinsights/v1/storage_insights_connection.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace storageinsights_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service describing handlers for resources
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class StorageInsightsClient {
 public:
  explicit StorageInsightsClient(
      std::shared_ptr<StorageInsightsConnection> connection, Options opts = {});
  ~StorageInsightsClient();

  ///@{
  /// @name Copy and move support
  StorageInsightsClient(StorageInsightsClient const&) = default;
  StorageInsightsClient& operator=(StorageInsightsClient const&) = default;
  StorageInsightsClient(StorageInsightsClient&&) = default;
  StorageInsightsClient& operator=(StorageInsightsClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(StorageInsightsClient const& a,
                         StorageInsightsClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(StorageInsightsClient const& a,
                         StorageInsightsClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Lists ReportConfigs in a given project and location.
  ///
  /// @param parent  Required. Parent value for ListReportConfigsRequest
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::storageinsights::v1::ReportConfig,google/cloud/storageinsights/v1/storageinsights.proto#L438}
  ///
  /// [google.cloud.storageinsights.v1.ListReportConfigsRequest]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L107}
  /// [google.cloud.storageinsights.v1.ReportConfig]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L438}
  ///
  StreamRange<google::cloud::storageinsights::v1::ReportConfig>
  ListReportConfigs(std::string const& parent, Options opts = {});

  ///
  /// Lists ReportConfigs in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::storageinsights::v1::ListReportConfigsRequest,google/cloud/storageinsights/v1/storageinsights.proto#L107}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::storageinsights::v1::ReportConfig,google/cloud/storageinsights/v1/storageinsights.proto#L438}
  ///
  /// [google.cloud.storageinsights.v1.ListReportConfigsRequest]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L107}
  /// [google.cloud.storageinsights.v1.ReportConfig]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L438}
  ///
  StreamRange<google::cloud::storageinsights::v1::ReportConfig>
  ListReportConfigs(
      google::cloud::storageinsights::v1::ListReportConfigsRequest request,
      Options opts = {});

  ///
  /// Gets details of a single ReportConfig.
  ///
  /// @param name  Required. Name of the resource
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::storageinsights::v1::ReportConfig,google/cloud/storageinsights/v1/storageinsights.proto#L438}
  ///
  /// [google.cloud.storageinsights.v1.GetReportConfigRequest]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L143}
  /// [google.cloud.storageinsights.v1.ReportConfig]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L438}
  ///
  StatusOr<google::cloud::storageinsights::v1::ReportConfig> GetReportConfig(
      std::string const& name, Options opts = {});

  ///
  /// Gets details of a single ReportConfig.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::storageinsights::v1::GetReportConfigRequest,google/cloud/storageinsights/v1/storageinsights.proto#L143}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::storageinsights::v1::ReportConfig,google/cloud/storageinsights/v1/storageinsights.proto#L438}
  ///
  /// [google.cloud.storageinsights.v1.GetReportConfigRequest]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L143}
  /// [google.cloud.storageinsights.v1.ReportConfig]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L438}
  ///
  StatusOr<google::cloud::storageinsights::v1::ReportConfig> GetReportConfig(
      google::cloud::storageinsights::v1::GetReportConfigRequest const& request,
      Options opts = {});

  ///
  /// Creates a new ReportConfig in a given project and location.
  ///
  /// @param parent  Required. Value for parent.
  /// @param report_config  Required. The resource being created
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::storageinsights::v1::ReportConfig,google/cloud/storageinsights/v1/storageinsights.proto#L438}
  ///
  /// [google.cloud.storageinsights.v1.CreateReportConfigRequest]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L154}
  /// [google.cloud.storageinsights.v1.ReportConfig]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L438}
  ///
  StatusOr<google::cloud::storageinsights::v1::ReportConfig> CreateReportConfig(
      std::string const& parent,
      google::cloud::storageinsights::v1::ReportConfig const& report_config,
      Options opts = {});

  ///
  /// Creates a new ReportConfig in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::storageinsights::v1::CreateReportConfigRequest,google/cloud/storageinsights/v1/storageinsights.proto#L154}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::storageinsights::v1::ReportConfig,google/cloud/storageinsights/v1/storageinsights.proto#L438}
  ///
  /// [google.cloud.storageinsights.v1.CreateReportConfigRequest]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L154}
  /// [google.cloud.storageinsights.v1.ReportConfig]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L438}
  ///
  StatusOr<google::cloud::storageinsights::v1::ReportConfig> CreateReportConfig(
      google::cloud::storageinsights::v1::CreateReportConfigRequest const&
          request,
      Options opts = {});

  ///
  /// Updates the parameters of a single ReportConfig.
  ///
  /// @param report_config  Required. The resource being updated
  /// @param update_mask  Required. Field mask is used to specify the fields to
  /// be overwritten in the
  ///  ReportConfig resource by the update.
  ///  The fields specified in the update_mask are relative to the resource, not
  ///  the full request. A field will be overwritten if it is in the mask. If
  ///  the user does not provide a mask then all fields will be overwritten.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::storageinsights::v1::ReportConfig,google/cloud/storageinsights/v1/storageinsights.proto#L438}
  ///
  /// [google.cloud.storageinsights.v1.ReportConfig]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L438}
  /// [google.cloud.storageinsights.v1.UpdateReportConfigRequest]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L183}
  ///
  StatusOr<google::cloud::storageinsights::v1::ReportConfig> UpdateReportConfig(
      google::cloud::storageinsights::v1::ReportConfig const& report_config,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Updates the parameters of a single ReportConfig.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::storageinsights::v1::UpdateReportConfigRequest,google/cloud/storageinsights/v1/storageinsights.proto#L183}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::storageinsights::v1::ReportConfig,google/cloud/storageinsights/v1/storageinsights.proto#L438}
  ///
  /// [google.cloud.storageinsights.v1.ReportConfig]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L438}
  /// [google.cloud.storageinsights.v1.UpdateReportConfigRequest]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L183}
  ///
  StatusOr<google::cloud::storageinsights::v1::ReportConfig> UpdateReportConfig(
      google::cloud::storageinsights::v1::UpdateReportConfigRequest const&
          request,
      Options opts = {});

  ///
  /// Deletes a single ReportConfig.
  ///
  /// @param name  Required. Name of the resource
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  ///
  /// [google.cloud.storageinsights.v1.DeleteReportConfigRequest]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L212}
  ///
  Status DeleteReportConfig(std::string const& name, Options opts = {});

  ///
  /// Deletes a single ReportConfig.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::storageinsights::v1::DeleteReportConfigRequest,google/cloud/storageinsights/v1/storageinsights.proto#L212}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  ///
  /// [google.cloud.storageinsights.v1.DeleteReportConfigRequest]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L212}
  ///
  Status DeleteReportConfig(
      google::cloud::storageinsights::v1::DeleteReportConfigRequest const&
          request,
      Options opts = {});

  ///
  /// Lists ReportDetails in a given project and location.
  ///
  /// @param parent  Required. Parent value for ListReportDetailsRequest
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::storageinsights::v1::ReportDetail,google/cloud/storageinsights/v1/storageinsights.proto#L243}
  ///
  /// [google.cloud.storageinsights.v1.ListReportDetailsRequest]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L282}
  /// [google.cloud.storageinsights.v1.ReportDetail]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L243}
  ///
  StreamRange<google::cloud::storageinsights::v1::ReportDetail>
  ListReportDetails(std::string const& parent, Options opts = {});

  ///
  /// Lists ReportDetails in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::storageinsights::v1::ListReportDetailsRequest,google/cloud/storageinsights/v1/storageinsights.proto#L282}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::storageinsights::v1::ReportDetail,google/cloud/storageinsights/v1/storageinsights.proto#L243}
  ///
  /// [google.cloud.storageinsights.v1.ListReportDetailsRequest]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L282}
  /// [google.cloud.storageinsights.v1.ReportDetail]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L243}
  ///
  StreamRange<google::cloud::storageinsights::v1::ReportDetail>
  ListReportDetails(
      google::cloud::storageinsights::v1::ListReportDetailsRequest request,
      Options opts = {});

  ///
  /// Gets details of a single ReportDetail.
  ///
  /// @param name  Required. Name of the resource
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::storageinsights::v1::ReportDetail,google/cloud/storageinsights/v1/storageinsights.proto#L243}
  ///
  /// [google.cloud.storageinsights.v1.GetReportDetailRequest]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L318}
  /// [google.cloud.storageinsights.v1.ReportDetail]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L243}
  ///
  StatusOr<google::cloud::storageinsights::v1::ReportDetail> GetReportDetail(
      std::string const& name, Options opts = {});

  ///
  /// Gets details of a single ReportDetail.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::storageinsights::v1::GetReportDetailRequest,google/cloud/storageinsights/v1/storageinsights.proto#L318}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::storageinsights::v1::ReportDetail,google/cloud/storageinsights/v1/storageinsights.proto#L243}
  ///
  /// [google.cloud.storageinsights.v1.GetReportDetailRequest]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L318}
  /// [google.cloud.storageinsights.v1.ReportDetail]:
  /// @googleapis_reference_link{google/cloud/storageinsights/v1/storageinsights.proto#L243}
  ///
  StatusOr<google::cloud::storageinsights::v1::ReportDetail> GetReportDetail(
      google::cloud::storageinsights::v1::GetReportDetailRequest const& request,
      Options opts = {});

 private:
  std::shared_ptr<StorageInsightsConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace storageinsights_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_STORAGEINSIGHTS_V1_STORAGE_INSIGHTS_CLIENT_H
