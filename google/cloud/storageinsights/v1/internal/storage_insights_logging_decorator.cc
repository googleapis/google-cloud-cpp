// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/storageinsights/v1/storageinsights.proto

#include "google/cloud/storageinsights/v1/internal/storage_insights_logging_decorator.h"
#include "google/cloud/internal/log_wrapper.h"
#include "google/cloud/status_or.h"
#include <google/cloud/storageinsights/v1/storageinsights.grpc.pb.h>
#include <memory>

namespace google {
namespace cloud {
namespace storageinsights_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

StorageInsightsLogging::StorageInsightsLogging(
    std::shared_ptr<StorageInsightsStub> child, TracingOptions tracing_options,
    std::set<std::string> const& components)
    : child_(std::move(child)),
      tracing_options_(std::move(tracing_options)),
      stream_logging_(components.find("rpc-streams") != components.end()) {}

StatusOr<google::cloud::storageinsights::v1::ListReportConfigsResponse>
StorageInsightsLogging::ListReportConfigs(
    grpc::ClientContext& context,
    google::cloud::storageinsights::v1::ListReportConfigsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::storageinsights::v1::ListReportConfigsRequest const&
                 request) {
        return child_->ListReportConfigs(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::storageinsights::v1::ReportConfig>
StorageInsightsLogging::GetReportConfig(
    grpc::ClientContext& context,
    google::cloud::storageinsights::v1::GetReportConfigRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::storageinsights::v1::GetReportConfigRequest const&
                 request) { return child_->GetReportConfig(context, request); },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::storageinsights::v1::ReportConfig>
StorageInsightsLogging::CreateReportConfig(
    grpc::ClientContext& context,
    google::cloud::storageinsights::v1::CreateReportConfigRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context,
          google::cloud::storageinsights::v1::CreateReportConfigRequest const&
              request) { return child_->CreateReportConfig(context, request); },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::storageinsights::v1::ReportConfig>
StorageInsightsLogging::UpdateReportConfig(
    grpc::ClientContext& context,
    google::cloud::storageinsights::v1::UpdateReportConfigRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context,
          google::cloud::storageinsights::v1::UpdateReportConfigRequest const&
              request) { return child_->UpdateReportConfig(context, request); },
      context, request, __func__, tracing_options_);
}

Status StorageInsightsLogging::DeleteReportConfig(
    grpc::ClientContext& context,
    google::cloud::storageinsights::v1::DeleteReportConfigRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context,
          google::cloud::storageinsights::v1::DeleteReportConfigRequest const&
              request) { return child_->DeleteReportConfig(context, request); },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::storageinsights::v1::ListReportDetailsResponse>
StorageInsightsLogging::ListReportDetails(
    grpc::ClientContext& context,
    google::cloud::storageinsights::v1::ListReportDetailsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::storageinsights::v1::ListReportDetailsRequest const&
                 request) {
        return child_->ListReportDetails(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::storageinsights::v1::ReportDetail>
StorageInsightsLogging::GetReportDetail(
    grpc::ClientContext& context,
    google::cloud::storageinsights::v1::GetReportDetailRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::storageinsights::v1::GetReportDetailRequest const&
                 request) { return child_->GetReportDetail(context, request); },
      context, request, __func__, tracing_options_);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace storageinsights_v1_internal
}  // namespace cloud
}  // namespace google
