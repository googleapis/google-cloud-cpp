// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/storageinsights/v1/storageinsights.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_STORAGEINSIGHTS_V1_MOCKS_MOCK_STORAGE_INSIGHTS_CONNECTION_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_STORAGEINSIGHTS_V1_MOCKS_MOCK_STORAGE_INSIGHTS_CONNECTION_H

#include "google/cloud/storageinsights/v1/storage_insights_connection.h"
#include <gmock/gmock.h>

namespace google {
namespace cloud {
namespace storageinsights_v1_mocks {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

/**
 * A class to mock `StorageInsightsConnection`.
 *
 * Application developers may want to test their code with simulated responses,
 * including errors, from an object of type `StorageInsightsClient`. To do so,
 * construct an object of type `StorageInsightsClient` with an instance of this
 * class. Then use the Google Test framework functions to program the behavior
 * of this mock.
 *
 * @see [This example][bq-mock] for how to test your application with GoogleTest.
 * While the example showcases types from the BigQuery library, the underlying
 * principles apply for any pair of `*Client` and `*Connection`.
 *
 * [bq-mock]: @cloud_cpp_docs_link{bigquery,bigquery-read-mock}
 */
class MockStorageInsightsConnection
    : public storageinsights_v1::StorageInsightsConnection {
 public:
  MOCK_METHOD(Options, options, (), (override));

  MOCK_METHOD(
      (StreamRange<google::cloud::storageinsights::v1::ReportConfig>),
      ListReportConfigs,
      (google::cloud::storageinsights::v1::ListReportConfigsRequest request),
      (override));

  MOCK_METHOD(StatusOr<google::cloud::storageinsights::v1::ReportConfig>,
              GetReportConfig,
              (google::cloud::storageinsights::v1::GetReportConfigRequest const&
                   request),
              (override));

  MOCK_METHOD(
      StatusOr<google::cloud::storageinsights::v1::ReportConfig>,
      CreateReportConfig,
      (google::cloud::storageinsights::v1::CreateReportConfigRequest const&
           request),
      (override));

  MOCK_METHOD(
      StatusOr<google::cloud::storageinsights::v1::ReportConfig>,
      UpdateReportConfig,
      (google::cloud::storageinsights::v1::UpdateReportConfigRequest const&
           request),
      (override));

  MOCK_METHOD(
      Status, DeleteReportConfig,
      (google::cloud::storageinsights::v1::DeleteReportConfigRequest const&
           request),
      (override));

  MOCK_METHOD(
      (StreamRange<google::cloud::storageinsights::v1::ReportDetail>),
      ListReportDetails,
      (google::cloud::storageinsights::v1::ListReportDetailsRequest request),
      (override));

  MOCK_METHOD(StatusOr<google::cloud::storageinsights::v1::ReportDetail>,
              GetReportDetail,
              (google::cloud::storageinsights::v1::GetReportDetailRequest const&
                   request),
              (override));

  MOCK_METHOD(
      (StreamRange<google::cloud::storageinsights::v1::DatasetConfig>),
      ListDatasetConfigs,
      (google::cloud::storageinsights::v1::ListDatasetConfigsRequest request),
      (override));

  MOCK_METHOD(
      StatusOr<google::cloud::storageinsights::v1::DatasetConfig>,
      GetDatasetConfig,
      (google::cloud::storageinsights::v1::GetDatasetConfigRequest const&
           request),
      (override));

  /// To disambiguate calls, use:
  ///
  /// @code
  /// using ::testing::_;
  /// using ::testing::Matcher;
  /// EXPECT_CALL(*mock,
  /// CreateDatasetConfig(Matcher<google::cloud::storageinsights::v1::CreateDatasetConfigRequest
  /// const&>(_)))
  /// @endcode
  MOCK_METHOD(
      future<StatusOr<google::cloud::storageinsights::v1::DatasetConfig>>,
      CreateDatasetConfig,
      (google::cloud::storageinsights::v1::CreateDatasetConfigRequest const&
           request),
      (override));

  /// To disambiguate calls, use:
  ///
  /// @code
  /// using ::testing::_;
  /// EXPECT_CALL(*mock, CreateDatasetConfig(_, _))
  /// @endcode
  MOCK_METHOD(
      StatusOr<google::longrunning::Operation>, CreateDatasetConfig,
      (NoAwaitTag,
       google::cloud::storageinsights::v1::CreateDatasetConfigRequest const&
           request),
      (override));

  /// To disambiguate calls, use:
  ///
  /// @code
  /// using ::testing::_;
  /// using ::testing::Matcher;
  /// EXPECT_CALL(*mock,
  /// CreateDatasetConfig(Matcher<google::longrunning::Operation const&>(_)))
  /// @endcode
  MOCK_METHOD(
      future<StatusOr<google::cloud::storageinsights::v1::DatasetConfig>>,
      CreateDatasetConfig, (google::longrunning::Operation const& operation),
      (override));

  /// To disambiguate calls, use:
  ///
  /// @code
  /// using ::testing::_;
  /// using ::testing::Matcher;
  /// EXPECT_CALL(*mock,
  /// UpdateDatasetConfig(Matcher<google::cloud::storageinsights::v1::UpdateDatasetConfigRequest
  /// const&>(_)))
  /// @endcode
  MOCK_METHOD(
      future<StatusOr<google::cloud::storageinsights::v1::DatasetConfig>>,
      UpdateDatasetConfig,
      (google::cloud::storageinsights::v1::UpdateDatasetConfigRequest const&
           request),
      (override));

  /// To disambiguate calls, use:
  ///
  /// @code
  /// using ::testing::_;
  /// EXPECT_CALL(*mock, UpdateDatasetConfig(_, _))
  /// @endcode
  MOCK_METHOD(
      StatusOr<google::longrunning::Operation>, UpdateDatasetConfig,
      (NoAwaitTag,
       google::cloud::storageinsights::v1::UpdateDatasetConfigRequest const&
           request),
      (override));

  /// To disambiguate calls, use:
  ///
  /// @code
  /// using ::testing::_;
  /// using ::testing::Matcher;
  /// EXPECT_CALL(*mock,
  /// UpdateDatasetConfig(Matcher<google::longrunning::Operation const&>(_)))
  /// @endcode
  MOCK_METHOD(
      future<StatusOr<google::cloud::storageinsights::v1::DatasetConfig>>,
      UpdateDatasetConfig, (google::longrunning::Operation const& operation),
      (override));

  /// To disambiguate calls, use:
  ///
  /// @code
  /// using ::testing::_;
  /// using ::testing::Matcher;
  /// EXPECT_CALL(*mock,
  /// DeleteDatasetConfig(Matcher<google::cloud::storageinsights::v1::DeleteDatasetConfigRequest
  /// const&>(_)))
  /// @endcode
  MOCK_METHOD(
      future<StatusOr<google::cloud::storageinsights::v1::OperationMetadata>>,
      DeleteDatasetConfig,
      (google::cloud::storageinsights::v1::DeleteDatasetConfigRequest const&
           request),
      (override));

  /// To disambiguate calls, use:
  ///
  /// @code
  /// using ::testing::_;
  /// EXPECT_CALL(*mock, DeleteDatasetConfig(_, _))
  /// @endcode
  MOCK_METHOD(
      StatusOr<google::longrunning::Operation>, DeleteDatasetConfig,
      (NoAwaitTag,
       google::cloud::storageinsights::v1::DeleteDatasetConfigRequest const&
           request),
      (override));

  /// To disambiguate calls, use:
  ///
  /// @code
  /// using ::testing::_;
  /// using ::testing::Matcher;
  /// EXPECT_CALL(*mock,
  /// DeleteDatasetConfig(Matcher<google::longrunning::Operation const&>(_)))
  /// @endcode
  MOCK_METHOD(
      future<StatusOr<google::cloud::storageinsights::v1::OperationMetadata>>,
      DeleteDatasetConfig, (google::longrunning::Operation const& operation),
      (override));

  /// To disambiguate calls, use:
  ///
  /// @code
  /// using ::testing::_;
  /// using ::testing::Matcher;
  /// EXPECT_CALL(*mock,
  /// LinkDataset(Matcher<google::cloud::storageinsights::v1::LinkDatasetRequest
  /// const&>(_)))
  /// @endcode
  MOCK_METHOD(
      future<StatusOr<google::cloud::storageinsights::v1::LinkDatasetResponse>>,
      LinkDataset,
      (google::cloud::storageinsights::v1::LinkDatasetRequest const& request),
      (override));

  /// To disambiguate calls, use:
  ///
  /// @code
  /// using ::testing::_;
  /// EXPECT_CALL(*mock, LinkDataset(_, _))
  /// @endcode
  MOCK_METHOD(
      StatusOr<google::longrunning::Operation>, LinkDataset,
      (NoAwaitTag,
       google::cloud::storageinsights::v1::LinkDatasetRequest const& request),
      (override));

  /// To disambiguate calls, use:
  ///
  /// @code
  /// using ::testing::_;
  /// using ::testing::Matcher;
  /// EXPECT_CALL(*mock, LinkDataset(Matcher<google::longrunning::Operation
  /// const&>(_)))
  /// @endcode
  MOCK_METHOD(
      future<StatusOr<google::cloud::storageinsights::v1::LinkDatasetResponse>>,
      LinkDataset, (google::longrunning::Operation const& operation),
      (override));

  /// To disambiguate calls, use:
  ///
  /// @code
  /// using ::testing::_;
  /// using ::testing::Matcher;
  /// EXPECT_CALL(*mock,
  /// UnlinkDataset(Matcher<google::cloud::storageinsights::v1::UnlinkDatasetRequest
  /// const&>(_)))
  /// @endcode
  MOCK_METHOD(
      future<StatusOr<google::cloud::storageinsights::v1::OperationMetadata>>,
      UnlinkDataset,
      (google::cloud::storageinsights::v1::UnlinkDatasetRequest const& request),
      (override));

  /// To disambiguate calls, use:
  ///
  /// @code
  /// using ::testing::_;
  /// EXPECT_CALL(*mock, UnlinkDataset(_, _))
  /// @endcode
  MOCK_METHOD(
      StatusOr<google::longrunning::Operation>, UnlinkDataset,
      (NoAwaitTag,
       google::cloud::storageinsights::v1::UnlinkDatasetRequest const& request),
      (override));

  /// To disambiguate calls, use:
  ///
  /// @code
  /// using ::testing::_;
  /// using ::testing::Matcher;
  /// EXPECT_CALL(*mock, UnlinkDataset(Matcher<google::longrunning::Operation
  /// const&>(_)))
  /// @endcode
  MOCK_METHOD(
      future<StatusOr<google::cloud::storageinsights::v1::OperationMetadata>>,
      UnlinkDataset, (google::longrunning::Operation const& operation),
      (override));

  MOCK_METHOD((StreamRange<google::cloud::location::Location>), ListLocations,
              (google::cloud::location::ListLocationsRequest request),
              (override));

  MOCK_METHOD(StatusOr<google::cloud::location::Location>, GetLocation,
              (google::cloud::location::GetLocationRequest const& request),
              (override));

  MOCK_METHOD((StreamRange<google::longrunning::Operation>), ListOperations,
              (google::longrunning::ListOperationsRequest request), (override));

  MOCK_METHOD(StatusOr<google::longrunning::Operation>, GetOperation,
              (google::longrunning::GetOperationRequest const& request),
              (override));

  MOCK_METHOD(Status, DeleteOperation,
              (google::longrunning::DeleteOperationRequest const& request),
              (override));

  MOCK_METHOD(Status, CancelOperation,
              (google::longrunning::CancelOperationRequest const& request),
              (override));
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace storageinsights_v1_mocks
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_STORAGEINSIGHTS_V1_MOCKS_MOCK_STORAGE_INSIGHTS_CONNECTION_H
