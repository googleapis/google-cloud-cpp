// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/storageinsights/v1/storageinsights.proto

#include "google/cloud/storageinsights/v1/storage_insights_client.h"
#include <memory>
#include <utility>

namespace google {
namespace cloud {
namespace storageinsights_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

StorageInsightsClient::StorageInsightsClient(
    std::shared_ptr<StorageInsightsConnection> connection, Options opts)
    : connection_(std::move(connection)),
      options_(
          internal::MergeOptions(std::move(opts), connection_->options())) {}
StorageInsightsClient::~StorageInsightsClient() = default;

StreamRange<google::cloud::storageinsights::v1::ReportConfig>
StorageInsightsClient::ListReportConfigs(std::string const& parent,
                                         Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::storageinsights::v1::ListReportConfigsRequest request;
  request.set_parent(parent);
  return connection_->ListReportConfigs(request);
}

StreamRange<google::cloud::storageinsights::v1::ReportConfig>
StorageInsightsClient::ListReportConfigs(
    google::cloud::storageinsights::v1::ListReportConfigsRequest request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->ListReportConfigs(std::move(request));
}

StatusOr<google::cloud::storageinsights::v1::ReportConfig>
StorageInsightsClient::GetReportConfig(std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::storageinsights::v1::GetReportConfigRequest request;
  request.set_name(name);
  return connection_->GetReportConfig(request);
}

StatusOr<google::cloud::storageinsights::v1::ReportConfig>
StorageInsightsClient::GetReportConfig(
    google::cloud::storageinsights::v1::GetReportConfigRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->GetReportConfig(request);
}

StatusOr<google::cloud::storageinsights::v1::ReportConfig>
StorageInsightsClient::CreateReportConfig(
    std::string const& parent,
    google::cloud::storageinsights::v1::ReportConfig const& report_config,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::storageinsights::v1::CreateReportConfigRequest request;
  request.set_parent(parent);
  *request.mutable_report_config() = report_config;
  return connection_->CreateReportConfig(request);
}

StatusOr<google::cloud::storageinsights::v1::ReportConfig>
StorageInsightsClient::CreateReportConfig(
    google::cloud::storageinsights::v1::CreateReportConfigRequest const&
        request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->CreateReportConfig(request);
}

StatusOr<google::cloud::storageinsights::v1::ReportConfig>
StorageInsightsClient::UpdateReportConfig(
    google::cloud::storageinsights::v1::ReportConfig const& report_config,
    google::protobuf::FieldMask const& update_mask, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::storageinsights::v1::UpdateReportConfigRequest request;
  *request.mutable_report_config() = report_config;
  *request.mutable_update_mask() = update_mask;
  return connection_->UpdateReportConfig(request);
}

StatusOr<google::cloud::storageinsights::v1::ReportConfig>
StorageInsightsClient::UpdateReportConfig(
    google::cloud::storageinsights::v1::UpdateReportConfigRequest const&
        request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->UpdateReportConfig(request);
}

Status StorageInsightsClient::DeleteReportConfig(std::string const& name,
                                                 Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::storageinsights::v1::DeleteReportConfigRequest request;
  request.set_name(name);
  return connection_->DeleteReportConfig(request);
}

Status StorageInsightsClient::DeleteReportConfig(
    google::cloud::storageinsights::v1::DeleteReportConfigRequest const&
        request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->DeleteReportConfig(request);
}

StreamRange<google::cloud::storageinsights::v1::ReportDetail>
StorageInsightsClient::ListReportDetails(std::string const& parent,
                                         Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::storageinsights::v1::ListReportDetailsRequest request;
  request.set_parent(parent);
  return connection_->ListReportDetails(request);
}

StreamRange<google::cloud::storageinsights::v1::ReportDetail>
StorageInsightsClient::ListReportDetails(
    google::cloud::storageinsights::v1::ListReportDetailsRequest request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->ListReportDetails(std::move(request));
}

StatusOr<google::cloud::storageinsights::v1::ReportDetail>
StorageInsightsClient::GetReportDetail(std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::storageinsights::v1::GetReportDetailRequest request;
  request.set_name(name);
  return connection_->GetReportDetail(request);
}

StatusOr<google::cloud::storageinsights::v1::ReportDetail>
StorageInsightsClient::GetReportDetail(
    google::cloud::storageinsights::v1::GetReportDetailRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->GetReportDetail(request);
}

StreamRange<google::cloud::storageinsights::v1::DatasetConfig>
StorageInsightsClient::ListDatasetConfigs(std::string const& parent,
                                          Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::storageinsights::v1::ListDatasetConfigsRequest request;
  request.set_parent(parent);
  return connection_->ListDatasetConfigs(request);
}

StreamRange<google::cloud::storageinsights::v1::DatasetConfig>
StorageInsightsClient::ListDatasetConfigs(
    google::cloud::storageinsights::v1::ListDatasetConfigsRequest request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->ListDatasetConfigs(std::move(request));
}

StatusOr<google::cloud::storageinsights::v1::DatasetConfig>
StorageInsightsClient::GetDatasetConfig(std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::storageinsights::v1::GetDatasetConfigRequest request;
  request.set_name(name);
  return connection_->GetDatasetConfig(request);
}

StatusOr<google::cloud::storageinsights::v1::DatasetConfig>
StorageInsightsClient::GetDatasetConfig(
    google::cloud::storageinsights::v1::GetDatasetConfigRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->GetDatasetConfig(request);
}

future<StatusOr<google::cloud::storageinsights::v1::DatasetConfig>>
StorageInsightsClient::CreateDatasetConfig(
    std::string const& parent,
    google::cloud::storageinsights::v1::DatasetConfig const& dataset_config,
    std::string const& dataset_config_id, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::storageinsights::v1::CreateDatasetConfigRequest request;
  request.set_parent(parent);
  *request.mutable_dataset_config() = dataset_config;
  request.set_dataset_config_id(dataset_config_id);
  return connection_->CreateDatasetConfig(request);
}

StatusOr<google::longrunning::Operation>
StorageInsightsClient::CreateDatasetConfig(
    NoAwaitTag, std::string const& parent,
    google::cloud::storageinsights::v1::DatasetConfig const& dataset_config,
    std::string const& dataset_config_id, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::storageinsights::v1::CreateDatasetConfigRequest request;
  request.set_parent(parent);
  *request.mutable_dataset_config() = dataset_config;
  request.set_dataset_config_id(dataset_config_id);
  return connection_->CreateDatasetConfig(NoAwaitTag{}, request);
}

future<StatusOr<google::cloud::storageinsights::v1::DatasetConfig>>
StorageInsightsClient::CreateDatasetConfig(
    google::cloud::storageinsights::v1::CreateDatasetConfigRequest const&
        request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->CreateDatasetConfig(request);
}

StatusOr<google::longrunning::Operation>
StorageInsightsClient::CreateDatasetConfig(
    NoAwaitTag,
    google::cloud::storageinsights::v1::CreateDatasetConfigRequest const&
        request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->CreateDatasetConfig(NoAwaitTag{}, request);
}

future<StatusOr<google::cloud::storageinsights::v1::DatasetConfig>>
StorageInsightsClient::CreateDatasetConfig(
    google::longrunning::Operation const& operation, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->CreateDatasetConfig(operation);
}

future<StatusOr<google::cloud::storageinsights::v1::DatasetConfig>>
StorageInsightsClient::UpdateDatasetConfig(
    google::cloud::storageinsights::v1::DatasetConfig const& dataset_config,
    google::protobuf::FieldMask const& update_mask, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::storageinsights::v1::UpdateDatasetConfigRequest request;
  *request.mutable_dataset_config() = dataset_config;
  *request.mutable_update_mask() = update_mask;
  return connection_->UpdateDatasetConfig(request);
}

StatusOr<google::longrunning::Operation>
StorageInsightsClient::UpdateDatasetConfig(
    NoAwaitTag,
    google::cloud::storageinsights::v1::DatasetConfig const& dataset_config,
    google::protobuf::FieldMask const& update_mask, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::storageinsights::v1::UpdateDatasetConfigRequest request;
  *request.mutable_dataset_config() = dataset_config;
  *request.mutable_update_mask() = update_mask;
  return connection_->UpdateDatasetConfig(NoAwaitTag{}, request);
}

future<StatusOr<google::cloud::storageinsights::v1::DatasetConfig>>
StorageInsightsClient::UpdateDatasetConfig(
    google::cloud::storageinsights::v1::UpdateDatasetConfigRequest const&
        request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->UpdateDatasetConfig(request);
}

StatusOr<google::longrunning::Operation>
StorageInsightsClient::UpdateDatasetConfig(
    NoAwaitTag,
    google::cloud::storageinsights::v1::UpdateDatasetConfigRequest const&
        request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->UpdateDatasetConfig(NoAwaitTag{}, request);
}

future<StatusOr<google::cloud::storageinsights::v1::DatasetConfig>>
StorageInsightsClient::UpdateDatasetConfig(
    google::longrunning::Operation const& operation, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->UpdateDatasetConfig(operation);
}

future<StatusOr<google::cloud::storageinsights::v1::OperationMetadata>>
StorageInsightsClient::DeleteDatasetConfig(std::string const& name,
                                           Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::storageinsights::v1::DeleteDatasetConfigRequest request;
  request.set_name(name);
  return connection_->DeleteDatasetConfig(request);
}

StatusOr<google::longrunning::Operation>
StorageInsightsClient::DeleteDatasetConfig(NoAwaitTag, std::string const& name,
                                           Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::storageinsights::v1::DeleteDatasetConfigRequest request;
  request.set_name(name);
  return connection_->DeleteDatasetConfig(NoAwaitTag{}, request);
}

future<StatusOr<google::cloud::storageinsights::v1::OperationMetadata>>
StorageInsightsClient::DeleteDatasetConfig(
    google::cloud::storageinsights::v1::DeleteDatasetConfigRequest const&
        request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->DeleteDatasetConfig(request);
}

StatusOr<google::longrunning::Operation>
StorageInsightsClient::DeleteDatasetConfig(
    NoAwaitTag,
    google::cloud::storageinsights::v1::DeleteDatasetConfigRequest const&
        request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->DeleteDatasetConfig(NoAwaitTag{}, request);
}

future<StatusOr<google::cloud::storageinsights::v1::OperationMetadata>>
StorageInsightsClient::DeleteDatasetConfig(
    google::longrunning::Operation const& operation, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->DeleteDatasetConfig(operation);
}

future<StatusOr<google::cloud::storageinsights::v1::LinkDatasetResponse>>
StorageInsightsClient::LinkDataset(std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::storageinsights::v1::LinkDatasetRequest request;
  request.set_name(name);
  return connection_->LinkDataset(request);
}

StatusOr<google::longrunning::Operation> StorageInsightsClient::LinkDataset(
    NoAwaitTag, std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::storageinsights::v1::LinkDatasetRequest request;
  request.set_name(name);
  return connection_->LinkDataset(NoAwaitTag{}, request);
}

future<StatusOr<google::cloud::storageinsights::v1::LinkDatasetResponse>>
StorageInsightsClient::LinkDataset(
    google::cloud::storageinsights::v1::LinkDatasetRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->LinkDataset(request);
}

StatusOr<google::longrunning::Operation> StorageInsightsClient::LinkDataset(
    NoAwaitTag,
    google::cloud::storageinsights::v1::LinkDatasetRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->LinkDataset(NoAwaitTag{}, request);
}

future<StatusOr<google::cloud::storageinsights::v1::LinkDatasetResponse>>
StorageInsightsClient::LinkDataset(
    google::longrunning::Operation const& operation, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->LinkDataset(operation);
}

future<StatusOr<google::cloud::storageinsights::v1::OperationMetadata>>
StorageInsightsClient::UnlinkDataset(std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::storageinsights::v1::UnlinkDatasetRequest request;
  request.set_name(name);
  return connection_->UnlinkDataset(request);
}

StatusOr<google::longrunning::Operation> StorageInsightsClient::UnlinkDataset(
    NoAwaitTag, std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::storageinsights::v1::UnlinkDatasetRequest request;
  request.set_name(name);
  return connection_->UnlinkDataset(NoAwaitTag{}, request);
}

future<StatusOr<google::cloud::storageinsights::v1::OperationMetadata>>
StorageInsightsClient::UnlinkDataset(
    google::cloud::storageinsights::v1::UnlinkDatasetRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->UnlinkDataset(request);
}

StatusOr<google::longrunning::Operation> StorageInsightsClient::UnlinkDataset(
    NoAwaitTag,
    google::cloud::storageinsights::v1::UnlinkDatasetRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->UnlinkDataset(NoAwaitTag{}, request);
}

future<StatusOr<google::cloud::storageinsights::v1::OperationMetadata>>
StorageInsightsClient::UnlinkDataset(
    google::longrunning::Operation const& operation, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->UnlinkDataset(operation);
}

StreamRange<google::cloud::location::Location>
StorageInsightsClient::ListLocations(
    google::cloud::location::ListLocationsRequest request, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->ListLocations(std::move(request));
}

StatusOr<google::cloud::location::Location> StorageInsightsClient::GetLocation(
    google::cloud::location::GetLocationRequest const& request, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->GetLocation(request);
}

StreamRange<google::longrunning::Operation>
StorageInsightsClient::ListOperations(std::string const& name,
                                      std::string const& filter, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::longrunning::ListOperationsRequest request;
  request.set_name(name);
  request.set_filter(filter);
  return connection_->ListOperations(request);
}

StreamRange<google::longrunning::Operation>
StorageInsightsClient::ListOperations(
    google::longrunning::ListOperationsRequest request, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->ListOperations(std::move(request));
}

StatusOr<google::longrunning::Operation> StorageInsightsClient::GetOperation(
    std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::longrunning::GetOperationRequest request;
  request.set_name(name);
  return connection_->GetOperation(request);
}

StatusOr<google::longrunning::Operation> StorageInsightsClient::GetOperation(
    google::longrunning::GetOperationRequest const& request, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->GetOperation(request);
}

Status StorageInsightsClient::DeleteOperation(std::string const& name,
                                              Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::longrunning::DeleteOperationRequest request;
  request.set_name(name);
  return connection_->DeleteOperation(request);
}

Status StorageInsightsClient::DeleteOperation(
    google::longrunning::DeleteOperationRequest const& request, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->DeleteOperation(request);
}

Status StorageInsightsClient::CancelOperation(std::string const& name,
                                              Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::longrunning::CancelOperationRequest request;
  request.set_name(name);
  return connection_->CancelOperation(request);
}

Status StorageInsightsClient::CancelOperation(
    google::longrunning::CancelOperationRequest const& request, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->CancelOperation(request);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace storageinsights_v1
}  // namespace cloud
}  // namespace google
