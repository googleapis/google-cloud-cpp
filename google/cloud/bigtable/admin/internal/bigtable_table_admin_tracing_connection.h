// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/bigtable/admin/v2/bigtable_table_admin.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BIGTABLE_ADMIN_INTERNAL_BIGTABLE_TABLE_ADMIN_TRACING_CONNECTION_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BIGTABLE_ADMIN_INTERNAL_BIGTABLE_TABLE_ADMIN_TRACING_CONNECTION_H

#include "google/cloud/bigtable/admin/bigtable_table_admin_connection.h"
#include "google/cloud/version.h"
#include <memory>

namespace google {
namespace cloud {
namespace bigtable_admin_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

#ifdef GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

class BigtableTableAdminTracingConnection
    : public bigtable_admin::BigtableTableAdminConnection {
 public:
  ~BigtableTableAdminTracingConnection() override = default;

  explicit BigtableTableAdminTracingConnection(
      std::shared_ptr<bigtable_admin::BigtableTableAdminConnection> child);

  Options options() override { return child_->options(); }

  StatusOr<google::bigtable::admin::v2::Table> CreateTable(
      google::bigtable::admin::v2::CreateTableRequest const& request) override;

  StreamRange<google::bigtable::admin::v2::Table> ListTables(
      google::bigtable::admin::v2::ListTablesRequest request) override;

  StatusOr<google::bigtable::admin::v2::Table> GetTable(
      google::bigtable::admin::v2::GetTableRequest const& request) override;

  future<StatusOr<google::bigtable::admin::v2::Table>> UpdateTable(
      google::bigtable::admin::v2::UpdateTableRequest const& request) override;

  StatusOr<google::longrunning::Operation> UpdateTable(
      NoAwaitTag,
      google::bigtable::admin::v2::UpdateTableRequest const& request) override;

  future<StatusOr<google::bigtable::admin::v2::Table>> UpdateTable(
      google::longrunning::Operation const& operation) override;

  Status DeleteTable(
      google::bigtable::admin::v2::DeleteTableRequest const& request) override;

  future<StatusOr<google::bigtable::admin::v2::Table>> UndeleteTable(
      google::bigtable::admin::v2::UndeleteTableRequest const& request)
      override;

  StatusOr<google::longrunning::Operation> UndeleteTable(
      NoAwaitTag,
      google::bigtable::admin::v2::UndeleteTableRequest const& request)
      override;

  future<StatusOr<google::bigtable::admin::v2::Table>> UndeleteTable(
      google::longrunning::Operation const& operation) override;

  future<StatusOr<google::bigtable::admin::v2::AuthorizedView>>
  CreateAuthorizedView(
      google::bigtable::admin::v2::CreateAuthorizedViewRequest const& request)
      override;

  StatusOr<google::longrunning::Operation> CreateAuthorizedView(
      NoAwaitTag,
      google::bigtable::admin::v2::CreateAuthorizedViewRequest const& request)
      override;

  future<StatusOr<google::bigtable::admin::v2::AuthorizedView>>
  CreateAuthorizedView(
      google::longrunning::Operation const& operation) override;

  StreamRange<google::bigtable::admin::v2::AuthorizedView> ListAuthorizedViews(
      google::bigtable::admin::v2::ListAuthorizedViewsRequest request) override;

  StatusOr<google::bigtable::admin::v2::AuthorizedView> GetAuthorizedView(
      google::bigtable::admin::v2::GetAuthorizedViewRequest const& request)
      override;

  future<StatusOr<google::bigtable::admin::v2::AuthorizedView>>
  UpdateAuthorizedView(
      google::bigtable::admin::v2::UpdateAuthorizedViewRequest const& request)
      override;

  StatusOr<google::longrunning::Operation> UpdateAuthorizedView(
      NoAwaitTag,
      google::bigtable::admin::v2::UpdateAuthorizedViewRequest const& request)
      override;

  future<StatusOr<google::bigtable::admin::v2::AuthorizedView>>
  UpdateAuthorizedView(
      google::longrunning::Operation const& operation) override;

  Status DeleteAuthorizedView(
      google::bigtable::admin::v2::DeleteAuthorizedViewRequest const& request)
      override;

  StatusOr<google::bigtable::admin::v2::Table> ModifyColumnFamilies(
      google::bigtable::admin::v2::ModifyColumnFamiliesRequest const& request)
      override;

  Status DropRowRange(
      google::bigtable::admin::v2::DropRowRangeRequest const& request) override;

  StatusOr<google::bigtable::admin::v2::GenerateConsistencyTokenResponse>
  GenerateConsistencyToken(
      google::bigtable::admin::v2::GenerateConsistencyTokenRequest const&
          request) override;

  StatusOr<google::bigtable::admin::v2::CheckConsistencyResponse>
  CheckConsistency(google::bigtable::admin::v2::CheckConsistencyRequest const&
                       request) override;

  future<StatusOr<google::bigtable::admin::v2::Backup>> CreateBackup(
      google::bigtable::admin::v2::CreateBackupRequest const& request) override;

  StatusOr<google::longrunning::Operation> CreateBackup(
      NoAwaitTag,
      google::bigtable::admin::v2::CreateBackupRequest const& request) override;

  future<StatusOr<google::bigtable::admin::v2::Backup>> CreateBackup(
      google::longrunning::Operation const& operation) override;

  StatusOr<google::bigtable::admin::v2::Backup> GetBackup(
      google::bigtable::admin::v2::GetBackupRequest const& request) override;

  StatusOr<google::bigtable::admin::v2::Backup> UpdateBackup(
      google::bigtable::admin::v2::UpdateBackupRequest const& request) override;

  Status DeleteBackup(
      google::bigtable::admin::v2::DeleteBackupRequest const& request) override;

  StreamRange<google::bigtable::admin::v2::Backup> ListBackups(
      google::bigtable::admin::v2::ListBackupsRequest request) override;

  future<StatusOr<google::bigtable::admin::v2::Table>> RestoreTable(
      google::bigtable::admin::v2::RestoreTableRequest const& request) override;

  StatusOr<google::longrunning::Operation> RestoreTable(
      NoAwaitTag,
      google::bigtable::admin::v2::RestoreTableRequest const& request) override;

  future<StatusOr<google::bigtable::admin::v2::Table>> RestoreTable(
      google::longrunning::Operation const& operation) override;

  future<StatusOr<google::bigtable::admin::v2::Backup>> CopyBackup(
      google::bigtable::admin::v2::CopyBackupRequest const& request) override;

  StatusOr<google::longrunning::Operation> CopyBackup(
      NoAwaitTag,
      google::bigtable::admin::v2::CopyBackupRequest const& request) override;

  future<StatusOr<google::bigtable::admin::v2::Backup>> CopyBackup(
      google::longrunning::Operation const& operation) override;

  StatusOr<google::iam::v1::Policy> GetIamPolicy(
      google::iam::v1::GetIamPolicyRequest const& request) override;

  StatusOr<google::iam::v1::Policy> SetIamPolicy(
      google::iam::v1::SetIamPolicyRequest const& request) override;

  StatusOr<google::iam::v1::TestIamPermissionsResponse> TestIamPermissions(
      google::iam::v1::TestIamPermissionsRequest const& request) override;

  future<StatusOr<google::bigtable::admin::v2::CheckConsistencyResponse>>
  AsyncCheckConsistency(
      google::bigtable::admin::v2::CheckConsistencyRequest const& request)
      override;

 private:
  std::shared_ptr<bigtable_admin::BigtableTableAdminConnection> child_;
};

#endif  // GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

/**
 * Conditionally applies the tracing decorator to the given connection.
 *
 * The connection is only decorated if tracing is enabled (as determined by the
 * connection's options).
 */
std::shared_ptr<bigtable_admin::BigtableTableAdminConnection>
MakeBigtableTableAdminTracingConnection(
    std::shared_ptr<bigtable_admin::BigtableTableAdminConnection> conn);

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace bigtable_admin_internal
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BIGTABLE_ADMIN_INTERNAL_BIGTABLE_TABLE_ADMIN_TRACING_CONNECTION_H
