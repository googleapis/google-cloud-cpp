// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/bigtable/admin/v2/bigtable_instance_admin.proto

#include "google/cloud/bigtable/admin/internal/bigtable_instance_admin_tracing_connection.h"
#include "google/cloud/internal/opentelemetry.h"
#include <memory>

namespace google {
namespace cloud {
namespace bigtable_admin_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

#ifdef GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

BigtableInstanceAdminTracingConnection::BigtableInstanceAdminTracingConnection(
    std::shared_ptr<bigtable_admin::BigtableInstanceAdminConnection> child)
    : child_(std::move(child)) {}

future<StatusOr<google::bigtable::admin::v2::Instance>>
BigtableInstanceAdminTracingConnection::CreateInstance(
    google::bigtable::admin::v2::CreateInstanceRequest const& request) {
  return child_->CreateInstance(request);
}

StatusOr<google::bigtable::admin::v2::Instance>
BigtableInstanceAdminTracingConnection::GetInstance(
    google::bigtable::admin::v2::GetInstanceRequest const& request) {
  return child_->GetInstance(request);
}

StatusOr<google::bigtable::admin::v2::ListInstancesResponse>
BigtableInstanceAdminTracingConnection::ListInstances(
    google::bigtable::admin::v2::ListInstancesRequest const& request) {
  return child_->ListInstances(request);
}

StatusOr<google::bigtable::admin::v2::Instance>
BigtableInstanceAdminTracingConnection::UpdateInstance(
    google::bigtable::admin::v2::Instance const& request) {
  return child_->UpdateInstance(request);
}

future<StatusOr<google::bigtable::admin::v2::Instance>>
BigtableInstanceAdminTracingConnection::PartialUpdateInstance(
    google::bigtable::admin::v2::PartialUpdateInstanceRequest const& request) {
  return child_->PartialUpdateInstance(request);
}

Status BigtableInstanceAdminTracingConnection::DeleteInstance(
    google::bigtable::admin::v2::DeleteInstanceRequest const& request) {
  return child_->DeleteInstance(request);
}

future<StatusOr<google::bigtable::admin::v2::Cluster>>
BigtableInstanceAdminTracingConnection::CreateCluster(
    google::bigtable::admin::v2::CreateClusterRequest const& request) {
  return child_->CreateCluster(request);
}

StatusOr<google::bigtable::admin::v2::Cluster>
BigtableInstanceAdminTracingConnection::GetCluster(
    google::bigtable::admin::v2::GetClusterRequest const& request) {
  return child_->GetCluster(request);
}

StatusOr<google::bigtable::admin::v2::ListClustersResponse>
BigtableInstanceAdminTracingConnection::ListClusters(
    google::bigtable::admin::v2::ListClustersRequest const& request) {
  return child_->ListClusters(request);
}

future<StatusOr<google::bigtable::admin::v2::Cluster>>
BigtableInstanceAdminTracingConnection::UpdateCluster(
    google::bigtable::admin::v2::Cluster const& request) {
  return child_->UpdateCluster(request);
}

future<StatusOr<google::bigtable::admin::v2::Cluster>>
BigtableInstanceAdminTracingConnection::PartialUpdateCluster(
    google::bigtable::admin::v2::PartialUpdateClusterRequest const& request) {
  return child_->PartialUpdateCluster(request);
}

Status BigtableInstanceAdminTracingConnection::DeleteCluster(
    google::bigtable::admin::v2::DeleteClusterRequest const& request) {
  return child_->DeleteCluster(request);
}

StatusOr<google::bigtable::admin::v2::AppProfile>
BigtableInstanceAdminTracingConnection::CreateAppProfile(
    google::bigtable::admin::v2::CreateAppProfileRequest const& request) {
  return child_->CreateAppProfile(request);
}

StatusOr<google::bigtable::admin::v2::AppProfile>
BigtableInstanceAdminTracingConnection::GetAppProfile(
    google::bigtable::admin::v2::GetAppProfileRequest const& request) {
  return child_->GetAppProfile(request);
}

StreamRange<google::bigtable::admin::v2::AppProfile>
BigtableInstanceAdminTracingConnection::ListAppProfiles(
    google::bigtable::admin::v2::ListAppProfilesRequest request) {
  return child_->ListAppProfiles(request);
}

future<StatusOr<google::bigtable::admin::v2::AppProfile>>
BigtableInstanceAdminTracingConnection::UpdateAppProfile(
    google::bigtable::admin::v2::UpdateAppProfileRequest const& request) {
  return child_->UpdateAppProfile(request);
}

Status BigtableInstanceAdminTracingConnection::DeleteAppProfile(
    google::bigtable::admin::v2::DeleteAppProfileRequest const& request) {
  return child_->DeleteAppProfile(request);
}

StatusOr<google::iam::v1::Policy>
BigtableInstanceAdminTracingConnection::GetIamPolicy(
    google::iam::v1::GetIamPolicyRequest const& request) {
  return child_->GetIamPolicy(request);
}

StatusOr<google::iam::v1::Policy>
BigtableInstanceAdminTracingConnection::SetIamPolicy(
    google::iam::v1::SetIamPolicyRequest const& request) {
  return child_->SetIamPolicy(request);
}

StatusOr<google::iam::v1::TestIamPermissionsResponse>
BigtableInstanceAdminTracingConnection::TestIamPermissions(
    google::iam::v1::TestIamPermissionsRequest const& request) {
  return child_->TestIamPermissions(request);
}

StreamRange<google::bigtable::admin::v2::HotTablet>
BigtableInstanceAdminTracingConnection::ListHotTablets(
    google::bigtable::admin::v2::ListHotTabletsRequest request) {
  return child_->ListHotTablets(request);
}

#endif  // GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace bigtable_admin_internal
}  // namespace cloud
}  // namespace google
