// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/bigtable/admin/v2/bigtable_instance_admin.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BIGTABLE_ADMIN_BIGTABLE_INSTANCE_ADMIN_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BIGTABLE_ADMIN_BIGTABLE_INSTANCE_ADMIN_CLIENT_H

#include "google/cloud/bigtable/admin/bigtable_instance_admin_connection.h"
#include "google/cloud/future.h"
#include "google/cloud/iam_updater.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <google/longrunning/operations.grpc.pb.h>
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace bigtable_admin {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

/**
 * Service for creating, configuring, and deleting Cloud Bigtable Instances and
 * Clusters. Provides access to the Instance and Cluster schemas only, not the
 * tables' metadata or data stored in those tables.
 */
class BigtableInstanceAdminClient {
 public:
  explicit BigtableInstanceAdminClient(
      std::shared_ptr<BigtableInstanceAdminConnection> connection);
  ~BigtableInstanceAdminClient();

  //@{
  // @name Copy and move support
  BigtableInstanceAdminClient(BigtableInstanceAdminClient const&) = default;
  BigtableInstanceAdminClient& operator=(BigtableInstanceAdminClient const&) =
      default;
  BigtableInstanceAdminClient(BigtableInstanceAdminClient&&) = default;
  BigtableInstanceAdminClient& operator=(BigtableInstanceAdminClient&&) =
      default;
  //@}

  //@{
  // @name Equality
  friend bool operator==(BigtableInstanceAdminClient const& a,
                         BigtableInstanceAdminClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(BigtableInstanceAdminClient const& a,
                         BigtableInstanceAdminClient const& b) {
    return !(a == b);
  }
  //@}

  /**
   * Create an instance within a project.
   *
   * @param parent  Required. The unique name of the project in which to create
   * the new instance. Values are of the form `projects/{project}`.
   * @param instance_id  Required. The ID to be used when referring to the new
   * instance within its project, e.g., just `myinstance` rather than
   *  `projects/myproject/instances/myinstance`.
   * @param instance  Required. The instance to create.
   *  Fields marked `OutputOnly` must be left blank.
   * @param clusters  Required. The clusters to be created within the instance,
   * mapped by desired cluster ID, e.g., just `mycluster` rather than
   *  `projects/myproject/instances/myinstance/clusters/mycluster`.
   *  Fields marked `OutputOnly` must be left blank.
   *  Currently, at most four clusters can be specified.
   * @return
   * @googleapis_link{google::bigtable::admin::v2::Instance,google/bigtable/admin/v2/instance.proto#L41}
   */
  future<StatusOr<google::bigtable::admin::v2::Instance>> CreateInstance(
      std::string const& parent, std::string const& instance_id,
      google::bigtable::admin::v2::Instance const& instance,
      std::map<std::string, google::bigtable::admin::v2::Cluster> const&
          clusters);

  /**
   * Gets information about an instance.
   *
   * @param name  Required. The unique name of the requested instance. Values
   * are of the form `projects/{project}/instances/{instance}`.
   * @return
   * @googleapis_link{google::bigtable::admin::v2::Instance,google/bigtable/admin/v2/instance.proto#L41}
   */
  StatusOr<google::bigtable::admin::v2::Instance> GetInstance(
      std::string const& name);

  /**
   * Lists information about instances in a project.
   *
   * @param parent  Required. The unique name of the project for which a list of
   * instances is requested. Values are of the form `projects/{project}`.
   * @return
   * @googleapis_link{google::bigtable::admin::v2::ListInstancesResponse,google/bigtable/admin/v2/bigtable_instance_admin.proto#L295}
   */
  StatusOr<google::bigtable::admin::v2::ListInstancesResponse> ListInstances(
      std::string const& parent);

  /**
   * Partially updates an instance within a project. This method can modify all
   * fields of an Instance and is the preferred way to update an Instance.
   *
   * @param instance  Required. The Instance which will (partially) replace the
   * current value.
   * @param update_mask  Required. The subset of Instance fields which should be
   * replaced. Must be explicitly set.
   * @return
   * @googleapis_link{google::bigtable::admin::v2::Instance,google/bigtable/admin/v2/instance.proto#L41}
   */
  future<StatusOr<google::bigtable::admin::v2::Instance>> PartialUpdateInstance(
      google::bigtable::admin::v2::Instance const& instance,
      google::protobuf::FieldMask const& update_mask);

  /**
   * Delete an instance from a project.
   *
   * @param name  Required. The unique name of the instance to be deleted.
   *  Values are of the form `projects/{project}/instances/{instance}`.
   */
  Status DeleteInstance(std::string const& name);

  /**
   * Creates a cluster within an instance.
   *
   * @param parent  Required. The unique name of the instance in which to create
   * the new cluster. Values are of the form
   *  `projects/{project}/instances/{instance}`.
   * @param cluster_id  Required. The ID to be used when referring to the new
   * cluster within its instance, e.g., just `mycluster` rather than
   *  `projects/myproject/instances/myinstance/clusters/mycluster`.
   * @param cluster  Required. The cluster to be created.
   *  Fields marked `OutputOnly` must be left blank.
   * @return
   * @googleapis_link{google::bigtable::admin::v2::Cluster,google/bigtable/admin/v2/instance.proto#L120}
   */
  future<StatusOr<google::bigtable::admin::v2::Cluster>> CreateCluster(
      std::string const& parent, std::string const& cluster_id,
      google::bigtable::admin::v2::Cluster const& cluster);

  /**
   * Gets information about a cluster.
   *
   * @param name  Required. The unique name of the requested cluster. Values are
   * of the form `projects/{project}/instances/{instance}/clusters/{cluster}`.
   * @return
   * @googleapis_link{google::bigtable::admin::v2::Cluster,google/bigtable/admin/v2/instance.proto#L120}
   */
  StatusOr<google::bigtable::admin::v2::Cluster> GetCluster(
      std::string const& name);

  /**
   * Lists information about clusters in an instance.
   *
   * @param parent  Required. The unique name of the instance for which a list
   * of clusters is requested. Values are of the form
   * `projects/{project}/instances/{instance}`. Use `{instance} = '-'` to list
   * Clusters for all Instances in a project, e.g.,
   * `projects/myproject/instances/-`.
   * @return
   * @googleapis_link{google::bigtable::admin::v2::ListClustersResponse,google/bigtable/admin/v2/bigtable_instance_admin.proto#L385}
   */
  StatusOr<google::bigtable::admin::v2::ListClustersResponse> ListClusters(
      std::string const& parent);

  /**
   * Deletes a cluster from an instance.
   *
   * @param name  Required. The unique name of the cluster to be deleted. Values
   * are of the form
   *  `projects/{project}/instances/{instance}/clusters/{cluster}`.
   */
  Status DeleteCluster(std::string const& name);

  /**
   * Creates an app profile within an instance.
   *
   * @param parent  Required. The unique name of the instance in which to create
   * the new app profile. Values are of the form
   *  `projects/{project}/instances/{instance}`.
   * @param app_profile_id  Required. The ID to be used when referring to the
   * new app profile within its instance, e.g., just `myprofile` rather than
   *  `projects/myproject/instances/myinstance/appProfiles/myprofile`.
   * @param app_profile  Required. The app profile to be created.
   *  Fields marked `OutputOnly` will be ignored.
   * @return
   * @googleapis_link{google::bigtable::admin::v2::AppProfile,google/bigtable/admin/v2/instance.proto#L199}
   */
  StatusOr<google::bigtable::admin::v2::AppProfile> CreateAppProfile(
      std::string const& parent, std::string const& app_profile_id,
      google::bigtable::admin::v2::AppProfile const& app_profile);

  /**
   * Gets information about an app profile.
   *
   * @param name  Required. The unique name of the requested app profile. Values
   * are of the form
   *  `projects/{project}/instances/{instance}/appProfiles/{app_profile}`.
   * @return
   * @googleapis_link{google::bigtable::admin::v2::AppProfile,google/bigtable/admin/v2/instance.proto#L199}
   */
  StatusOr<google::bigtable::admin::v2::AppProfile> GetAppProfile(
      std::string const& name);

  /**
   * Lists information about app profiles in an instance.
   *
   * @param parent  Required. The unique name of the instance for which a list
   * of app profiles is requested. Values are of the form
   *  `projects/{project}/instances/{instance}`.
   *  Use `{instance} = '-'` to list AppProfiles for all Instances in a project,
   *  e.g., `projects/myproject/instances/-`.
   * @return
   * @googleapis_link{google::bigtable::admin::v2::AppProfile,google/bigtable/admin/v2/instance.proto#L199}
   */
  StreamRange<google::bigtable::admin::v2::AppProfile> ListAppProfiles(
      std::string const& parent);

  /**
   * Updates an app profile within an instance.
   *
   * @param app_profile  Required. The app profile which will (partially)
   * replace the current value.
   * @param update_mask  Required. The subset of app profile fields which should
   * be replaced. If unset, all fields will be replaced.
   * @return
   * @googleapis_link{google::bigtable::admin::v2::AppProfile,google/bigtable/admin/v2/instance.proto#L199}
   */
  future<StatusOr<google::bigtable::admin::v2::AppProfile>> UpdateAppProfile(
      google::bigtable::admin::v2::AppProfile const& app_profile,
      google::protobuf::FieldMask const& update_mask);

  /**
   * Deletes an app profile from an instance.
   *
   * @param name  Required. The unique name of the app profile to be deleted.
   * Values are of the form
   *  `projects/{project}/instances/{instance}/appProfiles/{app_profile}`.
   */
  Status DeleteAppProfile(std::string const& name);

  /**
   * Gets the access control policy for an instance resource. Returns an empty
   * policy if an instance exists but does not have a policy set.
   *
   * @param resource  REQUIRED: The resource for which the policy is being
   * requested. See the operation documentation for the appropriate value for
   * this field.
   * @return
   * @googleapis_link{google::iam::v1::Policy,google/iam/v1/policy.proto#L88}
   */
  StatusOr<google::iam::v1::Policy> GetIamPolicy(std::string const& resource);

  /**
   * Sets the access control policy on an instance resource. Replaces any
   * existing policy.
   *
   * @param resource  REQUIRED: The resource for which the policy is being
   * specified. See the operation documentation for the appropriate value for
   * this field.
   * @param policy  REQUIRED: The complete policy to be applied to the
   * `resource`. The size of the policy is limited to a few 10s of KB. An empty
   * policy is a valid policy but certain Cloud Platform services (such as
   * Projects) might reject them.
   * @return
   * @googleapis_link{google::iam::v1::Policy,google/iam/v1/policy.proto#L88}
   */
  StatusOr<google::iam::v1::Policy> SetIamPolicy(
      std::string const& resource, google::iam::v1::Policy const& policy);

  /**
   * Updates the IAM policy for @p resource using an optimistic concurrency
   * control loop.
   *
   * The loop fetches the current policy for @p resource, and passes it to @p
   * updater, which should return the new policy. This new policy should use the
   * current etag so that the read-modify-write cycle can detect races and rerun
   * the update when there is a mismatch. If the new policy does not have an
   * etag, the existing policy will be blindly overwritten. If @p updater does
   * not yield a policy, the control loop is terminated and kCancelled is
   * returned.
   *
   * @param resource  Required. The resource for which the policy is being
   * specified. See the operation documentation for the appropriate value for
   * this field.
   * @param updater  Required. Functor to map the current policy to a new one.
   * @param options  Optional. Options to control the loop. Expected options
   * are:
   *       - `BigtableInstanceAdminBackoffPolicyOption`
   * @return google::iam::v1::Policy
   */
  StatusOr<google::iam::v1::Policy> SetIamPolicy(std::string const& resource,
                                                 IamUpdater const& updater,
                                                 Options options = {});

  /**
   * Returns permissions that the caller has on the specified instance resource.
   *
   * @param resource  REQUIRED: The resource for which the policy detail is
   * being requested. See the operation documentation for the appropriate value
   * for this field.
   * @param permissions  The set of permissions to check for the `resource`.
   * Permissions with wildcards (such as '*' or 'storage.*') are not allowed.
   * For more information see [IAM
   * Overview](https://cloud.google.com/iam/docs/overview#permissions).
   * @return
   * @googleapis_link{google::iam::v1::TestIamPermissionsResponse,google/iam/v1/iam_policy.proto#L141}
   */
  StatusOr<google::iam::v1::TestIamPermissionsResponse> TestIamPermissions(
      std::string const& resource, std::vector<std::string> const& permissions);

  /**
   * Create an instance within a project.
   *
   * @param request
   * @googleapis_link{google::bigtable::admin::v2::CreateInstanceRequest,google/bigtable/admin/v2/bigtable_instance_admin.proto#L240}
   * @return
   * @googleapis_link{google::bigtable::admin::v2::Instance,google/bigtable/admin/v2/instance.proto#L41}
   */
  future<StatusOr<google::bigtable::admin::v2::Instance>> CreateInstance(
      google::bigtable::admin::v2::CreateInstanceRequest const& request);

  /**
   * Gets information about an instance.
   *
   * @param request
   * @googleapis_link{google::bigtable::admin::v2::GetInstanceRequest,google/bigtable/admin/v2/bigtable_instance_admin.proto#L268}
   * @return
   * @googleapis_link{google::bigtable::admin::v2::Instance,google/bigtable/admin/v2/instance.proto#L41}
   */
  StatusOr<google::bigtable::admin::v2::Instance> GetInstance(
      google::bigtable::admin::v2::GetInstanceRequest const& request);

  /**
   * Lists information about instances in a project.
   *
   * @param request
   * @googleapis_link{google::bigtable::admin::v2::ListInstancesRequest,google/bigtable/admin/v2/bigtable_instance_admin.proto#L280}
   * @return
   * @googleapis_link{google::bigtable::admin::v2::ListInstancesResponse,google/bigtable/admin/v2/bigtable_instance_admin.proto#L295}
   */
  StatusOr<google::bigtable::admin::v2::ListInstancesResponse> ListInstances(
      google::bigtable::admin::v2::ListInstancesRequest const& request);

  /**
   * Updates an instance within a project. This method updates only the display
   * name and type for an Instance. To update other Instance properties, such as
   * labels, use PartialUpdateInstance.
   *
   * @param request
   * @googleapis_link{google::bigtable::admin::v2::Instance,google/bigtable/admin/v2/instance.proto#L41}
   * @return
   * @googleapis_link{google::bigtable::admin::v2::Instance,google/bigtable/admin/v2/instance.proto#L41}
   */
  StatusOr<google::bigtable::admin::v2::Instance> UpdateInstance(
      google::bigtable::admin::v2::Instance const& request);

  /**
   * Partially updates an instance within a project. This method can modify all
   * fields of an Instance and is the preferred way to update an Instance.
   *
   * @param request
   * @googleapis_link{google::bigtable::admin::v2::PartialUpdateInstanceRequest,google/bigtable/admin/v2/bigtable_instance_admin.proto#L312}
   * @return
   * @googleapis_link{google::bigtable::admin::v2::Instance,google/bigtable/admin/v2/instance.proto#L41}
   */
  future<StatusOr<google::bigtable::admin::v2::Instance>> PartialUpdateInstance(
      google::bigtable::admin::v2::PartialUpdateInstanceRequest const& request);

  /**
   * Delete an instance from a project.
   *
   * @param request
   * @googleapis_link{google::bigtable::admin::v2::DeleteInstanceRequest,google/bigtable/admin/v2/bigtable_instance_admin.proto#L322}
   */
  Status DeleteInstance(
      google::bigtable::admin::v2::DeleteInstanceRequest const& request);

  /**
   * Creates a cluster within an instance.
   *
   * @param request
   * @googleapis_link{google::bigtable::admin::v2::CreateClusterRequest,google/bigtable/admin/v2/bigtable_instance_admin.proto#L334}
   * @return
   * @googleapis_link{google::bigtable::admin::v2::Cluster,google/bigtable/admin/v2/instance.proto#L120}
   */
  future<StatusOr<google::bigtable::admin::v2::Cluster>> CreateCluster(
      google::bigtable::admin::v2::CreateClusterRequest const& request);

  /**
   * Gets information about a cluster.
   *
   * @param request
   * @googleapis_link{google::bigtable::admin::v2::GetClusterRequest,google/bigtable/admin/v2/bigtable_instance_admin.proto#L356}
   * @return
   * @googleapis_link{google::bigtable::admin::v2::Cluster,google/bigtable/admin/v2/instance.proto#L120}
   */
  StatusOr<google::bigtable::admin::v2::Cluster> GetCluster(
      google::bigtable::admin::v2::GetClusterRequest const& request);

  /**
   * Lists information about clusters in an instance.
   *
   * @param request
   * @googleapis_link{google::bigtable::admin::v2::ListClustersRequest,google/bigtable/admin/v2/bigtable_instance_admin.proto#L368}
   * @return
   * @googleapis_link{google::bigtable::admin::v2::ListClustersResponse,google/bigtable/admin/v2/bigtable_instance_admin.proto#L385}
   */
  StatusOr<google::bigtable::admin::v2::ListClustersResponse> ListClusters(
      google::bigtable::admin::v2::ListClustersRequest const& request);

  /**
   * Updates a cluster within an instance.
   *
   * @param request
   * @googleapis_link{google::bigtable::admin::v2::Cluster,google/bigtable/admin/v2/instance.proto#L120}
   * @return
   * @googleapis_link{google::bigtable::admin::v2::Cluster,google/bigtable/admin/v2/instance.proto#L120}
   */
  future<StatusOr<google::bigtable::admin::v2::Cluster>> UpdateCluster(
      google::bigtable::admin::v2::Cluster const& request);

  /**
   * Deletes a cluster from an instance.
   *
   * @param request
   * @googleapis_link{google::bigtable::admin::v2::DeleteClusterRequest,google/bigtable/admin/v2/bigtable_instance_admin.proto#L401}
   */
  Status DeleteCluster(
      google::bigtable::admin::v2::DeleteClusterRequest const& request);

  /**
   * Creates an app profile within an instance.
   *
   * @param request
   * @googleapis_link{google::bigtable::admin::v2::CreateAppProfileRequest,google/bigtable/admin/v2/bigtable_instance_admin.proto#L461}
   * @return
   * @googleapis_link{google::bigtable::admin::v2::AppProfile,google/bigtable/admin/v2/instance.proto#L199}
   */
  StatusOr<google::bigtable::admin::v2::AppProfile> CreateAppProfile(
      google::bigtable::admin::v2::CreateAppProfileRequest const& request);

  /**
   * Gets information about an app profile.
   *
   * @param request
   * @googleapis_link{google::bigtable::admin::v2::GetAppProfileRequest,google/bigtable/admin/v2/bigtable_instance_admin.proto#L486}
   * @return
   * @googleapis_link{google::bigtable::admin::v2::AppProfile,google/bigtable/admin/v2/instance.proto#L199}
   */
  StatusOr<google::bigtable::admin::v2::AppProfile> GetAppProfile(
      google::bigtable::admin::v2::GetAppProfileRequest const& request);

  /**
   * Lists information about app profiles in an instance.
   *
   * @param request
   * @googleapis_link{google::bigtable::admin::v2::ListAppProfilesRequest,google/bigtable/admin/v2/bigtable_instance_admin.proto#L498}
   * @return
   * @googleapis_link{google::bigtable::admin::v2::AppProfile,google/bigtable/admin/v2/instance.proto#L199}
   */
  StreamRange<google::bigtable::admin::v2::AppProfile> ListAppProfiles(
      google::bigtable::admin::v2::ListAppProfilesRequest request);

  /**
   * Updates an app profile within an instance.
   *
   * @param request
   * @googleapis_link{google::bigtable::admin::v2::UpdateAppProfileRequest,google/bigtable/admin/v2/bigtable_instance_admin.proto#L544}
   * @return
   * @googleapis_link{google::bigtable::admin::v2::AppProfile,google/bigtable/admin/v2/instance.proto#L199}
   */
  future<StatusOr<google::bigtable::admin::v2::AppProfile>> UpdateAppProfile(
      google::bigtable::admin::v2::UpdateAppProfileRequest const& request);

  /**
   * Deletes an app profile from an instance.
   *
   * @param request
   * @googleapis_link{google::bigtable::admin::v2::DeleteAppProfileRequest,google/bigtable/admin/v2/bigtable_instance_admin.proto#L557}
   */
  Status DeleteAppProfile(
      google::bigtable::admin::v2::DeleteAppProfileRequest const& request);

  /**
   * Gets the access control policy for an instance resource. Returns an empty
   * policy if an instance exists but does not have a policy set.
   *
   * @param request
   * @googleapis_link{google::iam::v1::GetIamPolicyRequest,google/iam/v1/iam_policy.proto#L113}
   * @return
   * @googleapis_link{google::iam::v1::Policy,google/iam/v1/policy.proto#L88}
   */
  StatusOr<google::iam::v1::Policy> GetIamPolicy(
      google::iam::v1::GetIamPolicyRequest const& request);

  /**
   * Sets the access control policy on an instance resource. Replaces any
   * existing policy.
   *
   * @param request
   * @googleapis_link{google::iam::v1::SetIamPolicyRequest,google/iam/v1/iam_policy.proto#L98}
   * @return
   * @googleapis_link{google::iam::v1::Policy,google/iam/v1/policy.proto#L88}
   */
  StatusOr<google::iam::v1::Policy> SetIamPolicy(
      google::iam::v1::SetIamPolicyRequest const& request);

  /**
   * Returns permissions that the caller has on the specified instance resource.
   *
   * @param request
   * @googleapis_link{google::iam::v1::TestIamPermissionsRequest,google/iam/v1/iam_policy.proto#L126}
   * @return
   * @googleapis_link{google::iam::v1::TestIamPermissionsResponse,google/iam/v1/iam_policy.proto#L141}
   */
  StatusOr<google::iam::v1::TestIamPermissionsResponse> TestIamPermissions(
      google::iam::v1::TestIamPermissionsRequest const& request);

 private:
  std::shared_ptr<BigtableInstanceAdminConnection> connection_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace bigtable_admin
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BIGTABLE_ADMIN_BIGTABLE_INSTANCE_ADMIN_CLIENT_H
