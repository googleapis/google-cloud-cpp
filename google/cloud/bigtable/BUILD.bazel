# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

package(default_visibility = ["//visibility:private"])

licenses(["notice"])  # Apache 2.0

load(":google_cloud_cpp_bigtable.bzl", "google_cloud_cpp_bigtable_hdrs", "google_cloud_cpp_bigtable_srcs")
load(":google_cloud_cpp_bigtable_mocks.bzl", "google_cloud_cpp_bigtable_mocks_hdrs")
load(":bigtable_client_testing.bzl", "bigtable_client_testing_hdrs", "bigtable_client_testing_srcs")
load(":bigtable_client_unit_tests.bzl", "bigtable_client_unit_tests")

filegroup(
    name = "public_hdrs",
    srcs = [h for h in google_cloud_cpp_bigtable_hdrs if not h.startswith("internal/")],
    visibility = ["//:__pkg__"],
)

cc_library(
    name = "google_cloud_cpp_bigtable",
    srcs = google_cloud_cpp_bigtable_srcs,
    hdrs = google_cloud_cpp_bigtable_hdrs,
    visibility = [
        ":__subpackages__",
        "//:__pkg__",
    ],
    # Do not sort: grpc++ must come last
    deps = [
        "//:common",
        "//:grpc_utils",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_googleapis//google/bigtable/admin/v2:admin_cc_grpc",
        "@com_google_googleapis//google/bigtable/v2:bigtable_cc_grpc",
        "@com_google_googleapis//google/longrunning:longrunning_cc_grpc",
        "@com_google_googleapis//google/rpc:error_details_cc_proto",
        "@com_github_grpc_grpc//:grpc++",
    ],
)

filegroup(
    name = "mocks",
    srcs = [h for h in google_cloud_cpp_bigtable_mocks_hdrs if not h.startswith("internal/")],
    visibility = ["//:__pkg__"],
)

cc_library(
    name = "google_cloud_cpp_bigtable_mocks",
    testonly = True,
    srcs = [],
    hdrs = google_cloud_cpp_bigtable_mocks_hdrs,
    visibility = [
        ":__subpackages__",
        "//:__pkg__",
    ],
    deps = [
        ":google_cloud_cpp_bigtable",
        "//:common",
        "//google/cloud/testing_util:google_cloud_cpp_testing_private",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "bigtable_client_testing",
    testonly = True,
    srcs = bigtable_client_testing_srcs,
    hdrs = bigtable_client_testing_hdrs,
    visibility = ["//visibility:public"],
    deps = [
        ":google_cloud_cpp_bigtable",
        ":google_cloud_cpp_bigtable_mocks",
        "//:common",
        "//:grpc_utils",
        "//google/cloud/testing_util:google_cloud_cpp_testing_grpc_private",
        "//google/cloud/testing_util:google_cloud_cpp_testing_private",
        "@com_google_googletest//:gtest_main",
    ],
)

[cc_test(
    name = test.replace("/", "_").replace(".cc", ""),
    srcs = [test],
    deps = [
        ":bigtable_client_testing",
        ":google_cloud_cpp_bigtable",
        "//:common",
        "//:grpc_utils",
        "//google/cloud/testing_util:google_cloud_cpp_testing_grpc_private",
        "//google/cloud/testing_util:google_cloud_cpp_testing_private",
        "@com_google_googletest//:gtest_main",
    ],
) for test in bigtable_client_unit_tests]

cc_test(
    name = "internal_readrowsparser_test",
    srcs = [
        "internal/readrowsparser_acceptance_tests.inc",
        "internal/readrowsparser_test.cc",
    ],
    deps = [
        ":bigtable_client_testing",
        ":google_cloud_cpp_bigtable",
        "//:common",
        "//:grpc_utils",
        "//google/cloud/testing_util:google_cloud_cpp_testing_grpc_private",
        "//google/cloud/testing_util:google_cloud_cpp_testing_private",
        "@com_google_googletest//:gtest_main",
    ],
)
