// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/devtools/artifactregistry/v1/service.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_ARTIFACTREGISTRY_ARTIFACT_REGISTRY_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_ARTIFACTREGISTRY_ARTIFACT_REGISTRY_CLIENT_H

#include "google/cloud/artifactregistry/artifact_registry_connection.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <google/longrunning/operations.grpc.pb.h>
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace artifactregistry {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// The Artifact Registry API service.
///
/// Artifact Registry is an artifact management system for storing artifacts
/// from different package management systems.
///
/// The resources managed by this API are:
///
/// * Repositories, which group packages and their data.
/// * Packages, which group versions and their tags.
/// * Versions, which are specific forms of a package.
/// * Tags, which represent alternative names for versions.
/// * Files, which contain content and are optionally associated with a Package
///   or Version.
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class ArtifactRegistryClient {
 public:
  explicit ArtifactRegistryClient(
      std::shared_ptr<ArtifactRegistryConnection> connection,
      Options opts = {});
  ~ArtifactRegistryClient();

  ///@{
  /// @name Copy and move support
  ArtifactRegistryClient(ArtifactRegistryClient const&) = default;
  ArtifactRegistryClient& operator=(ArtifactRegistryClient const&) = default;
  ArtifactRegistryClient(ArtifactRegistryClient&&) = default;
  ArtifactRegistryClient& operator=(ArtifactRegistryClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(ArtifactRegistryClient const& a,
                         ArtifactRegistryClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(ArtifactRegistryClient const& a,
                         ArtifactRegistryClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Lists docker images.
  ///
  /// @param parent  Required. The name of the parent resource whose docker
  /// images will be listed.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::DockerImage,google/devtools/artifactregistry/v1/artifact.proto#L37}
  ///
  /// [google.devtools.artifactregistry.v1.ListDockerImagesRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/artifact.proto#L86}
  /// [google.devtools.artifactregistry.v1.DockerImage]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/artifact.proto#L37}
  ///
  StreamRange<google::devtools::artifactregistry::v1::DockerImage>
  ListDockerImages(std::string const& parent, Options opts = {});

  ///
  /// Lists docker images.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::ListDockerImagesRequest,google/devtools/artifactregistry/v1/artifact.proto#L86}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::DockerImage,google/devtools/artifactregistry/v1/artifact.proto#L37}
  ///
  /// [google.devtools.artifactregistry.v1.ListDockerImagesRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/artifact.proto#L86}
  /// [google.devtools.artifactregistry.v1.DockerImage]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/artifact.proto#L37}
  ///
  StreamRange<google::devtools::artifactregistry::v1::DockerImage>
  ListDockerImages(
      google::devtools::artifactregistry::v1::ListDockerImagesRequest request,
      Options opts = {});

  ///
  /// Gets a docker image.
  ///
  /// @param name  Required. The name of the docker images.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::DockerImage,google/devtools/artifactregistry/v1/artifact.proto#L37}
  ///
  /// [google.devtools.artifactregistry.v1.GetDockerImageRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/artifact.proto#L108}
  /// [google.devtools.artifactregistry.v1.DockerImage]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/artifact.proto#L37}
  ///
  StatusOr<google::devtools::artifactregistry::v1::DockerImage> GetDockerImage(
      std::string const& name, Options opts = {});

  ///
  /// Gets a docker image.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::GetDockerImageRequest,google/devtools/artifactregistry/v1/artifact.proto#L108}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::DockerImage,google/devtools/artifactregistry/v1/artifact.proto#L37}
  ///
  /// [google.devtools.artifactregistry.v1.GetDockerImageRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/artifact.proto#L108}
  /// [google.devtools.artifactregistry.v1.DockerImage]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/artifact.proto#L37}
  ///
  StatusOr<google::devtools::artifactregistry::v1::DockerImage> GetDockerImage(
      google::devtools::artifactregistry::v1::GetDockerImageRequest const&
          request,
      Options opts = {});

  ///
  /// Imports Apt artifacts. The returned Operation will complete once the
  /// resources are imported. Package, Version, and File resources are created
  /// based on the imported artifacts. Imported artifacts that conflict with
  /// existing resources are ignored.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::ImportAptArtifactsRequest,google/devtools/artifactregistry/v1/apt_artifact.proto#L81}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::ImportAptArtifactsResponse,google/devtools/artifactregistry/v1/apt_artifact.proto#L105}
  ///
  /// [google.devtools.artifactregistry.v1.ImportAptArtifactsRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/apt_artifact.proto#L81}
  /// [google.devtools.artifactregistry.v1.ImportAptArtifactsResponse]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/apt_artifact.proto#L105}
  ///
  future<StatusOr<
      google::devtools::artifactregistry::v1::ImportAptArtifactsResponse>>
  ImportAptArtifacts(
      google::devtools::artifactregistry::v1::ImportAptArtifactsRequest const&
          request,
      Options opts = {});

  ///
  /// Imports Yum (RPM) artifacts. The returned Operation will complete once the
  /// resources are imported. Package, Version, and File resources are created
  /// based on the imported artifacts. Imported artifacts that conflict with
  /// existing resources are ignored.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::ImportYumArtifactsRequest,google/devtools/artifactregistry/v1/yum_artifact.proto#L73}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::ImportYumArtifactsResponse,google/devtools/artifactregistry/v1/yum_artifact.proto#L97}
  ///
  /// [google.devtools.artifactregistry.v1.ImportYumArtifactsRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/yum_artifact.proto#L73}
  /// [google.devtools.artifactregistry.v1.ImportYumArtifactsResponse]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/yum_artifact.proto#L97}
  ///
  future<StatusOr<
      google::devtools::artifactregistry::v1::ImportYumArtifactsResponse>>
  ImportYumArtifacts(
      google::devtools::artifactregistry::v1::ImportYumArtifactsRequest const&
          request,
      Options opts = {});

  ///
  /// Lists repositories.
  ///
  /// @param parent  Required. The name of the parent resource whose
  /// repositories will be listed.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Repository,google/devtools/artifactregistry/v1/repository.proto#L33}
  ///
  /// [google.devtools.artifactregistry.v1.ListRepositoriesRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/repository.proto#L127}
  /// [google.devtools.artifactregistry.v1.Repository]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/repository.proto#L33}
  ///
  StreamRange<google::devtools::artifactregistry::v1::Repository>
  ListRepositories(std::string const& parent, Options opts = {});

  ///
  /// Lists repositories.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::ListRepositoriesRequest,google/devtools/artifactregistry/v1/repository.proto#L127}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Repository,google/devtools/artifactregistry/v1/repository.proto#L33}
  ///
  /// [google.devtools.artifactregistry.v1.ListRepositoriesRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/repository.proto#L127}
  /// [google.devtools.artifactregistry.v1.Repository]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/repository.proto#L33}
  ///
  StreamRange<google::devtools::artifactregistry::v1::Repository>
  ListRepositories(
      google::devtools::artifactregistry::v1::ListRepositoriesRequest request,
      Options opts = {});

  ///
  /// Gets a repository.
  ///
  /// @param name  Required. The name of the repository to retrieve.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Repository,google/devtools/artifactregistry/v1/repository.proto#L33}
  ///
  /// [google.devtools.artifactregistry.v1.GetRepositoryRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/repository.proto#L154}
  /// [google.devtools.artifactregistry.v1.Repository]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/repository.proto#L33}
  ///
  StatusOr<google::devtools::artifactregistry::v1::Repository> GetRepository(
      std::string const& name, Options opts = {});

  ///
  /// Gets a repository.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::GetRepositoryRequest,google/devtools/artifactregistry/v1/repository.proto#L154}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Repository,google/devtools/artifactregistry/v1/repository.proto#L33}
  ///
  /// [google.devtools.artifactregistry.v1.GetRepositoryRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/repository.proto#L154}
  /// [google.devtools.artifactregistry.v1.Repository]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/repository.proto#L33}
  ///
  StatusOr<google::devtools::artifactregistry::v1::Repository> GetRepository(
      google::devtools::artifactregistry::v1::GetRepositoryRequest const&
          request,
      Options opts = {});

  ///
  /// Creates a repository. The returned Operation will finish once the
  /// repository has been created. Its response will be the created Repository.
  ///
  /// @param parent  Required. The name of the parent resource where the
  /// repository will be created.
  /// @param repository  The repository to be created.
  /// @param repository_id  The repository id to use for this repository.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Repository,google/devtools/artifactregistry/v1/repository.proto#L33}
  ///
  /// [google.devtools.artifactregistry.v1.CreateRepositoryRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/repository.proto#L165}
  /// [google.devtools.artifactregistry.v1.Repository]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/repository.proto#L33}
  ///
  future<StatusOr<google::devtools::artifactregistry::v1::Repository>>
  CreateRepository(
      std::string const& parent,
      google::devtools::artifactregistry::v1::Repository const& repository,
      std::string const& repository_id, Options opts = {});

  ///
  /// Creates a repository. The returned Operation will finish once the
  /// repository has been created. Its response will be the created Repository.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::CreateRepositoryRequest,google/devtools/artifactregistry/v1/repository.proto#L165}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Repository,google/devtools/artifactregistry/v1/repository.proto#L33}
  ///
  /// [google.devtools.artifactregistry.v1.CreateRepositoryRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/repository.proto#L165}
  /// [google.devtools.artifactregistry.v1.Repository]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/repository.proto#L33}
  ///
  future<StatusOr<google::devtools::artifactregistry::v1::Repository>>
  CreateRepository(
      google::devtools::artifactregistry::v1::CreateRepositoryRequest const&
          request,
      Options opts = {});

  ///
  /// Updates a repository.
  ///
  /// @param repository  The repository that replaces the resource on the
  /// server.
  /// @param update_mask  The update mask applies to the resource. For the
  /// `FieldMask` definition,
  ///  see
  ///  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Repository,google/devtools/artifactregistry/v1/repository.proto#L33}
  ///
  /// [google.devtools.artifactregistry.v1.UpdateRepositoryRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/repository.proto#L182}
  /// [google.devtools.artifactregistry.v1.Repository]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/repository.proto#L33}
  ///
  StatusOr<google::devtools::artifactregistry::v1::Repository> UpdateRepository(
      google::devtools::artifactregistry::v1::Repository const& repository,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Updates a repository.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::UpdateRepositoryRequest,google/devtools/artifactregistry/v1/repository.proto#L182}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Repository,google/devtools/artifactregistry/v1/repository.proto#L33}
  ///
  /// [google.devtools.artifactregistry.v1.UpdateRepositoryRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/repository.proto#L182}
  /// [google.devtools.artifactregistry.v1.Repository]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/repository.proto#L33}
  ///
  StatusOr<google::devtools::artifactregistry::v1::Repository> UpdateRepository(
      google::devtools::artifactregistry::v1::UpdateRepositoryRequest const&
          request,
      Options opts = {});

  ///
  /// Deletes a repository and all of its contents. The returned Operation will
  /// finish once the repository has been deleted. It will not have any
  /// Operation metadata and will return a google.protobuf.Empty response.
  ///
  /// @param name  Required. The name of the repository to delete.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::OperationMetadata,google/devtools/artifactregistry/v1/service.proto#L319}
  ///
  /// [google.devtools.artifactregistry.v1.DeleteRepositoryRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/repository.proto#L193}
  /// [google.devtools.artifactregistry.v1.OperationMetadata]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/service.proto#L319}
  ///
  future<StatusOr<google::devtools::artifactregistry::v1::OperationMetadata>>
  DeleteRepository(std::string const& name, Options opts = {});

  ///
  /// Deletes a repository and all of its contents. The returned Operation will
  /// finish once the repository has been deleted. It will not have any
  /// Operation metadata and will return a google.protobuf.Empty response.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::DeleteRepositoryRequest,google/devtools/artifactregistry/v1/repository.proto#L193}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::OperationMetadata,google/devtools/artifactregistry/v1/service.proto#L319}
  ///
  /// [google.devtools.artifactregistry.v1.DeleteRepositoryRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/repository.proto#L193}
  /// [google.devtools.artifactregistry.v1.OperationMetadata]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/service.proto#L319}
  ///
  future<StatusOr<google::devtools::artifactregistry::v1::OperationMetadata>>
  DeleteRepository(
      google::devtools::artifactregistry::v1::DeleteRepositoryRequest const&
          request,
      Options opts = {});

  ///
  /// Lists packages.
  ///
  /// @param parent  Required. The name of the parent resource whose packages
  /// will be listed.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Package,google/devtools/artifactregistry/v1/package.proto#L31}
  ///
  /// [google.devtools.artifactregistry.v1.ListPackagesRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/package.proto#L50}
  /// [google.devtools.artifactregistry.v1.Package]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/package.proto#L31}
  ///
  StreamRange<google::devtools::artifactregistry::v1::Package> ListPackages(
      std::string const& parent, Options opts = {});

  ///
  /// Lists packages.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::ListPackagesRequest,google/devtools/artifactregistry/v1/package.proto#L50}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Package,google/devtools/artifactregistry/v1/package.proto#L31}
  ///
  /// [google.devtools.artifactregistry.v1.ListPackagesRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/package.proto#L50}
  /// [google.devtools.artifactregistry.v1.Package]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/package.proto#L31}
  ///
  StreamRange<google::devtools::artifactregistry::v1::Package> ListPackages(
      google::devtools::artifactregistry::v1::ListPackagesRequest request,
      Options opts = {});

  ///
  /// Gets a package.
  ///
  /// @param name  Required. The name of the package to retrieve.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Package,google/devtools/artifactregistry/v1/package.proto#L31}
  ///
  /// [google.devtools.artifactregistry.v1.GetPackageRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/package.proto#L74}
  /// [google.devtools.artifactregistry.v1.Package]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/package.proto#L31}
  ///
  StatusOr<google::devtools::artifactregistry::v1::Package> GetPackage(
      std::string const& name, Options opts = {});

  ///
  /// Gets a package.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::GetPackageRequest,google/devtools/artifactregistry/v1/package.proto#L74}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Package,google/devtools/artifactregistry/v1/package.proto#L31}
  ///
  /// [google.devtools.artifactregistry.v1.GetPackageRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/package.proto#L74}
  /// [google.devtools.artifactregistry.v1.Package]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/package.proto#L31}
  ///
  StatusOr<google::devtools::artifactregistry::v1::Package> GetPackage(
      google::devtools::artifactregistry::v1::GetPackageRequest const& request,
      Options opts = {});

  ///
  /// Deletes a package and all of its versions and tags. The returned operation
  /// will complete once the package has been deleted.
  ///
  /// @param name  Required. The name of the package to delete.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::OperationMetadata,google/devtools/artifactregistry/v1/service.proto#L319}
  ///
  /// [google.devtools.artifactregistry.v1.DeletePackageRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/package.proto#L82}
  /// [google.devtools.artifactregistry.v1.OperationMetadata]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/service.proto#L319}
  ///
  future<StatusOr<google::devtools::artifactregistry::v1::OperationMetadata>>
  DeletePackage(std::string const& name, Options opts = {});

  ///
  /// Deletes a package and all of its versions and tags. The returned operation
  /// will complete once the package has been deleted.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::DeletePackageRequest,google/devtools/artifactregistry/v1/package.proto#L82}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::OperationMetadata,google/devtools/artifactregistry/v1/service.proto#L319}
  ///
  /// [google.devtools.artifactregistry.v1.DeletePackageRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/package.proto#L82}
  /// [google.devtools.artifactregistry.v1.OperationMetadata]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/service.proto#L319}
  ///
  future<StatusOr<google::devtools::artifactregistry::v1::OperationMetadata>>
  DeletePackage(
      google::devtools::artifactregistry::v1::DeletePackageRequest const&
          request,
      Options opts = {});

  ///
  /// Lists versions.
  ///
  /// @param parent  The name of the parent resource whose versions will be
  /// listed.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Version,google/devtools/artifactregistry/v1/version.proto#L50}
  ///
  /// [google.devtools.artifactregistry.v1.ListVersionsRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/version.proto#L83}
  /// [google.devtools.artifactregistry.v1.Version]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/version.proto#L50}
  ///
  StreamRange<google::devtools::artifactregistry::v1::Version> ListVersions(
      std::string const& parent, Options opts = {});

  ///
  /// Lists versions.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::ListVersionsRequest,google/devtools/artifactregistry/v1/version.proto#L83}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Version,google/devtools/artifactregistry/v1/version.proto#L50}
  ///
  /// [google.devtools.artifactregistry.v1.ListVersionsRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/version.proto#L83}
  /// [google.devtools.artifactregistry.v1.Version]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/version.proto#L50}
  ///
  StreamRange<google::devtools::artifactregistry::v1::Version> ListVersions(
      google::devtools::artifactregistry::v1::ListVersionsRequest request,
      Options opts = {});

  ///
  /// Gets a version
  ///
  /// @param name  The name of the version to retrieve.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Version,google/devtools/artifactregistry/v1/version.proto#L50}
  ///
  /// [google.devtools.artifactregistry.v1.GetVersionRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/version.proto#L111}
  /// [google.devtools.artifactregistry.v1.Version]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/version.proto#L50}
  ///
  StatusOr<google::devtools::artifactregistry::v1::Version> GetVersion(
      std::string const& name, Options opts = {});

  ///
  /// Gets a version
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::GetVersionRequest,google/devtools/artifactregistry/v1/version.proto#L111}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Version,google/devtools/artifactregistry/v1/version.proto#L50}
  ///
  /// [google.devtools.artifactregistry.v1.GetVersionRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/version.proto#L111}
  /// [google.devtools.artifactregistry.v1.Version]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/version.proto#L50}
  ///
  StatusOr<google::devtools::artifactregistry::v1::Version> GetVersion(
      google::devtools::artifactregistry::v1::GetVersionRequest const& request,
      Options opts = {});

  ///
  /// Deletes a version and all of its content. The returned operation will
  /// complete once the version has been deleted.
  ///
  /// @param name  The name of the version to delete.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::OperationMetadata,google/devtools/artifactregistry/v1/service.proto#L319}
  ///
  /// [google.devtools.artifactregistry.v1.DeleteVersionRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/version.proto#L120}
  /// [google.devtools.artifactregistry.v1.OperationMetadata]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/service.proto#L319}
  ///
  future<StatusOr<google::devtools::artifactregistry::v1::OperationMetadata>>
  DeleteVersion(std::string const& name, Options opts = {});

  ///
  /// Deletes a version and all of its content. The returned operation will
  /// complete once the version has been deleted.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::DeleteVersionRequest,google/devtools/artifactregistry/v1/version.proto#L120}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::OperationMetadata,google/devtools/artifactregistry/v1/service.proto#L319}
  ///
  /// [google.devtools.artifactregistry.v1.DeleteVersionRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/version.proto#L120}
  /// [google.devtools.artifactregistry.v1.OperationMetadata]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/service.proto#L319}
  ///
  future<StatusOr<google::devtools::artifactregistry::v1::OperationMetadata>>
  DeleteVersion(
      google::devtools::artifactregistry::v1::DeleteVersionRequest const&
          request,
      Options opts = {});

  ///
  /// Lists files.
  ///
  /// @param parent  The name of the repository whose files will be listed. For
  /// example:
  ///  "projects/p1/locations/us-central1/repositories/repo1
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::File,google/devtools/artifactregistry/v1/file.proto#L52}
  ///
  /// [google.devtools.artifactregistry.v1.ListFilesRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/file.proto#L80}
  /// [google.devtools.artifactregistry.v1.File]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/file.proto#L52}
  ///
  StreamRange<google::devtools::artifactregistry::v1::File> ListFiles(
      std::string const& parent, Options opts = {});

  ///
  /// Lists files.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::ListFilesRequest,google/devtools/artifactregistry/v1/file.proto#L80}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::File,google/devtools/artifactregistry/v1/file.proto#L52}
  ///
  /// [google.devtools.artifactregistry.v1.ListFilesRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/file.proto#L80}
  /// [google.devtools.artifactregistry.v1.File]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/file.proto#L52}
  ///
  StreamRange<google::devtools::artifactregistry::v1::File> ListFiles(
      google::devtools::artifactregistry::v1::ListFilesRequest request,
      Options opts = {});

  ///
  /// Gets a file.
  ///
  /// @param name  The name of the file to retrieve.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::File,google/devtools/artifactregistry/v1/file.proto#L52}
  ///
  /// [google.devtools.artifactregistry.v1.GetFileRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/file.proto#L120}
  /// [google.devtools.artifactregistry.v1.File]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/file.proto#L52}
  ///
  StatusOr<google::devtools::artifactregistry::v1::File> GetFile(
      std::string const& name, Options opts = {});

  ///
  /// Gets a file.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::GetFileRequest,google/devtools/artifactregistry/v1/file.proto#L120}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::File,google/devtools/artifactregistry/v1/file.proto#L52}
  ///
  /// [google.devtools.artifactregistry.v1.GetFileRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/file.proto#L120}
  /// [google.devtools.artifactregistry.v1.File]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/file.proto#L52}
  ///
  StatusOr<google::devtools::artifactregistry::v1::File> GetFile(
      google::devtools::artifactregistry::v1::GetFileRequest const& request,
      Options opts = {});

  ///
  /// Lists tags.
  ///
  /// @param parent  The name of the parent resource whose tags will be listed.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Tag,google/devtools/artifactregistry/v1/tag.proto#L32}
  ///
  /// [google.devtools.artifactregistry.v1.ListTagsRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/tag.proto#L53}
  /// [google.devtools.artifactregistry.v1.Tag]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/tag.proto#L32}
  ///
  StreamRange<google::devtools::artifactregistry::v1::Tag> ListTags(
      std::string const& parent, Options opts = {});

  ///
  /// Lists tags.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::ListTagsRequest,google/devtools/artifactregistry/v1/tag.proto#L53}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Tag,google/devtools/artifactregistry/v1/tag.proto#L32}
  ///
  /// [google.devtools.artifactregistry.v1.ListTagsRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/tag.proto#L53}
  /// [google.devtools.artifactregistry.v1.Tag]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/tag.proto#L32}
  ///
  StreamRange<google::devtools::artifactregistry::v1::Tag> ListTags(
      google::devtools::artifactregistry::v1::ListTagsRequest request,
      Options opts = {});

  ///
  /// Gets a tag.
  ///
  /// @param name  The name of the tag to retrieve.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Tag,google/devtools/artifactregistry/v1/tag.proto#L32}
  ///
  /// [google.devtools.artifactregistry.v1.GetTagRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/tag.proto#L86}
  /// [google.devtools.artifactregistry.v1.Tag]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/tag.proto#L32}
  ///
  StatusOr<google::devtools::artifactregistry::v1::Tag> GetTag(
      std::string const& name, Options opts = {});

  ///
  /// Gets a tag.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::GetTagRequest,google/devtools/artifactregistry/v1/tag.proto#L86}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Tag,google/devtools/artifactregistry/v1/tag.proto#L32}
  ///
  /// [google.devtools.artifactregistry.v1.GetTagRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/tag.proto#L86}
  /// [google.devtools.artifactregistry.v1.Tag]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/tag.proto#L32}
  ///
  StatusOr<google::devtools::artifactregistry::v1::Tag> GetTag(
      google::devtools::artifactregistry::v1::GetTagRequest const& request,
      Options opts = {});

  ///
  /// Creates a tag.
  ///
  /// @param parent  The name of the parent resource where the tag will be
  /// created.
  /// @param tag  The tag to be created.
  /// @param tag_id  The tag id to use for this repository.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Tag,google/devtools/artifactregistry/v1/tag.proto#L32}
  ///
  /// [google.devtools.artifactregistry.v1.CreateTagRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/tag.proto#L92}
  /// [google.devtools.artifactregistry.v1.Tag]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/tag.proto#L32}
  ///
  StatusOr<google::devtools::artifactregistry::v1::Tag> CreateTag(
      std::string const& parent,
      google::devtools::artifactregistry::v1::Tag const& tag,
      std::string const& tag_id, Options opts = {});

  ///
  /// Creates a tag.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::CreateTagRequest,google/devtools/artifactregistry/v1/tag.proto#L92}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Tag,google/devtools/artifactregistry/v1/tag.proto#L32}
  ///
  /// [google.devtools.artifactregistry.v1.CreateTagRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/tag.proto#L92}
  /// [google.devtools.artifactregistry.v1.Tag]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/tag.proto#L32}
  ///
  StatusOr<google::devtools::artifactregistry::v1::Tag> CreateTag(
      google::devtools::artifactregistry::v1::CreateTagRequest const& request,
      Options opts = {});

  ///
  /// Updates a tag.
  ///
  /// @param tag  The tag that replaces the resource on the server.
  /// @param update_mask  The update mask applies to the resource. For the
  /// `FieldMask` definition,
  ///  see
  ///  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Tag,google/devtools/artifactregistry/v1/tag.proto#L32}
  ///
  /// [google.devtools.artifactregistry.v1.UpdateTagRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/tag.proto#L104}
  /// [google.devtools.artifactregistry.v1.Tag]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/tag.proto#L32}
  ///
  StatusOr<google::devtools::artifactregistry::v1::Tag> UpdateTag(
      google::devtools::artifactregistry::v1::Tag const& tag,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Updates a tag.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::UpdateTagRequest,google/devtools/artifactregistry/v1/tag.proto#L104}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::Tag,google/devtools/artifactregistry/v1/tag.proto#L32}
  ///
  /// [google.devtools.artifactregistry.v1.UpdateTagRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/tag.proto#L104}
  /// [google.devtools.artifactregistry.v1.Tag]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/tag.proto#L32}
  ///
  StatusOr<google::devtools::artifactregistry::v1::Tag> UpdateTag(
      google::devtools::artifactregistry::v1::UpdateTagRequest const& request,
      Options opts = {});

  ///
  /// Deletes a tag.
  ///
  /// @param name  The name of the tag to delete.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  ///
  /// [google.devtools.artifactregistry.v1.DeleteTagRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/tag.proto#L115}
  ///
  Status DeleteTag(std::string const& name, Options opts = {});

  ///
  /// Deletes a tag.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::DeleteTagRequest,google/devtools/artifactregistry/v1/tag.proto#L115}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  ///
  /// [google.devtools.artifactregistry.v1.DeleteTagRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/tag.proto#L115}
  ///
  Status DeleteTag(
      google::devtools::artifactregistry::v1::DeleteTagRequest const& request,
      Options opts = {});

  ///
  /// Updates the IAM policy for a given resource.
  ///
  /// @param request
  /// @googleapis_link{google::iam::v1::SetIamPolicyRequest,google/iam/v1/iam_policy.proto#L101}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::iam::v1::Policy,google/iam/v1/policy.proto#L96}
  ///
  /// [google.iam.v1.SetIamPolicyRequest]:
  /// @googleapis_reference_link{google/iam/v1/iam_policy.proto#L101}
  /// [google.iam.v1.Policy]:
  /// @googleapis_reference_link{google/iam/v1/policy.proto#L96}
  ///
  StatusOr<google::iam::v1::Policy> SetIamPolicy(
      google::iam::v1::SetIamPolicyRequest const& request, Options opts = {});

  ///
  /// Gets the IAM policy for a given resource.
  ///
  /// @param request
  /// @googleapis_link{google::iam::v1::GetIamPolicyRequest,google/iam/v1/iam_policy.proto#L123}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::iam::v1::Policy,google/iam/v1/policy.proto#L96}
  ///
  /// [google.iam.v1.GetIamPolicyRequest]:
  /// @googleapis_reference_link{google/iam/v1/iam_policy.proto#L123}
  /// [google.iam.v1.Policy]:
  /// @googleapis_reference_link{google/iam/v1/policy.proto#L96}
  ///
  StatusOr<google::iam::v1::Policy> GetIamPolicy(
      google::iam::v1::GetIamPolicyRequest const& request, Options opts = {});

  ///
  /// Tests if the caller has a list of permissions on a resource.
  ///
  /// @param request
  /// @googleapis_link{google::iam::v1::TestIamPermissionsRequest,google/iam/v1/iam_policy.proto#L136}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::iam::v1::TestIamPermissionsResponse,google/iam/v1/iam_policy.proto#L151}
  ///
  /// [google.iam.v1.TestIamPermissionsRequest]:
  /// @googleapis_reference_link{google/iam/v1/iam_policy.proto#L136}
  /// [google.iam.v1.TestIamPermissionsResponse]:
  /// @googleapis_reference_link{google/iam/v1/iam_policy.proto#L151}
  ///
  StatusOr<google::iam::v1::TestIamPermissionsResponse> TestIamPermissions(
      google::iam::v1::TestIamPermissionsRequest const& request,
      Options opts = {});

  ///
  /// Retrieves the Settings for the Project.
  ///
  /// @param name  Required. The name of the projectSettings resource.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::ProjectSettings,google/devtools/artifactregistry/v1/settings.proto#L32}
  ///
  /// [google.devtools.artifactregistry.v1.GetProjectSettingsRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/settings.proto#L67}
  /// [google.devtools.artifactregistry.v1.ProjectSettings]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/settings.proto#L32}
  ///
  StatusOr<google::devtools::artifactregistry::v1::ProjectSettings>
  GetProjectSettings(std::string const& name, Options opts = {});

  ///
  /// Retrieves the Settings for the Project.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::GetProjectSettingsRequest,google/devtools/artifactregistry/v1/settings.proto#L67}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::ProjectSettings,google/devtools/artifactregistry/v1/settings.proto#L32}
  ///
  /// [google.devtools.artifactregistry.v1.GetProjectSettingsRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/settings.proto#L67}
  /// [google.devtools.artifactregistry.v1.ProjectSettings]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/settings.proto#L32}
  ///
  StatusOr<google::devtools::artifactregistry::v1::ProjectSettings>
  GetProjectSettings(
      google::devtools::artifactregistry::v1::GetProjectSettingsRequest const&
          request,
      Options opts = {});

  ///
  /// Updates the Settings for the Project.
  ///
  /// @param project_settings  The project settings.
  /// @param update_mask  Field mask to support partial updates.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::ProjectSettings,google/devtools/artifactregistry/v1/settings.proto#L32}
  ///
  /// [google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/settings.proto#L78}
  /// [google.devtools.artifactregistry.v1.ProjectSettings]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/settings.proto#L32}
  ///
  StatusOr<google::devtools::artifactregistry::v1::ProjectSettings>
  UpdateProjectSettings(
      google::devtools::artifactregistry::v1::ProjectSettings const&
          project_settings,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Updates the Settings for the Project.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::artifactregistry::v1::UpdateProjectSettingsRequest,google/devtools/artifactregistry/v1/settings.proto#L78}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::artifactregistry::v1::ProjectSettings,google/devtools/artifactregistry/v1/settings.proto#L32}
  ///
  /// [google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/settings.proto#L78}
  /// [google.devtools.artifactregistry.v1.ProjectSettings]:
  /// @googleapis_reference_link{google/devtools/artifactregistry/v1/settings.proto#L32}
  ///
  StatusOr<google::devtools::artifactregistry::v1::ProjectSettings>
  UpdateProjectSettings(google::devtools::artifactregistry::v1::
                            UpdateProjectSettingsRequest const& request,
                        Options opts = {});

 private:
  std::shared_ptr<ArtifactRegistryConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace artifactregistry
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_ARTIFACTREGISTRY_ARTIFACT_REGISTRY_CLIENT_H
