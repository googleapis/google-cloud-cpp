// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/devtools/artifactregistry/v1/service.proto

#include "google/cloud/artifactregistry/artifact_registry_connection_idempotency_policy.h"
#include "absl/memory/memory.h"
#include <memory>

namespace google {
namespace cloud {
namespace artifactregistry {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

using ::google::cloud::Idempotency;

ArtifactRegistryConnectionIdempotencyPolicy::
    ~ArtifactRegistryConnectionIdempotencyPolicy() = default;

namespace {
class DefaultArtifactRegistryConnectionIdempotencyPolicy
    : public ArtifactRegistryConnectionIdempotencyPolicy {
 public:
  ~DefaultArtifactRegistryConnectionIdempotencyPolicy() override = default;

  /// Create a new copy of this object.
  std::unique_ptr<ArtifactRegistryConnectionIdempotencyPolicy> clone()
      const override {
    return absl::make_unique<
        DefaultArtifactRegistryConnectionIdempotencyPolicy>(*this);
  }

  Idempotency ListDockerImages(
      google::devtools::artifactregistry::v1::ListDockerImagesRequest)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency GetDockerImage(
      google::devtools::artifactregistry::v1::GetDockerImageRequest const&)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency ImportAptArtifacts(
      google::devtools::artifactregistry::v1::ImportAptArtifactsRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency ImportYumArtifacts(
      google::devtools::artifactregistry::v1::ImportYumArtifactsRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency ListRepositories(
      google::devtools::artifactregistry::v1::ListRepositoriesRequest)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency GetRepository(
      google::devtools::artifactregistry::v1::GetRepositoryRequest const&)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency CreateRepository(
      google::devtools::artifactregistry::v1::CreateRepositoryRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency UpdateRepository(
      google::devtools::artifactregistry::v1::UpdateRepositoryRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency DeleteRepository(
      google::devtools::artifactregistry::v1::DeleteRepositoryRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency ListPackages(
      google::devtools::artifactregistry::v1::ListPackagesRequest) override {
    return Idempotency::kIdempotent;
  }

  Idempotency GetPackage(
      google::devtools::artifactregistry::v1::GetPackageRequest const&)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency DeletePackage(
      google::devtools::artifactregistry::v1::DeletePackageRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency ListVersions(
      google::devtools::artifactregistry::v1::ListVersionsRequest) override {
    return Idempotency::kIdempotent;
  }

  Idempotency GetVersion(
      google::devtools::artifactregistry::v1::GetVersionRequest const&)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency DeleteVersion(
      google::devtools::artifactregistry::v1::DeleteVersionRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency ListFiles(
      google::devtools::artifactregistry::v1::ListFilesRequest) override {
    return Idempotency::kIdempotent;
  }

  Idempotency GetFile(
      google::devtools::artifactregistry::v1::GetFileRequest const&) override {
    return Idempotency::kIdempotent;
  }

  Idempotency ListTags(
      google::devtools::artifactregistry::v1::ListTagsRequest) override {
    return Idempotency::kIdempotent;
  }

  Idempotency GetTag(
      google::devtools::artifactregistry::v1::GetTagRequest const&) override {
    return Idempotency::kIdempotent;
  }

  Idempotency CreateTag(
      google::devtools::artifactregistry::v1::CreateTagRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency UpdateTag(
      google::devtools::artifactregistry::v1::UpdateTagRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency DeleteTag(
      google::devtools::artifactregistry::v1::DeleteTagRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency SetIamPolicy(
      google::iam::v1::SetIamPolicyRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency GetIamPolicy(
      google::iam::v1::GetIamPolicyRequest const&) override {
    return Idempotency::kIdempotent;
  }

  Idempotency TestIamPermissions(
      google::iam::v1::TestIamPermissionsRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency GetProjectSettings(
      google::devtools::artifactregistry::v1::GetProjectSettingsRequest const&)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency UpdateProjectSettings(
      google::devtools::artifactregistry::v1::
          UpdateProjectSettingsRequest const&) override {
    return Idempotency::kNonIdempotent;
  }
};
}  // namespace

std::unique_ptr<ArtifactRegistryConnectionIdempotencyPolicy>
MakeDefaultArtifactRegistryConnectionIdempotencyPolicy() {
  return absl::make_unique<
      DefaultArtifactRegistryConnectionIdempotencyPolicy>();
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace artifactregistry
}  // namespace cloud
}  // namespace google
