// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/gaming/v1/game_server_clusters_service.proto

#include "google/cloud/gameservices/internal/game_server_clusters_tracing_connection.h"
#include "google/cloud/internal/opentelemetry.h"
#include <memory>

namespace google {
namespace cloud {
namespace gameservices_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

#ifdef GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

GameServerClustersServiceTracingConnection::
    GameServerClustersServiceTracingConnection(
        std::shared_ptr<gameservices::GameServerClustersServiceConnection>
            child)
    : child_(std::move(child)) {}

StreamRange<google::cloud::gaming::v1::GameServerCluster>
GameServerClustersServiceTracingConnection::ListGameServerClusters(
    google::cloud::gaming::v1::ListGameServerClustersRequest request) {
  return child_->ListGameServerClusters(request);
}

StatusOr<google::cloud::gaming::v1::GameServerCluster>
GameServerClustersServiceTracingConnection::GetGameServerCluster(
    google::cloud::gaming::v1::GetGameServerClusterRequest const& request) {
  return child_->GetGameServerCluster(request);
}

future<StatusOr<google::cloud::gaming::v1::GameServerCluster>>
GameServerClustersServiceTracingConnection::CreateGameServerCluster(
    google::cloud::gaming::v1::CreateGameServerClusterRequest const& request) {
  return child_->CreateGameServerCluster(request);
}

StatusOr<google::cloud::gaming::v1::PreviewCreateGameServerClusterResponse>
GameServerClustersServiceTracingConnection::PreviewCreateGameServerCluster(
    google::cloud::gaming::v1::PreviewCreateGameServerClusterRequest const&
        request) {
  return child_->PreviewCreateGameServerCluster(request);
}

future<StatusOr<google::cloud::gaming::v1::OperationMetadata>>
GameServerClustersServiceTracingConnection::DeleteGameServerCluster(
    google::cloud::gaming::v1::DeleteGameServerClusterRequest const& request) {
  return child_->DeleteGameServerCluster(request);
}

StatusOr<google::cloud::gaming::v1::PreviewDeleteGameServerClusterResponse>
GameServerClustersServiceTracingConnection::PreviewDeleteGameServerCluster(
    google::cloud::gaming::v1::PreviewDeleteGameServerClusterRequest const&
        request) {
  return child_->PreviewDeleteGameServerCluster(request);
}

future<StatusOr<google::cloud::gaming::v1::GameServerCluster>>
GameServerClustersServiceTracingConnection::UpdateGameServerCluster(
    google::cloud::gaming::v1::UpdateGameServerClusterRequest const& request) {
  return child_->UpdateGameServerCluster(request);
}

StatusOr<google::cloud::gaming::v1::PreviewUpdateGameServerClusterResponse>
GameServerClustersServiceTracingConnection::PreviewUpdateGameServerCluster(
    google::cloud::gaming::v1::PreviewUpdateGameServerClusterRequest const&
        request) {
  return child_->PreviewUpdateGameServerCluster(request);
}

#endif  // GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace gameservices_internal
}  // namespace cloud
}  // namespace google
