// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/bigquery/v2/table.proto

#include "google/cloud/bigquerycontrol/v2/internal/table_rest_logging_decorator.h"
#include "google/cloud/internal/log_wrapper.h"
#include "google/cloud/status_or.h"
#include <memory>
#include <utility>

namespace google {
namespace cloud {
namespace bigquerycontrol_v2_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

TableServiceRestLogging::TableServiceRestLogging(
    std::shared_ptr<TableServiceRestStub> child, TracingOptions tracing_options,
    std::set<std::string> components)
    : child_(std::move(child)),
      tracing_options_(std::move(tracing_options)),
      components_(std::move(components)) {}

StatusOr<google::cloud::bigquery::v2::Table> TableServiceRestLogging::GetTable(
    rest_internal::RestContext& rest_context, Options const& options,
    google::cloud::bigquery::v2::GetTableRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context, Options const& options,
             google::cloud::bigquery::v2::GetTableRequest const& request) {
        return child_->GetTable(rest_context, options, request);
      },
      rest_context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::bigquery::v2::Table>
TableServiceRestLogging::InsertTable(
    rest_internal::RestContext& rest_context, Options const& options,
    google::cloud::bigquery::v2::InsertTableRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context, Options const& options,
             google::cloud::bigquery::v2::InsertTableRequest const& request) {
        return child_->InsertTable(rest_context, options, request);
      },
      rest_context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::bigquery::v2::Table>
TableServiceRestLogging::PatchTable(
    rest_internal::RestContext& rest_context, Options const& options,
    google::cloud::bigquery::v2::UpdateOrPatchTableRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context, Options const& options,
             google::cloud::bigquery::v2::UpdateOrPatchTableRequest const&
                 request) {
        return child_->PatchTable(rest_context, options, request);
      },
      rest_context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::bigquery::v2::Table>
TableServiceRestLogging::UpdateTable(
    rest_internal::RestContext& rest_context, Options const& options,
    google::cloud::bigquery::v2::UpdateOrPatchTableRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context, Options const& options,
             google::cloud::bigquery::v2::UpdateOrPatchTableRequest const&
                 request) {
        return child_->UpdateTable(rest_context, options, request);
      },
      rest_context, options, request, __func__, tracing_options_);
}

Status TableServiceRestLogging::DeleteTable(
    rest_internal::RestContext& rest_context, Options const& options,
    google::cloud::bigquery::v2::DeleteTableRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context, Options const& options,
             google::cloud::bigquery::v2::DeleteTableRequest const& request) {
        return child_->DeleteTable(rest_context, options, request);
      },
      rest_context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::bigquery::v2::TableList>
TableServiceRestLogging::ListTables(
    rest_internal::RestContext& rest_context, Options const& options,
    google::cloud::bigquery::v2::ListTablesRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context, Options const& options,
             google::cloud::bigquery::v2::ListTablesRequest const& request) {
        return child_->ListTables(rest_context, options, request);
      },
      rest_context, options, request, __func__, tracing_options_);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace bigquerycontrol_v2_internal
}  // namespace cloud
}  // namespace google
