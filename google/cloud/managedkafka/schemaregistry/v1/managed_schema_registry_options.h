// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/managedkafka/schemaregistry/v1/schema_registry.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_MANAGEDKAFKA_SCHEMAREGISTRY_V1_MANAGED_SCHEMA_REGISTRY_OPTIONS_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_MANAGEDKAFKA_SCHEMAREGISTRY_V1_MANAGED_SCHEMA_REGISTRY_OPTIONS_H

#include "google/cloud/managedkafka/schemaregistry/v1/managed_schema_registry_connection.h"
#include "google/cloud/managedkafka/schemaregistry/v1/managed_schema_registry_connection_idempotency_policy.h"
#include "google/cloud/backoff_policy.h"
#include "google/cloud/options.h"
#include "google/cloud/version.h"
#include <memory>

namespace google {
namespace cloud {
namespace managedkafka_schemaregistry_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

/**
 * Use with `google::cloud::Options` to configure the retry policy.
 *
 * @ingroup google-cloud-managedkafka-options
 */
struct ManagedSchemaRegistryRetryPolicyOption {
  using Type = std::shared_ptr<ManagedSchemaRegistryRetryPolicy>;
};

/**
 * Use with `google::cloud::Options` to configure the backoff policy.
 *
 * @ingroup google-cloud-managedkafka-options
 */
struct ManagedSchemaRegistryBackoffPolicyOption {
  using Type = std::shared_ptr<BackoffPolicy>;
};

/**
 * Use with `google::cloud::Options` to configure which operations are retried.
 *
 * @ingroup google-cloud-managedkafka-options
 */
struct ManagedSchemaRegistryConnectionIdempotencyPolicyOption {
  using Type =
      std::shared_ptr<ManagedSchemaRegistryConnectionIdempotencyPolicy>;
};

/**
 * The options applicable to ManagedSchemaRegistry.
 *
 * @ingroup google-cloud-managedkafka-options
 */
using ManagedSchemaRegistryPolicyOptionList =
    OptionList<ManagedSchemaRegistryRetryPolicyOption,
               ManagedSchemaRegistryBackoffPolicyOption,
               ManagedSchemaRegistryConnectionIdempotencyPolicyOption>;

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace managedkafka_schemaregistry_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_MANAGEDKAFKA_SCHEMAREGISTRY_V1_MANAGED_SCHEMA_REGISTRY_OPTIONS_H
