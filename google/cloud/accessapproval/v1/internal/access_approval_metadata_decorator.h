// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/accessapproval/v1/accessapproval.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_ACCESSAPPROVAL_V1_INTERNAL_ACCESS_APPROVAL_METADATA_DECORATOR_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_ACCESSAPPROVAL_V1_INTERNAL_ACCESS_APPROVAL_METADATA_DECORATOR_H

#include "google/cloud/accessapproval/v1/internal/access_approval_stub.h"
#include "google/cloud/options.h"
#include "google/cloud/version.h"
#include <map>
#include <memory>
#include <string>

namespace google {
namespace cloud {
namespace accessapproval_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

class AccessApprovalMetadata : public AccessApprovalStub {
 public:
  ~AccessApprovalMetadata() override = default;
  AccessApprovalMetadata(std::shared_ptr<AccessApprovalStub> child,
                         std::multimap<std::string, std::string> fixed_metadata,
                         std::string api_client_header = "");

  StatusOr<google::cloud::accessapproval::v1::ListApprovalRequestsResponse>
  ListApprovalRequests(
      grpc::ClientContext& context, Options const& options,
      google::cloud::accessapproval::v1::ListApprovalRequestsMessage const&
          request) override;

  StatusOr<google::cloud::accessapproval::v1::ApprovalRequest>
  GetApprovalRequest(
      grpc::ClientContext& context, Options const& options,
      google::cloud::accessapproval::v1::GetApprovalRequestMessage const&
          request) override;

  StatusOr<google::cloud::accessapproval::v1::ApprovalRequest>
  ApproveApprovalRequest(
      grpc::ClientContext& context, Options const& options,
      google::cloud::accessapproval::v1::ApproveApprovalRequestMessage const&
          request) override;

  StatusOr<google::cloud::accessapproval::v1::ApprovalRequest>
  DismissApprovalRequest(
      grpc::ClientContext& context, Options const& options,
      google::cloud::accessapproval::v1::DismissApprovalRequestMessage const&
          request) override;

  StatusOr<google::cloud::accessapproval::v1::ApprovalRequest>
  InvalidateApprovalRequest(
      grpc::ClientContext& context, Options const& options,
      google::cloud::accessapproval::v1::InvalidateApprovalRequestMessage const&
          request) override;

  StatusOr<google::cloud::accessapproval::v1::AccessApprovalSettings>
  GetAccessApprovalSettings(
      grpc::ClientContext& context, Options const& options,
      google::cloud::accessapproval::v1::GetAccessApprovalSettingsMessage const&
          request) override;

  StatusOr<google::cloud::accessapproval::v1::AccessApprovalSettings>
  UpdateAccessApprovalSettings(
      grpc::ClientContext& context, Options const& options,
      google::cloud::accessapproval::v1::
          UpdateAccessApprovalSettingsMessage const& request) override;

  Status DeleteAccessApprovalSettings(
      grpc::ClientContext& context, Options const& options,
      google::cloud::accessapproval::v1::
          DeleteAccessApprovalSettingsMessage const& request) override;

  StatusOr<google::cloud::accessapproval::v1::AccessApprovalServiceAccount>
  GetAccessApprovalServiceAccount(
      grpc::ClientContext& context, Options const& options,
      google::cloud::accessapproval::v1::
          GetAccessApprovalServiceAccountMessage const& request) override;

 private:
  void SetMetadata(grpc::ClientContext& context, Options const& options,
                   std::string const& request_params);
  void SetMetadata(grpc::ClientContext& context, Options const& options);

  std::shared_ptr<AccessApprovalStub> child_;
  std::multimap<std::string, std::string> fixed_metadata_;
  std::string api_client_header_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace accessapproval_v1_internal
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_ACCESSAPPROVAL_V1_INTERNAL_ACCESS_APPROVAL_METADATA_DECORATOR_H
