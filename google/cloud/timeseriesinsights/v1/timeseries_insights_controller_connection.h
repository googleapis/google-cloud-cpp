// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/timeseriesinsights/v1/timeseries_insights.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_TIMESERIESINSIGHTS_V1_TIMESERIES_INSIGHTS_CONTROLLER_CONNECTION_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_TIMESERIESINSIGHTS_V1_TIMESERIES_INSIGHTS_CONTROLLER_CONNECTION_H

#include "google/cloud/timeseriesinsights/v1/internal/timeseries_insights_controller_retry_traits.h"
#include "google/cloud/timeseriesinsights/v1/timeseries_insights_controller_connection_idempotency_policy.h"
#include "google/cloud/backoff_policy.h"
#include "google/cloud/options.h"
#include "google/cloud/status_or.h"
#include "google/cloud/stream_range.h"
#include "google/cloud/version.h"
#include <google/cloud/timeseriesinsights/v1/timeseries_insights.pb.h>
#include <memory>

namespace google {
namespace cloud {
namespace timeseriesinsights_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

using TimeseriesInsightsControllerRetryPolicy =
    ::google::cloud::internal::TraitBasedRetryPolicy<
        timeseriesinsights_v1_internal::
            TimeseriesInsightsControllerRetryTraits>;

using TimeseriesInsightsControllerLimitedTimeRetryPolicy =
    ::google::cloud::internal::LimitedTimeRetryPolicy<
        timeseriesinsights_v1_internal::
            TimeseriesInsightsControllerRetryTraits>;

using TimeseriesInsightsControllerLimitedErrorCountRetryPolicy =
    ::google::cloud::internal::LimitedErrorCountRetryPolicy<
        timeseriesinsights_v1_internal::
            TimeseriesInsightsControllerRetryTraits>;

/**
 * The `TimeseriesInsightsControllerConnection` object for
 * `TimeseriesInsightsControllerClient`.
 *
 * This interface defines virtual methods for each of the user-facing overload
 * sets in `TimeseriesInsightsControllerClient`. This allows users to inject
 * custom behavior (e.g., with a Google Mock object) when writing tests that use
 * objects of type `TimeseriesInsightsControllerClient`.
 *
 * To create a concrete instance, see
 * `MakeTimeseriesInsightsControllerConnection()`.
 *
 * For mocking, see
 * `timeseriesinsights_v1_mocks::MockTimeseriesInsightsControllerConnection`.
 */
class TimeseriesInsightsControllerConnection {
 public:
  virtual ~TimeseriesInsightsControllerConnection() = 0;

  virtual Options options() { return Options{}; }

  virtual StreamRange<google::cloud::timeseriesinsights::v1::DataSet>
  ListDataSets(
      google::cloud::timeseriesinsights::v1::ListDataSetsRequest request);

  virtual StatusOr<google::cloud::timeseriesinsights::v1::DataSet>
  CreateDataSet(
      google::cloud::timeseriesinsights::v1::CreateDataSetRequest const&
          request);

  virtual Status DeleteDataSet(
      google::cloud::timeseriesinsights::v1::DeleteDataSetRequest const&
          request);

  virtual StatusOr<google::cloud::timeseriesinsights::v1::AppendEventsResponse>
  AppendEvents(google::cloud::timeseriesinsights::v1::AppendEventsRequest const&
                   request);

  virtual StatusOr<google::cloud::timeseriesinsights::v1::QueryDataSetResponse>
  QueryDataSet(google::cloud::timeseriesinsights::v1::QueryDataSetRequest const&
                   request);

  virtual StatusOr<google::cloud::timeseriesinsights::v1::EvaluatedSlice>
  EvaluateSlice(
      google::cloud::timeseriesinsights::v1::EvaluateSliceRequest const&
          request);

  virtual StatusOr<google::cloud::timeseriesinsights::v1::EvaluatedSlice>
  EvaluateTimeseries(
      google::cloud::timeseriesinsights::v1::EvaluateTimeseriesRequest const&
          request);
};

/**
 * A factory function to construct an object of type
 * `TimeseriesInsightsControllerConnection`.
 *
 * The returned connection object should not be used directly; instead it
 * should be passed as an argument to the constructor of
 * TimeseriesInsightsControllerClient.
 *
 * The optional @p options argument may be used to configure aspects of the
 * returned `TimeseriesInsightsControllerConnection`. Expected options are any
 * of the types in the following option lists:
 *
 * - `google::cloud::CommonOptionList`
 * - `google::cloud::GrpcOptionList`
 * - `google::cloud::UnifiedCredentialsOptionList`
 * -
 * `google::cloud::timeseriesinsights_v1::TimeseriesInsightsControllerPolicyOptionList`
 *
 * @note Unexpected options will be ignored. To log unexpected options instead,
 *     set `GOOGLE_CLOUD_CPP_ENABLE_CLOG=yes` in the environment.
 *
 * @param options (optional) Configure the
 * `TimeseriesInsightsControllerConnection` created by this function.
 */
std::shared_ptr<TimeseriesInsightsControllerConnection>
MakeTimeseriesInsightsControllerConnection(Options options = {});

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace timeseriesinsights_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_TIMESERIESINSIGHTS_V1_TIMESERIES_INSIGHTS_CONTROLLER_CONNECTION_H
