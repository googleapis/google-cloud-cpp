// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/storagetransfer/v1/transfer.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_STORAGETRANSFER_STORAGE_TRANSFER_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_STORAGETRANSFER_STORAGE_TRANSFER_CLIENT_H

#include "google/cloud/storagetransfer/storage_transfer_connection.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <google/longrunning/operations.grpc.pb.h>
#include <memory>

namespace google {
namespace cloud {
namespace storagetransfer {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Storage Transfer Service and its protos.
/// Transfers data between between Google Cloud Storage buckets or from a data
/// source external to Google to a Cloud Storage bucket.
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class StorageTransferServiceClient {
 public:
  explicit StorageTransferServiceClient(
      std::shared_ptr<StorageTransferServiceConnection> connection,
      Options opts = {});
  ~StorageTransferServiceClient();

  ///@{
  /// @name Copy and move support
  StorageTransferServiceClient(StorageTransferServiceClient const&) = default;
  StorageTransferServiceClient& operator=(StorageTransferServiceClient const&) =
      default;
  StorageTransferServiceClient(StorageTransferServiceClient&&) = default;
  StorageTransferServiceClient& operator=(StorageTransferServiceClient&&) =
      default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(StorageTransferServiceClient const& a,
                         StorageTransferServiceClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(StorageTransferServiceClient const& a,
                         StorageTransferServiceClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Returns the Google service account that is used by Storage Transfer
  /// Service to access buckets in the project where transfers
  /// run or in other projects. Each Google service account is associated
  /// with one Google Cloud project. Users
  /// should add this service account to the Google Cloud Storage bucket
  /// ACLs to grant access to Storage Transfer Service. This service
  /// account is created and owned by Storage Transfer Service and can
  /// only be used by Storage Transfer Service.
  ///
  /// @param request
  /// @googleapis_link{google::storagetransfer::v1::GetGoogleServiceAccountRequest,google/storagetransfer/v1/transfer.proto#L175}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::storagetransfer::v1::GoogleServiceAccount,google/storagetransfer/v1/transfer_types.proto#L36}
  ///
  /// [google.storagetransfer.v1.GetGoogleServiceAccountRequest]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer.proto#L175}
  /// [google.storagetransfer.v1.GoogleServiceAccount]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer_types.proto#L36}
  ///
  StatusOr<google::storagetransfer::v1::GoogleServiceAccount>
  GetGoogleServiceAccount(
      google::storagetransfer::v1::GetGoogleServiceAccountRequest const&
          request,
      Options opts = {});

  ///
  /// Creates a transfer job that runs periodically.
  ///
  /// @param request
  /// @googleapis_link{google::storagetransfer::v1::CreateTransferJobRequest,google/storagetransfer/v1/transfer.proto#L182}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::storagetransfer::v1::TransferJob,google/storagetransfer/v1/transfer_types.proto#L842}
  ///
  /// [google.storagetransfer.v1.CreateTransferJobRequest]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer.proto#L182}
  /// [google.storagetransfer.v1.TransferJob]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer_types.proto#L842}
  ///
  StatusOr<google::storagetransfer::v1::TransferJob> CreateTransferJob(
      google::storagetransfer::v1::CreateTransferJobRequest const& request,
      Options opts = {});

  ///
  /// Updates a transfer job. Updating a job's transfer spec does not affect
  /// transfer operations that are running already.
  ///
  /// **Note:** The job's [status][google.storagetransfer.v1.TransferJob.status]
  /// field can be modified using this RPC (for example, to set a job's status
  /// to [DELETED][google.storagetransfer.v1.TransferJob.Status.DELETED],
  /// [DISABLED][google.storagetransfer.v1.TransferJob.Status.DISABLED], or
  /// [ENABLED][google.storagetransfer.v1.TransferJob.Status.ENABLED]).
  ///
  /// @param request
  /// @googleapis_link{google::storagetransfer::v1::UpdateTransferJobRequest,google/storagetransfer/v1/transfer.proto#L188}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::storagetransfer::v1::TransferJob,google/storagetransfer/v1/transfer_types.proto#L842}
  ///
  /// [google.storagetransfer.v1.TransferJob]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer_types.proto#L842}
  /// [google.storagetransfer.v1.UpdateTransferJobRequest]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer.proto#L188}
  ///
  StatusOr<google::storagetransfer::v1::TransferJob> UpdateTransferJob(
      google::storagetransfer::v1::UpdateTransferJobRequest const& request,
      Options opts = {});

  ///
  /// Gets a transfer job.
  ///
  /// @param request
  /// @googleapis_link{google::storagetransfer::v1::GetTransferJobRequest,google/storagetransfer/v1/transfer.proto#L222}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::storagetransfer::v1::TransferJob,google/storagetransfer/v1/transfer_types.proto#L842}
  ///
  /// [google.storagetransfer.v1.GetTransferJobRequest]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer.proto#L222}
  /// [google.storagetransfer.v1.TransferJob]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer_types.proto#L842}
  ///
  StatusOr<google::storagetransfer::v1::TransferJob> GetTransferJob(
      google::storagetransfer::v1::GetTransferJobRequest const& request,
      Options opts = {});

  ///
  /// Lists transfer jobs.
  ///
  /// @param request
  /// @googleapis_link{google::storagetransfer::v1::ListTransferJobsRequest,google/storagetransfer/v1/transfer.proto#L243}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::storagetransfer::v1::TransferJob,google/storagetransfer/v1/transfer_types.proto#L842}
  ///
  /// [google.storagetransfer.v1.ListTransferJobsRequest]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer.proto#L243}
  /// [google.storagetransfer.v1.TransferJob]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer_types.proto#L842}
  ///
  StreamRange<google::storagetransfer::v1::TransferJob> ListTransferJobs(
      google::storagetransfer::v1::ListTransferJobsRequest request,
      Options opts = {});

  ///
  /// Pauses a transfer operation.
  ///
  /// @param request
  /// @googleapis_link{google::storagetransfer::v1::PauseTransferOperationRequest,google/storagetransfer/v1/transfer.proto#L275}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  ///
  /// [google.storagetransfer.v1.PauseTransferOperationRequest]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer.proto#L275}
  ///
  Status PauseTransferOperation(
      google::storagetransfer::v1::PauseTransferOperationRequest const& request,
      Options opts = {});

  ///
  /// Resumes a transfer operation that is paused.
  ///
  /// @param request
  /// @googleapis_link{google::storagetransfer::v1::ResumeTransferOperationRequest,google/storagetransfer/v1/transfer.proto#L281}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  ///
  /// [google.storagetransfer.v1.ResumeTransferOperationRequest]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer.proto#L281}
  ///
  Status ResumeTransferOperation(
      google::storagetransfer::v1::ResumeTransferOperationRequest const&
          request,
      Options opts = {});

  ///
  /// Attempts to start a new TransferOperation for the current TransferJob. A
  /// TransferJob has a maximum of one active TransferOperation. If this method
  /// is called while a TransferOperation is active, an error will be returned.
  ///
  /// @param request
  /// @googleapis_link{google::storagetransfer::v1::RunTransferJobRequest,google/storagetransfer/v1/transfer.proto#L287}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::storagetransfer::v1::TransferOperation,google/storagetransfer/v1/transfer_types.proto#L1173}
  ///
  /// [google.storagetransfer.v1.RunTransferJobRequest]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer.proto#L287}
  /// [google.storagetransfer.v1.TransferOperation]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer_types.proto#L1173}
  ///
  future<StatusOr<google::storagetransfer::v1::TransferOperation>>
  RunTransferJob(
      google::storagetransfer::v1::RunTransferJobRequest const& request,
      Options opts = {});

  ///
  /// Deletes a transfer job. Deleting a transfer job sets its status to
  /// [DELETED][google.storagetransfer.v1.TransferJob.Status.DELETED].
  ///
  /// @param request
  /// @googleapis_link{google::storagetransfer::v1::DeleteTransferJobRequest,google/storagetransfer/v1/transfer.proto#L232}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  ///
  /// [google.storagetransfer.v1.DeleteTransferJobRequest]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer.proto#L232}
  ///
  Status DeleteTransferJob(
      google::storagetransfer::v1::DeleteTransferJobRequest const& request,
      Options opts = {});

  ///
  /// Creates an agent pool resource.
  ///
  /// @param project_id  Required. The ID of the Google Cloud project that owns
  /// the
  ///  agent pool.
  /// @param agent_pool  Required. The agent pool to create.
  /// @param agent_pool_id  Required. The ID of the agent pool to create.
  ///  The `agent_pool_id` must meet the following requirements:
  ///  *   Length of 128 characters or less.
  ///  *   Not start with the string `goog`.
  ///  *   Start with a lowercase ASCII character, followed by:
  ///      *   Zero or more: lowercase Latin alphabet characters, numerals,
  ///          hyphens (`-`), periods (`.`), underscores (`_`), or tildes (`~`).
  ///      *   One or more numerals or lowercase ASCII characters.
  ///  As expressed by the regular expression:
  ///  `^(?!goog)[a-z]([a-z0-9-._~]*[a-z0-9])?$`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::storagetransfer::v1::AgentPool,google/storagetransfer/v1/transfer_types.proto#L425}
  ///
  /// [google.storagetransfer.v1.AgentPool]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer_types.proto#L425}
  /// [google.storagetransfer.v1.CreateAgentPoolRequest]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer.proto#L297}
  ///
  StatusOr<google::storagetransfer::v1::AgentPool> CreateAgentPool(
      std::string const& project_id,
      google::storagetransfer::v1::AgentPool const& agent_pool,
      std::string const& agent_pool_id, Options opts = {});

  ///
  /// Creates an agent pool resource.
  ///
  /// @param request
  /// @googleapis_link{google::storagetransfer::v1::CreateAgentPoolRequest,google/storagetransfer/v1/transfer.proto#L297}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::storagetransfer::v1::AgentPool,google/storagetransfer/v1/transfer_types.proto#L425}
  ///
  /// [google.storagetransfer.v1.AgentPool]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer_types.proto#L425}
  /// [google.storagetransfer.v1.CreateAgentPoolRequest]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer.proto#L297}
  ///
  StatusOr<google::storagetransfer::v1::AgentPool> CreateAgentPool(
      google::storagetransfer::v1::CreateAgentPoolRequest const& request,
      Options opts = {});

  ///
  /// Updates an existing agent pool resource.
  ///
  /// @param agent_pool  Required. The agent pool to update. `agent_pool` is
  /// expected to specify following
  ///  fields:
  ///  *  [name][google.storagetransfer.v1.AgentPool.name]
  ///  *  [display_name][google.storagetransfer.v1.AgentPool.display_name]
  ///  *  [bandwidth_limit][google.storagetransfer.v1.AgentPool.bandwidth_limit]
  ///  An `UpdateAgentPoolRequest` with any other fields is rejected
  ///  with the error [INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT].
  /// @param update_mask  The [field mask]
  ///  (https://developers.google.com/protocol-buffers/docs/reference/google.protobuf)
  ///  of the fields in `agentPool` to update in this request.
  ///  The following `agentPool` fields can be updated:
  ///  *  [display_name][google.storagetransfer.v1.AgentPool.display_name]
  ///  *  [bandwidth_limit][google.storagetransfer.v1.AgentPool.bandwidth_limit]
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::storagetransfer::v1::AgentPool,google/storagetransfer/v1/transfer_types.proto#L425}
  ///
  /// [google.storagetransfer.v1.AgentPool]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer_types.proto#L425}
  /// [google.storagetransfer.v1.UpdateAgentPoolRequest]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer.proto#L322}
  ///
  StatusOr<google::storagetransfer::v1::AgentPool> UpdateAgentPool(
      google::storagetransfer::v1::AgentPool const& agent_pool,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Updates an existing agent pool resource.
  ///
  /// @param request
  /// @googleapis_link{google::storagetransfer::v1::UpdateAgentPoolRequest,google/storagetransfer/v1/transfer.proto#L322}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::storagetransfer::v1::AgentPool,google/storagetransfer/v1/transfer_types.proto#L425}
  ///
  /// [google.storagetransfer.v1.AgentPool]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer_types.proto#L425}
  /// [google.storagetransfer.v1.UpdateAgentPoolRequest]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer.proto#L322}
  ///
  StatusOr<google::storagetransfer::v1::AgentPool> UpdateAgentPool(
      google::storagetransfer::v1::UpdateAgentPoolRequest const& request,
      Options opts = {});

  ///
  /// Gets an agent pool.
  ///
  /// @param name  Required. The name of the agent pool to get.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::storagetransfer::v1::AgentPool,google/storagetransfer/v1/transfer_types.proto#L425}
  ///
  /// [google.storagetransfer.v1.AgentPool]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer_types.proto#L425}
  /// [google.storagetransfer.v1.GetAgentPoolRequest]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer.proto#L347}
  ///
  StatusOr<google::storagetransfer::v1::AgentPool> GetAgentPool(
      std::string const& name, Options opts = {});

  ///
  /// Gets an agent pool.
  ///
  /// @param request
  /// @googleapis_link{google::storagetransfer::v1::GetAgentPoolRequest,google/storagetransfer/v1/transfer.proto#L347}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::storagetransfer::v1::AgentPool,google/storagetransfer/v1/transfer_types.proto#L425}
  ///
  /// [google.storagetransfer.v1.AgentPool]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer_types.proto#L425}
  /// [google.storagetransfer.v1.GetAgentPoolRequest]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer.proto#L347}
  ///
  StatusOr<google::storagetransfer::v1::AgentPool> GetAgentPool(
      google::storagetransfer::v1::GetAgentPoolRequest const& request,
      Options opts = {});

  ///
  /// Lists agent pools.
  ///
  /// @param project_id  Required. The ID of the Google Cloud project that owns
  /// the job.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::storagetransfer::v1::AgentPool,google/storagetransfer/v1/transfer_types.proto#L425}
  ///
  /// [google.storagetransfer.v1.AgentPool]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer_types.proto#L425}
  /// [google.storagetransfer.v1.ListAgentPoolsRequest]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer.proto#L359}
  ///
  StreamRange<google::storagetransfer::v1::AgentPool> ListAgentPools(
      std::string const& project_id, Options opts = {});

  ///
  /// Lists agent pools.
  ///
  /// @param request
  /// @googleapis_link{google::storagetransfer::v1::ListAgentPoolsRequest,google/storagetransfer/v1/transfer.proto#L359}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::storagetransfer::v1::AgentPool,google/storagetransfer/v1/transfer_types.proto#L425}
  ///
  /// [google.storagetransfer.v1.AgentPool]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer_types.proto#L425}
  /// [google.storagetransfer.v1.ListAgentPoolsRequest]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer.proto#L359}
  ///
  StreamRange<google::storagetransfer::v1::AgentPool> ListAgentPools(
      google::storagetransfer::v1::ListAgentPoolsRequest request,
      Options opts = {});

  ///
  /// Deletes an agent pool.
  ///
  /// @param name  Required. The name of the agent pool to delete.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  ///
  /// [google.storagetransfer.v1.DeleteAgentPoolRequest]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer.proto#L353}
  ///
  Status DeleteAgentPool(std::string const& name, Options opts = {});

  ///
  /// Deletes an agent pool.
  ///
  /// @param request
  /// @googleapis_link{google::storagetransfer::v1::DeleteAgentPoolRequest,google/storagetransfer/v1/transfer.proto#L353}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  ///
  /// [google.storagetransfer.v1.DeleteAgentPoolRequest]:
  /// @googleapis_reference_link{google/storagetransfer/v1/transfer.proto#L353}
  ///
  Status DeleteAgentPool(
      google::storagetransfer::v1::DeleteAgentPoolRequest const& request,
      Options opts = {});

 private:
  std::shared_ptr<StorageTransferServiceConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace storagetransfer
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_STORAGETRANSFER_STORAGE_TRANSFER_CLIENT_H
