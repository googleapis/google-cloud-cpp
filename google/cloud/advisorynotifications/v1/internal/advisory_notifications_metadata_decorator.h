// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/advisorynotifications/v1/service.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_ADVISORYNOTIFICATIONS_V1_INTERNAL_ADVISORY_NOTIFICATIONS_METADATA_DECORATOR_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_ADVISORYNOTIFICATIONS_V1_INTERNAL_ADVISORY_NOTIFICATIONS_METADATA_DECORATOR_H

#include "google/cloud/advisorynotifications/v1/internal/advisory_notifications_stub.h"
#include "google/cloud/options.h"
#include "google/cloud/version.h"
#include <map>
#include <memory>
#include <string>

namespace google {
namespace cloud {
namespace advisorynotifications_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

class AdvisoryNotificationsServiceMetadata
    : public AdvisoryNotificationsServiceStub {
 public:
  ~AdvisoryNotificationsServiceMetadata() override = default;
  AdvisoryNotificationsServiceMetadata(
      std::shared_ptr<AdvisoryNotificationsServiceStub> child,
      std::multimap<std::string, std::string> fixed_metadata,
      std::string api_client_header = "");

  StatusOr<google::cloud::advisorynotifications::v1::ListNotificationsResponse>
  ListNotifications(
      grpc::ClientContext& context,
      google::cloud::advisorynotifications::v1::ListNotificationsRequest const&
          request) override;

  StatusOr<google::cloud::advisorynotifications::v1::Notification>
  GetNotification(
      grpc::ClientContext& context,
      google::cloud::advisorynotifications::v1::GetNotificationRequest const&
          request) override;

  StatusOr<google::cloud::advisorynotifications::v1::Settings> GetSettings(
      grpc::ClientContext& context,
      google::cloud::advisorynotifications::v1::GetSettingsRequest const&
          request) override;

  StatusOr<google::cloud::advisorynotifications::v1::Settings> UpdateSettings(
      grpc::ClientContext& context,
      google::cloud::advisorynotifications::v1::UpdateSettingsRequest const&
          request) override;

 private:
  void SetMetadata(grpc::ClientContext& context, Options const& options,
                   std::string const& request_params);
  void SetMetadata(grpc::ClientContext& context, Options const& options);

  std::shared_ptr<AdvisoryNotificationsServiceStub> child_;
  std::multimap<std::string, std::string> fixed_metadata_;
  std::string api_client_header_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace advisorynotifications_v1_internal
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_ADVISORYNOTIFICATIONS_V1_INTERNAL_ADVISORY_NOTIFICATIONS_METADATA_DECORATOR_H
