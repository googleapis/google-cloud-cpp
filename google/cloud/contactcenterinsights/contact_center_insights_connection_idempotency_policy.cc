// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/contactcenterinsights/v1/contact_center_insights.proto

#include "google/cloud/contactcenterinsights/contact_center_insights_connection_idempotency_policy.h"
#include "absl/memory/memory.h"
#include <memory>

namespace google {
namespace cloud {
namespace contactcenterinsights {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

using ::google::cloud::Idempotency;

ContactCenterInsightsConnectionIdempotencyPolicy::
    ~ContactCenterInsightsConnectionIdempotencyPolicy() = default;

namespace {
class DefaultContactCenterInsightsConnectionIdempotencyPolicy
    : public ContactCenterInsightsConnectionIdempotencyPolicy {
 public:
  ~DefaultContactCenterInsightsConnectionIdempotencyPolicy() override = default;

  /// Create a new copy of this object.
  std::unique_ptr<ContactCenterInsightsConnectionIdempotencyPolicy> clone()
      const override {
    return absl::make_unique<
        DefaultContactCenterInsightsConnectionIdempotencyPolicy>(*this);
  }

  Idempotency CreateConversation(
      google::cloud::contactcenterinsights::v1::
          CreateConversationRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency UpdateConversation(
      google::cloud::contactcenterinsights::v1::
          UpdateConversationRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency GetConversation(
      google::cloud::contactcenterinsights::v1::GetConversationRequest const&)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency ListConversations(
      google::cloud::contactcenterinsights::v1::ListConversationsRequest)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency DeleteConversation(
      google::cloud::contactcenterinsights::v1::
          DeleteConversationRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency CreateAnalysis(
      google::cloud::contactcenterinsights::v1::CreateAnalysisRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency GetAnalysis(
      google::cloud::contactcenterinsights::v1::GetAnalysisRequest const&)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency ListAnalyses(
      google::cloud::contactcenterinsights::v1::ListAnalysesRequest) override {
    return Idempotency::kIdempotent;
  }

  Idempotency DeleteAnalysis(
      google::cloud::contactcenterinsights::v1::DeleteAnalysisRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency ExportInsightsData(
      google::cloud::contactcenterinsights::v1::
          ExportInsightsDataRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency CreateIssueModel(
      google::cloud::contactcenterinsights::v1::CreateIssueModelRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency UpdateIssueModel(
      google::cloud::contactcenterinsights::v1::UpdateIssueModelRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency GetIssueModel(
      google::cloud::contactcenterinsights::v1::GetIssueModelRequest const&)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency ListIssueModels(
      google::cloud::contactcenterinsights::v1::ListIssueModelsRequest const&)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency DeleteIssueModel(
      google::cloud::contactcenterinsights::v1::DeleteIssueModelRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency DeployIssueModel(
      google::cloud::contactcenterinsights::v1::DeployIssueModelRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency UndeployIssueModel(
      google::cloud::contactcenterinsights::v1::
          UndeployIssueModelRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency GetIssue(
      google::cloud::contactcenterinsights::v1::GetIssueRequest const&)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency ListIssues(
      google::cloud::contactcenterinsights::v1::ListIssuesRequest const&)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency UpdateIssue(
      google::cloud::contactcenterinsights::v1::UpdateIssueRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency CalculateIssueModelStats(
      google::cloud::contactcenterinsights::v1::
          CalculateIssueModelStatsRequest const&) override {
    return Idempotency::kIdempotent;
  }

  Idempotency CreatePhraseMatcher(
      google::cloud::contactcenterinsights::v1::
          CreatePhraseMatcherRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency GetPhraseMatcher(
      google::cloud::contactcenterinsights::v1::GetPhraseMatcherRequest const&)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency ListPhraseMatchers(
      google::cloud::contactcenterinsights::v1::ListPhraseMatchersRequest)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency DeletePhraseMatcher(
      google::cloud::contactcenterinsights::v1::
          DeletePhraseMatcherRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency UpdatePhraseMatcher(
      google::cloud::contactcenterinsights::v1::
          UpdatePhraseMatcherRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency CalculateStats(
      google::cloud::contactcenterinsights::v1::CalculateStatsRequest const&)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency GetSettings(
      google::cloud::contactcenterinsights::v1::GetSettingsRequest const&)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency UpdateSettings(
      google::cloud::contactcenterinsights::v1::UpdateSettingsRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency CreateView(
      google::cloud::contactcenterinsights::v1::CreateViewRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency GetView(
      google::cloud::contactcenterinsights::v1::GetViewRequest const&)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency ListViews(
      google::cloud::contactcenterinsights::v1::ListViewsRequest) override {
    return Idempotency::kIdempotent;
  }

  Idempotency UpdateView(
      google::cloud::contactcenterinsights::v1::UpdateViewRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency DeleteView(
      google::cloud::contactcenterinsights::v1::DeleteViewRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }
};
}  // namespace

std::unique_ptr<ContactCenterInsightsConnectionIdempotencyPolicy>
MakeDefaultContactCenterInsightsConnectionIdempotencyPolicy() {
  return absl::make_unique<
      DefaultContactCenterInsightsConnectionIdempotencyPolicy>();
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace contactcenterinsights
}  // namespace cloud
}  // namespace google
