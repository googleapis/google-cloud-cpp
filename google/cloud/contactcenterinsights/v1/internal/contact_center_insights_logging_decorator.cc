// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/contactcenterinsights/v1/contact_center_insights.proto

#include "google/cloud/contactcenterinsights/v1/internal/contact_center_insights_logging_decorator.h"
#include "google/cloud/internal/log_wrapper.h"
#include "google/cloud/status_or.h"
#include <google/cloud/contactcenterinsights/v1/contact_center_insights.grpc.pb.h>
#include <memory>
#include <set>
#include <string>
#include <utility>

namespace google {
namespace cloud {
namespace contactcenterinsights_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

ContactCenterInsightsLogging::ContactCenterInsightsLogging(
    std::shared_ptr<ContactCenterInsightsStub> child,
    TracingOptions tracing_options, std::set<std::string> const&)
    : child_(std::move(child)), tracing_options_(std::move(tracing_options)) {}

StatusOr<google::cloud::contactcenterinsights::v1::Conversation>
ContactCenterInsightsLogging::CreateConversation(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::CreateConversationRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 CreateConversationRequest const& request) {
        return child_->CreateConversation(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

future<StatusOr<google::longrunning::Operation>>
ContactCenterInsightsLogging::AsyncUploadConversation(
    google::cloud::CompletionQueue& cq,
    std::shared_ptr<grpc::ClientContext> context,
    google::cloud::internal::ImmutableOptions options,
    google::cloud::contactcenterinsights::v1::UploadConversationRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](google::cloud::CompletionQueue& cq,
             std::shared_ptr<grpc::ClientContext> context,
             google::cloud::internal::ImmutableOptions options,
             google::cloud::contactcenterinsights::v1::
                 UploadConversationRequest const& request) {
        return child_->AsyncUploadConversation(cq, std::move(context),
                                               std::move(options), request);
      },
      cq, std::move(context), std::move(options), request, __func__,
      tracing_options_);
}

StatusOr<google::longrunning::Operation>
ContactCenterInsightsLogging::UploadConversation(
    grpc::ClientContext& context, Options options,
    google::cloud::contactcenterinsights::v1::UploadConversationRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 UploadConversationRequest const& request) {
        return child_->UploadConversation(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::Conversation>
ContactCenterInsightsLogging::UpdateConversation(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::UpdateConversationRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 UpdateConversationRequest const& request) {
        return child_->UpdateConversation(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::Conversation>
ContactCenterInsightsLogging::GetConversation(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::GetConversationRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 GetConversationRequest const& request) {
        return child_->GetConversation(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::ListConversationsResponse>
ContactCenterInsightsLogging::ListConversations(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::ListConversationsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 ListConversationsRequest const& request) {
        return child_->ListConversations(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

Status ContactCenterInsightsLogging::DeleteConversation(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::DeleteConversationRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 DeleteConversationRequest const& request) {
        return child_->DeleteConversation(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

future<StatusOr<google::longrunning::Operation>>
ContactCenterInsightsLogging::AsyncCreateAnalysis(
    google::cloud::CompletionQueue& cq,
    std::shared_ptr<grpc::ClientContext> context,
    google::cloud::internal::ImmutableOptions options,
    google::cloud::contactcenterinsights::v1::CreateAnalysisRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          google::cloud::CompletionQueue& cq,
          std::shared_ptr<grpc::ClientContext> context,
          google::cloud::internal::ImmutableOptions options,
          google::cloud::contactcenterinsights::v1::CreateAnalysisRequest const&
              request) {
        return child_->AsyncCreateAnalysis(cq, std::move(context),
                                           std::move(options), request);
      },
      cq, std::move(context), std::move(options), request, __func__,
      tracing_options_);
}

StatusOr<google::longrunning::Operation>
ContactCenterInsightsLogging::CreateAnalysis(
    grpc::ClientContext& context, Options options,
    google::cloud::contactcenterinsights::v1::CreateAnalysisRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context, Options const& options,
          google::cloud::contactcenterinsights::v1::CreateAnalysisRequest const&
              request) {
        return child_->CreateAnalysis(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::Analysis>
ContactCenterInsightsLogging::GetAnalysis(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::GetAnalysisRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::GetAnalysisRequest const&
                 request) {
        return child_->GetAnalysis(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::ListAnalysesResponse>
ContactCenterInsightsLogging::ListAnalyses(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::ListAnalysesRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context, Options const& options,
          google::cloud::contactcenterinsights::v1::ListAnalysesRequest const&
              request) {
        return child_->ListAnalyses(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

Status ContactCenterInsightsLogging::DeleteAnalysis(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::DeleteAnalysisRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context, Options const& options,
          google::cloud::contactcenterinsights::v1::DeleteAnalysisRequest const&
              request) {
        return child_->DeleteAnalysis(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

future<StatusOr<google::longrunning::Operation>>
ContactCenterInsightsLogging::AsyncBulkAnalyzeConversations(
    google::cloud::CompletionQueue& cq,
    std::shared_ptr<grpc::ClientContext> context,
    google::cloud::internal::ImmutableOptions options,
    google::cloud::contactcenterinsights::v1::
        BulkAnalyzeConversationsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](google::cloud::CompletionQueue& cq,
             std::shared_ptr<grpc::ClientContext> context,
             google::cloud::internal::ImmutableOptions options,
             google::cloud::contactcenterinsights::v1::
                 BulkAnalyzeConversationsRequest const& request) {
        return child_->AsyncBulkAnalyzeConversations(
            cq, std::move(context), std::move(options), request);
      },
      cq, std::move(context), std::move(options), request, __func__,
      tracing_options_);
}

StatusOr<google::longrunning::Operation>
ContactCenterInsightsLogging::BulkAnalyzeConversations(
    grpc::ClientContext& context, Options options,
    google::cloud::contactcenterinsights::v1::
        BulkAnalyzeConversationsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 BulkAnalyzeConversationsRequest const& request) {
        return child_->BulkAnalyzeConversations(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

future<StatusOr<google::longrunning::Operation>>
ContactCenterInsightsLogging::AsyncBulkDeleteConversations(
    google::cloud::CompletionQueue& cq,
    std::shared_ptr<grpc::ClientContext> context,
    google::cloud::internal::ImmutableOptions options,
    google::cloud::contactcenterinsights::v1::
        BulkDeleteConversationsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](google::cloud::CompletionQueue& cq,
             std::shared_ptr<grpc::ClientContext> context,
             google::cloud::internal::ImmutableOptions options,
             google::cloud::contactcenterinsights::v1::
                 BulkDeleteConversationsRequest const& request) {
        return child_->AsyncBulkDeleteConversations(
            cq, std::move(context), std::move(options), request);
      },
      cq, std::move(context), std::move(options), request, __func__,
      tracing_options_);
}

StatusOr<google::longrunning::Operation>
ContactCenterInsightsLogging::BulkDeleteConversations(
    grpc::ClientContext& context, Options options,
    google::cloud::contactcenterinsights::v1::
        BulkDeleteConversationsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 BulkDeleteConversationsRequest const& request) {
        return child_->BulkDeleteConversations(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

future<StatusOr<google::longrunning::Operation>>
ContactCenterInsightsLogging::AsyncIngestConversations(
    google::cloud::CompletionQueue& cq,
    std::shared_ptr<grpc::ClientContext> context,
    google::cloud::internal::ImmutableOptions options,
    google::cloud::contactcenterinsights::v1::IngestConversationsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](google::cloud::CompletionQueue& cq,
             std::shared_ptr<grpc::ClientContext> context,
             google::cloud::internal::ImmutableOptions options,
             google::cloud::contactcenterinsights::v1::
                 IngestConversationsRequest const& request) {
        return child_->AsyncIngestConversations(cq, std::move(context),
                                                std::move(options), request);
      },
      cq, std::move(context), std::move(options), request, __func__,
      tracing_options_);
}

StatusOr<google::longrunning::Operation>
ContactCenterInsightsLogging::IngestConversations(
    grpc::ClientContext& context, Options options,
    google::cloud::contactcenterinsights::v1::IngestConversationsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 IngestConversationsRequest const& request) {
        return child_->IngestConversations(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

future<StatusOr<google::longrunning::Operation>>
ContactCenterInsightsLogging::AsyncExportInsightsData(
    google::cloud::CompletionQueue& cq,
    std::shared_ptr<grpc::ClientContext> context,
    google::cloud::internal::ImmutableOptions options,
    google::cloud::contactcenterinsights::v1::ExportInsightsDataRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](google::cloud::CompletionQueue& cq,
             std::shared_ptr<grpc::ClientContext> context,
             google::cloud::internal::ImmutableOptions options,
             google::cloud::contactcenterinsights::v1::
                 ExportInsightsDataRequest const& request) {
        return child_->AsyncExportInsightsData(cq, std::move(context),
                                               std::move(options), request);
      },
      cq, std::move(context), std::move(options), request, __func__,
      tracing_options_);
}

StatusOr<google::longrunning::Operation>
ContactCenterInsightsLogging::ExportInsightsData(
    grpc::ClientContext& context, Options options,
    google::cloud::contactcenterinsights::v1::ExportInsightsDataRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 ExportInsightsDataRequest const& request) {
        return child_->ExportInsightsData(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

future<StatusOr<google::longrunning::Operation>>
ContactCenterInsightsLogging::AsyncCreateIssueModel(
    google::cloud::CompletionQueue& cq,
    std::shared_ptr<grpc::ClientContext> context,
    google::cloud::internal::ImmutableOptions options,
    google::cloud::contactcenterinsights::v1::CreateIssueModelRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](google::cloud::CompletionQueue& cq,
             std::shared_ptr<grpc::ClientContext> context,
             google::cloud::internal::ImmutableOptions options,
             google::cloud::contactcenterinsights::v1::
                 CreateIssueModelRequest const& request) {
        return child_->AsyncCreateIssueModel(cq, std::move(context),
                                             std::move(options), request);
      },
      cq, std::move(context), std::move(options), request, __func__,
      tracing_options_);
}

StatusOr<google::longrunning::Operation>
ContactCenterInsightsLogging::CreateIssueModel(
    grpc::ClientContext& context, Options options,
    google::cloud::contactcenterinsights::v1::CreateIssueModelRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 CreateIssueModelRequest const& request) {
        return child_->CreateIssueModel(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::IssueModel>
ContactCenterInsightsLogging::UpdateIssueModel(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::UpdateIssueModelRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 UpdateIssueModelRequest const& request) {
        return child_->UpdateIssueModel(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::IssueModel>
ContactCenterInsightsLogging::GetIssueModel(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::GetIssueModelRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context, Options const& options,
          google::cloud::contactcenterinsights::v1::GetIssueModelRequest const&
              request) {
        return child_->GetIssueModel(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::ListIssueModelsResponse>
ContactCenterInsightsLogging::ListIssueModels(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::ListIssueModelsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 ListIssueModelsRequest const& request) {
        return child_->ListIssueModels(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

future<StatusOr<google::longrunning::Operation>>
ContactCenterInsightsLogging::AsyncDeleteIssueModel(
    google::cloud::CompletionQueue& cq,
    std::shared_ptr<grpc::ClientContext> context,
    google::cloud::internal::ImmutableOptions options,
    google::cloud::contactcenterinsights::v1::DeleteIssueModelRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](google::cloud::CompletionQueue& cq,
             std::shared_ptr<grpc::ClientContext> context,
             google::cloud::internal::ImmutableOptions options,
             google::cloud::contactcenterinsights::v1::
                 DeleteIssueModelRequest const& request) {
        return child_->AsyncDeleteIssueModel(cq, std::move(context),
                                             std::move(options), request);
      },
      cq, std::move(context), std::move(options), request, __func__,
      tracing_options_);
}

StatusOr<google::longrunning::Operation>
ContactCenterInsightsLogging::DeleteIssueModel(
    grpc::ClientContext& context, Options options,
    google::cloud::contactcenterinsights::v1::DeleteIssueModelRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 DeleteIssueModelRequest const& request) {
        return child_->DeleteIssueModel(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

future<StatusOr<google::longrunning::Operation>>
ContactCenterInsightsLogging::AsyncDeployIssueModel(
    google::cloud::CompletionQueue& cq,
    std::shared_ptr<grpc::ClientContext> context,
    google::cloud::internal::ImmutableOptions options,
    google::cloud::contactcenterinsights::v1::DeployIssueModelRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](google::cloud::CompletionQueue& cq,
             std::shared_ptr<grpc::ClientContext> context,
             google::cloud::internal::ImmutableOptions options,
             google::cloud::contactcenterinsights::v1::
                 DeployIssueModelRequest const& request) {
        return child_->AsyncDeployIssueModel(cq, std::move(context),
                                             std::move(options), request);
      },
      cq, std::move(context), std::move(options), request, __func__,
      tracing_options_);
}

StatusOr<google::longrunning::Operation>
ContactCenterInsightsLogging::DeployIssueModel(
    grpc::ClientContext& context, Options options,
    google::cloud::contactcenterinsights::v1::DeployIssueModelRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 DeployIssueModelRequest const& request) {
        return child_->DeployIssueModel(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

future<StatusOr<google::longrunning::Operation>>
ContactCenterInsightsLogging::AsyncUndeployIssueModel(
    google::cloud::CompletionQueue& cq,
    std::shared_ptr<grpc::ClientContext> context,
    google::cloud::internal::ImmutableOptions options,
    google::cloud::contactcenterinsights::v1::UndeployIssueModelRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](google::cloud::CompletionQueue& cq,
             std::shared_ptr<grpc::ClientContext> context,
             google::cloud::internal::ImmutableOptions options,
             google::cloud::contactcenterinsights::v1::
                 UndeployIssueModelRequest const& request) {
        return child_->AsyncUndeployIssueModel(cq, std::move(context),
                                               std::move(options), request);
      },
      cq, std::move(context), std::move(options), request, __func__,
      tracing_options_);
}

StatusOr<google::longrunning::Operation>
ContactCenterInsightsLogging::UndeployIssueModel(
    grpc::ClientContext& context, Options options,
    google::cloud::contactcenterinsights::v1::UndeployIssueModelRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 UndeployIssueModelRequest const& request) {
        return child_->UndeployIssueModel(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

future<StatusOr<google::longrunning::Operation>>
ContactCenterInsightsLogging::AsyncExportIssueModel(
    google::cloud::CompletionQueue& cq,
    std::shared_ptr<grpc::ClientContext> context,
    google::cloud::internal::ImmutableOptions options,
    google::cloud::contactcenterinsights::v1::ExportIssueModelRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](google::cloud::CompletionQueue& cq,
             std::shared_ptr<grpc::ClientContext> context,
             google::cloud::internal::ImmutableOptions options,
             google::cloud::contactcenterinsights::v1::
                 ExportIssueModelRequest const& request) {
        return child_->AsyncExportIssueModel(cq, std::move(context),
                                             std::move(options), request);
      },
      cq, std::move(context), std::move(options), request, __func__,
      tracing_options_);
}

StatusOr<google::longrunning::Operation>
ContactCenterInsightsLogging::ExportIssueModel(
    grpc::ClientContext& context, Options options,
    google::cloud::contactcenterinsights::v1::ExportIssueModelRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 ExportIssueModelRequest const& request) {
        return child_->ExportIssueModel(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

future<StatusOr<google::longrunning::Operation>>
ContactCenterInsightsLogging::AsyncImportIssueModel(
    google::cloud::CompletionQueue& cq,
    std::shared_ptr<grpc::ClientContext> context,
    google::cloud::internal::ImmutableOptions options,
    google::cloud::contactcenterinsights::v1::ImportIssueModelRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](google::cloud::CompletionQueue& cq,
             std::shared_ptr<grpc::ClientContext> context,
             google::cloud::internal::ImmutableOptions options,
             google::cloud::contactcenterinsights::v1::
                 ImportIssueModelRequest const& request) {
        return child_->AsyncImportIssueModel(cq, std::move(context),
                                             std::move(options), request);
      },
      cq, std::move(context), std::move(options), request, __func__,
      tracing_options_);
}

StatusOr<google::longrunning::Operation>
ContactCenterInsightsLogging::ImportIssueModel(
    grpc::ClientContext& context, Options options,
    google::cloud::contactcenterinsights::v1::ImportIssueModelRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 ImportIssueModelRequest const& request) {
        return child_->ImportIssueModel(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::Issue>
ContactCenterInsightsLogging::GetIssue(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::GetIssueRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::GetIssueRequest const&
                 request) {
        return child_->GetIssue(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::ListIssuesResponse>
ContactCenterInsightsLogging::ListIssues(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::ListIssuesRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::ListIssuesRequest const&
                 request) {
        return child_->ListIssues(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::Issue>
ContactCenterInsightsLogging::UpdateIssue(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::UpdateIssueRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::UpdateIssueRequest const&
                 request) {
        return child_->UpdateIssue(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

Status ContactCenterInsightsLogging::DeleteIssue(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::DeleteIssueRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::DeleteIssueRequest const&
                 request) {
        return child_->DeleteIssue(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<
    google::cloud::contactcenterinsights::v1::CalculateIssueModelStatsResponse>
ContactCenterInsightsLogging::CalculateIssueModelStats(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::
        CalculateIssueModelStatsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 CalculateIssueModelStatsRequest const& request) {
        return child_->CalculateIssueModelStats(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::PhraseMatcher>
ContactCenterInsightsLogging::CreatePhraseMatcher(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::CreatePhraseMatcherRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 CreatePhraseMatcherRequest const& request) {
        return child_->CreatePhraseMatcher(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::PhraseMatcher>
ContactCenterInsightsLogging::GetPhraseMatcher(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::GetPhraseMatcherRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 GetPhraseMatcherRequest const& request) {
        return child_->GetPhraseMatcher(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::ListPhraseMatchersResponse>
ContactCenterInsightsLogging::ListPhraseMatchers(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::ListPhraseMatchersRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 ListPhraseMatchersRequest const& request) {
        return child_->ListPhraseMatchers(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

Status ContactCenterInsightsLogging::DeletePhraseMatcher(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::DeletePhraseMatcherRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 DeletePhraseMatcherRequest const& request) {
        return child_->DeletePhraseMatcher(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::PhraseMatcher>
ContactCenterInsightsLogging::UpdatePhraseMatcher(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::UpdatePhraseMatcherRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 UpdatePhraseMatcherRequest const& request) {
        return child_->UpdatePhraseMatcher(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::CalculateStatsResponse>
ContactCenterInsightsLogging::CalculateStats(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::CalculateStatsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context, Options const& options,
          google::cloud::contactcenterinsights::v1::CalculateStatsRequest const&
              request) {
        return child_->CalculateStats(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::Settings>
ContactCenterInsightsLogging::GetSettings(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::GetSettingsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::GetSettingsRequest const&
                 request) {
        return child_->GetSettings(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::Settings>
ContactCenterInsightsLogging::UpdateSettings(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::UpdateSettingsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context, Options const& options,
          google::cloud::contactcenterinsights::v1::UpdateSettingsRequest const&
              request) {
        return child_->UpdateSettings(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::AnalysisRule>
ContactCenterInsightsLogging::CreateAnalysisRule(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::CreateAnalysisRuleRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 CreateAnalysisRuleRequest const& request) {
        return child_->CreateAnalysisRule(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::AnalysisRule>
ContactCenterInsightsLogging::GetAnalysisRule(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::GetAnalysisRuleRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 GetAnalysisRuleRequest const& request) {
        return child_->GetAnalysisRule(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::ListAnalysisRulesResponse>
ContactCenterInsightsLogging::ListAnalysisRules(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::ListAnalysisRulesRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 ListAnalysisRulesRequest const& request) {
        return child_->ListAnalysisRules(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::AnalysisRule>
ContactCenterInsightsLogging::UpdateAnalysisRule(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::UpdateAnalysisRuleRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 UpdateAnalysisRuleRequest const& request) {
        return child_->UpdateAnalysisRule(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

Status ContactCenterInsightsLogging::DeleteAnalysisRule(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::DeleteAnalysisRuleRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 DeleteAnalysisRuleRequest const& request) {
        return child_->DeleteAnalysisRule(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::EncryptionSpec>
ContactCenterInsightsLogging::GetEncryptionSpec(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::GetEncryptionSpecRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 GetEncryptionSpecRequest const& request) {
        return child_->GetEncryptionSpec(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

future<StatusOr<google::longrunning::Operation>>
ContactCenterInsightsLogging::AsyncInitializeEncryptionSpec(
    google::cloud::CompletionQueue& cq,
    std::shared_ptr<grpc::ClientContext> context,
    google::cloud::internal::ImmutableOptions options,
    google::cloud::contactcenterinsights::v1::
        InitializeEncryptionSpecRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](google::cloud::CompletionQueue& cq,
             std::shared_ptr<grpc::ClientContext> context,
             google::cloud::internal::ImmutableOptions options,
             google::cloud::contactcenterinsights::v1::
                 InitializeEncryptionSpecRequest const& request) {
        return child_->AsyncInitializeEncryptionSpec(
            cq, std::move(context), std::move(options), request);
      },
      cq, std::move(context), std::move(options), request, __func__,
      tracing_options_);
}

StatusOr<google::longrunning::Operation>
ContactCenterInsightsLogging::InitializeEncryptionSpec(
    grpc::ClientContext& context, Options options,
    google::cloud::contactcenterinsights::v1::
        InitializeEncryptionSpecRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 InitializeEncryptionSpecRequest const& request) {
        return child_->InitializeEncryptionSpec(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::View>
ContactCenterInsightsLogging::CreateView(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::CreateViewRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::CreateViewRequest const&
                 request) {
        return child_->CreateView(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::View>
ContactCenterInsightsLogging::GetView(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::GetViewRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::GetViewRequest const&
                 request) {
        return child_->GetView(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::ListViewsResponse>
ContactCenterInsightsLogging::ListViews(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::ListViewsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::ListViewsRequest const&
                 request) {
        return child_->ListViews(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::View>
ContactCenterInsightsLogging::UpdateView(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::UpdateViewRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::UpdateViewRequest const&
                 request) {
        return child_->UpdateView(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

Status ContactCenterInsightsLogging::DeleteView(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::DeleteViewRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::DeleteViewRequest const&
                 request) {
        return child_->DeleteView(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

future<StatusOr<google::longrunning::Operation>>
ContactCenterInsightsLogging::AsyncQueryMetrics(
    google::cloud::CompletionQueue& cq,
    std::shared_ptr<grpc::ClientContext> context,
    google::cloud::internal::ImmutableOptions options,
    google::cloud::contactcenterinsights::v1::QueryMetricsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          google::cloud::CompletionQueue& cq,
          std::shared_ptr<grpc::ClientContext> context,
          google::cloud::internal::ImmutableOptions options,
          google::cloud::contactcenterinsights::v1::QueryMetricsRequest const&
              request) {
        return child_->AsyncQueryMetrics(cq, std::move(context),
                                         std::move(options), request);
      },
      cq, std::move(context), std::move(options), request, __func__,
      tracing_options_);
}

StatusOr<google::longrunning::Operation>
ContactCenterInsightsLogging::QueryMetrics(
    grpc::ClientContext& context, Options options,
    google::cloud::contactcenterinsights::v1::QueryMetricsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context, Options const& options,
          google::cloud::contactcenterinsights::v1::QueryMetricsRequest const&
              request) {
        return child_->QueryMetrics(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::QaQuestion>
ContactCenterInsightsLogging::CreateQaQuestion(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::CreateQaQuestionRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 CreateQaQuestionRequest const& request) {
        return child_->CreateQaQuestion(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::QaQuestion>
ContactCenterInsightsLogging::GetQaQuestion(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::GetQaQuestionRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context, Options const& options,
          google::cloud::contactcenterinsights::v1::GetQaQuestionRequest const&
              request) {
        return child_->GetQaQuestion(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::QaQuestion>
ContactCenterInsightsLogging::UpdateQaQuestion(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::UpdateQaQuestionRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 UpdateQaQuestionRequest const& request) {
        return child_->UpdateQaQuestion(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

Status ContactCenterInsightsLogging::DeleteQaQuestion(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::DeleteQaQuestionRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 DeleteQaQuestionRequest const& request) {
        return child_->DeleteQaQuestion(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::ListQaQuestionsResponse>
ContactCenterInsightsLogging::ListQaQuestions(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::ListQaQuestionsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 ListQaQuestionsRequest const& request) {
        return child_->ListQaQuestions(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::QaScorecard>
ContactCenterInsightsLogging::CreateQaScorecard(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::CreateQaScorecardRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 CreateQaScorecardRequest const& request) {
        return child_->CreateQaScorecard(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::QaScorecard>
ContactCenterInsightsLogging::GetQaScorecard(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::GetQaScorecardRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context, Options const& options,
          google::cloud::contactcenterinsights::v1::GetQaScorecardRequest const&
              request) {
        return child_->GetQaScorecard(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::QaScorecard>
ContactCenterInsightsLogging::UpdateQaScorecard(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::UpdateQaScorecardRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 UpdateQaScorecardRequest const& request) {
        return child_->UpdateQaScorecard(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

Status ContactCenterInsightsLogging::DeleteQaScorecard(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::DeleteQaScorecardRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 DeleteQaScorecardRequest const& request) {
        return child_->DeleteQaScorecard(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::ListQaScorecardsResponse>
ContactCenterInsightsLogging::ListQaScorecards(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::ListQaScorecardsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 ListQaScorecardsRequest const& request) {
        return child_->ListQaScorecards(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::QaScorecardRevision>
ContactCenterInsightsLogging::CreateQaScorecardRevision(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::
        CreateQaScorecardRevisionRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 CreateQaScorecardRevisionRequest const& request) {
        return child_->CreateQaScorecardRevision(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::QaScorecardRevision>
ContactCenterInsightsLogging::GetQaScorecardRevision(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::
        GetQaScorecardRevisionRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 GetQaScorecardRevisionRequest const& request) {
        return child_->GetQaScorecardRevision(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

future<StatusOr<google::longrunning::Operation>>
ContactCenterInsightsLogging::AsyncTuneQaScorecardRevision(
    google::cloud::CompletionQueue& cq,
    std::shared_ptr<grpc::ClientContext> context,
    google::cloud::internal::ImmutableOptions options,
    google::cloud::contactcenterinsights::v1::
        TuneQaScorecardRevisionRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](google::cloud::CompletionQueue& cq,
             std::shared_ptr<grpc::ClientContext> context,
             google::cloud::internal::ImmutableOptions options,
             google::cloud::contactcenterinsights::v1::
                 TuneQaScorecardRevisionRequest const& request) {
        return child_->AsyncTuneQaScorecardRevision(
            cq, std::move(context), std::move(options), request);
      },
      cq, std::move(context), std::move(options), request, __func__,
      tracing_options_);
}

StatusOr<google::longrunning::Operation>
ContactCenterInsightsLogging::TuneQaScorecardRevision(
    grpc::ClientContext& context, Options options,
    google::cloud::contactcenterinsights::v1::
        TuneQaScorecardRevisionRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 TuneQaScorecardRevisionRequest const& request) {
        return child_->TuneQaScorecardRevision(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::QaScorecardRevision>
ContactCenterInsightsLogging::DeployQaScorecardRevision(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::
        DeployQaScorecardRevisionRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 DeployQaScorecardRevisionRequest const& request) {
        return child_->DeployQaScorecardRevision(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::QaScorecardRevision>
ContactCenterInsightsLogging::UndeployQaScorecardRevision(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::
        UndeployQaScorecardRevisionRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 UndeployQaScorecardRevisionRequest const& request) {
        return child_->UndeployQaScorecardRevision(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

Status ContactCenterInsightsLogging::DeleteQaScorecardRevision(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::
        DeleteQaScorecardRevisionRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 DeleteQaScorecardRevisionRequest const& request) {
        return child_->DeleteQaScorecardRevision(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<
    google::cloud::contactcenterinsights::v1::ListQaScorecardRevisionsResponse>
ContactCenterInsightsLogging::ListQaScorecardRevisions(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::
        ListQaScorecardRevisionsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 ListQaScorecardRevisionsRequest const& request) {
        return child_->ListQaScorecardRevisions(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::FeedbackLabel>
ContactCenterInsightsLogging::CreateFeedbackLabel(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::CreateFeedbackLabelRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 CreateFeedbackLabelRequest const& request) {
        return child_->CreateFeedbackLabel(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::ListFeedbackLabelsResponse>
ContactCenterInsightsLogging::ListFeedbackLabels(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::ListFeedbackLabelsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 ListFeedbackLabelsRequest const& request) {
        return child_->ListFeedbackLabels(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::FeedbackLabel>
ContactCenterInsightsLogging::GetFeedbackLabel(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::GetFeedbackLabelRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 GetFeedbackLabelRequest const& request) {
        return child_->GetFeedbackLabel(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::contactcenterinsights::v1::FeedbackLabel>
ContactCenterInsightsLogging::UpdateFeedbackLabel(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::UpdateFeedbackLabelRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 UpdateFeedbackLabelRequest const& request) {
        return child_->UpdateFeedbackLabel(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

Status ContactCenterInsightsLogging::DeleteFeedbackLabel(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::DeleteFeedbackLabelRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 DeleteFeedbackLabelRequest const& request) {
        return child_->DeleteFeedbackLabel(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<
    google::cloud::contactcenterinsights::v1::ListAllFeedbackLabelsResponse>
ContactCenterInsightsLogging::ListAllFeedbackLabels(
    grpc::ClientContext& context, Options const& options,
    google::cloud::contactcenterinsights::v1::
        ListAllFeedbackLabelsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 ListAllFeedbackLabelsRequest const& request) {
        return child_->ListAllFeedbackLabels(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

future<StatusOr<google::longrunning::Operation>>
ContactCenterInsightsLogging::AsyncBulkUploadFeedbackLabels(
    google::cloud::CompletionQueue& cq,
    std::shared_ptr<grpc::ClientContext> context,
    google::cloud::internal::ImmutableOptions options,
    google::cloud::contactcenterinsights::v1::
        BulkUploadFeedbackLabelsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](google::cloud::CompletionQueue& cq,
             std::shared_ptr<grpc::ClientContext> context,
             google::cloud::internal::ImmutableOptions options,
             google::cloud::contactcenterinsights::v1::
                 BulkUploadFeedbackLabelsRequest const& request) {
        return child_->AsyncBulkUploadFeedbackLabels(
            cq, std::move(context), std::move(options), request);
      },
      cq, std::move(context), std::move(options), request, __func__,
      tracing_options_);
}

StatusOr<google::longrunning::Operation>
ContactCenterInsightsLogging::BulkUploadFeedbackLabels(
    grpc::ClientContext& context, Options options,
    google::cloud::contactcenterinsights::v1::
        BulkUploadFeedbackLabelsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 BulkUploadFeedbackLabelsRequest const& request) {
        return child_->BulkUploadFeedbackLabels(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

future<StatusOr<google::longrunning::Operation>>
ContactCenterInsightsLogging::AsyncBulkDownloadFeedbackLabels(
    google::cloud::CompletionQueue& cq,
    std::shared_ptr<grpc::ClientContext> context,
    google::cloud::internal::ImmutableOptions options,
    google::cloud::contactcenterinsights::v1::
        BulkDownloadFeedbackLabelsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](google::cloud::CompletionQueue& cq,
             std::shared_ptr<grpc::ClientContext> context,
             google::cloud::internal::ImmutableOptions options,
             google::cloud::contactcenterinsights::v1::
                 BulkDownloadFeedbackLabelsRequest const& request) {
        return child_->AsyncBulkDownloadFeedbackLabels(
            cq, std::move(context), std::move(options), request);
      },
      cq, std::move(context), std::move(options), request, __func__,
      tracing_options_);
}

StatusOr<google::longrunning::Operation>
ContactCenterInsightsLogging::BulkDownloadFeedbackLabels(
    grpc::ClientContext& context, Options options,
    google::cloud::contactcenterinsights::v1::
        BulkDownloadFeedbackLabelsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::contactcenterinsights::v1::
                 BulkDownloadFeedbackLabelsRequest const& request) {
        return child_->BulkDownloadFeedbackLabels(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::longrunning::ListOperationsResponse>
ContactCenterInsightsLogging::ListOperations(
    grpc::ClientContext& context, Options const& options,
    google::longrunning::ListOperationsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::longrunning::ListOperationsRequest const& request) {
        return child_->ListOperations(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::longrunning::Operation>
ContactCenterInsightsLogging::GetOperation(
    grpc::ClientContext& context, Options const& options,
    google::longrunning::GetOperationRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::longrunning::GetOperationRequest const& request) {
        return child_->GetOperation(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

Status ContactCenterInsightsLogging::CancelOperation(
    grpc::ClientContext& context, Options const& options,
    google::longrunning::CancelOperationRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::longrunning::CancelOperationRequest const& request) {
        return child_->CancelOperation(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

future<StatusOr<google::longrunning::Operation>>
ContactCenterInsightsLogging::AsyncGetOperation(
    google::cloud::CompletionQueue& cq,
    std::shared_ptr<grpc::ClientContext> context,
    google::cloud::internal::ImmutableOptions options,
    google::longrunning::GetOperationRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](google::cloud::CompletionQueue& cq,
             std::shared_ptr<grpc::ClientContext> context,
             google::cloud::internal::ImmutableOptions options,
             google::longrunning::GetOperationRequest const& request) {
        return child_->AsyncGetOperation(cq, std::move(context),
                                         std::move(options), request);
      },
      cq, std::move(context), std::move(options), request, __func__,
      tracing_options_);
}

future<Status> ContactCenterInsightsLogging::AsyncCancelOperation(
    google::cloud::CompletionQueue& cq,
    std::shared_ptr<grpc::ClientContext> context,
    google::cloud::internal::ImmutableOptions options,
    google::longrunning::CancelOperationRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](google::cloud::CompletionQueue& cq,
             std::shared_ptr<grpc::ClientContext> context,
             google::cloud::internal::ImmutableOptions options,
             google::longrunning::CancelOperationRequest const& request) {
        return child_->AsyncCancelOperation(cq, std::move(context),
                                            std::move(options), request);
      },
      cq, std::move(context), std::move(options), request, __func__,
      tracing_options_);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace contactcenterinsights_v1_internal
}  // namespace cloud
}  // namespace google
