// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/texttospeech/v1/cloud_tts_lrs.proto

#include "google/cloud/texttospeech/v1/text_to_speech_long_audio_synthesize_connection.h"
#include "google/cloud/texttospeech/v1/internal/text_to_speech_long_audio_synthesize_connection_impl.h"
#include "google/cloud/texttospeech/v1/internal/text_to_speech_long_audio_synthesize_option_defaults.h"
#include "google/cloud/texttospeech/v1/internal/text_to_speech_long_audio_synthesize_stub_factory.h"
#include "google/cloud/texttospeech/v1/internal/text_to_speech_long_audio_synthesize_tracing_connection.h"
#include "google/cloud/texttospeech/v1/text_to_speech_long_audio_synthesize_options.h"
#include "google/cloud/background_threads.h"
#include "google/cloud/common_options.h"
#include "google/cloud/credentials.h"
#include "google/cloud/grpc_options.h"
#include "google/cloud/internal/unified_grpc_credentials.h"
#include <memory>
#include <utility>

namespace google {
namespace cloud {
namespace texttospeech_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

TextToSpeechLongAudioSynthesizeConnection::
    ~TextToSpeechLongAudioSynthesizeConnection() = default;

future<StatusOr<google::cloud::texttospeech::v1::SynthesizeLongAudioResponse>>
TextToSpeechLongAudioSynthesizeConnection::SynthesizeLongAudio(
    google::cloud::texttospeech::v1::SynthesizeLongAudioRequest const&) {
  return google::cloud::make_ready_future<
      StatusOr<google::cloud::texttospeech::v1::SynthesizeLongAudioResponse>>(
      Status(StatusCode::kUnimplemented, "not implemented"));
}

std::shared_ptr<TextToSpeechLongAudioSynthesizeConnection>
MakeTextToSpeechLongAudioSynthesizeConnection(Options options) {
  internal::CheckExpectedOptions<
      CommonOptionList, GrpcOptionList, UnifiedCredentialsOptionList,
      TextToSpeechLongAudioSynthesizePolicyOptionList>(options, __func__);
  options =
      texttospeech_v1_internal::TextToSpeechLongAudioSynthesizeDefaultOptions(
          std::move(options));
  auto background = internal::MakeBackgroundThreadsFactory(options)();
  auto auth = internal::CreateAuthenticationStrategy(background->cq(), options);
  auto stub = texttospeech_v1_internal::
      CreateDefaultTextToSpeechLongAudioSynthesizeStub(std::move(auth),
                                                       options);
  return texttospeech_v1_internal::
      MakeTextToSpeechLongAudioSynthesizeTracingConnection(
          std::make_shared<texttospeech_v1_internal::
                               TextToSpeechLongAudioSynthesizeConnectionImpl>(
              std::move(background), std::move(stub), std::move(options)));
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace texttospeech_v1
}  // namespace cloud
}  // namespace google
