// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/devtools/cloudbuild/v2/repositories.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_CLOUDBUILD_V2_REPOSITORY_MANAGER_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_CLOUDBUILD_V2_REPOSITORY_MANAGER_CLIENT_H

#include "google/cloud/cloudbuild/v2/repository_manager_connection.h"
#include "google/cloud/experimental_tag.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <google/longrunning/operations.grpc.pb.h>
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace cloudbuild_v2 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Manages connections to source code repostiories.
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class RepositoryManagerClient {
 public:
  explicit RepositoryManagerClient(
      ExperimentalTag, std::shared_ptr<RepositoryManagerConnection> connection,
      Options opts = {});
  ~RepositoryManagerClient();

  ///@{
  /// @name Copy and move support
  RepositoryManagerClient(RepositoryManagerClient const&) = default;
  RepositoryManagerClient& operator=(RepositoryManagerClient const&) = default;
  RepositoryManagerClient(RepositoryManagerClient&&) = default;
  RepositoryManagerClient& operator=(RepositoryManagerClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(RepositoryManagerClient const& a,
                         RepositoryManagerClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(RepositoryManagerClient const& a,
                         RepositoryManagerClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Creates a Connection.
  ///
  /// @param parent  Required. Project and location where the connection will be
  /// created.
  ///  Format: `projects/*/locations/*`.
  /// @param connection  Required. The Connection to create.
  /// @param connection_id  Required. The ID to use for the Connection, which
  /// will become the final
  ///  component of the Connection's resource name. Names must be unique
  ///  per-project per-location. Allows alphanumeric characters and any of
  ///  -._~%!$&'()*+,;=@.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::Connection,google/devtools/cloudbuild/v2/repositories.proto#L195}
  ///
  /// [google.devtools.cloudbuild.v2.Connection]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L195}
  /// [google.devtools.cloudbuild.v2.CreateConnectionRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L425}
  ///
  future<StatusOr<google::devtools::cloudbuild::v2::Connection>>
  CreateConnection(
      std::string const& parent,
      google::devtools::cloudbuild::v2::Connection const& connection,
      std::string const& connection_id, Options opts = {});

  ///
  /// Creates a Connection.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v2::CreateConnectionRequest,google/devtools/cloudbuild/v2/repositories.proto#L425}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::Connection,google/devtools/cloudbuild/v2/repositories.proto#L195}
  ///
  /// [google.devtools.cloudbuild.v2.Connection]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L195}
  /// [google.devtools.cloudbuild.v2.CreateConnectionRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L425}
  ///
  future<StatusOr<google::devtools::cloudbuild::v2::Connection>>
  CreateConnection(
      google::devtools::cloudbuild::v2::CreateConnectionRequest const& request,
      Options opts = {});

  ///
  /// Gets details of a single connection.
  ///
  /// @param name  Required. The name of the Connection to retrieve.
  ///  Format: `projects/*/locations/*/connections/*`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::Connection,google/devtools/cloudbuild/v2/repositories.proto#L195}
  ///
  /// [google.devtools.cloudbuild.v2.Connection]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L195}
  /// [google.devtools.cloudbuild.v2.GetConnectionRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L446}
  ///
  StatusOr<google::devtools::cloudbuild::v2::Connection> GetConnection(
      std::string const& name, Options opts = {});

  ///
  /// Gets details of a single connection.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v2::GetConnectionRequest,google/devtools/cloudbuild/v2/repositories.proto#L446}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::Connection,google/devtools/cloudbuild/v2/repositories.proto#L195}
  ///
  /// [google.devtools.cloudbuild.v2.Connection]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L195}
  /// [google.devtools.cloudbuild.v2.GetConnectionRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L446}
  ///
  StatusOr<google::devtools::cloudbuild::v2::Connection> GetConnection(
      google::devtools::cloudbuild::v2::GetConnectionRequest const& request,
      Options opts = {});

  ///
  /// Lists Connections in a given project and location.
  ///
  /// @param parent  Required. The parent, which owns this collection of
  /// Connections.
  ///  Format: `projects/*/locations/*`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::Connection,google/devtools/cloudbuild/v2/repositories.proto#L195}
  ///
  /// [google.devtools.cloudbuild.v2.Connection]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L195}
  /// [google.devtools.cloudbuild.v2.ListConnectionsRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L458}
  ///
  StreamRange<google::devtools::cloudbuild::v2::Connection> ListConnections(
      std::string const& parent, Options opts = {});

  ///
  /// Lists Connections in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v2::ListConnectionsRequest,google/devtools/cloudbuild/v2/repositories.proto#L458}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::Connection,google/devtools/cloudbuild/v2/repositories.proto#L195}
  ///
  /// [google.devtools.cloudbuild.v2.Connection]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L195}
  /// [google.devtools.cloudbuild.v2.ListConnectionsRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L458}
  ///
  StreamRange<google::devtools::cloudbuild::v2::Connection> ListConnections(
      google::devtools::cloudbuild::v2::ListConnectionsRequest request,
      Options opts = {});

  ///
  /// Updates a single connection.
  ///
  /// @param connection  Required. The Connection to update.
  /// @param update_mask  The list of fields to be updated.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::Connection,google/devtools/cloudbuild/v2/repositories.proto#L195}
  ///
  /// [google.devtools.cloudbuild.v2.Connection]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L195}
  /// [google.devtools.cloudbuild.v2.UpdateConnectionRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L485}
  ///
  future<StatusOr<google::devtools::cloudbuild::v2::Connection>>
  UpdateConnection(
      google::devtools::cloudbuild::v2::Connection const& connection,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Updates a single connection.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v2::UpdateConnectionRequest,google/devtools/cloudbuild/v2/repositories.proto#L485}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::Connection,google/devtools/cloudbuild/v2/repositories.proto#L195}
  ///
  /// [google.devtools.cloudbuild.v2.Connection]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L195}
  /// [google.devtools.cloudbuild.v2.UpdateConnectionRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L485}
  ///
  future<StatusOr<google::devtools::cloudbuild::v2::Connection>>
  UpdateConnection(
      google::devtools::cloudbuild::v2::UpdateConnectionRequest const& request,
      Options opts = {});

  ///
  /// Deletes a single connection.
  ///
  /// @param name  Required. The name of the Connection to delete.
  ///  Format: `projects/*/locations/*/connections/*`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::OperationMetadata,google/devtools/cloudbuild/v2/cloudbuild.proto#L55}
  ///
  /// [google.devtools.cloudbuild.v2.DeleteConnectionRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L506}
  /// [google.devtools.cloudbuild.v2.OperationMetadata]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/cloudbuild.proto#L55}
  ///
  future<StatusOr<google::devtools::cloudbuild::v2::OperationMetadata>>
  DeleteConnection(std::string const& name, Options opts = {});

  ///
  /// Deletes a single connection.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v2::DeleteConnectionRequest,google/devtools/cloudbuild/v2/repositories.proto#L506}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::OperationMetadata,google/devtools/cloudbuild/v2/cloudbuild.proto#L55}
  ///
  /// [google.devtools.cloudbuild.v2.DeleteConnectionRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L506}
  /// [google.devtools.cloudbuild.v2.OperationMetadata]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/cloudbuild.proto#L55}
  ///
  future<StatusOr<google::devtools::cloudbuild::v2::OperationMetadata>>
  DeleteConnection(
      google::devtools::cloudbuild::v2::DeleteConnectionRequest const& request,
      Options opts = {});

  ///
  /// Creates a Repository.
  ///
  /// @param parent  Required. The connection to contain the repository. If the
  /// request is part
  ///  of a BatchCreateRepositoriesRequest, this field should be empty or match
  ///  the parent specified there.
  /// @param repository  Required. The repository to create.
  /// @param repository_id  Required. The ID to use for the repository, which
  /// will become the final
  ///  component of the repository's resource name. This ID should be unique in
  ///  the connection. Allows alphanumeric characters and any of
  ///  -._~%!$&'()*+,;=@.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::Repository,google/devtools/cloudbuild/v2/repositories.proto#L378}
  ///
  /// [google.devtools.cloudbuild.v2.CreateRepositoryRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L526}
  /// [google.devtools.cloudbuild.v2.Repository]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L378}
  ///
  future<StatusOr<google::devtools::cloudbuild::v2::Repository>>
  CreateRepository(
      std::string const& parent,
      google::devtools::cloudbuild::v2::Repository const& repository,
      std::string const& repository_id, Options opts = {});

  ///
  /// Creates a Repository.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v2::CreateRepositoryRequest,google/devtools/cloudbuild/v2/repositories.proto#L526}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::Repository,google/devtools/cloudbuild/v2/repositories.proto#L378}
  ///
  /// [google.devtools.cloudbuild.v2.CreateRepositoryRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L526}
  /// [google.devtools.cloudbuild.v2.Repository]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L378}
  ///
  future<StatusOr<google::devtools::cloudbuild::v2::Repository>>
  CreateRepository(
      google::devtools::cloudbuild::v2::CreateRepositoryRequest const& request,
      Options opts = {});

  ///
  /// Creates multiple repositories inside a connection.
  ///
  /// @param parent  Required. The connection to contain all the repositories
  /// being created.
  ///  Format: projects/*/locations/*/connections/*
  ///  The parent field in the CreateRepositoryRequest messages
  ///  must either be empty or match this field.
  /// @param requests  Required. The request messages specifying the
  /// repositories to create.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::BatchCreateRepositoriesResponse,google/devtools/cloudbuild/v2/repositories.proto#L566}
  ///
  /// [google.devtools.cloudbuild.v2.BatchCreateRepositoriesRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L548}
  /// [google.devtools.cloudbuild.v2.BatchCreateRepositoriesResponse]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L566}
  ///
  future<StatusOr<
      google::devtools::cloudbuild::v2::BatchCreateRepositoriesResponse>>
  BatchCreateRepositories(
      std::string const& parent,
      std::vector<
          google::devtools::cloudbuild::v2::CreateRepositoryRequest> const&
          requests,
      Options opts = {});

  ///
  /// Creates multiple repositories inside a connection.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v2::BatchCreateRepositoriesRequest,google/devtools/cloudbuild/v2/repositories.proto#L548}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::BatchCreateRepositoriesResponse,google/devtools/cloudbuild/v2/repositories.proto#L566}
  ///
  /// [google.devtools.cloudbuild.v2.BatchCreateRepositoriesRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L548}
  /// [google.devtools.cloudbuild.v2.BatchCreateRepositoriesResponse]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L566}
  ///
  future<StatusOr<
      google::devtools::cloudbuild::v2::BatchCreateRepositoriesResponse>>
  BatchCreateRepositories(
      google::devtools::cloudbuild::v2::BatchCreateRepositoriesRequest const&
          request,
      Options opts = {});

  ///
  /// Gets details of a single repository.
  ///
  /// @param name  Required. The name of the Repository to retrieve.
  ///  Format: `projects/*/locations/*/connections/*/repositories/*`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::Repository,google/devtools/cloudbuild/v2/repositories.proto#L378}
  ///
  /// [google.devtools.cloudbuild.v2.GetRepositoryRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L572}
  /// [google.devtools.cloudbuild.v2.Repository]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L378}
  ///
  StatusOr<google::devtools::cloudbuild::v2::Repository> GetRepository(
      std::string const& name, Options opts = {});

  ///
  /// Gets details of a single repository.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v2::GetRepositoryRequest,google/devtools/cloudbuild/v2/repositories.proto#L572}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::Repository,google/devtools/cloudbuild/v2/repositories.proto#L378}
  ///
  /// [google.devtools.cloudbuild.v2.GetRepositoryRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L572}
  /// [google.devtools.cloudbuild.v2.Repository]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L378}
  ///
  StatusOr<google::devtools::cloudbuild::v2::Repository> GetRepository(
      google::devtools::cloudbuild::v2::GetRepositoryRequest const& request,
      Options opts = {});

  ///
  /// Lists Repositories in a given connection.
  ///
  /// @param parent  Required. The parent, which owns this collection of
  /// Repositories.
  ///  Format: `projects/*/locations/*/connections/*`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::Repository,google/devtools/cloudbuild/v2/repositories.proto#L378}
  ///
  /// [google.devtools.cloudbuild.v2.ListRepositoriesRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L584}
  /// [google.devtools.cloudbuild.v2.Repository]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L378}
  ///
  StreamRange<google::devtools::cloudbuild::v2::Repository> ListRepositories(
      std::string const& parent, Options opts = {});

  ///
  /// Lists Repositories in a given connection.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v2::ListRepositoriesRequest,google/devtools/cloudbuild/v2/repositories.proto#L584}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::Repository,google/devtools/cloudbuild/v2/repositories.proto#L378}
  ///
  /// [google.devtools.cloudbuild.v2.ListRepositoriesRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L584}
  /// [google.devtools.cloudbuild.v2.Repository]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L378}
  ///
  StreamRange<google::devtools::cloudbuild::v2::Repository> ListRepositories(
      google::devtools::cloudbuild::v2::ListRepositoriesRequest request,
      Options opts = {});

  ///
  /// Deletes a single repository.
  ///
  /// @param name  Required. The name of the Repository to delete.
  ///  Format: `projects/*/locations/*/connections/*/repositories/*`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::OperationMetadata,google/devtools/cloudbuild/v2/cloudbuild.proto#L55}
  ///
  /// [google.devtools.cloudbuild.v2.DeleteRepositoryRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L617}
  /// [google.devtools.cloudbuild.v2.OperationMetadata]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/cloudbuild.proto#L55}
  ///
  future<StatusOr<google::devtools::cloudbuild::v2::OperationMetadata>>
  DeleteRepository(std::string const& name, Options opts = {});

  ///
  /// Deletes a single repository.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v2::DeleteRepositoryRequest,google/devtools/cloudbuild/v2/repositories.proto#L617}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::OperationMetadata,google/devtools/cloudbuild/v2/cloudbuild.proto#L55}
  ///
  /// [google.devtools.cloudbuild.v2.DeleteRepositoryRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L617}
  /// [google.devtools.cloudbuild.v2.OperationMetadata]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/cloudbuild.proto#L55}
  ///
  future<StatusOr<google::devtools::cloudbuild::v2::OperationMetadata>>
  DeleteRepository(
      google::devtools::cloudbuild::v2::DeleteRepositoryRequest const& request,
      Options opts = {});

  ///
  /// Fetches read/write token of a given repository.
  ///
  /// @param repository  Required. The resource name of the repository in the
  /// format
  ///  `projects/*/locations/*/connections/*/repositories/*`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::FetchReadWriteTokenResponse,google/devtools/cloudbuild/v2/repositories.proto#L670}
  ///
  /// [google.devtools.cloudbuild.v2.FetchReadWriteTokenRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L637}
  /// [google.devtools.cloudbuild.v2.FetchReadWriteTokenResponse]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L670}
  ///
  StatusOr<google::devtools::cloudbuild::v2::FetchReadWriteTokenResponse>
  FetchReadWriteToken(std::string const& repository, Options opts = {});

  ///
  /// Fetches read/write token of a given repository.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v2::FetchReadWriteTokenRequest,google/devtools/cloudbuild/v2/repositories.proto#L637}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::FetchReadWriteTokenResponse,google/devtools/cloudbuild/v2/repositories.proto#L670}
  ///
  /// [google.devtools.cloudbuild.v2.FetchReadWriteTokenRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L637}
  /// [google.devtools.cloudbuild.v2.FetchReadWriteTokenResponse]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L670}
  ///
  StatusOr<google::devtools::cloudbuild::v2::FetchReadWriteTokenResponse>
  FetchReadWriteToken(
      google::devtools::cloudbuild::v2::FetchReadWriteTokenRequest const&
          request,
      Options opts = {});

  ///
  /// Fetches read token of a given repository.
  ///
  /// @param repository  Required. The resource name of the repository in the
  /// format
  ///  `projects/*/locations/*/connections/*/repositories/*`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::FetchReadTokenResponse,google/devtools/cloudbuild/v2/repositories.proto#L661}
  ///
  /// [google.devtools.cloudbuild.v2.FetchReadTokenRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L649}
  /// [google.devtools.cloudbuild.v2.FetchReadTokenResponse]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L661}
  ///
  StatusOr<google::devtools::cloudbuild::v2::FetchReadTokenResponse>
  FetchReadToken(std::string const& repository, Options opts = {});

  ///
  /// Fetches read token of a given repository.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v2::FetchReadTokenRequest,google/devtools/cloudbuild/v2/repositories.proto#L649}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::FetchReadTokenResponse,google/devtools/cloudbuild/v2/repositories.proto#L661}
  ///
  /// [google.devtools.cloudbuild.v2.FetchReadTokenRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L649}
  /// [google.devtools.cloudbuild.v2.FetchReadTokenResponse]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L661}
  ///
  StatusOr<google::devtools::cloudbuild::v2::FetchReadTokenResponse>
  FetchReadToken(
      google::devtools::cloudbuild::v2::FetchReadTokenRequest const& request,
      Options opts = {});

  ///
  /// FetchLinkableRepositories get repositories from SCM that are
  /// accessible and could be added to the connection.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v2::FetchLinkableRepositoriesRequest,google/devtools/cloudbuild/v2/repositories.proto#L283}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v2::Repository,google/devtools/cloudbuild/v2/repositories.proto#L378}
  ///
  /// [google.devtools.cloudbuild.v2.FetchLinkableRepositoriesRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L283}
  /// [google.devtools.cloudbuild.v2.Repository]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v2/repositories.proto#L378}
  ///
  StreamRange<google::devtools::cloudbuild::v2::Repository>
  FetchLinkableRepositories(
      google::devtools::cloudbuild::v2::FetchLinkableRepositoriesRequest
          request,
      Options opts = {});

 private:
  std::shared_ptr<RepositoryManagerConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace cloudbuild_v2
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_CLOUDBUILD_V2_REPOSITORY_MANAGER_CLIENT_H
