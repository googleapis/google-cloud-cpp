// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/devtools/cloudbuild/v1/cloudbuild.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_CLOUDBUILD_V1_CLOUD_BUILD_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_CLOUDBUILD_V1_CLOUD_BUILD_CLIENT_H

#include "google/cloud/cloudbuild/v1/cloud_build_connection.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <google/longrunning/operations.grpc.pb.h>
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace cloudbuild_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Creates and manages builds on Google Cloud Platform.
///
/// The main concept used by this API is a `Build`, which describes the location
/// of the source to build, how to build the source, and where to store the
/// built artifacts, if any.
///
/// A user can list previously-requested builds or get builds by their ID to
/// determine the status of the build.
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class CloudBuildClient {
 public:
  explicit CloudBuildClient(std::shared_ptr<CloudBuildConnection> connection,
                            Options opts = {});
  ~CloudBuildClient();

  ///@{
  /// @name Copy and move support
  CloudBuildClient(CloudBuildClient const&) = default;
  CloudBuildClient& operator=(CloudBuildClient const&) = default;
  CloudBuildClient(CloudBuildClient&&) = default;
  CloudBuildClient& operator=(CloudBuildClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(CloudBuildClient const& a, CloudBuildClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(CloudBuildClient const& a, CloudBuildClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Starts a build with the specified configuration.
  ///
  /// This method returns a long-running `Operation`, which includes the build
  /// ID. Pass the build ID to `GetBuild` to determine the build status (such as
  /// `SUCCESS` or `FAILURE`).
  ///
  /// @param project_id  Required. ID of the project.
  /// @param build  Required. Build resource to create.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::Build,google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  ///
  /// [google.devtools.cloudbuild.v1.Build]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  /// [google.devtools.cloudbuild.v1.CreateBuildRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1212}
  ///
  future<StatusOr<google::devtools::cloudbuild::v1::Build>> CreateBuild(
      std::string const& project_id,
      google::devtools::cloudbuild::v1::Build const& build, Options opts = {});

  ///
  /// Starts a build with the specified configuration.
  ///
  /// This method returns a long-running `Operation`, which includes the build
  /// ID. Pass the build ID to `GetBuild` to determine the build status (such as
  /// `SUCCESS` or `FAILURE`).
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v1::CreateBuildRequest,google/devtools/cloudbuild/v1/cloudbuild.proto#L1212}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::Build,google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  ///
  /// [google.devtools.cloudbuild.v1.Build]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  /// [google.devtools.cloudbuild.v1.CreateBuildRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1212}
  ///
  future<StatusOr<google::devtools::cloudbuild::v1::Build>> CreateBuild(
      google::devtools::cloudbuild::v1::CreateBuildRequest const& request,
      Options opts = {});

  ///
  /// Returns information about a previously requested build.
  ///
  /// The `Build` that is returned includes its status (such as `SUCCESS`,
  /// `FAILURE`, or `WORKING`), and timing information.
  ///
  /// @param project_id  Required. ID of the project.
  /// @param id  Required. ID of the build.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::Build,google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  ///
  /// [google.devtools.cloudbuild.v1.Build]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  /// [google.devtools.cloudbuild.v1.GetBuildRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1227}
  ///
  StatusOr<google::devtools::cloudbuild::v1::Build> GetBuild(
      std::string const& project_id, std::string const& id, Options opts = {});

  ///
  /// Returns information about a previously requested build.
  ///
  /// The `Build` that is returned includes its status (such as `SUCCESS`,
  /// `FAILURE`, or `WORKING`), and timing information.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v1::GetBuildRequest,google/devtools/cloudbuild/v1/cloudbuild.proto#L1227}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::Build,google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  ///
  /// [google.devtools.cloudbuild.v1.Build]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  /// [google.devtools.cloudbuild.v1.GetBuildRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1227}
  ///
  StatusOr<google::devtools::cloudbuild::v1::Build> GetBuild(
      google::devtools::cloudbuild::v1::GetBuildRequest const& request,
      Options opts = {});

  ///
  /// Lists previously requested builds.
  ///
  /// Previously requested builds may still be in-progress, or may have finished
  /// successfully or unsuccessfully.
  ///
  /// @param project_id  Required. ID of the project.
  /// @param filter  The raw filter text to constrain the results.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::Build,google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  ///
  /// [google.devtools.cloudbuild.v1.Build]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  /// [google.devtools.cloudbuild.v1.ListBuildsRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1242}
  ///
  StreamRange<google::devtools::cloudbuild::v1::Build> ListBuilds(
      std::string const& project_id, std::string const& filter,
      Options opts = {});

  ///
  /// Lists previously requested builds.
  ///
  /// Previously requested builds may still be in-progress, or may have finished
  /// successfully or unsuccessfully.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v1::ListBuildsRequest,google/devtools/cloudbuild/v1/cloudbuild.proto#L1242}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::Build,google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  ///
  /// [google.devtools.cloudbuild.v1.Build]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  /// [google.devtools.cloudbuild.v1.ListBuildsRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1242}
  ///
  StreamRange<google::devtools::cloudbuild::v1::Build> ListBuilds(
      google::devtools::cloudbuild::v1::ListBuildsRequest request,
      Options opts = {});

  ///
  /// Cancels a build in progress.
  ///
  /// @param project_id  Required. ID of the project.
  /// @param id  Required. ID of the build.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::Build,google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  ///
  /// [google.devtools.cloudbuild.v1.Build]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  /// [google.devtools.cloudbuild.v1.CancelBuildRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1281}
  ///
  StatusOr<google::devtools::cloudbuild::v1::Build> CancelBuild(
      std::string const& project_id, std::string const& id, Options opts = {});

  ///
  /// Cancels a build in progress.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v1::CancelBuildRequest,google/devtools/cloudbuild/v1/cloudbuild.proto#L1281}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::Build,google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  ///
  /// [google.devtools.cloudbuild.v1.Build]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  /// [google.devtools.cloudbuild.v1.CancelBuildRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1281}
  ///
  StatusOr<google::devtools::cloudbuild::v1::Build> CancelBuild(
      google::devtools::cloudbuild::v1::CancelBuildRequest const& request,
      Options opts = {});

  ///
  /// Creates a new build based on the specified build.
  ///
  /// This method creates a new build using the original build request, which
  /// may or may not result in an identical build.
  ///
  /// For triggered builds:
  ///
  /// * Triggered builds resolve to a precise revision; therefore a retry of a
  /// triggered build will result in a build that uses the same revision.
  ///
  /// For non-triggered builds that specify `RepoSource`:
  ///
  /// * If the original build built from the tip of a branch, the retried build
  /// will build from the tip of that branch, which may not be the same revision
  /// as the original build.
  /// * If the original build specified a commit sha or revision ID, the retried
  /// build will use the identical source.
  ///
  /// For builds that specify `StorageSource`:
  ///
  /// * If the original build pulled source from Google Cloud Storage without
  /// specifying the generation of the object, the new build will use the
  /// current object, which may be different from the original build source.
  /// * If the original build pulled source from Cloud Storage and specified the
  /// generation of the object, the new build will attempt to use the same
  /// object, which may or may not be available depending on the bucket's
  /// lifecycle management settings.
  ///
  /// @param project_id  Required. ID of the project.
  /// @param id  Required. Build ID of the original build.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::Build,google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  ///
  /// [google.devtools.cloudbuild.v1.Build]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  /// [google.devtools.cloudbuild.v1.RetryBuildRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L365}
  ///
  future<StatusOr<google::devtools::cloudbuild::v1::Build>> RetryBuild(
      std::string const& project_id, std::string const& id, Options opts = {});

  ///
  /// Creates a new build based on the specified build.
  ///
  /// This method creates a new build using the original build request, which
  /// may or may not result in an identical build.
  ///
  /// For triggered builds:
  ///
  /// * Triggered builds resolve to a precise revision; therefore a retry of a
  /// triggered build will result in a build that uses the same revision.
  ///
  /// For non-triggered builds that specify `RepoSource`:
  ///
  /// * If the original build built from the tip of a branch, the retried build
  /// will build from the tip of that branch, which may not be the same revision
  /// as the original build.
  /// * If the original build specified a commit sha or revision ID, the retried
  /// build will use the identical source.
  ///
  /// For builds that specify `StorageSource`:
  ///
  /// * If the original build pulled source from Google Cloud Storage without
  /// specifying the generation of the object, the new build will use the
  /// current object, which may be different from the original build source.
  /// * If the original build pulled source from Cloud Storage and specified the
  /// generation of the object, the new build will attempt to use the same
  /// object, which may or may not be available depending on the bucket's
  /// lifecycle management settings.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v1::RetryBuildRequest,google/devtools/cloudbuild/v1/cloudbuild.proto#L365}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::Build,google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  ///
  /// [google.devtools.cloudbuild.v1.Build]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  /// [google.devtools.cloudbuild.v1.RetryBuildRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L365}
  ///
  future<StatusOr<google::devtools::cloudbuild::v1::Build>> RetryBuild(
      google::devtools::cloudbuild::v1::RetryBuildRequest const& request,
      Options opts = {});

  ///
  /// Approves or rejects a pending build.
  ///
  /// If approved, the returned LRO will be analogous to the LRO returned from
  /// a CreateBuild call.
  ///
  /// If rejected, the returned LRO will be immediately done.
  ///
  /// @param name  Required. Name of the target build.
  ///  For example: "projects/{$project_id}/builds/{$build_id}"
  /// @param approval_result  Approval decision and metadata.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::Build,google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  ///
  /// [google.devtools.cloudbuild.v1.ApproveBuildRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1296}
  /// [google.devtools.cloudbuild.v1.Build]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  ///
  future<StatusOr<google::devtools::cloudbuild::v1::Build>> ApproveBuild(
      std::string const& name,
      google::devtools::cloudbuild::v1::ApprovalResult const& approval_result,
      Options opts = {});

  ///
  /// Approves or rejects a pending build.
  ///
  /// If approved, the returned LRO will be analogous to the LRO returned from
  /// a CreateBuild call.
  ///
  /// If rejected, the returned LRO will be immediately done.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v1::ApproveBuildRequest,google/devtools/cloudbuild/v1/cloudbuild.proto#L1296}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::Build,google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  ///
  /// [google.devtools.cloudbuild.v1.ApproveBuildRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1296}
  /// [google.devtools.cloudbuild.v1.Build]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  ///
  future<StatusOr<google::devtools::cloudbuild::v1::Build>> ApproveBuild(
      google::devtools::cloudbuild::v1::ApproveBuildRequest const& request,
      Options opts = {});

  ///
  /// Creates a new `BuildTrigger`.
  ///
  /// This API is experimental.
  ///
  /// @param project_id  Required. ID of the project for which to configure
  /// automatic builds.
  /// @param trigger  Required. `BuildTrigger` to create.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::BuildTrigger,google/devtools/cloudbuild/v1/cloudbuild.proto#L1383}
  ///
  /// [google.devtools.cloudbuild.v1.BuildTrigger]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1383}
  /// [google.devtools.cloudbuild.v1.CreateBuildTriggerRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1669}
  ///
  StatusOr<google::devtools::cloudbuild::v1::BuildTrigger> CreateBuildTrigger(
      std::string const& project_id,
      google::devtools::cloudbuild::v1::BuildTrigger const& trigger,
      Options opts = {});

  ///
  /// Creates a new `BuildTrigger`.
  ///
  /// This API is experimental.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v1::CreateBuildTriggerRequest,google/devtools/cloudbuild/v1/cloudbuild.proto#L1669}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::BuildTrigger,google/devtools/cloudbuild/v1/cloudbuild.proto#L1383}
  ///
  /// [google.devtools.cloudbuild.v1.BuildTrigger]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1383}
  /// [google.devtools.cloudbuild.v1.CreateBuildTriggerRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1669}
  ///
  StatusOr<google::devtools::cloudbuild::v1::BuildTrigger> CreateBuildTrigger(
      google::devtools::cloudbuild::v1::CreateBuildTriggerRequest const&
          request,
      Options opts = {});

  ///
  /// Returns information about a `BuildTrigger`.
  ///
  /// This API is experimental.
  ///
  /// @param project_id  Required. ID of the project that owns the trigger.
  /// @param trigger_id  Required. Identifier (`id` or `name`) of the
  /// `BuildTrigger` to get.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::BuildTrigger,google/devtools/cloudbuild/v1/cloudbuild.proto#L1383}
  ///
  /// [google.devtools.cloudbuild.v1.BuildTrigger]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1383}
  /// [google.devtools.cloudbuild.v1.GetBuildTriggerRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1684}
  ///
  StatusOr<google::devtools::cloudbuild::v1::BuildTrigger> GetBuildTrigger(
      std::string const& project_id, std::string const& trigger_id,
      Options opts = {});

  ///
  /// Returns information about a `BuildTrigger`.
  ///
  /// This API is experimental.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v1::GetBuildTriggerRequest,google/devtools/cloudbuild/v1/cloudbuild.proto#L1684}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::BuildTrigger,google/devtools/cloudbuild/v1/cloudbuild.proto#L1383}
  ///
  /// [google.devtools.cloudbuild.v1.BuildTrigger]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1383}
  /// [google.devtools.cloudbuild.v1.GetBuildTriggerRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1684}
  ///
  StatusOr<google::devtools::cloudbuild::v1::BuildTrigger> GetBuildTrigger(
      google::devtools::cloudbuild::v1::GetBuildTriggerRequest const& request,
      Options opts = {});

  ///
  /// Lists existing `BuildTrigger`s.
  ///
  /// This API is experimental.
  ///
  /// @param project_id  Required. ID of the project for which to list
  /// BuildTriggers.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::BuildTrigger,google/devtools/cloudbuild/v1/cloudbuild.proto#L1383}
  ///
  /// [google.devtools.cloudbuild.v1.BuildTrigger]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1383}
  /// [google.devtools.cloudbuild.v1.ListBuildTriggersRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1699}
  ///
  StreamRange<google::devtools::cloudbuild::v1::BuildTrigger> ListBuildTriggers(
      std::string const& project_id, Options opts = {});

  ///
  /// Lists existing `BuildTrigger`s.
  ///
  /// This API is experimental.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v1::ListBuildTriggersRequest,google/devtools/cloudbuild/v1/cloudbuild.proto#L1699}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::BuildTrigger,google/devtools/cloudbuild/v1/cloudbuild.proto#L1383}
  ///
  /// [google.devtools.cloudbuild.v1.BuildTrigger]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1383}
  /// [google.devtools.cloudbuild.v1.ListBuildTriggersRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1699}
  ///
  StreamRange<google::devtools::cloudbuild::v1::BuildTrigger> ListBuildTriggers(
      google::devtools::cloudbuild::v1::ListBuildTriggersRequest request,
      Options opts = {});

  ///
  /// Deletes a `BuildTrigger` by its project ID and trigger ID.
  ///
  /// This API is experimental.
  ///
  /// @param project_id  Required. ID of the project that owns the trigger.
  /// @param trigger_id  Required. ID of the `BuildTrigger` to delete.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  ///
  /// [google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1726}
  ///
  Status DeleteBuildTrigger(std::string const& project_id,
                            std::string const& trigger_id, Options opts = {});

  ///
  /// Deletes a `BuildTrigger` by its project ID and trigger ID.
  ///
  /// This API is experimental.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v1::DeleteBuildTriggerRequest,google/devtools/cloudbuild/v1/cloudbuild.proto#L1726}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  ///
  /// [google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1726}
  ///
  Status DeleteBuildTrigger(
      google::devtools::cloudbuild::v1::DeleteBuildTriggerRequest const&
          request,
      Options opts = {});

  ///
  /// Updates a `BuildTrigger` by its project ID and trigger ID.
  ///
  /// This API is experimental.
  ///
  /// @param project_id  Required. ID of the project that owns the trigger.
  /// @param trigger_id  Required. ID of the `BuildTrigger` to update.
  /// @param trigger  Required. `BuildTrigger` to update.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::BuildTrigger,google/devtools/cloudbuild/v1/cloudbuild.proto#L1383}
  ///
  /// [google.devtools.cloudbuild.v1.BuildTrigger]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1383}
  /// [google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1741}
  ///
  StatusOr<google::devtools::cloudbuild::v1::BuildTrigger> UpdateBuildTrigger(
      std::string const& project_id, std::string const& trigger_id,
      google::devtools::cloudbuild::v1::BuildTrigger const& trigger,
      Options opts = {});

  ///
  /// Updates a `BuildTrigger` by its project ID and trigger ID.
  ///
  /// This API is experimental.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v1::UpdateBuildTriggerRequest,google/devtools/cloudbuild/v1/cloudbuild.proto#L1741}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::BuildTrigger,google/devtools/cloudbuild/v1/cloudbuild.proto#L1383}
  ///
  /// [google.devtools.cloudbuild.v1.BuildTrigger]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1383}
  /// [google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1741}
  ///
  StatusOr<google::devtools::cloudbuild::v1::BuildTrigger> UpdateBuildTrigger(
      google::devtools::cloudbuild::v1::UpdateBuildTriggerRequest const&
          request,
      Options opts = {});

  ///
  /// Runs a `BuildTrigger` at a particular source revision.
  ///
  /// @param project_id  Required. ID of the project.
  /// @param trigger_id  Required. ID of the trigger.
  /// @param source  Source to build against this trigger.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::Build,google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  ///
  /// [google.devtools.cloudbuild.v1.Build]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  /// [google.devtools.cloudbuild.v1.RunBuildTriggerRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L380}
  ///
  future<StatusOr<google::devtools::cloudbuild::v1::Build>> RunBuildTrigger(
      std::string const& project_id, std::string const& trigger_id,
      google::devtools::cloudbuild::v1::RepoSource const& source,
      Options opts = {});

  ///
  /// Runs a `BuildTrigger` at a particular source revision.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v1::RunBuildTriggerRequest,google/devtools/cloudbuild/v1/cloudbuild.proto#L380}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::Build,google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  ///
  /// [google.devtools.cloudbuild.v1.Build]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L726}
  /// [google.devtools.cloudbuild.v1.RunBuildTriggerRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L380}
  ///
  future<StatusOr<google::devtools::cloudbuild::v1::Build>> RunBuildTrigger(
      google::devtools::cloudbuild::v1::RunBuildTriggerRequest const& request,
      Options opts = {});

  ///
  /// ReceiveTriggerWebhook [Experimental] is called when the API receives a
  /// webhook request targeted at a specific trigger.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v1::ReceiveTriggerWebhookRequest,google/devtools/cloudbuild/v1/cloudbuild.proto#L1938}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::ReceiveTriggerWebhookResponse,google/devtools/cloudbuild/v1/cloudbuild.proto#L1958}
  ///
  /// [google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1938}
  /// [google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1958}
  ///
  StatusOr<google::devtools::cloudbuild::v1::ReceiveTriggerWebhookResponse>
  ReceiveTriggerWebhook(
      google::devtools::cloudbuild::v1::ReceiveTriggerWebhookRequest const&
          request,
      Options opts = {});

  ///
  /// Creates a `WorkerPool`.
  ///
  /// @param parent  Required. The parent resource where this worker pool will
  /// be created.
  ///  Format: `projects/{project}/locations/{location}`.
  /// @param worker_pool  Required. `WorkerPool` resource to create.
  /// @param worker_pool_id  Required. Immutable. The ID to use for the
  /// `WorkerPool`, which will become
  ///  the final component of the resource name.
  ///  This value should be 1-63 characters, and valid characters
  ///  are /[a-z][0-9]-/.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::WorkerPool,google/devtools/cloudbuild/v1/cloudbuild.proto#L1973}
  ///
  /// [google.devtools.cloudbuild.v1.CreateWorkerPoolRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L2111}
  /// [google.devtools.cloudbuild.v1.WorkerPool]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1973}
  ///
  future<StatusOr<google::devtools::cloudbuild::v1::WorkerPool>>
  CreateWorkerPool(
      std::string const& parent,
      google::devtools::cloudbuild::v1::WorkerPool const& worker_pool,
      std::string const& worker_pool_id, Options opts = {});

  ///
  /// Creates a `WorkerPool`.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v1::CreateWorkerPoolRequest,google/devtools/cloudbuild/v1/cloudbuild.proto#L2111}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::WorkerPool,google/devtools/cloudbuild/v1/cloudbuild.proto#L1973}
  ///
  /// [google.devtools.cloudbuild.v1.CreateWorkerPoolRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L2111}
  /// [google.devtools.cloudbuild.v1.WorkerPool]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1973}
  ///
  future<StatusOr<google::devtools::cloudbuild::v1::WorkerPool>>
  CreateWorkerPool(
      google::devtools::cloudbuild::v1::CreateWorkerPoolRequest const& request,
      Options opts = {});

  ///
  /// Returns details of a `WorkerPool`.
  ///
  /// @param name  Required. The name of the `WorkerPool` to retrieve.
  ///  Format:
  ///  `projects/{project}/locations/{location}/workerPools/{workerPool}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::WorkerPool,google/devtools/cloudbuild/v1/cloudbuild.proto#L1973}
  ///
  /// [google.devtools.cloudbuild.v1.GetWorkerPoolRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L2140}
  /// [google.devtools.cloudbuild.v1.WorkerPool]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1973}
  ///
  StatusOr<google::devtools::cloudbuild::v1::WorkerPool> GetWorkerPool(
      std::string const& name, Options opts = {});

  ///
  /// Returns details of a `WorkerPool`.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v1::GetWorkerPoolRequest,google/devtools/cloudbuild/v1/cloudbuild.proto#L2140}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::WorkerPool,google/devtools/cloudbuild/v1/cloudbuild.proto#L1973}
  ///
  /// [google.devtools.cloudbuild.v1.GetWorkerPoolRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L2140}
  /// [google.devtools.cloudbuild.v1.WorkerPool]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1973}
  ///
  StatusOr<google::devtools::cloudbuild::v1::WorkerPool> GetWorkerPool(
      google::devtools::cloudbuild::v1::GetWorkerPoolRequest const& request,
      Options opts = {});

  ///
  /// Deletes a `WorkerPool`.
  ///
  /// @param name  Required. The name of the `WorkerPool` to delete.
  ///  Format:
  ///  `projects/{project}/locations/{workerPool}/workerPools/{workerPool}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::DeleteWorkerPoolOperationMetadata,google/devtools/cloudbuild/v1/cloudbuild.proto#L2256}
  ///
  /// [google.devtools.cloudbuild.v1.DeleteWorkerPoolOperationMetadata]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L2256}
  /// [google.devtools.cloudbuild.v1.DeleteWorkerPoolRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L2152}
  ///
  future<StatusOr<
      google::devtools::cloudbuild::v1::DeleteWorkerPoolOperationMetadata>>
  DeleteWorkerPool(std::string const& name, Options opts = {});

  ///
  /// Deletes a `WorkerPool`.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v1::DeleteWorkerPoolRequest,google/devtools/cloudbuild/v1/cloudbuild.proto#L2152}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::DeleteWorkerPoolOperationMetadata,google/devtools/cloudbuild/v1/cloudbuild.proto#L2256}
  ///
  /// [google.devtools.cloudbuild.v1.DeleteWorkerPoolOperationMetadata]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L2256}
  /// [google.devtools.cloudbuild.v1.DeleteWorkerPoolRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L2152}
  ///
  future<StatusOr<
      google::devtools::cloudbuild::v1::DeleteWorkerPoolOperationMetadata>>
  DeleteWorkerPool(
      google::devtools::cloudbuild::v1::DeleteWorkerPoolRequest const& request,
      Options opts = {});

  ///
  /// Updates a `WorkerPool`.
  ///
  /// @param worker_pool  Required. The `WorkerPool` to update.
  ///  The `name` field is used to identify the `WorkerPool` to update.
  ///  Format:
  ///  `projects/{project}/locations/{location}/workerPools/{workerPool}`.
  /// @param update_mask  A mask specifying which fields in `worker_pool` to
  /// update.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::WorkerPool,google/devtools/cloudbuild/v1/cloudbuild.proto#L1973}
  ///
  /// [google.devtools.cloudbuild.v1.UpdateWorkerPoolRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L2177}
  /// [google.devtools.cloudbuild.v1.WorkerPool]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1973}
  ///
  future<StatusOr<google::devtools::cloudbuild::v1::WorkerPool>>
  UpdateWorkerPool(
      google::devtools::cloudbuild::v1::WorkerPool const& worker_pool,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Updates a `WorkerPool`.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v1::UpdateWorkerPoolRequest,google/devtools/cloudbuild/v1/cloudbuild.proto#L2177}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::WorkerPool,google/devtools/cloudbuild/v1/cloudbuild.proto#L1973}
  ///
  /// [google.devtools.cloudbuild.v1.UpdateWorkerPoolRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L2177}
  /// [google.devtools.cloudbuild.v1.WorkerPool]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1973}
  ///
  future<StatusOr<google::devtools::cloudbuild::v1::WorkerPool>>
  UpdateWorkerPool(
      google::devtools::cloudbuild::v1::UpdateWorkerPoolRequest const& request,
      Options opts = {});

  ///
  /// Lists `WorkerPool`s.
  ///
  /// @param parent  Required. The parent of the collection of `WorkerPools`.
  ///  Format: `projects/{project}/locations/{location}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::WorkerPool,google/devtools/cloudbuild/v1/cloudbuild.proto#L1973}
  ///
  /// [google.devtools.cloudbuild.v1.ListWorkerPoolsRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L2193}
  /// [google.devtools.cloudbuild.v1.WorkerPool]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1973}
  ///
  StreamRange<google::devtools::cloudbuild::v1::WorkerPool> ListWorkerPools(
      std::string const& parent, Options opts = {});

  ///
  /// Lists `WorkerPool`s.
  ///
  /// @param request
  /// @googleapis_link{google::devtools::cloudbuild::v1::ListWorkerPoolsRequest,google/devtools/cloudbuild/v1/cloudbuild.proto#L2193}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::devtools::cloudbuild::v1::WorkerPool,google/devtools/cloudbuild/v1/cloudbuild.proto#L1973}
  ///
  /// [google.devtools.cloudbuild.v1.ListWorkerPoolsRequest]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L2193}
  /// [google.devtools.cloudbuild.v1.WorkerPool]:
  /// @googleapis_reference_link{google/devtools/cloudbuild/v1/cloudbuild.proto#L1973}
  ///
  StreamRange<google::devtools::cloudbuild::v1::WorkerPool> ListWorkerPools(
      google::devtools::cloudbuild::v1::ListWorkerPoolsRequest request,
      Options opts = {});

 private:
  std::shared_ptr<CloudBuildConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace cloudbuild_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_CLOUDBUILD_V1_CLOUD_BUILD_CLIENT_H
