// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/security/privateca/v1/service.proto

#include "google/cloud/privateca/internal/certificate_authority_tracing_stub.h"

namespace google {
namespace cloud {
namespace privateca_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

CertificateAuthorityServiceTracingStub::CertificateAuthorityServiceTracingStub(
    std::shared_ptr<CertificateAuthorityServiceStub> child)
    : child_(std::move(child)) {}

StatusOr<google::cloud::security::privateca::v1::Certificate>
CertificateAuthorityServiceTracingStub::CreateCertificate(
    grpc::ClientContext& context,
    google::cloud::security::privateca::v1::CreateCertificateRequest const&
        request) {
  return child_->CreateCertificate(context, request);
}

StatusOr<google::cloud::security::privateca::v1::Certificate>
CertificateAuthorityServiceTracingStub::GetCertificate(
    grpc::ClientContext& context,
    google::cloud::security::privateca::v1::GetCertificateRequest const&
        request) {
  return child_->GetCertificate(context, request);
}

StatusOr<google::cloud::security::privateca::v1::ListCertificatesResponse>
CertificateAuthorityServiceTracingStub::ListCertificates(
    grpc::ClientContext& context,
    google::cloud::security::privateca::v1::ListCertificatesRequest const&
        request) {
  return child_->ListCertificates(context, request);
}

StatusOr<google::cloud::security::privateca::v1::Certificate>
CertificateAuthorityServiceTracingStub::RevokeCertificate(
    grpc::ClientContext& context,
    google::cloud::security::privateca::v1::RevokeCertificateRequest const&
        request) {
  return child_->RevokeCertificate(context, request);
}

StatusOr<google::cloud::security::privateca::v1::Certificate>
CertificateAuthorityServiceTracingStub::UpdateCertificate(
    grpc::ClientContext& context,
    google::cloud::security::privateca::v1::UpdateCertificateRequest const&
        request) {
  return child_->UpdateCertificate(context, request);
}

future<StatusOr<google::longrunning::Operation>>
CertificateAuthorityServiceTracingStub::AsyncActivateCertificateAuthority(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::security::privateca::v1::
        ActivateCertificateAuthorityRequest const& request) {
  return child_->AsyncActivateCertificateAuthority(cq, std::move(context),
                                                   request);
}

future<StatusOr<google::longrunning::Operation>>
CertificateAuthorityServiceTracingStub::AsyncCreateCertificateAuthority(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::security::privateca::v1::
        CreateCertificateAuthorityRequest const& request) {
  return child_->AsyncCreateCertificateAuthority(cq, std::move(context),
                                                 request);
}

future<StatusOr<google::longrunning::Operation>>
CertificateAuthorityServiceTracingStub::AsyncDisableCertificateAuthority(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::security::privateca::v1::
        DisableCertificateAuthorityRequest const& request) {
  return child_->AsyncDisableCertificateAuthority(cq, std::move(context),
                                                  request);
}

future<StatusOr<google::longrunning::Operation>>
CertificateAuthorityServiceTracingStub::AsyncEnableCertificateAuthority(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::security::privateca::v1::
        EnableCertificateAuthorityRequest const& request) {
  return child_->AsyncEnableCertificateAuthority(cq, std::move(context),
                                                 request);
}

StatusOr<google::cloud::security::privateca::v1::
             FetchCertificateAuthorityCsrResponse>
CertificateAuthorityServiceTracingStub::FetchCertificateAuthorityCsr(
    grpc::ClientContext& context,
    google::cloud::security::privateca::v1::
        FetchCertificateAuthorityCsrRequest const& request) {
  return child_->FetchCertificateAuthorityCsr(context, request);
}

StatusOr<google::cloud::security::privateca::v1::CertificateAuthority>
CertificateAuthorityServiceTracingStub::GetCertificateAuthority(
    grpc::ClientContext& context,
    google::cloud::security::privateca::v1::
        GetCertificateAuthorityRequest const& request) {
  return child_->GetCertificateAuthority(context, request);
}

StatusOr<
    google::cloud::security::privateca::v1::ListCertificateAuthoritiesResponse>
CertificateAuthorityServiceTracingStub::ListCertificateAuthorities(
    grpc::ClientContext& context,
    google::cloud::security::privateca::v1::
        ListCertificateAuthoritiesRequest const& request) {
  return child_->ListCertificateAuthorities(context, request);
}

future<StatusOr<google::longrunning::Operation>>
CertificateAuthorityServiceTracingStub::AsyncUndeleteCertificateAuthority(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::security::privateca::v1::
        UndeleteCertificateAuthorityRequest const& request) {
  return child_->AsyncUndeleteCertificateAuthority(cq, std::move(context),
                                                   request);
}

future<StatusOr<google::longrunning::Operation>>
CertificateAuthorityServiceTracingStub::AsyncDeleteCertificateAuthority(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::security::privateca::v1::
        DeleteCertificateAuthorityRequest const& request) {
  return child_->AsyncDeleteCertificateAuthority(cq, std::move(context),
                                                 request);
}

future<StatusOr<google::longrunning::Operation>>
CertificateAuthorityServiceTracingStub::AsyncUpdateCertificateAuthority(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::security::privateca::v1::
        UpdateCertificateAuthorityRequest const& request) {
  return child_->AsyncUpdateCertificateAuthority(cq, std::move(context),
                                                 request);
}

future<StatusOr<google::longrunning::Operation>>
CertificateAuthorityServiceTracingStub::AsyncCreateCaPool(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::security::privateca::v1::CreateCaPoolRequest const&
        request) {
  return child_->AsyncCreateCaPool(cq, std::move(context), request);
}

future<StatusOr<google::longrunning::Operation>>
CertificateAuthorityServiceTracingStub::AsyncUpdateCaPool(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::security::privateca::v1::UpdateCaPoolRequest const&
        request) {
  return child_->AsyncUpdateCaPool(cq, std::move(context), request);
}

StatusOr<google::cloud::security::privateca::v1::CaPool>
CertificateAuthorityServiceTracingStub::GetCaPool(
    grpc::ClientContext& context,
    google::cloud::security::privateca::v1::GetCaPoolRequest const& request) {
  return child_->GetCaPool(context, request);
}

StatusOr<google::cloud::security::privateca::v1::ListCaPoolsResponse>
CertificateAuthorityServiceTracingStub::ListCaPools(
    grpc::ClientContext& context,
    google::cloud::security::privateca::v1::ListCaPoolsRequest const& request) {
  return child_->ListCaPools(context, request);
}

future<StatusOr<google::longrunning::Operation>>
CertificateAuthorityServiceTracingStub::AsyncDeleteCaPool(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::security::privateca::v1::DeleteCaPoolRequest const&
        request) {
  return child_->AsyncDeleteCaPool(cq, std::move(context), request);
}

StatusOr<google::cloud::security::privateca::v1::FetchCaCertsResponse>
CertificateAuthorityServiceTracingStub::FetchCaCerts(
    grpc::ClientContext& context,
    google::cloud::security::privateca::v1::FetchCaCertsRequest const&
        request) {
  return child_->FetchCaCerts(context, request);
}

StatusOr<google::cloud::security::privateca::v1::CertificateRevocationList>
CertificateAuthorityServiceTracingStub::GetCertificateRevocationList(
    grpc::ClientContext& context,
    google::cloud::security::privateca::v1::
        GetCertificateRevocationListRequest const& request) {
  return child_->GetCertificateRevocationList(context, request);
}

StatusOr<google::cloud::security::privateca::v1::
             ListCertificateRevocationListsResponse>
CertificateAuthorityServiceTracingStub::ListCertificateRevocationLists(
    grpc::ClientContext& context,
    google::cloud::security::privateca::v1::
        ListCertificateRevocationListsRequest const& request) {
  return child_->ListCertificateRevocationLists(context, request);
}

future<StatusOr<google::longrunning::Operation>>
CertificateAuthorityServiceTracingStub::AsyncUpdateCertificateRevocationList(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::security::privateca::v1::
        UpdateCertificateRevocationListRequest const& request) {
  return child_->AsyncUpdateCertificateRevocationList(cq, std::move(context),
                                                      request);
}

future<StatusOr<google::longrunning::Operation>>
CertificateAuthorityServiceTracingStub::AsyncCreateCertificateTemplate(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::security::privateca::v1::
        CreateCertificateTemplateRequest const& request) {
  return child_->AsyncCreateCertificateTemplate(cq, std::move(context),
                                                request);
}

future<StatusOr<google::longrunning::Operation>>
CertificateAuthorityServiceTracingStub::AsyncDeleteCertificateTemplate(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::security::privateca::v1::
        DeleteCertificateTemplateRequest const& request) {
  return child_->AsyncDeleteCertificateTemplate(cq, std::move(context),
                                                request);
}

StatusOr<google::cloud::security::privateca::v1::CertificateTemplate>
CertificateAuthorityServiceTracingStub::GetCertificateTemplate(
    grpc::ClientContext& context,
    google::cloud::security::privateca::v1::GetCertificateTemplateRequest const&
        request) {
  return child_->GetCertificateTemplate(context, request);
}

StatusOr<
    google::cloud::security::privateca::v1::ListCertificateTemplatesResponse>
CertificateAuthorityServiceTracingStub::ListCertificateTemplates(
    grpc::ClientContext& context,
    google::cloud::security::privateca::v1::
        ListCertificateTemplatesRequest const& request) {
  return child_->ListCertificateTemplates(context, request);
}

future<StatusOr<google::longrunning::Operation>>
CertificateAuthorityServiceTracingStub::AsyncUpdateCertificateTemplate(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::security::privateca::v1::
        UpdateCertificateTemplateRequest const& request) {
  return child_->AsyncUpdateCertificateTemplate(cq, std::move(context),
                                                request);
}

future<StatusOr<google::longrunning::Operation>>
CertificateAuthorityServiceTracingStub::AsyncGetOperation(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::longrunning::GetOperationRequest const& request) {
  return child_->AsyncGetOperation(cq, std::move(context), request);
}

future<Status> CertificateAuthorityServiceTracingStub::AsyncCancelOperation(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::longrunning::CancelOperationRequest const& request) {
  return child_->AsyncCancelOperation(cq, std::move(context), request);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace privateca_internal
}  // namespace cloud
}  // namespace google
