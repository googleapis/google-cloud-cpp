// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/video/livestream/v1/service.proto

#include "google/cloud/video/livestream_connection_idempotency_policy.h"
#include "absl/memory/memory.h"
#include <memory>

namespace google {
namespace cloud {
namespace video {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

using ::google::cloud::Idempotency;

LivestreamServiceConnectionIdempotencyPolicy::
    ~LivestreamServiceConnectionIdempotencyPolicy() = default;

namespace {
class DefaultLivestreamServiceConnectionIdempotencyPolicy
    : public LivestreamServiceConnectionIdempotencyPolicy {
 public:
  ~DefaultLivestreamServiceConnectionIdempotencyPolicy() override = default;

  /// Create a new copy of this object.
  std::unique_ptr<LivestreamServiceConnectionIdempotencyPolicy> clone()
      const override {
    return absl::make_unique<
        DefaultLivestreamServiceConnectionIdempotencyPolicy>(*this);
  }

  Idempotency CreateChannel(
      google::cloud::video::livestream::v1::CreateChannelRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency ListChannels(
      google::cloud::video::livestream::v1::ListChannelsRequest) override {
    return Idempotency::kIdempotent;
  }

  Idempotency GetChannel(
      google::cloud::video::livestream::v1::GetChannelRequest const&) override {
    return Idempotency::kIdempotent;
  }

  Idempotency DeleteChannel(
      google::cloud::video::livestream::v1::DeleteChannelRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency UpdateChannel(
      google::cloud::video::livestream::v1::UpdateChannelRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency StartChannel(
      google::cloud::video::livestream::v1::StartChannelRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency StopChannel(
      google::cloud::video::livestream::v1::StopChannelRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency CreateInput(
      google::cloud::video::livestream::v1::CreateInputRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency ListInputs(
      google::cloud::video::livestream::v1::ListInputsRequest) override {
    return Idempotency::kIdempotent;
  }

  Idempotency GetInput(
      google::cloud::video::livestream::v1::GetInputRequest const&) override {
    return Idempotency::kIdempotent;
  }

  Idempotency DeleteInput(
      google::cloud::video::livestream::v1::DeleteInputRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency UpdateInput(
      google::cloud::video::livestream::v1::UpdateInputRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency CreateEvent(
      google::cloud::video::livestream::v1::CreateEventRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency ListEvents(
      google::cloud::video::livestream::v1::ListEventsRequest) override {
    return Idempotency::kIdempotent;
  }

  Idempotency GetEvent(
      google::cloud::video::livestream::v1::GetEventRequest const&) override {
    return Idempotency::kIdempotent;
  }

  Idempotency DeleteEvent(
      google::cloud::video::livestream::v1::DeleteEventRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }
};
}  // namespace

std::unique_ptr<LivestreamServiceConnectionIdempotencyPolicy>
MakeDefaultLivestreamServiceConnectionIdempotencyPolicy() {
  return absl::make_unique<
      DefaultLivestreamServiceConnectionIdempotencyPolicy>();
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace video
}  // namespace cloud
}  // namespace google
