// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/video/stitcher/v1/video_stitcher_service.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_VIDEO_VIDEO_STITCHER_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_VIDEO_VIDEO_STITCHER_CLIENT_H

#include "google/cloud/video/video_stitcher_connection.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace video {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Video-On-Demand content stitching API allows you to insert ads
/// into (VoD) video on demand files. You will be able to render custom
/// scrubber bars with highlighted ads, enforce ad policies, allow
/// seamless playback and tracking on native players and monetize
/// content with any standard VMAP compliant ad server.
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class VideoStitcherServiceClient {
 public:
  explicit VideoStitcherServiceClient(
      std::shared_ptr<VideoStitcherServiceConnection> connection,
      Options opts = {});
  ~VideoStitcherServiceClient();

  //@{
  // @name Copy and move support
  VideoStitcherServiceClient(VideoStitcherServiceClient const&) = default;
  VideoStitcherServiceClient& operator=(VideoStitcherServiceClient const&) =
      default;
  VideoStitcherServiceClient(VideoStitcherServiceClient&&) = default;
  VideoStitcherServiceClient& operator=(VideoStitcherServiceClient&&) = default;
  //@}

  //@{
  // @name Equality
  friend bool operator==(VideoStitcherServiceClient const& a,
                         VideoStitcherServiceClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(VideoStitcherServiceClient const& a,
                         VideoStitcherServiceClient const& b) {
    return !(a == b);
  }
  //@}

  ///
  /// Creates a new CDN key.
  ///
  /// @param parent  Required. The project in which the CDN key should be
  /// created, in the form of
  ///  `projects/{project_number}/locations/{location}`.
  /// @param cdn_key  Required. The CDN key resource to create.
  /// @param cdn_key_id  Required. The ID to use for the CDN key, which will
  /// become the final component of
  ///  the CDN key's resource name.
  ///  This value should conform to RFC-1034, which restricts to
  ///  lower-case letters, numbers, and hyphen, with the first character a
  ///  letter, the last a letter or a number, and a 63 character maximum.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::CdnKey,google/cloud/video/stitcher/v1/cdn_keys.proto#L30}
  ///
  /// [google.cloud.video.stitcher.v1.CreateCdnKeyRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L217}
  /// [google.cloud.video.stitcher.v1.CdnKey]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/cdn_keys.proto#L30}
  ///
  StatusOr<google::cloud::video::stitcher::v1::CdnKey> CreateCdnKey(
      std::string const& parent,
      google::cloud::video::stitcher::v1::CdnKey const& cdn_key,
      std::string const& cdn_key_id, Options opts = {});

  ///
  /// Creates a new CDN key.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::video::stitcher::v1::CreateCdnKeyRequest,google/cloud/video/stitcher/v1/video_stitcher_service.proto#L217}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::CdnKey,google/cloud/video/stitcher/v1/cdn_keys.proto#L30}
  ///
  /// [google.cloud.video.stitcher.v1.CreateCdnKeyRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L217}
  /// [google.cloud.video.stitcher.v1.CdnKey]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/cdn_keys.proto#L30}
  ///
  StatusOr<google::cloud::video::stitcher::v1::CdnKey> CreateCdnKey(
      google::cloud::video::stitcher::v1::CreateCdnKeyRequest const& request,
      Options opts = {});

  ///
  /// Lists all CDN keys in the specified project and location.
  ///
  /// @param parent  Required. The project that contains the list of CDN keys,
  /// in the form of
  ///  `projects/{project_number}/locations/{location}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::CdnKey,google/cloud/video/stitcher/v1/cdn_keys.proto#L30}
  ///
  /// [google.cloud.video.stitcher.v1.ListCdnKeysRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L240}
  /// [google.cloud.video.stitcher.v1.CdnKey]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/cdn_keys.proto#L30}
  ///
  StreamRange<google::cloud::video::stitcher::v1::CdnKey> ListCdnKeys(
      std::string const& parent, Options opts = {});

  ///
  /// Lists all CDN keys in the specified project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::video::stitcher::v1::ListCdnKeysRequest,google/cloud/video/stitcher/v1/video_stitcher_service.proto#L240}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::CdnKey,google/cloud/video/stitcher/v1/cdn_keys.proto#L30}
  ///
  /// [google.cloud.video.stitcher.v1.ListCdnKeysRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L240}
  /// [google.cloud.video.stitcher.v1.CdnKey]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/cdn_keys.proto#L30}
  ///
  StreamRange<google::cloud::video::stitcher::v1::CdnKey> ListCdnKeys(
      google::cloud::video::stitcher::v1::ListCdnKeysRequest request,
      Options opts = {});

  ///
  /// Returns the specified CDN key.
  ///
  /// @param name  Required. The name of the CDN key to be retrieved, in the
  /// form of
  ///  `projects/{project}/locations/{location}/cdnKeys/{id}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::CdnKey,google/cloud/video/stitcher/v1/cdn_keys.proto#L30}
  ///
  /// [google.cloud.video.stitcher.v1.GetCdnKeyRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L277}
  /// [google.cloud.video.stitcher.v1.CdnKey]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/cdn_keys.proto#L30}
  ///
  StatusOr<google::cloud::video::stitcher::v1::CdnKey> GetCdnKey(
      std::string const& name, Options opts = {});

  ///
  /// Returns the specified CDN key.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::video::stitcher::v1::GetCdnKeyRequest,google/cloud/video/stitcher/v1/video_stitcher_service.proto#L277}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::CdnKey,google/cloud/video/stitcher/v1/cdn_keys.proto#L30}
  ///
  /// [google.cloud.video.stitcher.v1.GetCdnKeyRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L277}
  /// [google.cloud.video.stitcher.v1.CdnKey]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/cdn_keys.proto#L30}
  ///
  StatusOr<google::cloud::video::stitcher::v1::CdnKey> GetCdnKey(
      google::cloud::video::stitcher::v1::GetCdnKeyRequest const& request,
      Options opts = {});

  ///
  /// Deletes the specified CDN key.
  ///
  /// @param name  Required. The name of the CDN key to be deleted, in the form
  /// of
  ///  `projects/{project_number}/locations/{location}/cdnKeys/{id}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  ///
  /// [google.cloud.video.stitcher.v1.DeleteCdnKeyRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L289}
  ///
  Status DeleteCdnKey(std::string const& name, Options opts = {});

  ///
  /// Deletes the specified CDN key.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::video::stitcher::v1::DeleteCdnKeyRequest,google/cloud/video/stitcher/v1/video_stitcher_service.proto#L289}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  ///
  /// [google.cloud.video.stitcher.v1.DeleteCdnKeyRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L289}
  ///
  Status DeleteCdnKey(
      google::cloud::video::stitcher::v1::DeleteCdnKeyRequest const& request,
      Options opts = {});

  ///
  /// Updates the specified CDN key. Only update fields specified
  /// in the call method body.
  ///
  /// @param cdn_key  Required. The CDN key resource which replaces the resource
  /// on the server.
  /// @param update_mask  Required. The update mask applies to the resource.
  ///  For the `FieldMask` definition, see
  ///  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::CdnKey,google/cloud/video/stitcher/v1/cdn_keys.proto#L30}
  ///
  /// [google.cloud.video.stitcher.v1.UpdateCdnKeyRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L301}
  /// [google.cloud.video.stitcher.v1.CdnKey]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/cdn_keys.proto#L30}
  ///
  StatusOr<google::cloud::video::stitcher::v1::CdnKey> UpdateCdnKey(
      google::cloud::video::stitcher::v1::CdnKey const& cdn_key,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Updates the specified CDN key. Only update fields specified
  /// in the call method body.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::video::stitcher::v1::UpdateCdnKeyRequest,google/cloud/video/stitcher/v1/video_stitcher_service.proto#L301}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::CdnKey,google/cloud/video/stitcher/v1/cdn_keys.proto#L30}
  ///
  /// [google.cloud.video.stitcher.v1.UpdateCdnKeyRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L301}
  /// [google.cloud.video.stitcher.v1.CdnKey]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/cdn_keys.proto#L30}
  ///
  StatusOr<google::cloud::video::stitcher::v1::CdnKey> UpdateCdnKey(
      google::cloud::video::stitcher::v1::UpdateCdnKeyRequest const& request,
      Options opts = {});

  ///
  /// Creates a client side playback VOD session and returns the full
  /// tracking and playback metadata of the session.
  ///
  /// @param parent  Required. The project and location in which the VOD session
  /// should be created, in the
  ///  form of `projects/{project_number}/locations/{location}`.
  /// @param vod_session  Required. Parameters for creating a session.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::VodSession,google/cloud/video/stitcher/v1/sessions.proto#L31}
  ///
  /// [google.cloud.video.stitcher.v1.CreateVodSessionRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L312}
  /// [google.cloud.video.stitcher.v1.VodSession]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/sessions.proto#L31}
  ///
  StatusOr<google::cloud::video::stitcher::v1::VodSession> CreateVodSession(
      std::string const& parent,
      google::cloud::video::stitcher::v1::VodSession const& vod_session,
      Options opts = {});

  ///
  /// Creates a client side playback VOD session and returns the full
  /// tracking and playback metadata of the session.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::video::stitcher::v1::CreateVodSessionRequest,google/cloud/video/stitcher/v1/video_stitcher_service.proto#L312}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::VodSession,google/cloud/video/stitcher/v1/sessions.proto#L31}
  ///
  /// [google.cloud.video.stitcher.v1.CreateVodSessionRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L312}
  /// [google.cloud.video.stitcher.v1.VodSession]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/sessions.proto#L31}
  ///
  StatusOr<google::cloud::video::stitcher::v1::VodSession> CreateVodSession(
      google::cloud::video::stitcher::v1::CreateVodSessionRequest const&
          request,
      Options opts = {});

  ///
  /// Returns the full tracking, playback metadata, and relevant ad-ops
  /// logs for the specified VOD session.
  ///
  /// @param name  Required. The name of the VOD session to be retrieved, in the
  /// form of
  ///  `projects/{project_number}/locations/{location}/vodSessions/{id}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::VodSession,google/cloud/video/stitcher/v1/sessions.proto#L31}
  ///
  /// [google.cloud.video.stitcher.v1.GetVodSessionRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L327}
  /// [google.cloud.video.stitcher.v1.VodSession]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/sessions.proto#L31}
  ///
  StatusOr<google::cloud::video::stitcher::v1::VodSession> GetVodSession(
      std::string const& name, Options opts = {});

  ///
  /// Returns the full tracking, playback metadata, and relevant ad-ops
  /// logs for the specified VOD session.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::video::stitcher::v1::GetVodSessionRequest,google/cloud/video/stitcher/v1/video_stitcher_service.proto#L327}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::VodSession,google/cloud/video/stitcher/v1/sessions.proto#L31}
  ///
  /// [google.cloud.video.stitcher.v1.GetVodSessionRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L327}
  /// [google.cloud.video.stitcher.v1.VodSession]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/sessions.proto#L31}
  ///
  StatusOr<google::cloud::video::stitcher::v1::VodSession> GetVodSession(
      google::cloud::video::stitcher::v1::GetVodSessionRequest const& request,
      Options opts = {});

  ///
  /// Returns a list of detailed stitching information of the specified VOD
  /// session.
  ///
  /// @param parent  Required. The VOD session where the stitch details belong
  /// to, in the form of
  ///  `projects/{project}/locations/{location}/vodSessions/{id}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::VodStitchDetail,google/cloud/video/stitcher/v1/stitch_details.proto#L30}
  ///
  /// [google.cloud.video.stitcher.v1.ListVodStitchDetailsRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L339}
  /// [google.cloud.video.stitcher.v1.VodStitchDetail]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/stitch_details.proto#L30}
  ///
  StreamRange<google::cloud::video::stitcher::v1::VodStitchDetail>
  ListVodStitchDetails(std::string const& parent, Options opts = {});

  ///
  /// Returns a list of detailed stitching information of the specified VOD
  /// session.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::video::stitcher::v1::ListVodStitchDetailsRequest,google/cloud/video/stitcher/v1/video_stitcher_service.proto#L339}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::VodStitchDetail,google/cloud/video/stitcher/v1/stitch_details.proto#L30}
  ///
  /// [google.cloud.video.stitcher.v1.ListVodStitchDetailsRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L339}
  /// [google.cloud.video.stitcher.v1.VodStitchDetail]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/stitch_details.proto#L30}
  ///
  StreamRange<google::cloud::video::stitcher::v1::VodStitchDetail>
  ListVodStitchDetails(
      google::cloud::video::stitcher::v1::ListVodStitchDetailsRequest request,
      Options opts = {});

  ///
  /// Returns the specified stitching information for the specified VOD session.
  ///
  /// @param name  Required. The name of the stitch detail in the specified VOD
  /// session, in the form of
  ///  `projects/{project}/locations/{location}/vodSessions/{vod_session_id}/vodStitchDetails/{id}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::VodStitchDetail,google/cloud/video/stitcher/v1/stitch_details.proto#L30}
  ///
  /// [google.cloud.video.stitcher.v1.GetVodStitchDetailRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L366}
  /// [google.cloud.video.stitcher.v1.VodStitchDetail]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/stitch_details.proto#L30}
  ///
  StatusOr<google::cloud::video::stitcher::v1::VodStitchDetail>
  GetVodStitchDetail(std::string const& name, Options opts = {});

  ///
  /// Returns the specified stitching information for the specified VOD session.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::video::stitcher::v1::GetVodStitchDetailRequest,google/cloud/video/stitcher/v1/video_stitcher_service.proto#L366}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::VodStitchDetail,google/cloud/video/stitcher/v1/stitch_details.proto#L30}
  ///
  /// [google.cloud.video.stitcher.v1.GetVodStitchDetailRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L366}
  /// [google.cloud.video.stitcher.v1.VodStitchDetail]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/stitch_details.proto#L30}
  ///
  StatusOr<google::cloud::video::stitcher::v1::VodStitchDetail>
  GetVodStitchDetail(
      google::cloud::video::stitcher::v1::GetVodStitchDetailRequest const&
          request,
      Options opts = {});

  ///
  /// Return the list of ad tag details for the specified VOD session.
  ///
  /// @param parent  Required. The VOD session which the ad tag details belong
  /// to, in the form of
  ///  `projects/{project}/locations/{location}/vodSessions/{vod_session_id}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::VodAdTagDetail,google/cloud/video/stitcher/v1/ad_tag_details.proto#L44}
  ///
  /// [google.cloud.video.stitcher.v1.ListVodAdTagDetailsRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L378}
  /// [google.cloud.video.stitcher.v1.VodAdTagDetail]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/ad_tag_details.proto#L44}
  ///
  StreamRange<google::cloud::video::stitcher::v1::VodAdTagDetail>
  ListVodAdTagDetails(std::string const& parent, Options opts = {});

  ///
  /// Return the list of ad tag details for the specified VOD session.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::video::stitcher::v1::ListVodAdTagDetailsRequest,google/cloud/video/stitcher/v1/video_stitcher_service.proto#L378}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::VodAdTagDetail,google/cloud/video/stitcher/v1/ad_tag_details.proto#L44}
  ///
  /// [google.cloud.video.stitcher.v1.ListVodAdTagDetailsRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L378}
  /// [google.cloud.video.stitcher.v1.VodAdTagDetail]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/ad_tag_details.proto#L44}
  ///
  StreamRange<google::cloud::video::stitcher::v1::VodAdTagDetail>
  ListVodAdTagDetails(
      google::cloud::video::stitcher::v1::ListVodAdTagDetailsRequest request,
      Options opts = {});

  ///
  /// Returns the specified ad tag detail for the specified VOD session.
  ///
  /// @param name  Required. The name of the ad tag detail for the specified VOD
  /// session, in the form of
  ///  `projects/{project}/locations/{location}/vodSessions/{vod_session_id}/vodAdTagDetails/{vod_ad_tag_detail}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::VodAdTagDetail,google/cloud/video/stitcher/v1/ad_tag_details.proto#L44}
  ///
  /// [google.cloud.video.stitcher.v1.GetVodAdTagDetailRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L405}
  /// [google.cloud.video.stitcher.v1.VodAdTagDetail]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/ad_tag_details.proto#L44}
  ///
  StatusOr<google::cloud::video::stitcher::v1::VodAdTagDetail>
  GetVodAdTagDetail(std::string const& name, Options opts = {});

  ///
  /// Returns the specified ad tag detail for the specified VOD session.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::video::stitcher::v1::GetVodAdTagDetailRequest,google/cloud/video/stitcher/v1/video_stitcher_service.proto#L405}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::VodAdTagDetail,google/cloud/video/stitcher/v1/ad_tag_details.proto#L44}
  ///
  /// [google.cloud.video.stitcher.v1.GetVodAdTagDetailRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L405}
  /// [google.cloud.video.stitcher.v1.VodAdTagDetail]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/ad_tag_details.proto#L44}
  ///
  StatusOr<google::cloud::video::stitcher::v1::VodAdTagDetail>
  GetVodAdTagDetail(
      google::cloud::video::stitcher::v1::GetVodAdTagDetailRequest const&
          request,
      Options opts = {});

  ///
  /// Return the list of ad tag details for the specified live session.
  ///
  /// @param parent  Required. The resource parent in the form of
  ///  `projects/{project}/locations/{location}/liveSessions/{live_session}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::LiveAdTagDetail,google/cloud/video/stitcher/v1/ad_tag_details.proto#L29}
  ///
  /// [google.cloud.video.stitcher.v1.ListLiveAdTagDetailsRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L417}
  /// [google.cloud.video.stitcher.v1.LiveAdTagDetail]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/ad_tag_details.proto#L29}
  ///
  StreamRange<google::cloud::video::stitcher::v1::LiveAdTagDetail>
  ListLiveAdTagDetails(std::string const& parent, Options opts = {});

  ///
  /// Return the list of ad tag details for the specified live session.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::video::stitcher::v1::ListLiveAdTagDetailsRequest,google/cloud/video/stitcher/v1/video_stitcher_service.proto#L417}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::LiveAdTagDetail,google/cloud/video/stitcher/v1/ad_tag_details.proto#L29}
  ///
  /// [google.cloud.video.stitcher.v1.ListLiveAdTagDetailsRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L417}
  /// [google.cloud.video.stitcher.v1.LiveAdTagDetail]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/ad_tag_details.proto#L29}
  ///
  StreamRange<google::cloud::video::stitcher::v1::LiveAdTagDetail>
  ListLiveAdTagDetails(
      google::cloud::video::stitcher::v1::ListLiveAdTagDetailsRequest request,
      Options opts = {});

  ///
  /// Returns the specified ad tag detail for the specified live session.
  ///
  /// @param name  Required. The resource name in the form of
  ///  `projects/{project}/locations/{location}/liveSessions/{live_session}/liveAdTagDetails/{live_ad_tag_detail}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::LiveAdTagDetail,google/cloud/video/stitcher/v1/ad_tag_details.proto#L29}
  ///
  /// [google.cloud.video.stitcher.v1.GetLiveAdTagDetailRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L444}
  /// [google.cloud.video.stitcher.v1.LiveAdTagDetail]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/ad_tag_details.proto#L29}
  ///
  StatusOr<google::cloud::video::stitcher::v1::LiveAdTagDetail>
  GetLiveAdTagDetail(std::string const& name, Options opts = {});

  ///
  /// Returns the specified ad tag detail for the specified live session.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::video::stitcher::v1::GetLiveAdTagDetailRequest,google/cloud/video/stitcher/v1/video_stitcher_service.proto#L444}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::LiveAdTagDetail,google/cloud/video/stitcher/v1/ad_tag_details.proto#L29}
  ///
  /// [google.cloud.video.stitcher.v1.GetLiveAdTagDetailRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L444}
  /// [google.cloud.video.stitcher.v1.LiveAdTagDetail]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/ad_tag_details.proto#L29}
  ///
  StatusOr<google::cloud::video::stitcher::v1::LiveAdTagDetail>
  GetLiveAdTagDetail(
      google::cloud::video::stitcher::v1::GetLiveAdTagDetailRequest const&
          request,
      Options opts = {});

  ///
  /// Creates a slate.
  ///
  /// @param parent  Required. The project in which the slate should be created,
  /// in the form of
  ///  `projects/{project_number}`.
  /// @param slate  Required. The slate to create.
  /// @param slate_id  Required. The unique identifier for the slate.
  ///  This value should conform to RFC-1034, which restricts to
  ///  lower-case letters, numbers, and hyphen, with the first character a
  ///  letter, the last a letter or a number, and a 63 character maximum.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::Slate,google/cloud/video/stitcher/v1/slates.proto#L28}
  ///
  /// [google.cloud.video.stitcher.v1.CreateSlateRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L456}
  /// [google.cloud.video.stitcher.v1.Slate]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/slates.proto#L28}
  ///
  StatusOr<google::cloud::video::stitcher::v1::Slate> CreateSlate(
      std::string const& parent,
      google::cloud::video::stitcher::v1::Slate const& slate,
      std::string const& slate_id, Options opts = {});

  ///
  /// Creates a slate.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::video::stitcher::v1::CreateSlateRequest,google/cloud/video/stitcher/v1/video_stitcher_service.proto#L456}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::Slate,google/cloud/video/stitcher/v1/slates.proto#L28}
  ///
  /// [google.cloud.video.stitcher.v1.CreateSlateRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L456}
  /// [google.cloud.video.stitcher.v1.Slate]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/slates.proto#L28}
  ///
  StatusOr<google::cloud::video::stitcher::v1::Slate> CreateSlate(
      google::cloud::video::stitcher::v1::CreateSlateRequest const& request,
      Options opts = {});

  ///
  /// Lists all slates in the specified project and location.
  ///
  /// @param parent  Required. The project to list slates, in the form of
  /// `projects/{project_number}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::Slate,google/cloud/video/stitcher/v1/slates.proto#L28}
  ///
  /// [google.cloud.video.stitcher.v1.ListSlatesRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L489}
  /// [google.cloud.video.stitcher.v1.Slate]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/slates.proto#L28}
  ///
  StreamRange<google::cloud::video::stitcher::v1::Slate> ListSlates(
      std::string const& parent, Options opts = {});

  ///
  /// Lists all slates in the specified project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::video::stitcher::v1::ListSlatesRequest,google/cloud/video/stitcher/v1/video_stitcher_service.proto#L489}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::Slate,google/cloud/video/stitcher/v1/slates.proto#L28}
  ///
  /// [google.cloud.video.stitcher.v1.ListSlatesRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L489}
  /// [google.cloud.video.stitcher.v1.Slate]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/slates.proto#L28}
  ///
  StreamRange<google::cloud::video::stitcher::v1::Slate> ListSlates(
      google::cloud::video::stitcher::v1::ListSlatesRequest request,
      Options opts = {});

  ///
  /// Returns the specified slate.
  ///
  /// @param name  Required. The name of the slate to be retrieved, of the
  /// slate, in the form of
  ///  `projects/{project_number}/locations/{location}/slates/{id}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::Slate,google/cloud/video/stitcher/v1/slates.proto#L28}
  ///
  /// [google.cloud.video.stitcher.v1.GetSlateRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L477}
  /// [google.cloud.video.stitcher.v1.Slate]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/slates.proto#L28}
  ///
  StatusOr<google::cloud::video::stitcher::v1::Slate> GetSlate(
      std::string const& name, Options opts = {});

  ///
  /// Returns the specified slate.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::video::stitcher::v1::GetSlateRequest,google/cloud/video/stitcher/v1/video_stitcher_service.proto#L477}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::Slate,google/cloud/video/stitcher/v1/slates.proto#L28}
  ///
  /// [google.cloud.video.stitcher.v1.GetSlateRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L477}
  /// [google.cloud.video.stitcher.v1.Slate]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/slates.proto#L28}
  ///
  StatusOr<google::cloud::video::stitcher::v1::Slate> GetSlate(
      google::cloud::video::stitcher::v1::GetSlateRequest const& request,
      Options opts = {});

  ///
  /// Updates the specified slate.
  ///
  /// @param slate  Required. The resource with updated fields.
  /// @param update_mask  Required. The update mask which specifies fields which
  /// should be updated.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::Slate,google/cloud/video/stitcher/v1/slates.proto#L28}
  ///
  /// [google.cloud.video.stitcher.v1.UpdateSlateRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L525}
  /// [google.cloud.video.stitcher.v1.Slate]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/slates.proto#L28}
  ///
  StatusOr<google::cloud::video::stitcher::v1::Slate> UpdateSlate(
      google::cloud::video::stitcher::v1::Slate const& slate,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Updates the specified slate.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::video::stitcher::v1::UpdateSlateRequest,google/cloud/video/stitcher/v1/video_stitcher_service.proto#L525}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::Slate,google/cloud/video/stitcher/v1/slates.proto#L28}
  ///
  /// [google.cloud.video.stitcher.v1.UpdateSlateRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L525}
  /// [google.cloud.video.stitcher.v1.Slate]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/slates.proto#L28}
  ///
  StatusOr<google::cloud::video::stitcher::v1::Slate> UpdateSlate(
      google::cloud::video::stitcher::v1::UpdateSlateRequest const& request,
      Options opts = {});

  ///
  /// Deletes the specified slate.
  ///
  /// @param name  Required. The name of the slate to be deleted, in the form of
  ///  `projects/{project_number}/locations/{location}/slates/{id}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  ///
  /// [google.cloud.video.stitcher.v1.DeleteSlateRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L534}
  ///
  Status DeleteSlate(std::string const& name, Options opts = {});

  ///
  /// Deletes the specified slate.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::video::stitcher::v1::DeleteSlateRequest,google/cloud/video/stitcher/v1/video_stitcher_service.proto#L534}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  ///
  /// [google.cloud.video.stitcher.v1.DeleteSlateRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L534}
  ///
  Status DeleteSlate(
      google::cloud::video::stitcher::v1::DeleteSlateRequest const& request,
      Options opts = {});

  ///
  /// Creates a new live session.
  ///
  /// @param parent  Required. The project and location in which the live
  /// session should be created,
  ///  in the form of `projects/{project_number}/locations/{location}`.
  /// @param live_session  Required. Parameters for creating a live session.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::LiveSession,google/cloud/video/stitcher/v1/sessions.proto#L130}
  ///
  /// [google.cloud.video.stitcher.v1.CreateLiveSessionRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L546}
  /// [google.cloud.video.stitcher.v1.LiveSession]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/sessions.proto#L130}
  ///
  StatusOr<google::cloud::video::stitcher::v1::LiveSession> CreateLiveSession(
      std::string const& parent,
      google::cloud::video::stitcher::v1::LiveSession const& live_session,
      Options opts = {});

  ///
  /// Creates a new live session.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::video::stitcher::v1::CreateLiveSessionRequest,google/cloud/video/stitcher/v1/video_stitcher_service.proto#L546}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::LiveSession,google/cloud/video/stitcher/v1/sessions.proto#L130}
  ///
  /// [google.cloud.video.stitcher.v1.CreateLiveSessionRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L546}
  /// [google.cloud.video.stitcher.v1.LiveSession]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/sessions.proto#L130}
  ///
  StatusOr<google::cloud::video::stitcher::v1::LiveSession> CreateLiveSession(
      google::cloud::video::stitcher::v1::CreateLiveSessionRequest const&
          request,
      Options opts = {});

  ///
  /// Returns the details for the specified live session.
  ///
  /// @param name  Required. The name of the live session, in the form of
  ///  `projects/{project_number}/locations/{location}/liveSessions/{id}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::LiveSession,google/cloud/video/stitcher/v1/sessions.proto#L130}
  ///
  /// [google.cloud.video.stitcher.v1.GetLiveSessionRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L561}
  /// [google.cloud.video.stitcher.v1.LiveSession]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/sessions.proto#L130}
  ///
  StatusOr<google::cloud::video::stitcher::v1::LiveSession> GetLiveSession(
      std::string const& name, Options opts = {});

  ///
  /// Returns the details for the specified live session.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::video::stitcher::v1::GetLiveSessionRequest,google/cloud/video/stitcher/v1/video_stitcher_service.proto#L561}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::video::stitcher::v1::LiveSession,google/cloud/video/stitcher/v1/sessions.proto#L130}
  ///
  /// [google.cloud.video.stitcher.v1.GetLiveSessionRequest]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/video_stitcher_service.proto#L561}
  /// [google.cloud.video.stitcher.v1.LiveSession]:
  /// @googleapis_reference_link{google/cloud/video/stitcher/v1/sessions.proto#L130}
  ///
  StatusOr<google::cloud::video::stitcher::v1::LiveSession> GetLiveSession(
      google::cloud::video::stitcher::v1::GetLiveSessionRequest const& request,
      Options opts = {});

 private:
  std::shared_ptr<VideoStitcherServiceConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace video
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_VIDEO_VIDEO_STITCHER_CLIENT_H
