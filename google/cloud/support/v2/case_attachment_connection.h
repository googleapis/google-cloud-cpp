// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/support/v2/attachment_service.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_SUPPORT_V2_CASE_ATTACHMENT_CONNECTION_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_SUPPORT_V2_CASE_ATTACHMENT_CONNECTION_H

#include "google/cloud/support/v2/case_attachment_connection_idempotency_policy.h"
#include "google/cloud/support/v2/internal/case_attachment_retry_traits.h"
#include "google/cloud/backoff_policy.h"
#include "google/cloud/options.h"
#include "google/cloud/status_or.h"
#include "google/cloud/stream_range.h"
#include "google/cloud/version.h"
#include <google/cloud/support/v2/attachment_service.pb.h>
#include <memory>

namespace google {
namespace cloud {
namespace support_v2 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

using CaseAttachmentServiceRetryPolicy =
    ::google::cloud::internal::TraitBasedRetryPolicy<
        support_v2_internal::CaseAttachmentServiceRetryTraits>;

using CaseAttachmentServiceLimitedTimeRetryPolicy =
    ::google::cloud::internal::LimitedTimeRetryPolicy<
        support_v2_internal::CaseAttachmentServiceRetryTraits>;

using CaseAttachmentServiceLimitedErrorCountRetryPolicy =
    ::google::cloud::internal::LimitedErrorCountRetryPolicy<
        support_v2_internal::CaseAttachmentServiceRetryTraits>;

/**
 * The `CaseAttachmentServiceConnection` object for
 * `CaseAttachmentServiceClient`.
 *
 * This interface defines virtual methods for each of the user-facing overload
 * sets in `CaseAttachmentServiceClient`. This allows users to inject custom
 * behavior (e.g., with a Google Mock object) when writing tests that use
 * objects of type `CaseAttachmentServiceClient`.
 *
 * To create a concrete instance, see `MakeCaseAttachmentServiceConnection()`.
 *
 * For mocking, see `support_v2_mocks::MockCaseAttachmentServiceConnection`.
 */
class CaseAttachmentServiceConnection {
 public:
  virtual ~CaseAttachmentServiceConnection() = 0;

  virtual Options options() { return Options{}; }

  virtual StreamRange<google::cloud::support::v2::Attachment> ListAttachments(
      google::cloud::support::v2::ListAttachmentsRequest request);
};

/**
 * A factory function to construct an object of type
 * `CaseAttachmentServiceConnection`.
 *
 * The returned connection object should not be used directly; instead it
 * should be passed as an argument to the constructor of
 * CaseAttachmentServiceClient.
 *
 * The optional @p options argument may be used to configure aspects of the
 * returned `CaseAttachmentServiceConnection`. Expected options are any of the
 * types in the following option lists:
 *
 * - `google::cloud::CommonOptionList`
 * - `google::cloud::GrpcOptionList`
 * - `google::cloud::UnifiedCredentialsOptionList`
 * - `google::cloud::support_v2::CaseAttachmentServicePolicyOptionList`
 *
 * @note Unexpected options will be ignored. To log unexpected options instead,
 *     set `GOOGLE_CLOUD_CPP_ENABLE_CLOG=yes` in the environment.
 *
 * @param options (optional) Configure the `CaseAttachmentServiceConnection`
 * created by this function.
 */
std::shared_ptr<CaseAttachmentServiceConnection>
MakeCaseAttachmentServiceConnection(Options options = {});

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace support_v2
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_SUPPORT_V2_CASE_ATTACHMENT_CONNECTION_H
