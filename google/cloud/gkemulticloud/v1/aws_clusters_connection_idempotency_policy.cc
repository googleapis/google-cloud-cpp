// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/gkemulticloud/v1/aws_service.proto

#include "google/cloud/gkemulticloud/v1/aws_clusters_connection_idempotency_policy.h"
#include <memory>

namespace google {
namespace cloud {
namespace gkemulticloud_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

using ::google::cloud::Idempotency;

AwsClustersConnectionIdempotencyPolicy::
    ~AwsClustersConnectionIdempotencyPolicy() = default;

std::unique_ptr<AwsClustersConnectionIdempotencyPolicy>
AwsClustersConnectionIdempotencyPolicy::clone() const {
  return std::make_unique<AwsClustersConnectionIdempotencyPolicy>(*this);
}

Idempotency AwsClustersConnectionIdempotencyPolicy::CreateAwsCluster(
    google::cloud::gkemulticloud::v1::CreateAwsClusterRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency AwsClustersConnectionIdempotencyPolicy::UpdateAwsCluster(
    google::cloud::gkemulticloud::v1::UpdateAwsClusterRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency AwsClustersConnectionIdempotencyPolicy::GetAwsCluster(
    google::cloud::gkemulticloud::v1::GetAwsClusterRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency AwsClustersConnectionIdempotencyPolicy::ListAwsClusters(
    google::cloud::gkemulticloud::v1::ListAwsClustersRequest) {  // NOLINT
  return Idempotency::kIdempotent;
}

Idempotency AwsClustersConnectionIdempotencyPolicy::DeleteAwsCluster(
    google::cloud::gkemulticloud::v1::DeleteAwsClusterRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency
AwsClustersConnectionIdempotencyPolicy::GenerateAwsClusterAgentToken(
    google::cloud::gkemulticloud::v1::
        GenerateAwsClusterAgentTokenRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency AwsClustersConnectionIdempotencyPolicy::GenerateAwsAccessToken(
    google::cloud::gkemulticloud::v1::GenerateAwsAccessTokenRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency AwsClustersConnectionIdempotencyPolicy::CreateAwsNodePool(
    google::cloud::gkemulticloud::v1::CreateAwsNodePoolRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency AwsClustersConnectionIdempotencyPolicy::UpdateAwsNodePool(
    google::cloud::gkemulticloud::v1::UpdateAwsNodePoolRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency AwsClustersConnectionIdempotencyPolicy::RollbackAwsNodePoolUpdate(
    google::cloud::gkemulticloud::v1::RollbackAwsNodePoolUpdateRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency AwsClustersConnectionIdempotencyPolicy::GetAwsNodePool(
    google::cloud::gkemulticloud::v1::GetAwsNodePoolRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency AwsClustersConnectionIdempotencyPolicy::ListAwsNodePools(
    google::cloud::gkemulticloud::v1::ListAwsNodePoolsRequest) {  // NOLINT
  return Idempotency::kIdempotent;
}

Idempotency AwsClustersConnectionIdempotencyPolicy::DeleteAwsNodePool(
    google::cloud::gkemulticloud::v1::DeleteAwsNodePoolRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency AwsClustersConnectionIdempotencyPolicy::GetAwsOpenIdConfig(
    google::cloud::gkemulticloud::v1::GetAwsOpenIdConfigRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency AwsClustersConnectionIdempotencyPolicy::GetAwsJsonWebKeys(
    google::cloud::gkemulticloud::v1::GetAwsJsonWebKeysRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency AwsClustersConnectionIdempotencyPolicy::GetAwsServerConfig(
    google::cloud::gkemulticloud::v1::GetAwsServerConfigRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency AwsClustersConnectionIdempotencyPolicy::ListOperations(
    google::longrunning::ListOperationsRequest) {  // NOLINT
  return Idempotency::kIdempotent;
}

Idempotency AwsClustersConnectionIdempotencyPolicy::GetOperation(
    google::longrunning::GetOperationRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency AwsClustersConnectionIdempotencyPolicy::DeleteOperation(
    google::longrunning::DeleteOperationRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency AwsClustersConnectionIdempotencyPolicy::CancelOperation(
    google::longrunning::CancelOperationRequest const&) {
  return Idempotency::kNonIdempotent;
}

std::unique_ptr<AwsClustersConnectionIdempotencyPolicy>
MakeDefaultAwsClustersConnectionIdempotencyPolicy() {
  return std::make_unique<AwsClustersConnectionIdempotencyPolicy>();
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace gkemulticloud_v1
}  // namespace cloud
}  // namespace google
