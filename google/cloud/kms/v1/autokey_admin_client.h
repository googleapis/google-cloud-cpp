// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/kms/v1/autokey_admin.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_KMS_V1_AUTOKEY_ADMIN_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_KMS_V1_AUTOKEY_ADMIN_CLIENT_H

#include "google/cloud/kms/v1/autokey_admin_connection.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <memory>
#include <string>

namespace google {
namespace cloud {
namespace kms_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Provides interfaces for managing Cloud KMS Autokey folder-level
/// configurations. A configuration is inherited by all descendent projects. A
/// configuration at one folder overrides any other configurations in its
/// ancestry. Setting a configuration on a folder is a prerequisite for Cloud
/// KMS Autokey, so that users working in a descendant project can request
/// provisioned [CryptoKeys][google.cloud.kms.v1.CryptoKey], ready for Customer
/// Managed Encryption Key (CMEK) use, on-demand.
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class AutokeyAdminClient {
 public:
  explicit AutokeyAdminClient(
      std::shared_ptr<AutokeyAdminConnection> connection, Options opts = {});
  ~AutokeyAdminClient();

  ///@{
  /// @name Copy and move support
  AutokeyAdminClient(AutokeyAdminClient const&) = default;
  AutokeyAdminClient& operator=(AutokeyAdminClient const&) = default;
  AutokeyAdminClient(AutokeyAdminClient&&) = default;
  AutokeyAdminClient& operator=(AutokeyAdminClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(AutokeyAdminClient const& a,
                         AutokeyAdminClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(AutokeyAdminClient const& a,
                         AutokeyAdminClient const& b) {
    return !(a == b);
  }
  ///@}

  // clang-format off
  ///
  /// Updates the [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig] for a
  /// folder. The caller must have both `cloudkms.autokeyConfigs.update`
  /// permission on the parent folder and `cloudkms.cryptoKeys.setIamPolicy`
  /// permission on the provided key project. A
  /// [KeyHandle][google.cloud.kms.v1.KeyHandle] creation in the folder's
  /// descendant projects will use this configuration to determine where to
  /// create the resulting [CryptoKey][google.cloud.kms.v1.CryptoKey].
  ///
  /// @param autokey_config  Required. [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig] with values to
  ///  update.
  /// @param update_mask  Required. Masks which fields of the
  ///  [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig] to update, e.g.
  ///  `keyProject`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.kms.v1.AutokeyConfig])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.kms.v1.AutokeyConfig]: @googleapis_reference_link{google/cloud/kms/v1/autokey_admin.proto#L105}
  /// [google.cloud.kms.v1.UpdateAutokeyConfigRequest]: @googleapis_reference_link{google/cloud/kms/v1/autokey_admin.proto#L79}
  ///
  // clang-format on
  StatusOr<google::cloud::kms::v1::AutokeyConfig> UpdateAutokeyConfig(
      google::cloud::kms::v1::AutokeyConfig const& autokey_config,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  // clang-format off
  ///
  /// Updates the [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig] for a
  /// folder. The caller must have both `cloudkms.autokeyConfigs.update`
  /// permission on the parent folder and `cloudkms.cryptoKeys.setIamPolicy`
  /// permission on the provided key project. A
  /// [KeyHandle][google.cloud.kms.v1.KeyHandle] creation in the folder's
  /// descendant projects will use this configuration to determine where to
  /// create the resulting [CryptoKey][google.cloud.kms.v1.CryptoKey].
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.kms.v1.UpdateAutokeyConfigRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.kms.v1.AutokeyConfig])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.kms.v1.AutokeyConfig]: @googleapis_reference_link{google/cloud/kms/v1/autokey_admin.proto#L105}
  /// [google.cloud.kms.v1.UpdateAutokeyConfigRequest]: @googleapis_reference_link{google/cloud/kms/v1/autokey_admin.proto#L79}
  ///
  // clang-format on
  StatusOr<google::cloud::kms::v1::AutokeyConfig> UpdateAutokeyConfig(
      google::cloud::kms::v1::UpdateAutokeyConfigRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Returns the [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig] for a
  /// folder.
  ///
  /// @param name  Required. Name of the [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig]
  ///  resource, e.g. `folders/{FOLDER_NUMBER}/autokeyConfig`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.kms.v1.AutokeyConfig])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.kms.v1.AutokeyConfig]: @googleapis_reference_link{google/cloud/kms/v1/autokey_admin.proto#L105}
  /// [google.cloud.kms.v1.GetAutokeyConfigRequest]: @googleapis_reference_link{google/cloud/kms/v1/autokey_admin.proto#L93}
  ///
  // clang-format on
  StatusOr<google::cloud::kms::v1::AutokeyConfig> GetAutokeyConfig(
      std::string const& name, Options opts = {});

  // clang-format off
  ///
  /// Returns the [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig] for a
  /// folder.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.kms.v1.GetAutokeyConfigRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.kms.v1.AutokeyConfig])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.kms.v1.AutokeyConfig]: @googleapis_reference_link{google/cloud/kms/v1/autokey_admin.proto#L105}
  /// [google.cloud.kms.v1.GetAutokeyConfigRequest]: @googleapis_reference_link{google/cloud/kms/v1/autokey_admin.proto#L93}
  ///
  // clang-format on
  StatusOr<google::cloud::kms::v1::AutokeyConfig> GetAutokeyConfig(
      google::cloud::kms::v1::GetAutokeyConfigRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Returns the effective Cloud KMS Autokey configuration for a given project.
  ///
  /// @param parent  Required. Name of the resource project to the show effective Cloud KMS
  ///  Autokey configuration for. This may be helpful for interrogating the effect
  ///  of nested folder configurations on a given resource project.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.kms.v1.ShowEffectiveAutokeyConfigResponse])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.kms.v1.ShowEffectiveAutokeyConfigRequest]: @googleapis_reference_link{google/cloud/kms/v1/autokey_admin.proto#L133}
  /// [google.cloud.kms.v1.ShowEffectiveAutokeyConfigResponse]: @googleapis_reference_link{google/cloud/kms/v1/autokey_admin.proto#L147}
  ///
  // clang-format on
  StatusOr<google::cloud::kms::v1::ShowEffectiveAutokeyConfigResponse>
  ShowEffectiveAutokeyConfig(std::string const& parent, Options opts = {});

  // clang-format off
  ///
  /// Returns the effective Cloud KMS Autokey configuration for a given project.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.kms.v1.ShowEffectiveAutokeyConfigRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.kms.v1.ShowEffectiveAutokeyConfigResponse])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.kms.v1.ShowEffectiveAutokeyConfigRequest]: @googleapis_reference_link{google/cloud/kms/v1/autokey_admin.proto#L133}
  /// [google.cloud.kms.v1.ShowEffectiveAutokeyConfigResponse]: @googleapis_reference_link{google/cloud/kms/v1/autokey_admin.proto#L147}
  ///
  // clang-format on
  StatusOr<google::cloud::kms::v1::ShowEffectiveAutokeyConfigResponse>
  ShowEffectiveAutokeyConfig(
      google::cloud::kms::v1::ShowEffectiveAutokeyConfigRequest const& request,
      Options opts = {});

 private:
  std::shared_ptr<AutokeyAdminConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace kms_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_KMS_V1_AUTOKEY_ADMIN_CLIENT_H
