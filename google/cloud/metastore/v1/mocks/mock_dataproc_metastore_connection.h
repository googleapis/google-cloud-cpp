// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/metastore/v1/metastore.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_METASTORE_V1_MOCKS_MOCK_DATAPROC_METASTORE_CONNECTION_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_METASTORE_V1_MOCKS_MOCK_DATAPROC_METASTORE_CONNECTION_H

#include "google/cloud/metastore/v1/dataproc_metastore_connection.h"
#include <gmock/gmock.h>

namespace google {
namespace cloud {
namespace metastore_v1_mocks {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

/**
 * A class to mock `DataprocMetastoreConnection`.
 *
 * Application developers may want to test their code with simulated responses,
 * including errors, from an object of type `DataprocMetastoreClient`. To do so,
 * construct an object of type `DataprocMetastoreClient` with an instance of
 * this class. Then use the Google Test framework functions to program the
 * behavior of this mock.
 *
 * @see [This example][bq-mock] for how to test your application with GoogleTest.
 * While the example showcases types from the BigQuery library, the underlying
 * principles apply for any pair of `*Client` and `*Connection`.
 *
 * [bq-mock]: @cloud_cpp_docs_link{bigquery,bigquery-read-mock}
 */
class MockDataprocMetastoreConnection
    : public metastore_v1::DataprocMetastoreConnection {
 public:
  MOCK_METHOD(Options, options, (), (override));

  MOCK_METHOD((StreamRange<google::cloud::metastore::v1::Service>),
              ListServices,
              (google::cloud::metastore::v1::ListServicesRequest request),
              (override));

  MOCK_METHOD(StatusOr<google::cloud::metastore::v1::Service>, GetService,
              (google::cloud::metastore::v1::GetServiceRequest const& request),
              (override));

  /// Due to additional overloads for this method
  /// `EXPECT_CALL(*mock, CreateService)` is now ambiguous. Use
  /// `EXPECT_CALL(*mock, CreateService(::testing::_))` instead.
  MOCK_METHOD(
      future<StatusOr<google::cloud::metastore::v1::Service>>, CreateService,
      (google::cloud::metastore::v1::CreateServiceRequest const& request),
      (override));

  MOCK_METHOD(
      StatusOr<google::longrunning::Operation>, CreateService,
      (ExperimentalTag, NoAwaitTag,
       google::cloud::metastore::v1::CreateServiceRequest const& request),
      (override));

  MOCK_METHOD(future<StatusOr<google::cloud::metastore::v1::Service>>,
              CreateService,
              (ExperimentalTag,
               google::longrunning::Operation const& operation),
              (override));

  /// Due to additional overloads for this method
  /// `EXPECT_CALL(*mock, UpdateService)` is now ambiguous. Use
  /// `EXPECT_CALL(*mock, UpdateService(::testing::_))` instead.
  MOCK_METHOD(
      future<StatusOr<google::cloud::metastore::v1::Service>>, UpdateService,
      (google::cloud::metastore::v1::UpdateServiceRequest const& request),
      (override));

  MOCK_METHOD(
      StatusOr<google::longrunning::Operation>, UpdateService,
      (ExperimentalTag, NoAwaitTag,
       google::cloud::metastore::v1::UpdateServiceRequest const& request),
      (override));

  MOCK_METHOD(future<StatusOr<google::cloud::metastore::v1::Service>>,
              UpdateService,
              (ExperimentalTag,
               google::longrunning::Operation const& operation),
              (override));

  /// Due to additional overloads for this method
  /// `EXPECT_CALL(*mock, DeleteService)` is now ambiguous. Use
  /// `EXPECT_CALL(*mock, DeleteService(::testing::_))` instead.
  MOCK_METHOD(
      future<StatusOr<google::cloud::metastore::v1::OperationMetadata>>,
      DeleteService,
      (google::cloud::metastore::v1::DeleteServiceRequest const& request),
      (override));

  MOCK_METHOD(
      StatusOr<google::longrunning::Operation>, DeleteService,
      (ExperimentalTag, NoAwaitTag,
       google::cloud::metastore::v1::DeleteServiceRequest const& request),
      (override));

  MOCK_METHOD(future<StatusOr<google::cloud::metastore::v1::OperationMetadata>>,
              DeleteService,
              (ExperimentalTag,
               google::longrunning::Operation const& operation),
              (override));

  MOCK_METHOD(
      (StreamRange<google::cloud::metastore::v1::MetadataImport>),
      ListMetadataImports,
      (google::cloud::metastore::v1::ListMetadataImportsRequest request),
      (override));

  MOCK_METHOD(
      StatusOr<google::cloud::metastore::v1::MetadataImport>, GetMetadataImport,
      (google::cloud::metastore::v1::GetMetadataImportRequest const& request),
      (override));

  /// Due to additional overloads for this method
  /// `EXPECT_CALL(*mock, CreateMetadataImport)` is now ambiguous. Use
  /// `EXPECT_CALL(*mock, CreateMetadataImport(::testing::_))` instead.
  MOCK_METHOD(future<StatusOr<google::cloud::metastore::v1::MetadataImport>>,
              CreateMetadataImport,
              (google::cloud::metastore::v1::CreateMetadataImportRequest const&
                   request),
              (override));

  MOCK_METHOD(StatusOr<google::longrunning::Operation>, CreateMetadataImport,
              (ExperimentalTag, NoAwaitTag,
               google::cloud::metastore::v1::CreateMetadataImportRequest const&
                   request),
              (override));

  MOCK_METHOD(future<StatusOr<google::cloud::metastore::v1::MetadataImport>>,
              CreateMetadataImport,
              (ExperimentalTag,
               google::longrunning::Operation const& operation),
              (override));

  /// Due to additional overloads for this method
  /// `EXPECT_CALL(*mock, UpdateMetadataImport)` is now ambiguous. Use
  /// `EXPECT_CALL(*mock, UpdateMetadataImport(::testing::_))` instead.
  MOCK_METHOD(future<StatusOr<google::cloud::metastore::v1::MetadataImport>>,
              UpdateMetadataImport,
              (google::cloud::metastore::v1::UpdateMetadataImportRequest const&
                   request),
              (override));

  MOCK_METHOD(StatusOr<google::longrunning::Operation>, UpdateMetadataImport,
              (ExperimentalTag, NoAwaitTag,
               google::cloud::metastore::v1::UpdateMetadataImportRequest const&
                   request),
              (override));

  MOCK_METHOD(future<StatusOr<google::cloud::metastore::v1::MetadataImport>>,
              UpdateMetadataImport,
              (ExperimentalTag,
               google::longrunning::Operation const& operation),
              (override));

  /// Due to additional overloads for this method
  /// `EXPECT_CALL(*mock, ExportMetadata)` is now ambiguous. Use
  /// `EXPECT_CALL(*mock, ExportMetadata(::testing::_))` instead.
  MOCK_METHOD(
      future<StatusOr<google::cloud::metastore::v1::MetadataExport>>,
      ExportMetadata,
      (google::cloud::metastore::v1::ExportMetadataRequest const& request),
      (override));

  MOCK_METHOD(
      StatusOr<google::longrunning::Operation>, ExportMetadata,
      (ExperimentalTag, NoAwaitTag,
       google::cloud::metastore::v1::ExportMetadataRequest const& request),
      (override));

  MOCK_METHOD(future<StatusOr<google::cloud::metastore::v1::MetadataExport>>,
              ExportMetadata,
              (ExperimentalTag,
               google::longrunning::Operation const& operation),
              (override));

  /// Due to additional overloads for this method
  /// `EXPECT_CALL(*mock, RestoreService)` is now ambiguous. Use
  /// `EXPECT_CALL(*mock, RestoreService(::testing::_))` instead.
  MOCK_METHOD(
      future<StatusOr<google::cloud::metastore::v1::Restore>>, RestoreService,
      (google::cloud::metastore::v1::RestoreServiceRequest const& request),
      (override));

  MOCK_METHOD(
      StatusOr<google::longrunning::Operation>, RestoreService,
      (ExperimentalTag, NoAwaitTag,
       google::cloud::metastore::v1::RestoreServiceRequest const& request),
      (override));

  MOCK_METHOD(future<StatusOr<google::cloud::metastore::v1::Restore>>,
              RestoreService,
              (ExperimentalTag,
               google::longrunning::Operation const& operation),
              (override));

  MOCK_METHOD((StreamRange<google::cloud::metastore::v1::Backup>), ListBackups,
              (google::cloud::metastore::v1::ListBackupsRequest request),
              (override));

  MOCK_METHOD(StatusOr<google::cloud::metastore::v1::Backup>, GetBackup,
              (google::cloud::metastore::v1::GetBackupRequest const& request),
              (override));

  /// Due to additional overloads for this method
  /// `EXPECT_CALL(*mock, CreateBackup)` is now ambiguous. Use
  /// `EXPECT_CALL(*mock, CreateBackup(::testing::_))` instead.
  MOCK_METHOD(
      future<StatusOr<google::cloud::metastore::v1::Backup>>, CreateBackup,
      (google::cloud::metastore::v1::CreateBackupRequest const& request),
      (override));

  MOCK_METHOD(
      StatusOr<google::longrunning::Operation>, CreateBackup,
      (ExperimentalTag, NoAwaitTag,
       google::cloud::metastore::v1::CreateBackupRequest const& request),
      (override));

  MOCK_METHOD(future<StatusOr<google::cloud::metastore::v1::Backup>>,
              CreateBackup,
              (ExperimentalTag,
               google::longrunning::Operation const& operation),
              (override));

  /// Due to additional overloads for this method
  /// `EXPECT_CALL(*mock, DeleteBackup)` is now ambiguous. Use
  /// `EXPECT_CALL(*mock, DeleteBackup(::testing::_))` instead.
  MOCK_METHOD(
      future<StatusOr<google::cloud::metastore::v1::OperationMetadata>>,
      DeleteBackup,
      (google::cloud::metastore::v1::DeleteBackupRequest const& request),
      (override));

  MOCK_METHOD(
      StatusOr<google::longrunning::Operation>, DeleteBackup,
      (ExperimentalTag, NoAwaitTag,
       google::cloud::metastore::v1::DeleteBackupRequest const& request),
      (override));

  MOCK_METHOD(future<StatusOr<google::cloud::metastore::v1::OperationMetadata>>,
              DeleteBackup,
              (ExperimentalTag,
               google::longrunning::Operation const& operation),
              (override));

  /// Due to additional overloads for this method
  /// `EXPECT_CALL(*mock, QueryMetadata)` is now ambiguous. Use
  /// `EXPECT_CALL(*mock, QueryMetadata(::testing::_))` instead.
  MOCK_METHOD(
      future<StatusOr<google::cloud::metastore::v1::QueryMetadataResponse>>,
      QueryMetadata,
      (google::cloud::metastore::v1::QueryMetadataRequest const& request),
      (override));

  MOCK_METHOD(
      StatusOr<google::longrunning::Operation>, QueryMetadata,
      (ExperimentalTag, NoAwaitTag,
       google::cloud::metastore::v1::QueryMetadataRequest const& request),
      (override));

  MOCK_METHOD(
      future<StatusOr<google::cloud::metastore::v1::QueryMetadataResponse>>,
      QueryMetadata,
      (ExperimentalTag, google::longrunning::Operation const& operation),
      (override));

  /// Due to additional overloads for this method
  /// `EXPECT_CALL(*mock, MoveTableToDatabase)` is now ambiguous. Use
  /// `EXPECT_CALL(*mock, MoveTableToDatabase(::testing::_))` instead.
  MOCK_METHOD(
      future<
          StatusOr<google::cloud::metastore::v1::MoveTableToDatabaseResponse>>,
      MoveTableToDatabase,
      (google::cloud::metastore::v1::MoveTableToDatabaseRequest const& request),
      (override));

  MOCK_METHOD(
      StatusOr<google::longrunning::Operation>, MoveTableToDatabase,
      (ExperimentalTag, NoAwaitTag,
       google::cloud::metastore::v1::MoveTableToDatabaseRequest const& request),
      (override));

  MOCK_METHOD(
      future<
          StatusOr<google::cloud::metastore::v1::MoveTableToDatabaseResponse>>,
      MoveTableToDatabase,
      (ExperimentalTag, google::longrunning::Operation const& operation),
      (override));

  /// Due to additional overloads for this method
  /// `EXPECT_CALL(*mock, AlterMetadataResourceLocation)` is now ambiguous. Use
  /// `EXPECT_CALL(*mock, AlterMetadataResourceLocation(::testing::_))` instead.
  MOCK_METHOD(
      future<StatusOr<
          google::cloud::metastore::v1::AlterMetadataResourceLocationResponse>>,
      AlterMetadataResourceLocation,
      (google::cloud::metastore::v1::AlterMetadataResourceLocationRequest const&
           request),
      (override));

  MOCK_METHOD(
      StatusOr<google::longrunning::Operation>, AlterMetadataResourceLocation,
      (ExperimentalTag, NoAwaitTag,
       google::cloud::metastore::v1::AlterMetadataResourceLocationRequest const&
           request),
      (override));

  MOCK_METHOD(
      future<StatusOr<
          google::cloud::metastore::v1::AlterMetadataResourceLocationResponse>>,
      AlterMetadataResourceLocation,
      (ExperimentalTag, google::longrunning::Operation const& operation),
      (override));
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace metastore_v1_mocks
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_METASTORE_V1_MOCKS_MOCK_DATAPROC_METASTORE_CONNECTION_H
