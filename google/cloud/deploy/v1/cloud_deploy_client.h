// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/deploy/v1/cloud_deploy.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_DEPLOY_V1_CLOUD_DEPLOY_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_DEPLOY_V1_CLOUD_DEPLOY_CLIENT_H

#include "google/cloud/deploy/v1/cloud_deploy_connection.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <google/longrunning/operations.grpc.pb.h>
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace deploy_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// CloudDeploy service creates and manages Continuous Delivery operations
/// on Google Cloud Platform via Skaffold (https://skaffold.dev).
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class CloudDeployClient {
 public:
  explicit CloudDeployClient(std::shared_ptr<CloudDeployConnection> connection,
                             Options opts = {});
  ~CloudDeployClient();

  ///@{
  /// @name Copy and move support
  CloudDeployClient(CloudDeployClient const&) = default;
  CloudDeployClient& operator=(CloudDeployClient const&) = default;
  CloudDeployClient(CloudDeployClient&&) = default;
  CloudDeployClient& operator=(CloudDeployClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(CloudDeployClient const& a,
                         CloudDeployClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(CloudDeployClient const& a,
                         CloudDeployClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Lists DeliveryPipelines in a given project and location.
  ///
  /// @param parent  Required. The parent, which owns this collection of
  /// pipelines. Format must
  ///  be projects/{project_id}/locations/{location_name}.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::DeliveryPipeline,google/cloud/deploy/v1/cloud_deploy.proto#L333}
  ///
  /// [google.cloud.deploy.v1.DeliveryPipeline]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L333}
  /// [google.cloud.deploy.v1.ListDeliveryPipelinesRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L613}
  ///
  StreamRange<google::cloud::deploy::v1::DeliveryPipeline>
  ListDeliveryPipelines(std::string const& parent, Options opts = {});

  ///
  /// Lists DeliveryPipelines in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::ListDeliveryPipelinesRequest,google/cloud/deploy/v1/cloud_deploy.proto#L613}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::DeliveryPipeline,google/cloud/deploy/v1/cloud_deploy.proto#L333}
  ///
  /// [google.cloud.deploy.v1.DeliveryPipeline]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L333}
  /// [google.cloud.deploy.v1.ListDeliveryPipelinesRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L613}
  ///
  StreamRange<google::cloud::deploy::v1::DeliveryPipeline>
  ListDeliveryPipelines(
      google::cloud::deploy::v1::ListDeliveryPipelinesRequest request,
      Options opts = {});

  ///
  /// Gets details of a single DeliveryPipeline.
  ///
  /// @param name  Required. Name of the `DeliveryPipeline`. Format must be
  ///  projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::DeliveryPipeline,google/cloud/deploy/v1/cloud_deploy.proto#L333}
  ///
  /// [google.cloud.deploy.v1.DeliveryPipeline]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L333}
  /// [google.cloud.deploy.v1.GetDeliveryPipelineRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L658}
  ///
  StatusOr<google::cloud::deploy::v1::DeliveryPipeline> GetDeliveryPipeline(
      std::string const& name, Options opts = {});

  ///
  /// Gets details of a single DeliveryPipeline.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::GetDeliveryPipelineRequest,google/cloud/deploy/v1/cloud_deploy.proto#L658}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::DeliveryPipeline,google/cloud/deploy/v1/cloud_deploy.proto#L333}
  ///
  /// [google.cloud.deploy.v1.DeliveryPipeline]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L333}
  /// [google.cloud.deploy.v1.GetDeliveryPipelineRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L658}
  ///
  StatusOr<google::cloud::deploy::v1::DeliveryPipeline> GetDeliveryPipeline(
      google::cloud::deploy::v1::GetDeliveryPipelineRequest const& request,
      Options opts = {});

  ///
  /// Creates a new DeliveryPipeline in a given project and location.
  ///
  /// @param parent  Required. The parent collection in which the
  /// `DeliveryPipeline` should be
  ///  created. Format should be
  ///  projects/{project_id}/locations/{location_name}.
  /// @param delivery_pipeline  Required. The `DeliveryPipeline` to create.
  /// @param delivery_pipeline_id  Required. ID of the `DeliveryPipeline`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::DeliveryPipeline,google/cloud/deploy/v1/cloud_deploy.proto#L333}
  ///
  /// [google.cloud.deploy.v1.CreateDeliveryPipelineRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L670}
  /// [google.cloud.deploy.v1.DeliveryPipeline]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L333}
  ///
  future<StatusOr<google::cloud::deploy::v1::DeliveryPipeline>>
  CreateDeliveryPipeline(
      std::string const& parent,
      google::cloud::deploy::v1::DeliveryPipeline const& delivery_pipeline,
      std::string const& delivery_pipeline_id, Options opts = {});

  ///
  /// Creates a new DeliveryPipeline in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::CreateDeliveryPipelineRequest,google/cloud/deploy/v1/cloud_deploy.proto#L670}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::DeliveryPipeline,google/cloud/deploy/v1/cloud_deploy.proto#L333}
  ///
  /// [google.cloud.deploy.v1.CreateDeliveryPipelineRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L670}
  /// [google.cloud.deploy.v1.DeliveryPipeline]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L333}
  ///
  future<StatusOr<google::cloud::deploy::v1::DeliveryPipeline>>
  CreateDeliveryPipeline(
      google::cloud::deploy::v1::CreateDeliveryPipelineRequest const& request,
      Options opts = {});

  ///
  /// Updates the parameters of a single DeliveryPipeline.
  ///
  /// @param delivery_pipeline  Required. The `DeliveryPipeline` to update.
  /// @param update_mask  Required. Field mask is used to specify the fields to
  /// be overwritten in the
  ///  `DeliveryPipeline` resource by the update.
  ///  The fields specified in the update_mask are relative to the resource, not
  ///  the full request. A field will be overwritten if it is in the mask. If
  ///  the user does not provide a mask then all fields will be overwritten.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::DeliveryPipeline,google/cloud/deploy/v1/cloud_deploy.proto#L333}
  ///
  /// [google.cloud.deploy.v1.DeliveryPipeline]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L333}
  /// [google.cloud.deploy.v1.UpdateDeliveryPipelineRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L708}
  ///
  future<StatusOr<google::cloud::deploy::v1::DeliveryPipeline>>
  UpdateDeliveryPipeline(
      google::cloud::deploy::v1::DeliveryPipeline const& delivery_pipeline,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Updates the parameters of a single DeliveryPipeline.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::UpdateDeliveryPipelineRequest,google/cloud/deploy/v1/cloud_deploy.proto#L708}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::DeliveryPipeline,google/cloud/deploy/v1/cloud_deploy.proto#L333}
  ///
  /// [google.cloud.deploy.v1.DeliveryPipeline]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L333}
  /// [google.cloud.deploy.v1.UpdateDeliveryPipelineRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L708}
  ///
  future<StatusOr<google::cloud::deploy::v1::DeliveryPipeline>>
  UpdateDeliveryPipeline(
      google::cloud::deploy::v1::UpdateDeliveryPipelineRequest const& request,
      Options opts = {});

  ///
  /// Deletes a single DeliveryPipeline.
  ///
  /// @param name  Required. The name of the `DeliveryPipeline` to delete.
  /// Format should be
  ///  projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::OperationMetadata,google/cloud/deploy/v1/cloud_deploy.proto#L2057}
  ///
  /// [google.cloud.deploy.v1.DeleteDeliveryPipelineRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L746}
  /// [google.cloud.deploy.v1.OperationMetadata]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2057}
  ///
  future<StatusOr<google::cloud::deploy::v1::OperationMetadata>>
  DeleteDeliveryPipeline(std::string const& name, Options opts = {});

  ///
  /// Deletes a single DeliveryPipeline.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::DeleteDeliveryPipelineRequest,google/cloud/deploy/v1/cloud_deploy.proto#L746}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::OperationMetadata,google/cloud/deploy/v1/cloud_deploy.proto#L2057}
  ///
  /// [google.cloud.deploy.v1.DeleteDeliveryPipelineRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L746}
  /// [google.cloud.deploy.v1.OperationMetadata]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2057}
  ///
  future<StatusOr<google::cloud::deploy::v1::OperationMetadata>>
  DeleteDeliveryPipeline(
      google::cloud::deploy::v1::DeleteDeliveryPipelineRequest const& request,
      Options opts = {});

  ///
  /// Lists Targets in a given project and location.
  ///
  /// @param parent  Required. The parent, which owns this collection of
  /// targets. Format must be
  ///  projects/{project_id}/locations/{location_name}.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::Target,google/cloud/deploy/v1/cloud_deploy.proto#L794}
  ///
  /// [google.cloud.deploy.v1.ListTargetsRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1019}
  /// [google.cloud.deploy.v1.Target]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L794}
  ///
  StreamRange<google::cloud::deploy::v1::Target> ListTargets(
      std::string const& parent, Options opts = {});

  ///
  /// Lists Targets in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::ListTargetsRequest,google/cloud/deploy/v1/cloud_deploy.proto#L1019}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::Target,google/cloud/deploy/v1/cloud_deploy.proto#L794}
  ///
  /// [google.cloud.deploy.v1.ListTargetsRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1019}
  /// [google.cloud.deploy.v1.Target]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L794}
  ///
  StreamRange<google::cloud::deploy::v1::Target> ListTargets(
      google::cloud::deploy::v1::ListTargetsRequest request, Options opts = {});

  ///
  /// Gets details of a single Target.
  ///
  /// @param name  Required. Name of the `Target`. Format must be
  ///  projects/{project_id}/locations/{location_name}/targets/{target_name}.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::Target,google/cloud/deploy/v1/cloud_deploy.proto#L794}
  ///
  /// [google.cloud.deploy.v1.GetTargetRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1065}
  /// [google.cloud.deploy.v1.Target]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L794}
  ///
  StatusOr<google::cloud::deploy::v1::Target> GetTarget(std::string const& name,
                                                        Options opts = {});

  ///
  /// Gets details of a single Target.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::GetTargetRequest,google/cloud/deploy/v1/cloud_deploy.proto#L1065}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::Target,google/cloud/deploy/v1/cloud_deploy.proto#L794}
  ///
  /// [google.cloud.deploy.v1.GetTargetRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1065}
  /// [google.cloud.deploy.v1.Target]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L794}
  ///
  StatusOr<google::cloud::deploy::v1::Target> GetTarget(
      google::cloud::deploy::v1::GetTargetRequest const& request,
      Options opts = {});

  ///
  /// Creates a new Target in a given project and location.
  ///
  /// @param parent  Required. The parent collection in which the `Target`
  /// should be created.
  ///  Format should be
  ///  projects/{project_id}/locations/{location_name}.
  /// @param target  Required. The `Target` to create.
  /// @param target_id  Required. ID of the `Target`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::Target,google/cloud/deploy/v1/cloud_deploy.proto#L794}
  ///
  /// [google.cloud.deploy.v1.CreateTargetRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1077}
  /// [google.cloud.deploy.v1.Target]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L794}
  ///
  future<StatusOr<google::cloud::deploy::v1::Target>> CreateTarget(
      std::string const& parent,
      google::cloud::deploy::v1::Target const& target,
      std::string const& target_id, Options opts = {});

  ///
  /// Creates a new Target in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::CreateTargetRequest,google/cloud/deploy/v1/cloud_deploy.proto#L1077}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::Target,google/cloud/deploy/v1/cloud_deploy.proto#L794}
  ///
  /// [google.cloud.deploy.v1.CreateTargetRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1077}
  /// [google.cloud.deploy.v1.Target]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L794}
  ///
  future<StatusOr<google::cloud::deploy::v1::Target>> CreateTarget(
      google::cloud::deploy::v1::CreateTargetRequest const& request,
      Options opts = {});

  ///
  /// Updates the parameters of a single Target.
  ///
  /// @param target  Required. The `Target` to update.
  /// @param update_mask  Required. Field mask is used to specify the fields to
  /// be overwritten in the
  ///  Target resource by the update.
  ///  The fields specified in the update_mask are relative to the resource, not
  ///  the full request. A field will be overwritten if it is in the mask. If
  ///  the user does not provide a mask then all fields will be overwritten.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::Target,google/cloud/deploy/v1/cloud_deploy.proto#L794}
  ///
  /// [google.cloud.deploy.v1.Target]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L794}
  /// [google.cloud.deploy.v1.UpdateTargetRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1115}
  ///
  future<StatusOr<google::cloud::deploy::v1::Target>> UpdateTarget(
      google::cloud::deploy::v1::Target const& target,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Updates the parameters of a single Target.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::UpdateTargetRequest,google/cloud/deploy/v1/cloud_deploy.proto#L1115}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::Target,google/cloud/deploy/v1/cloud_deploy.proto#L794}
  ///
  /// [google.cloud.deploy.v1.Target]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L794}
  /// [google.cloud.deploy.v1.UpdateTargetRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1115}
  ///
  future<StatusOr<google::cloud::deploy::v1::Target>> UpdateTarget(
      google::cloud::deploy::v1::UpdateTargetRequest const& request,
      Options opts = {});

  ///
  /// Deletes a single Target.
  ///
  /// @param name  Required. The name of the `Target` to delete. Format should
  /// be
  ///  projects/{project_id}/locations/{location_name}/targets/{target_name}.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::OperationMetadata,google/cloud/deploy/v1/cloud_deploy.proto#L2057}
  ///
  /// [google.cloud.deploy.v1.DeleteTargetRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1152}
  /// [google.cloud.deploy.v1.OperationMetadata]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2057}
  ///
  future<StatusOr<google::cloud::deploy::v1::OperationMetadata>> DeleteTarget(
      std::string const& name, Options opts = {});

  ///
  /// Deletes a single Target.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::DeleteTargetRequest,google/cloud/deploy/v1/cloud_deploy.proto#L1152}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::OperationMetadata,google/cloud/deploy/v1/cloud_deploy.proto#L2057}
  ///
  /// [google.cloud.deploy.v1.DeleteTargetRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1152}
  /// [google.cloud.deploy.v1.OperationMetadata]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2057}
  ///
  future<StatusOr<google::cloud::deploy::v1::OperationMetadata>> DeleteTarget(
      google::cloud::deploy::v1::DeleteTargetRequest const& request,
      Options opts = {});

  ///
  /// Lists Releases in a given project and location.
  ///
  /// @param parent  Required. The `DeliveryPipeline` which owns this collection
  /// of `Release`
  ///  objects.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::Release,google/cloud/deploy/v1/cloud_deploy.proto#L1195}
  ///
  /// [google.cloud.deploy.v1.ListReleasesRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1487}
  /// [google.cloud.deploy.v1.Release]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1195}
  ///
  StreamRange<google::cloud::deploy::v1::Release> ListReleases(
      std::string const& parent, Options opts = {});

  ///
  /// Lists Releases in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::ListReleasesRequest,google/cloud/deploy/v1/cloud_deploy.proto#L1487}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::Release,google/cloud/deploy/v1/cloud_deploy.proto#L1195}
  ///
  /// [google.cloud.deploy.v1.ListReleasesRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1487}
  /// [google.cloud.deploy.v1.Release]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1195}
  ///
  StreamRange<google::cloud::deploy::v1::Release> ListReleases(
      google::cloud::deploy::v1::ListReleasesRequest request,
      Options opts = {});

  ///
  /// Gets details of a single Release.
  ///
  /// @param name  Required. Name of the `Release`. Format must be
  ///  projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::Release,google/cloud/deploy/v1/cloud_deploy.proto#L1195}
  ///
  /// [google.cloud.deploy.v1.GetReleaseRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1533}
  /// [google.cloud.deploy.v1.Release]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1195}
  ///
  StatusOr<google::cloud::deploy::v1::Release> GetRelease(
      std::string const& name, Options opts = {});

  ///
  /// Gets details of a single Release.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::GetReleaseRequest,google/cloud/deploy/v1/cloud_deploy.proto#L1533}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::Release,google/cloud/deploy/v1/cloud_deploy.proto#L1195}
  ///
  /// [google.cloud.deploy.v1.GetReleaseRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1533}
  /// [google.cloud.deploy.v1.Release]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1195}
  ///
  StatusOr<google::cloud::deploy::v1::Release> GetRelease(
      google::cloud::deploy::v1::GetReleaseRequest const& request,
      Options opts = {});

  ///
  /// Creates a new Release in a given project and location.
  ///
  /// @param parent  Required. The parent collection in which the `Release`
  /// should be created.
  ///  Format should be
  ///  projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}.
  /// @param release  Required. The `Release` to create.
  /// @param release_id  Required. ID of the `Release`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::Release,google/cloud/deploy/v1/cloud_deploy.proto#L1195}
  ///
  /// [google.cloud.deploy.v1.CreateReleaseRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1545}
  /// [google.cloud.deploy.v1.Release]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1195}
  ///
  future<StatusOr<google::cloud::deploy::v1::Release>> CreateRelease(
      std::string const& parent,
      google::cloud::deploy::v1::Release const& release,
      std::string const& release_id, Options opts = {});

  ///
  /// Creates a new Release in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::CreateReleaseRequest,google/cloud/deploy/v1/cloud_deploy.proto#L1545}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::Release,google/cloud/deploy/v1/cloud_deploy.proto#L1195}
  ///
  /// [google.cloud.deploy.v1.CreateReleaseRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1545}
  /// [google.cloud.deploy.v1.Release]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1195}
  ///
  future<StatusOr<google::cloud::deploy::v1::Release>> CreateRelease(
      google::cloud::deploy::v1::CreateReleaseRequest const& request,
      Options opts = {});

  ///
  /// Abandons a Release in the Delivery Pipeline.
  ///
  /// @param name  Required. Name of the Release. Format is
  ///  projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/
  ///  releases/{release}.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::AbandonReleaseResponse,google/cloud/deploy/v1/cloud_deploy.proto#L2198}
  ///
  /// [google.cloud.deploy.v1.AbandonReleaseRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2185}
  /// [google.cloud.deploy.v1.AbandonReleaseResponse]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2198}
  ///
  StatusOr<google::cloud::deploy::v1::AbandonReleaseResponse> AbandonRelease(
      std::string const& name, Options opts = {});

  ///
  /// Abandons a Release in the Delivery Pipeline.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::AbandonReleaseRequest,google/cloud/deploy/v1/cloud_deploy.proto#L2185}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::AbandonReleaseResponse,google/cloud/deploy/v1/cloud_deploy.proto#L2198}
  ///
  /// [google.cloud.deploy.v1.AbandonReleaseRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2185}
  /// [google.cloud.deploy.v1.AbandonReleaseResponse]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2198}
  ///
  StatusOr<google::cloud::deploy::v1::AbandonReleaseResponse> AbandonRelease(
      google::cloud::deploy::v1::AbandonReleaseRequest const& request,
      Options opts = {});

  ///
  /// Approves a Rollout.
  ///
  /// @param name  Required. Name of the Rollout. Format is
  ///  projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/
  ///  releases/{release}/rollouts/{rollout}.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::ApproveRolloutResponse,google/cloud/deploy/v1/cloud_deploy.proto#L2103}
  ///
  /// [google.cloud.deploy.v1.ApproveRolloutRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2087}
  /// [google.cloud.deploy.v1.ApproveRolloutResponse]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2103}
  ///
  StatusOr<google::cloud::deploy::v1::ApproveRolloutResponse> ApproveRollout(
      std::string const& name, Options opts = {});

  ///
  /// Approves a Rollout.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::ApproveRolloutRequest,google/cloud/deploy/v1/cloud_deploy.proto#L2087}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::ApproveRolloutResponse,google/cloud/deploy/v1/cloud_deploy.proto#L2103}
  ///
  /// [google.cloud.deploy.v1.ApproveRolloutRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2087}
  /// [google.cloud.deploy.v1.ApproveRolloutResponse]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2103}
  ///
  StatusOr<google::cloud::deploy::v1::ApproveRolloutResponse> ApproveRollout(
      google::cloud::deploy::v1::ApproveRolloutRequest const& request,
      Options opts = {});

  ///
  /// Advances a Rollout in a given project and location.
  ///
  /// @param name  Required. Name of the Rollout. Format is
  ///  projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/
  ///  releases/{release}/rollouts/{rollout}.
  /// @param phase_id  Required. The phase ID to advance the `Rollout` to.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::AdvanceRolloutResponse,google/cloud/deploy/v1/cloud_deploy.proto#L2122}
  ///
  /// [google.cloud.deploy.v1.AdvanceRolloutRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2106}
  /// [google.cloud.deploy.v1.AdvanceRolloutResponse]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2122}
  ///
  StatusOr<google::cloud::deploy::v1::AdvanceRolloutResponse> AdvanceRollout(
      std::string const& name, std::string const& phase_id, Options opts = {});

  ///
  /// Advances a Rollout in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::AdvanceRolloutRequest,google/cloud/deploy/v1/cloud_deploy.proto#L2106}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::AdvanceRolloutResponse,google/cloud/deploy/v1/cloud_deploy.proto#L2122}
  ///
  /// [google.cloud.deploy.v1.AdvanceRolloutRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2106}
  /// [google.cloud.deploy.v1.AdvanceRolloutResponse]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2122}
  ///
  StatusOr<google::cloud::deploy::v1::AdvanceRolloutResponse> AdvanceRollout(
      google::cloud::deploy::v1::AdvanceRolloutRequest const& request,
      Options opts = {});

  ///
  /// Cancels a Rollout in a given project and location.
  ///
  /// @param name  Required. Name of the Rollout. Format is
  ///  projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/
  ///  releases/{release}/rollouts/{rollout}.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::CancelRolloutResponse,google/cloud/deploy/v1/cloud_deploy.proto#L2138}
  ///
  /// [google.cloud.deploy.v1.CancelRolloutRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2125}
  /// [google.cloud.deploy.v1.CancelRolloutResponse]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2138}
  ///
  StatusOr<google::cloud::deploy::v1::CancelRolloutResponse> CancelRollout(
      std::string const& name, Options opts = {});

  ///
  /// Cancels a Rollout in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::CancelRolloutRequest,google/cloud/deploy/v1/cloud_deploy.proto#L2125}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::CancelRolloutResponse,google/cloud/deploy/v1/cloud_deploy.proto#L2138}
  ///
  /// [google.cloud.deploy.v1.CancelRolloutRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2125}
  /// [google.cloud.deploy.v1.CancelRolloutResponse]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2138}
  ///
  StatusOr<google::cloud::deploy::v1::CancelRolloutResponse> CancelRollout(
      google::cloud::deploy::v1::CancelRolloutRequest const& request,
      Options opts = {});

  ///
  /// Lists Rollouts in a given project and location.
  ///
  /// @param parent  Required. The `Release` which owns this collection of
  /// `Rollout` objects.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::Rollout,google/cloud/deploy/v1/cloud_deploy.proto#L1585}
  ///
  /// [google.cloud.deploy.v1.ListRolloutsRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1958}
  /// [google.cloud.deploy.v1.Rollout]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1585}
  ///
  StreamRange<google::cloud::deploy::v1::Rollout> ListRollouts(
      std::string const& parent, Options opts = {});

  ///
  /// Lists Rollouts in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::ListRolloutsRequest,google/cloud/deploy/v1/cloud_deploy.proto#L1958}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::Rollout,google/cloud/deploy/v1/cloud_deploy.proto#L1585}
  ///
  /// [google.cloud.deploy.v1.ListRolloutsRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1958}
  /// [google.cloud.deploy.v1.Rollout]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1585}
  ///
  StreamRange<google::cloud::deploy::v1::Rollout> ListRollouts(
      google::cloud::deploy::v1::ListRolloutsRequest request,
      Options opts = {});

  ///
  /// Gets details of a single Rollout.
  ///
  /// @param name  Required. Name of the `Rollout`. Format must be
  ///  projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}/rollouts/{rollout_name}.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::Rollout,google/cloud/deploy/v1/cloud_deploy.proto#L1585}
  ///
  /// [google.cloud.deploy.v1.GetRolloutRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2003}
  /// [google.cloud.deploy.v1.Rollout]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1585}
  ///
  StatusOr<google::cloud::deploy::v1::Rollout> GetRollout(
      std::string const& name, Options opts = {});

  ///
  /// Gets details of a single Rollout.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::GetRolloutRequest,google/cloud/deploy/v1/cloud_deploy.proto#L2003}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::Rollout,google/cloud/deploy/v1/cloud_deploy.proto#L1585}
  ///
  /// [google.cloud.deploy.v1.GetRolloutRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2003}
  /// [google.cloud.deploy.v1.Rollout]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1585}
  ///
  StatusOr<google::cloud::deploy::v1::Rollout> GetRollout(
      google::cloud::deploy::v1::GetRolloutRequest const& request,
      Options opts = {});

  ///
  /// Creates a new Rollout in a given project and location.
  ///
  /// @param parent  Required. The parent collection in which the `Rollout`
  /// should be created.
  ///  Format should be
  ///  projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}.
  /// @param rollout  Required. The `Rollout` to create.
  /// @param rollout_id  Required. ID of the `Rollout`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::Rollout,google/cloud/deploy/v1/cloud_deploy.proto#L1585}
  ///
  /// [google.cloud.deploy.v1.CreateRolloutRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2015}
  /// [google.cloud.deploy.v1.Rollout]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1585}
  ///
  future<StatusOr<google::cloud::deploy::v1::Rollout>> CreateRollout(
      std::string const& parent,
      google::cloud::deploy::v1::Rollout const& rollout,
      std::string const& rollout_id, Options opts = {});

  ///
  /// Creates a new Rollout in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::CreateRolloutRequest,google/cloud/deploy/v1/cloud_deploy.proto#L2015}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::Rollout,google/cloud/deploy/v1/cloud_deploy.proto#L1585}
  ///
  /// [google.cloud.deploy.v1.CreateRolloutRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2015}
  /// [google.cloud.deploy.v1.Rollout]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L1585}
  ///
  future<StatusOr<google::cloud::deploy::v1::Rollout>> CreateRollout(
      google::cloud::deploy::v1::CreateRolloutRequest const& request,
      Options opts = {});

  ///
  /// Ignores the specified Job in a Rollout.
  ///
  /// @param rollout  Required. Name of the Rollout. Format is
  ///  projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/
  ///  releases/{release}/rollouts/{rollout}.
  /// @param phase_id  Required. The phase ID the Job to ignore belongs to.
  /// @param job_id  Required. The job ID for the Job to ignore.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::IgnoreJobResponse,google/cloud/deploy/v1/cloud_deploy.proto#L2160}
  ///
  /// [google.cloud.deploy.v1.IgnoreJobRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2141}
  /// [google.cloud.deploy.v1.IgnoreJobResponse]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2160}
  ///
  StatusOr<google::cloud::deploy::v1::IgnoreJobResponse> IgnoreJob(
      std::string const& rollout, std::string const& phase_id,
      std::string const& job_id, Options opts = {});

  ///
  /// Ignores the specified Job in a Rollout.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::IgnoreJobRequest,google/cloud/deploy/v1/cloud_deploy.proto#L2141}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::IgnoreJobResponse,google/cloud/deploy/v1/cloud_deploy.proto#L2160}
  ///
  /// [google.cloud.deploy.v1.IgnoreJobRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2141}
  /// [google.cloud.deploy.v1.IgnoreJobResponse]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2160}
  ///
  StatusOr<google::cloud::deploy::v1::IgnoreJobResponse> IgnoreJob(
      google::cloud::deploy::v1::IgnoreJobRequest const& request,
      Options opts = {});

  ///
  /// Retries the specified Job in a Rollout.
  ///
  /// @param rollout  Required. Name of the Rollout. Format is
  ///  projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/
  ///  releases/{release}/rollouts/{rollout}.
  /// @param phase_id  Required. The phase ID the Job to retry belongs to.
  /// @param job_id  Required. The job ID for the Job to retry.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::RetryJobResponse,google/cloud/deploy/v1/cloud_deploy.proto#L2182}
  ///
  /// [google.cloud.deploy.v1.RetryJobRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2163}
  /// [google.cloud.deploy.v1.RetryJobResponse]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2182}
  ///
  StatusOr<google::cloud::deploy::v1::RetryJobResponse> RetryJob(
      std::string const& rollout, std::string const& phase_id,
      std::string const& job_id, Options opts = {});

  ///
  /// Retries the specified Job in a Rollout.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::RetryJobRequest,google/cloud/deploy/v1/cloud_deploy.proto#L2163}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::RetryJobResponse,google/cloud/deploy/v1/cloud_deploy.proto#L2182}
  ///
  /// [google.cloud.deploy.v1.RetryJobRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2163}
  /// [google.cloud.deploy.v1.RetryJobResponse]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2182}
  ///
  StatusOr<google::cloud::deploy::v1::RetryJobResponse> RetryJob(
      google::cloud::deploy::v1::RetryJobRequest const& request,
      Options opts = {});

  ///
  /// Lists JobRuns in a given project and location.
  ///
  /// @param parent  Required. The `Rollout` which owns this collection of
  /// `JobRun` objects.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::JobRun,google/cloud/deploy/v1/cloud_deploy.proto#L2203}
  ///
  /// [google.cloud.deploy.v1.JobRun]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2203}
  /// [google.cloud.deploy.v1.ListJobRunsRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2414}
  ///
  StreamRange<google::cloud::deploy::v1::JobRun> ListJobRuns(
      std::string const& parent, Options opts = {});

  ///
  /// Lists JobRuns in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::ListJobRunsRequest,google/cloud/deploy/v1/cloud_deploy.proto#L2414}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::JobRun,google/cloud/deploy/v1/cloud_deploy.proto#L2203}
  ///
  /// [google.cloud.deploy.v1.JobRun]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2203}
  /// [google.cloud.deploy.v1.ListJobRunsRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2414}
  ///
  StreamRange<google::cloud::deploy::v1::JobRun> ListJobRuns(
      google::cloud::deploy::v1::ListJobRunsRequest request, Options opts = {});

  ///
  /// Gets details of a single JobRun.
  ///
  /// @param name  Required. Name of the `JobRun`. Format must be
  ///  projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}/rollouts/{rollout_name}/jobRuns/{job_run_name}.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::JobRun,google/cloud/deploy/v1/cloud_deploy.proto#L2203}
  ///
  /// [google.cloud.deploy.v1.GetJobRunRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2459}
  /// [google.cloud.deploy.v1.JobRun]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2203}
  ///
  StatusOr<google::cloud::deploy::v1::JobRun> GetJobRun(std::string const& name,
                                                        Options opts = {});

  ///
  /// Gets details of a single JobRun.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::GetJobRunRequest,google/cloud/deploy/v1/cloud_deploy.proto#L2459}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::JobRun,google/cloud/deploy/v1/cloud_deploy.proto#L2203}
  ///
  /// [google.cloud.deploy.v1.GetJobRunRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2459}
  /// [google.cloud.deploy.v1.JobRun]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2203}
  ///
  StatusOr<google::cloud::deploy::v1::JobRun> GetJobRun(
      google::cloud::deploy::v1::GetJobRunRequest const& request,
      Options opts = {});

  ///
  /// Terminates a Job Run in a given project and location.
  ///
  /// @param name  Required. Name of the `JobRun`. Format must be
  ///  projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/
  ///  releases/{release}/rollouts/{rollout}/jobRuns/{jobRun}.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::TerminateJobRunResponse,google/cloud/deploy/v1/cloud_deploy.proto#L2484}
  ///
  /// [google.cloud.deploy.v1.TerminateJobRunRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2471}
  /// [google.cloud.deploy.v1.TerminateJobRunResponse]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2484}
  ///
  StatusOr<google::cloud::deploy::v1::TerminateJobRunResponse> TerminateJobRun(
      std::string const& name, Options opts = {});

  ///
  /// Terminates a Job Run in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::TerminateJobRunRequest,google/cloud/deploy/v1/cloud_deploy.proto#L2471}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::TerminateJobRunResponse,google/cloud/deploy/v1/cloud_deploy.proto#L2484}
  ///
  /// [google.cloud.deploy.v1.TerminateJobRunRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2471}
  /// [google.cloud.deploy.v1.TerminateJobRunResponse]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2484}
  ///
  StatusOr<google::cloud::deploy::v1::TerminateJobRunResponse> TerminateJobRun(
      google::cloud::deploy::v1::TerminateJobRunRequest const& request,
      Options opts = {});

  ///
  /// Gets the configuration for a location.
  ///
  /// @param name  Required. Name of requested configuration.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::Config,google/cloud/deploy/v1/cloud_deploy.proto#L2487}
  ///
  /// [google.cloud.deploy.v1.Config]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2487}
  /// [google.cloud.deploy.v1.GetConfigRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2520}
  ///
  StatusOr<google::cloud::deploy::v1::Config> GetConfig(std::string const& name,
                                                        Options opts = {});

  ///
  /// Gets the configuration for a location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::deploy::v1::GetConfigRequest,google/cloud/deploy/v1/cloud_deploy.proto#L2520}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::deploy::v1::Config,google/cloud/deploy/v1/cloud_deploy.proto#L2487}
  ///
  /// [google.cloud.deploy.v1.Config]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2487}
  /// [google.cloud.deploy.v1.GetConfigRequest]:
  /// @googleapis_reference_link{google/cloud/deploy/v1/cloud_deploy.proto#L2520}
  ///
  StatusOr<google::cloud::deploy::v1::Config> GetConfig(
      google::cloud::deploy::v1::GetConfigRequest const& request,
      Options opts = {});

 private:
  std::shared_ptr<CloudDeployConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace deploy_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_DEPLOY_V1_CLOUD_DEPLOY_CLIENT_H
