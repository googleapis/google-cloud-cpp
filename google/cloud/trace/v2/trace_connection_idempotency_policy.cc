// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/devtools/cloudtrace/v2/tracing.proto

#include "google/cloud/trace/v2/trace_connection_idempotency_policy.h"
#include <memory>

namespace google {
namespace cloud {
namespace trace_v2 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

using ::google::cloud::Idempotency;

TraceServiceConnectionIdempotencyPolicy::
    ~TraceServiceConnectionIdempotencyPolicy() = default;

std::unique_ptr<TraceServiceConnectionIdempotencyPolicy>
TraceServiceConnectionIdempotencyPolicy::clone() const {
  return std::make_unique<TraceServiceConnectionIdempotencyPolicy>(*this);
}

Idempotency TraceServiceConnectionIdempotencyPolicy::BatchWriteSpans(
    google::devtools::cloudtrace::v2::BatchWriteSpansRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency TraceServiceConnectionIdempotencyPolicy::CreateSpan(
    google::devtools::cloudtrace::v2::Span const&) {
  return Idempotency::kNonIdempotent;
}

std::unique_ptr<TraceServiceConnectionIdempotencyPolicy>
MakeDefaultTraceServiceConnectionIdempotencyPolicy() {
  return std::make_unique<TraceServiceConnectionIdempotencyPolicy>();
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace trace_v2
}  // namespace cloud
}  // namespace google
