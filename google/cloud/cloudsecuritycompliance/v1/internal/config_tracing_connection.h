// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/cloudsecuritycompliance/v1/config.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_CLOUDSECURITYCOMPLIANCE_V1_INTERNAL_CONFIG_TRACING_CONNECTION_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_CLOUDSECURITYCOMPLIANCE_V1_INTERNAL_CONFIG_TRACING_CONNECTION_H

#include "google/cloud/cloudsecuritycompliance/v1/config_connection.h"
#include "google/cloud/version.h"
#include <memory>

namespace google {
namespace cloud {
namespace cloudsecuritycompliance_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

#ifdef GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

class ConfigTracingConnection
    : public cloudsecuritycompliance_v1::ConfigConnection {
 public:
  ~ConfigTracingConnection() override = default;

  explicit ConfigTracingConnection(
      std::shared_ptr<cloudsecuritycompliance_v1::ConfigConnection> child);

  Options options() override { return child_->options(); }

  StreamRange<google::cloud::cloudsecuritycompliance::v1::Framework>
  ListFrameworks(
      google::cloud::cloudsecuritycompliance::v1::ListFrameworksRequest request)
      override;

  StatusOr<google::cloud::cloudsecuritycompliance::v1::Framework> GetFramework(
      google::cloud::cloudsecuritycompliance::v1::GetFrameworkRequest const&
          request) override;

  StatusOr<google::cloud::cloudsecuritycompliance::v1::Framework>
  CreateFramework(
      google::cloud::cloudsecuritycompliance::v1::CreateFrameworkRequest const&
          request) override;

  StatusOr<google::cloud::cloudsecuritycompliance::v1::Framework>
  UpdateFramework(
      google::cloud::cloudsecuritycompliance::v1::UpdateFrameworkRequest const&
          request) override;

  Status DeleteFramework(
      google::cloud::cloudsecuritycompliance::v1::DeleteFrameworkRequest const&
          request) override;

  StreamRange<google::cloud::cloudsecuritycompliance::v1::CloudControl>
  ListCloudControls(
      google::cloud::cloudsecuritycompliance::v1::ListCloudControlsRequest
          request) override;

  StatusOr<google::cloud::cloudsecuritycompliance::v1::CloudControl>
  GetCloudControl(
      google::cloud::cloudsecuritycompliance::v1::GetCloudControlRequest const&
          request) override;

  StatusOr<google::cloud::cloudsecuritycompliance::v1::CloudControl>
  CreateCloudControl(google::cloud::cloudsecuritycompliance::v1::
                         CreateCloudControlRequest const& request) override;

  StatusOr<google::cloud::cloudsecuritycompliance::v1::CloudControl>
  UpdateCloudControl(google::cloud::cloudsecuritycompliance::v1::
                         UpdateCloudControlRequest const& request) override;

  Status DeleteCloudControl(
      google::cloud::cloudsecuritycompliance::v1::
          DeleteCloudControlRequest const& request) override;

  StreamRange<google::cloud::location::Location> ListLocations(
      google::cloud::location::ListLocationsRequest request) override;

  StatusOr<google::cloud::location::Location> GetLocation(
      google::cloud::location::GetLocationRequest const& request) override;

  StreamRange<google::longrunning::Operation> ListOperations(
      google::longrunning::ListOperationsRequest request) override;

  StatusOr<google::longrunning::Operation> GetOperation(
      google::longrunning::GetOperationRequest const& request) override;

  Status DeleteOperation(
      google::longrunning::DeleteOperationRequest const& request) override;

  Status CancelOperation(
      google::longrunning::CancelOperationRequest const& request) override;

 private:
  std::shared_ptr<cloudsecuritycompliance_v1::ConfigConnection> child_;
};

#endif  // GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

/**
 * Conditionally applies the tracing decorator to the given connection.
 *
 * The connection is only decorated if tracing is enabled (as determined by the
 * connection's options).
 */
std::shared_ptr<cloudsecuritycompliance_v1::ConfigConnection>
MakeConfigTracingConnection(
    std::shared_ptr<cloudsecuritycompliance_v1::ConfigConnection> conn);

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace cloudsecuritycompliance_v1_internal
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_CLOUDSECURITYCOMPLIANCE_V1_INTERNAL_CONFIG_TRACING_CONNECTION_H
