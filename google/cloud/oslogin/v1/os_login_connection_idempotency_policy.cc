// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/oslogin/v1/oslogin.proto

#include "google/cloud/oslogin/v1/os_login_connection_idempotency_policy.h"
#include <memory>

namespace google {
namespace cloud {
namespace oslogin_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

using ::google::cloud::Idempotency;

OsLoginServiceConnectionIdempotencyPolicy::
    ~OsLoginServiceConnectionIdempotencyPolicy() = default;

std::unique_ptr<OsLoginServiceConnectionIdempotencyPolicy>
OsLoginServiceConnectionIdempotencyPolicy::clone() const {
  return std::make_unique<OsLoginServiceConnectionIdempotencyPolicy>(*this);
}

Idempotency OsLoginServiceConnectionIdempotencyPolicy::CreateSshPublicKey(
    google::cloud::oslogin::v1::CreateSshPublicKeyRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency OsLoginServiceConnectionIdempotencyPolicy::DeletePosixAccount(
    google::cloud::oslogin::v1::DeletePosixAccountRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency OsLoginServiceConnectionIdempotencyPolicy::DeleteSshPublicKey(
    google::cloud::oslogin::v1::DeleteSshPublicKeyRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency OsLoginServiceConnectionIdempotencyPolicy::GetLoginProfile(
    google::cloud::oslogin::v1::GetLoginProfileRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency OsLoginServiceConnectionIdempotencyPolicy::GetSshPublicKey(
    google::cloud::oslogin::v1::GetSshPublicKeyRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency OsLoginServiceConnectionIdempotencyPolicy::ImportSshPublicKey(
    google::cloud::oslogin::v1::ImportSshPublicKeyRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency OsLoginServiceConnectionIdempotencyPolicy::UpdateSshPublicKey(
    google::cloud::oslogin::v1::UpdateSshPublicKeyRequest const&) {
  return Idempotency::kNonIdempotent;
}

std::unique_ptr<OsLoginServiceConnectionIdempotencyPolicy>
MakeDefaultOsLoginServiceConnectionIdempotencyPolicy() {
  return std::make_unique<OsLoginServiceConnectionIdempotencyPolicy>();
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace oslogin_v1
}  // namespace cloud
}  // namespace google
