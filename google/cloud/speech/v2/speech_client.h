// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/speech/v2/cloud_speech.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_SPEECH_V2_SPEECH_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_SPEECH_V2_SPEECH_CLIENT_H

#include "google/cloud/speech/v2/speech_connection.h"
#include "google/cloud/experimental_tag.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <google/longrunning/operations.grpc.pb.h>
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace speech_v2 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Enables speech transcription and resource management.
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class SpeechClient {
 public:
  explicit SpeechClient(ExperimentalTag,
                        std::shared_ptr<SpeechConnection> connection,
                        Options opts = {});
  ~SpeechClient();

  ///@{
  // @name Copy and move support
  SpeechClient(SpeechClient const&) = default;
  SpeechClient& operator=(SpeechClient const&) = default;
  SpeechClient(SpeechClient&&) = default;
  SpeechClient& operator=(SpeechClient&&) = default;
  ///@}

  ///@{
  // @name Equality
  friend bool operator==(SpeechClient const& a, SpeechClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(SpeechClient const& a, SpeechClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Creates a [Recognizer][google.cloud.speech.v2.Recognizer].
  ///
  /// @param parent  Required. The project and location where this Recognizer
  /// will be created.
  ///  The expected format is `projects/{project}/locations/{location}`.
  /// @param recognizer  Required. The Recognizer to create.
  /// @param recognizer_id  The ID to use for the Recognizer, which will become
  /// the final component of
  ///  the Recognizer's resource name.
  ///  This value should be 4-63 characters, and valid characters
  ///  are /[a-z][0-9]-/.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::Recognizer,google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  /// [google.cloud.speech.v2.CreateRecognizerRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L323}
  /// [google.cloud.speech.v2.Recognizer]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  future<StatusOr<google::cloud::speech::v2::Recognizer>> CreateRecognizer(
      std::string const& parent,
      google::cloud::speech::v2::Recognizer const& recognizer,
      std::string const& recognizer_id, Options opts = {});

  ///
  /// Creates a [Recognizer][google.cloud.speech.v2.Recognizer].
  ///
  /// @param request
  /// @googleapis_link{google::cloud::speech::v2::CreateRecognizerRequest,google/cloud/speech/v2/cloud_speech.proto#L323}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::Recognizer,google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  /// [google.cloud.speech.v2.CreateRecognizerRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L323}
  /// [google.cloud.speech.v2.Recognizer]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  future<StatusOr<google::cloud::speech::v2::Recognizer>> CreateRecognizer(
      google::cloud::speech::v2::CreateRecognizerRequest const& request,
      Options opts = {});

  ///
  /// Lists Recognizers.
  ///
  /// @param parent  Required. The project and location of Recognizers to list.
  /// The expected
  ///  format is `projects/{project}/locations/{location}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::Recognizer,google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  /// [google.cloud.speech.v2.ListRecognizersRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L436}
  /// [google.cloud.speech.v2.Recognizer]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  StreamRange<google::cloud::speech::v2::Recognizer> ListRecognizers(
      std::string const& parent, Options opts = {});

  ///
  /// Lists Recognizers.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::speech::v2::ListRecognizersRequest,google/cloud/speech/v2/cloud_speech.proto#L436}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::Recognizer,google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  /// [google.cloud.speech.v2.ListRecognizersRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L436}
  /// [google.cloud.speech.v2.Recognizer]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  StreamRange<google::cloud::speech::v2::Recognizer> ListRecognizers(
      google::cloud::speech::v2::ListRecognizersRequest request,
      Options opts = {});

  ///
  /// Returns the requested
  /// [Recognizer][google.cloud.speech.v2.Recognizer]. Fails with
  /// [NOT_FOUND][google.rpc.Code.NOT_FOUND] if the requested recognizer doesn't
  /// exist.
  ///
  /// @param name  Required. The name of the Recognizer to retrieve. The
  /// expected format is
  ///  `projects/{project}/locations/{location}/recognizers/{recognizer}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::Recognizer,google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  /// [google.cloud.speech.v2.GetRecognizerRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L479}
  /// [google.cloud.speech.v2.Recognizer]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  StatusOr<google::cloud::speech::v2::Recognizer> GetRecognizer(
      std::string const& name, Options opts = {});

  ///
  /// Returns the requested
  /// [Recognizer][google.cloud.speech.v2.Recognizer]. Fails with
  /// [NOT_FOUND][google.rpc.Code.NOT_FOUND] if the requested recognizer doesn't
  /// exist.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::speech::v2::GetRecognizerRequest,google/cloud/speech/v2/cloud_speech.proto#L479}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::Recognizer,google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  /// [google.cloud.speech.v2.GetRecognizerRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L479}
  /// [google.cloud.speech.v2.Recognizer]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  StatusOr<google::cloud::speech::v2::Recognizer> GetRecognizer(
      google::cloud::speech::v2::GetRecognizerRequest const& request,
      Options opts = {});

  ///
  /// Updates the [Recognizer][google.cloud.speech.v2.Recognizer].
  ///
  /// @param recognizer  Required. The Recognizer to update.
  ///  The Recognizer's `name` field is used to identify the Recognizer to
  ///  update. Format:
  ///  `projects/{project}/locations/{location}/recognizers/{recognizer}`.
  /// @param update_mask  The list of fields to update. If empty, all
  /// non-default valued fields are
  ///  considered for update. Use `*` to update the entire Recognizer resource.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::Recognizer,google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  /// [google.cloud.speech.v2.UpdateRecognizerRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L492}
  /// [google.cloud.speech.v2.Recognizer]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  future<StatusOr<google::cloud::speech::v2::Recognizer>> UpdateRecognizer(
      google::cloud::speech::v2::Recognizer const& recognizer,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Updates the [Recognizer][google.cloud.speech.v2.Recognizer].
  ///
  /// @param request
  /// @googleapis_link{google::cloud::speech::v2::UpdateRecognizerRequest,google/cloud/speech/v2/cloud_speech.proto#L492}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::Recognizer,google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  /// [google.cloud.speech.v2.UpdateRecognizerRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L492}
  /// [google.cloud.speech.v2.Recognizer]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  future<StatusOr<google::cloud::speech::v2::Recognizer>> UpdateRecognizer(
      google::cloud::speech::v2::UpdateRecognizerRequest const& request,
      Options opts = {});

  ///
  /// Deletes the [Recognizer][google.cloud.speech.v2.Recognizer].
  ///
  /// @param name  Required. The name of the Recognizer to delete.
  ///  Format:
  ///  `projects/{project}/locations/{location}/recognizers/{recognizer}`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::Recognizer,google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  /// [google.cloud.speech.v2.DeleteRecognizerRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L510}
  /// [google.cloud.speech.v2.Recognizer]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  future<StatusOr<google::cloud::speech::v2::Recognizer>> DeleteRecognizer(
      std::string const& name, Options opts = {});

  ///
  /// Deletes the [Recognizer][google.cloud.speech.v2.Recognizer].
  ///
  /// @param request
  /// @googleapis_link{google::cloud::speech::v2::DeleteRecognizerRequest,google/cloud/speech/v2/cloud_speech.proto#L510}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::Recognizer,google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  /// [google.cloud.speech.v2.DeleteRecognizerRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L510}
  /// [google.cloud.speech.v2.Recognizer]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  future<StatusOr<google::cloud::speech::v2::Recognizer>> DeleteRecognizer(
      google::cloud::speech::v2::DeleteRecognizerRequest const& request,
      Options opts = {});

  ///
  /// Undeletes the [Recognizer][google.cloud.speech.v2.Recognizer].
  ///
  /// @param name  Required. The name of the Recognizer to undelete.
  ///  Format:
  ///  `projects/{project}/locations/{location}/recognizers/{recognizer}`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::Recognizer,google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  /// [google.cloud.speech.v2.UndeleteRecognizerRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L537}
  /// [google.cloud.speech.v2.Recognizer]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  future<StatusOr<google::cloud::speech::v2::Recognizer>> UndeleteRecognizer(
      std::string const& name, Options opts = {});

  ///
  /// Undeletes the [Recognizer][google.cloud.speech.v2.Recognizer].
  ///
  /// @param request
  /// @googleapis_link{google::cloud::speech::v2::UndeleteRecognizerRequest,google/cloud/speech/v2/cloud_speech.proto#L537}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::Recognizer,google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  /// [google.cloud.speech.v2.UndeleteRecognizerRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L537}
  /// [google.cloud.speech.v2.Recognizer]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L558}
  ///
  future<StatusOr<google::cloud::speech::v2::Recognizer>> UndeleteRecognizer(
      google::cloud::speech::v2::UndeleteRecognizerRequest const& request,
      Options opts = {});

  ///
  /// Performs synchronous Speech recognition: receive results after all audio
  /// has been sent and processed.
  ///
  /// @param recognizer  Required. The name of the Recognizer to use during
  /// recognition. The
  ///  expected format is
  ///  `projects/{project}/locations/{location}/recognizers/{recognizer}`.
  /// @param config  Features and audio metadata to use for the Automatic Speech
  /// Recognition.
  ///  This field in combination with the
  ///  [config_mask][google.cloud.speech.v2.RecognizeRequest.config_mask] field
  ///  can be used to override parts of the
  ///  [default_recognition_config][google.cloud.speech.v2.Recognizer.default_recognition_config]
  ///  of the Recognizer resource.
  /// @param config_mask  The list of fields in
  ///  [config][google.cloud.speech.v2.RecognizeRequest.config] that override
  ///  the values in the
  ///  [default_recognition_config][google.cloud.speech.v2.Recognizer.default_recognition_config]
  ///  of the recognizer during this recognition request. If no mask is
  ///  provided, all non-default valued fields in
  ///  [config][google.cloud.speech.v2.RecognizeRequest.config] override the
  ///  values in the recognizer for this recognition request. If a mask is
  ///  provided, only the fields listed in the mask override the config in the
  ///  recognizer for this recognition request. If a wildcard (`*`) is provided,
  ///  [config][google.cloud.speech.v2.RecognizeRequest.config] completely
  ///  overrides and replaces the config in the recognizer for this recognition
  ///  request.
  /// @param content  The audio data bytes encoded as specified in
  ///  [RecognitionConfig][google.cloud.speech.v2.RecognitionConfig]. As
  ///  with all bytes fields, proto buffers use a pure binary representation,
  ///  whereas JSON representations use base64.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::RecognizeResponse,google/cloud/speech/v2/cloud_speech.proto#L1028}
  ///
  /// [google.cloud.speech.v2.RecognizeRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L881}
  /// [google.cloud.speech.v2.RecognizeResponse]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1028}
  ///
  StatusOr<google::cloud::speech::v2::RecognizeResponse> Recognize(
      std::string const& recognizer,
      google::cloud::speech::v2::RecognitionConfig const& config,
      google::protobuf::FieldMask const& config_mask,
      std::string const& content, Options opts = {});

  ///
  /// Performs synchronous Speech recognition: receive results after all audio
  /// has been sent and processed.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::speech::v2::RecognizeRequest,google/cloud/speech/v2/cloud_speech.proto#L881}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::RecognizeResponse,google/cloud/speech/v2/cloud_speech.proto#L1028}
  ///
  /// [google.cloud.speech.v2.RecognizeRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L881}
  /// [google.cloud.speech.v2.RecognizeResponse]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1028}
  ///
  StatusOr<google::cloud::speech::v2::RecognizeResponse> Recognize(
      google::cloud::speech::v2::RecognizeRequest const& request,
      Options opts = {});

  ///
  /// Performs bidirectional streaming speech recognition: receive results while
  /// sending audio. This method is only available via the gRPC API (not REST).
  ///
  /// @note The presence of the `ExperimentalTag` means that this function is
  /// experimental. It is subject to change (including removal) without notice.
  ///
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return A bidirectional streaming interface with request (write) type:
  /// @googleapis_link{google::cloud::speech::v2::StreamingRecognizeRequest,google/cloud/speech/v2/cloud_speech.proto#L1112}
  /// and response (read) type:
  /// @googleapis_link{google::cloud::speech::v2::StreamingRecognizeResponse,google/cloud/speech/v2/cloud_speech.proto#L1335}
  ///
  /// [google.cloud.speech.v2.StreamingRecognizeRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1112}
  /// [google.cloud.speech.v2.StreamingRecognizeResponse]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1335}
  ///
  std::unique_ptr<::google::cloud::AsyncStreamingReadWriteRpc<
      google::cloud::speech::v2::StreamingRecognizeRequest,
      google::cloud::speech::v2::StreamingRecognizeResponse>>
  AsyncStreamingRecognize(ExperimentalTag, Options opts = {});

  ///
  /// Performs batch asynchronous speech recognition: send a request with N
  /// audio files and receive a long running operation that can be polled to see
  /// when the transcriptions are finished.
  ///
  /// @param recognizer  Required. Resource name of the recognizer to be used
  /// for ASR.
  /// @param config  Features and audio metadata to use for the Automatic Speech
  /// Recognition.
  ///  This field in combination with the
  ///  [config_mask][google.cloud.speech.v2.BatchRecognizeRequest.config_mask]
  ///  field can be used to override parts of the
  ///  [default_recognition_config][google.cloud.speech.v2.Recognizer.default_recognition_config]
  ///  of the Recognizer resource.
  /// @param config_mask  The list of fields in
  ///  [config][google.cloud.speech.v2.BatchRecognizeRequest.config] that
  ///  override the values in the
  ///  [default_recognition_config][google.cloud.speech.v2.Recognizer.default_recognition_config]
  ///  of the recognizer during this recognition request. If no mask is
  ///  provided, all given fields in
  ///  [config][google.cloud.speech.v2.BatchRecognizeRequest.config] override
  ///  the values in the recognizer for this recognition request. If a mask is
  ///  provided, only the fields listed in the mask override the config in the
  ///  recognizer for this recognition request. If a wildcard (`*`) is provided,
  ///  [config][google.cloud.speech.v2.BatchRecognizeRequest.config] completely
  ///  overrides and replaces the config in the recognizer for this recognition
  ///  request.
  /// @param files  Audio files with file metadata for ASR.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::BatchRecognizeResponse,google/cloud/speech/v2/cloud_speech.proto#L1179}
  ///
  /// [google.cloud.speech.v2.BatchRecognizeRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1140}
  /// [google.cloud.speech.v2.BatchRecognizeResponse]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1179}
  ///
  future<StatusOr<google::cloud::speech::v2::BatchRecognizeResponse>>
  BatchRecognize(
      std::string const& recognizer,
      google::cloud::speech::v2::RecognitionConfig const& config,
      google::protobuf::FieldMask const& config_mask,
      std::vector<google::cloud::speech::v2::BatchRecognizeFileMetadata> const&
          files,
      Options opts = {});

  ///
  /// Performs batch asynchronous speech recognition: send a request with N
  /// audio files and receive a long running operation that can be polled to see
  /// when the transcriptions are finished.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::speech::v2::BatchRecognizeRequest,google/cloud/speech/v2/cloud_speech.proto#L1140}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::BatchRecognizeResponse,google/cloud/speech/v2/cloud_speech.proto#L1179}
  ///
  /// [google.cloud.speech.v2.BatchRecognizeRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1140}
  /// [google.cloud.speech.v2.BatchRecognizeResponse]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1179}
  ///
  future<StatusOr<google::cloud::speech::v2::BatchRecognizeResponse>>
  BatchRecognize(
      google::cloud::speech::v2::BatchRecognizeRequest const& request,
      Options opts = {});

  ///
  /// Returns the requested [Config][google.cloud.speech.v2.Config].
  ///
  /// @param name  Required. The name of the config to retrieve. There is
  /// exactly one config
  ///  resource per project per location. The expected format is
  ///  `projects/{project}/locations/{location}/config`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::Config,google/cloud/speech/v2/cloud_speech.proto#L1384}
  ///
  /// [google.cloud.speech.v2.GetConfigRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1415}
  /// [google.cloud.speech.v2.Config]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1384}
  ///
  StatusOr<google::cloud::speech::v2::Config> GetConfig(std::string const& name,
                                                        Options opts = {});

  ///
  /// Returns the requested [Config][google.cloud.speech.v2.Config].
  ///
  /// @param request
  /// @googleapis_link{google::cloud::speech::v2::GetConfigRequest,google/cloud/speech/v2/cloud_speech.proto#L1415}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::Config,google/cloud/speech/v2/cloud_speech.proto#L1384}
  ///
  /// [google.cloud.speech.v2.GetConfigRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1415}
  /// [google.cloud.speech.v2.Config]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1384}
  ///
  StatusOr<google::cloud::speech::v2::Config> GetConfig(
      google::cloud::speech::v2::GetConfigRequest const& request,
      Options opts = {});

  ///
  /// Updates the [Config][google.cloud.speech.v2.Config].
  ///
  /// @param config  Required. The config to update.
  ///  The config's `name` field is used to identify the config to be updated.
  ///  The expected format is `projects/{project}/locations/{location}/config`.
  /// @param update_mask  The list of fields to be updated.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::Config,google/cloud/speech/v2/cloud_speech.proto#L1384}
  ///
  /// [google.cloud.speech.v2.UpdateConfigRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1427}
  /// [google.cloud.speech.v2.Config]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1384}
  ///
  StatusOr<google::cloud::speech::v2::Config> UpdateConfig(
      google::cloud::speech::v2::Config const& config,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Updates the [Config][google.cloud.speech.v2.Config].
  ///
  /// @param request
  /// @googleapis_link{google::cloud::speech::v2::UpdateConfigRequest,google/cloud/speech/v2/cloud_speech.proto#L1427}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::Config,google/cloud/speech/v2/cloud_speech.proto#L1384}
  ///
  /// [google.cloud.speech.v2.UpdateConfigRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1427}
  /// [google.cloud.speech.v2.Config]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1384}
  ///
  StatusOr<google::cloud::speech::v2::Config> UpdateConfig(
      google::cloud::speech::v2::UpdateConfigRequest const& request,
      Options opts = {});

  ///
  /// Creates a [CustomClass][google.cloud.speech.v2.CustomClass].
  ///
  /// @param parent  Required. The project and location where this CustomClass
  /// will be created.
  ///  The expected format is `projects/{project}/locations/{location}`.
  /// @param custom_class  Required. The CustomClass to create.
  /// @param custom_class_id  The ID to use for the CustomClass, which will
  /// become the final component of
  ///  the CustomClass's resource name.
  ///  This value should be 4-63 characters, and valid characters
  ///  are /[a-z][0-9]-/.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::CustomClass,google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  /// [google.cloud.speech.v2.CreateCustomClassRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1665}
  /// [google.cloud.speech.v2.CustomClass]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  future<StatusOr<google::cloud::speech::v2::CustomClass>> CreateCustomClass(
      std::string const& parent,
      google::cloud::speech::v2::CustomClass const& custom_class,
      std::string const& custom_class_id, Options opts = {});

  ///
  /// Creates a [CustomClass][google.cloud.speech.v2.CustomClass].
  ///
  /// @param request
  /// @googleapis_link{google::cloud::speech::v2::CreateCustomClassRequest,google/cloud/speech/v2/cloud_speech.proto#L1665}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::CustomClass,google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  /// [google.cloud.speech.v2.CreateCustomClassRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1665}
  /// [google.cloud.speech.v2.CustomClass]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  future<StatusOr<google::cloud::speech::v2::CustomClass>> CreateCustomClass(
      google::cloud::speech::v2::CreateCustomClassRequest const& request,
      Options opts = {});

  ///
  /// Lists CustomClasses.
  ///
  /// @param parent  Required. The project and location of CustomClass resources
  /// to list. The
  ///  expected format is `projects/{project}/locations/{location}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::CustomClass,google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  /// [google.cloud.speech.v2.ListCustomClassesRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1692}
  /// [google.cloud.speech.v2.CustomClass]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  StreamRange<google::cloud::speech::v2::CustomClass> ListCustomClasses(
      std::string const& parent, Options opts = {});

  ///
  /// Lists CustomClasses.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::speech::v2::ListCustomClassesRequest,google/cloud/speech/v2/cloud_speech.proto#L1692}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::CustomClass,google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  /// [google.cloud.speech.v2.ListCustomClassesRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1692}
  /// [google.cloud.speech.v2.CustomClass]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  StreamRange<google::cloud::speech::v2::CustomClass> ListCustomClasses(
      google::cloud::speech::v2::ListCustomClassesRequest request,
      Options opts = {});

  ///
  /// Returns the requested
  /// [CustomClass][google.cloud.speech.v2.CustomClass].
  ///
  /// @param name  Required. The name of the CustomClass to retrieve. The
  /// expected format is
  ///  `projects/{project}/locations/{location}/customClasses/{custom_class}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::CustomClass,google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  /// [google.cloud.speech.v2.GetCustomClassRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1736}
  /// [google.cloud.speech.v2.CustomClass]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  StatusOr<google::cloud::speech::v2::CustomClass> GetCustomClass(
      std::string const& name, Options opts = {});

  ///
  /// Returns the requested
  /// [CustomClass][google.cloud.speech.v2.CustomClass].
  ///
  /// @param request
  /// @googleapis_link{google::cloud::speech::v2::GetCustomClassRequest,google/cloud/speech/v2/cloud_speech.proto#L1736}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::CustomClass,google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  /// [google.cloud.speech.v2.GetCustomClassRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1736}
  /// [google.cloud.speech.v2.CustomClass]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  StatusOr<google::cloud::speech::v2::CustomClass> GetCustomClass(
      google::cloud::speech::v2::GetCustomClassRequest const& request,
      Options opts = {});

  ///
  /// Updates the [CustomClass][google.cloud.speech.v2.CustomClass].
  ///
  /// @param custom_class  Required. The CustomClass to update.
  ///  The CustomClass's `name` field is used to identify the CustomClass to
  ///  update. Format:
  ///  `projects/{project}/locations/{location}/customClasses/{custom_class}`.
  /// @param update_mask  The list of fields to be updated. If empty, all fields
  /// are considered for
  ///  update.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::CustomClass,google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  /// [google.cloud.speech.v2.UpdateCustomClassRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1749}
  /// [google.cloud.speech.v2.CustomClass]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  future<StatusOr<google::cloud::speech::v2::CustomClass>> UpdateCustomClass(
      google::cloud::speech::v2::CustomClass const& custom_class,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Updates the [CustomClass][google.cloud.speech.v2.CustomClass].
  ///
  /// @param request
  /// @googleapis_link{google::cloud::speech::v2::UpdateCustomClassRequest,google/cloud/speech/v2/cloud_speech.proto#L1749}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::CustomClass,google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  /// [google.cloud.speech.v2.UpdateCustomClassRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1749}
  /// [google.cloud.speech.v2.CustomClass]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  future<StatusOr<google::cloud::speech::v2::CustomClass>> UpdateCustomClass(
      google::cloud::speech::v2::UpdateCustomClassRequest const& request,
      Options opts = {});

  ///
  /// Deletes the [CustomClass][google.cloud.speech.v2.CustomClass].
  ///
  /// @param name  Required. The name of the CustomClass to delete.
  ///  Format:
  ///  `projects/{project}/locations/{location}/customClasses/{custom_class}`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::CustomClass,google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  /// [google.cloud.speech.v2.DeleteCustomClassRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1768}
  /// [google.cloud.speech.v2.CustomClass]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  future<StatusOr<google::cloud::speech::v2::CustomClass>> DeleteCustomClass(
      std::string const& name, Options opts = {});

  ///
  /// Deletes the [CustomClass][google.cloud.speech.v2.CustomClass].
  ///
  /// @param request
  /// @googleapis_link{google::cloud::speech::v2::DeleteCustomClassRequest,google/cloud/speech/v2/cloud_speech.proto#L1768}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::CustomClass,google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  /// [google.cloud.speech.v2.DeleteCustomClassRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1768}
  /// [google.cloud.speech.v2.CustomClass]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  future<StatusOr<google::cloud::speech::v2::CustomClass>> DeleteCustomClass(
      google::cloud::speech::v2::DeleteCustomClassRequest const& request,
      Options opts = {});

  ///
  /// Undeletes the [CustomClass][google.cloud.speech.v2.CustomClass].
  ///
  /// @param name  Required. The name of the CustomClass to undelete.
  ///  Format:
  ///  `projects/{project}/locations/{location}/customClasses/{custom_class}`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::CustomClass,google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  /// [google.cloud.speech.v2.UndeleteCustomClassRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1796}
  /// [google.cloud.speech.v2.CustomClass]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  future<StatusOr<google::cloud::speech::v2::CustomClass>> UndeleteCustomClass(
      std::string const& name, Options opts = {});

  ///
  /// Undeletes the [CustomClass][google.cloud.speech.v2.CustomClass].
  ///
  /// @param request
  /// @googleapis_link{google::cloud::speech::v2::UndeleteCustomClassRequest,google/cloud/speech/v2/cloud_speech.proto#L1796}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::CustomClass,google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  /// [google.cloud.speech.v2.UndeleteCustomClassRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1796}
  /// [google.cloud.speech.v2.CustomClass]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1441}
  ///
  future<StatusOr<google::cloud::speech::v2::CustomClass>> UndeleteCustomClass(
      google::cloud::speech::v2::UndeleteCustomClassRequest const& request,
      Options opts = {});

  ///
  /// Creates a [PhraseSet][google.cloud.speech.v2.PhraseSet].
  ///
  /// @param parent  Required. The project and location where this PhraseSet
  /// will be created.
  ///  The expected format is `projects/{project}/locations/{location}`.
  /// @param phrase_set  Required. The PhraseSet to create.
  /// @param phrase_set_id  The ID to use for the PhraseSet, which will become
  /// the final component of
  ///  the PhraseSet's resource name.
  ///  This value should be 4-63 characters, and valid characters
  ///  are /[a-z][0-9]-/.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::PhraseSet,google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  /// [google.cloud.speech.v2.CreatePhraseSetRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1819}
  /// [google.cloud.speech.v2.PhraseSet]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  future<StatusOr<google::cloud::speech::v2::PhraseSet>> CreatePhraseSet(
      std::string const& parent,
      google::cloud::speech::v2::PhraseSet const& phrase_set,
      std::string const& phrase_set_id, Options opts = {});

  ///
  /// Creates a [PhraseSet][google.cloud.speech.v2.PhraseSet].
  ///
  /// @param request
  /// @googleapis_link{google::cloud::speech::v2::CreatePhraseSetRequest,google/cloud/speech/v2/cloud_speech.proto#L1819}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::PhraseSet,google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  /// [google.cloud.speech.v2.CreatePhraseSetRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1819}
  /// [google.cloud.speech.v2.PhraseSet]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  future<StatusOr<google::cloud::speech::v2::PhraseSet>> CreatePhraseSet(
      google::cloud::speech::v2::CreatePhraseSetRequest const& request,
      Options opts = {});

  ///
  /// Lists PhraseSets.
  ///
  /// @param parent  Required. The project and location of PhraseSet resources
  /// to list. The
  ///  expected format is `projects/{project}/locations/{location}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::PhraseSet,google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  /// [google.cloud.speech.v2.ListPhraseSetsRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1846}
  /// [google.cloud.speech.v2.PhraseSet]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  StreamRange<google::cloud::speech::v2::PhraseSet> ListPhraseSets(
      std::string const& parent, Options opts = {});

  ///
  /// Lists PhraseSets.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::speech::v2::ListPhraseSetsRequest,google/cloud/speech/v2/cloud_speech.proto#L1846}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::PhraseSet,google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  /// [google.cloud.speech.v2.ListPhraseSetsRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1846}
  /// [google.cloud.speech.v2.PhraseSet]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  StreamRange<google::cloud::speech::v2::PhraseSet> ListPhraseSets(
      google::cloud::speech::v2::ListPhraseSetsRequest request,
      Options opts = {});

  ///
  /// Returns the requested
  /// [PhraseSet][google.cloud.speech.v2.PhraseSet].
  ///
  /// @param name  Required. The name of the PhraseSet to retrieve. The expected
  /// format is
  ///  `projects/{project}/locations/{location}/phraseSets/{phrase_set}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::PhraseSet,google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  /// [google.cloud.speech.v2.GetPhraseSetRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1889}
  /// [google.cloud.speech.v2.PhraseSet]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  StatusOr<google::cloud::speech::v2::PhraseSet> GetPhraseSet(
      std::string const& name, Options opts = {});

  ///
  /// Returns the requested
  /// [PhraseSet][google.cloud.speech.v2.PhraseSet].
  ///
  /// @param request
  /// @googleapis_link{google::cloud::speech::v2::GetPhraseSetRequest,google/cloud/speech/v2/cloud_speech.proto#L1889}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::PhraseSet,google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  /// [google.cloud.speech.v2.GetPhraseSetRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1889}
  /// [google.cloud.speech.v2.PhraseSet]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  StatusOr<google::cloud::speech::v2::PhraseSet> GetPhraseSet(
      google::cloud::speech::v2::GetPhraseSetRequest const& request,
      Options opts = {});

  ///
  /// Updates the [PhraseSet][google.cloud.speech.v2.PhraseSet].
  ///
  /// @param phrase_set  Required. The PhraseSet to update.
  ///  The PhraseSet's `name` field is used to identify the PhraseSet to update.
  ///  Format:
  ///  `projects/{project}/locations/{location}/phraseSets/{phrase_set}`.
  /// @param update_mask  The list of fields to update. If empty, all
  /// non-default valued fields are
  ///  considered for update. Use `*` to update the entire PhraseSet resource.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::PhraseSet,google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  /// [google.cloud.speech.v2.UpdatePhraseSetRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1902}
  /// [google.cloud.speech.v2.PhraseSet]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  future<StatusOr<google::cloud::speech::v2::PhraseSet>> UpdatePhraseSet(
      google::cloud::speech::v2::PhraseSet const& phrase_set,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Updates the [PhraseSet][google.cloud.speech.v2.PhraseSet].
  ///
  /// @param request
  /// @googleapis_link{google::cloud::speech::v2::UpdatePhraseSetRequest,google/cloud/speech/v2/cloud_speech.proto#L1902}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::PhraseSet,google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  /// [google.cloud.speech.v2.UpdatePhraseSetRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1902}
  /// [google.cloud.speech.v2.PhraseSet]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  future<StatusOr<google::cloud::speech::v2::PhraseSet>> UpdatePhraseSet(
      google::cloud::speech::v2::UpdatePhraseSetRequest const& request,
      Options opts = {});

  ///
  /// Deletes the [PhraseSet][google.cloud.speech.v2.PhraseSet].
  ///
  /// @param name  Required. The name of the PhraseSet to delete.
  ///  Format: `projects/{project}/locations/{location}/phraseSets/{phrase_set}`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::PhraseSet,google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  /// [google.cloud.speech.v2.DeletePhraseSetRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1920}
  /// [google.cloud.speech.v2.PhraseSet]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  future<StatusOr<google::cloud::speech::v2::PhraseSet>> DeletePhraseSet(
      std::string const& name, Options opts = {});

  ///
  /// Deletes the [PhraseSet][google.cloud.speech.v2.PhraseSet].
  ///
  /// @param request
  /// @googleapis_link{google::cloud::speech::v2::DeletePhraseSetRequest,google/cloud/speech/v2/cloud_speech.proto#L1920}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::PhraseSet,google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  /// [google.cloud.speech.v2.DeletePhraseSetRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1920}
  /// [google.cloud.speech.v2.PhraseSet]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  future<StatusOr<google::cloud::speech::v2::PhraseSet>> DeletePhraseSet(
      google::cloud::speech::v2::DeletePhraseSetRequest const& request,
      Options opts = {});

  ///
  /// Undeletes the [PhraseSet][google.cloud.speech.v2.PhraseSet].
  ///
  /// @param name  Required. The name of the PhraseSet to undelete.
  ///  Format: `projects/{project}/locations/{location}/phraseSets/{phrase_set}`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::PhraseSet,google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  /// [google.cloud.speech.v2.UndeletePhraseSetRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1947}
  /// [google.cloud.speech.v2.PhraseSet]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  future<StatusOr<google::cloud::speech::v2::PhraseSet>> UndeletePhraseSet(
      std::string const& name, Options opts = {});

  ///
  /// Undeletes the [PhraseSet][google.cloud.speech.v2.PhraseSet].
  ///
  /// @param request
  /// @googleapis_link{google::cloud::speech::v2::UndeletePhraseSetRequest,google/cloud/speech/v2/cloud_speech.proto#L1947}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::speech::v2::PhraseSet,google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  /// [google.cloud.speech.v2.UndeletePhraseSetRequest]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1947}
  /// [google.cloud.speech.v2.PhraseSet]:
  /// @googleapis_reference_link{google/cloud/speech/v2/cloud_speech.proto#L1541}
  ///
  future<StatusOr<google::cloud::speech::v2::PhraseSet>> UndeletePhraseSet(
      google::cloud::speech::v2::UndeletePhraseSetRequest const& request,
      Options opts = {});

 private:
  std::shared_ptr<SpeechConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace speech_v2
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_SPEECH_V2_SPEECH_CLIENT_H
