// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/functions/v1/functions.proto

#include "google/cloud/functions/internal/cloud_functions_tracing_connection.h"
#include "google/cloud/internal/opentelemetry.h"
#include <memory>

namespace google {
namespace cloud {
namespace functions_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

#ifdef GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

CloudFunctionsServiceTracingConnection::CloudFunctionsServiceTracingConnection(
    std::shared_ptr<functions::CloudFunctionsServiceConnection> child)
    : child_(std::move(child)) {}

StreamRange<google::cloud::functions::v1::CloudFunction>
CloudFunctionsServiceTracingConnection::ListFunctions(
    google::cloud::functions::v1::ListFunctionsRequest request) {
  return child_->ListFunctions(request);
}

StatusOr<google::cloud::functions::v1::CloudFunction>
CloudFunctionsServiceTracingConnection::GetFunction(
    google::cloud::functions::v1::GetFunctionRequest const& request) {
  return child_->GetFunction(request);
}

future<StatusOr<google::cloud::functions::v1::CloudFunction>>
CloudFunctionsServiceTracingConnection::CreateFunction(
    google::cloud::functions::v1::CreateFunctionRequest const& request) {
  return child_->CreateFunction(request);
}

future<StatusOr<google::cloud::functions::v1::CloudFunction>>
CloudFunctionsServiceTracingConnection::UpdateFunction(
    google::cloud::functions::v1::UpdateFunctionRequest const& request) {
  return child_->UpdateFunction(request);
}

future<StatusOr<google::cloud::functions::v1::OperationMetadataV1>>
CloudFunctionsServiceTracingConnection::DeleteFunction(
    google::cloud::functions::v1::DeleteFunctionRequest const& request) {
  return child_->DeleteFunction(request);
}

StatusOr<google::cloud::functions::v1::CallFunctionResponse>
CloudFunctionsServiceTracingConnection::CallFunction(
    google::cloud::functions::v1::CallFunctionRequest const& request) {
  return child_->CallFunction(request);
}

StatusOr<google::cloud::functions::v1::GenerateUploadUrlResponse>
CloudFunctionsServiceTracingConnection::GenerateUploadUrl(
    google::cloud::functions::v1::GenerateUploadUrlRequest const& request) {
  return child_->GenerateUploadUrl(request);
}

StatusOr<google::cloud::functions::v1::GenerateDownloadUrlResponse>
CloudFunctionsServiceTracingConnection::GenerateDownloadUrl(
    google::cloud::functions::v1::GenerateDownloadUrlRequest const& request) {
  return child_->GenerateDownloadUrl(request);
}

StatusOr<google::iam::v1::Policy>
CloudFunctionsServiceTracingConnection::SetIamPolicy(
    google::iam::v1::SetIamPolicyRequest const& request) {
  return child_->SetIamPolicy(request);
}

StatusOr<google::iam::v1::Policy>
CloudFunctionsServiceTracingConnection::GetIamPolicy(
    google::iam::v1::GetIamPolicyRequest const& request) {
  return child_->GetIamPolicy(request);
}

StatusOr<google::iam::v1::TestIamPermissionsResponse>
CloudFunctionsServiceTracingConnection::TestIamPermissions(
    google::iam::v1::TestIamPermissionsRequest const& request) {
  return child_->TestIamPermissions(request);
}

#endif  // GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace functions_internal
}  // namespace cloud
}  // namespace google
