// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/oracledatabase/v1/oracledatabase.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_ORACLEDATABASE_V1_INTERNAL_ORACLE_DATABASE_TRACING_STUB_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_ORACLEDATABASE_V1_INTERNAL_ORACLE_DATABASE_TRACING_STUB_H

#include "google/cloud/oracledatabase/v1/internal/oracle_database_stub.h"
#include "google/cloud/internal/trace_propagator.h"
#include "google/cloud/options.h"
#include "google/cloud/version.h"
#include <memory>

namespace google {
namespace cloud {
namespace oracledatabase_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

#ifdef GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

class OracleDatabaseTracingStub : public OracleDatabaseStub {
 public:
  ~OracleDatabaseTracingStub() override = default;

  explicit OracleDatabaseTracingStub(std::shared_ptr<OracleDatabaseStub> child);

  StatusOr<google::cloud::oracledatabase::v1::
               ListCloudExadataInfrastructuresResponse>
  ListCloudExadataInfrastructures(
      grpc::ClientContext& context, Options const& options,
      google::cloud::oracledatabase::v1::
          ListCloudExadataInfrastructuresRequest const& request) override;

  StatusOr<google::cloud::oracledatabase::v1::CloudExadataInfrastructure>
  GetCloudExadataInfrastructure(
      grpc::ClientContext& context, Options const& options,
      google::cloud::oracledatabase::v1::
          GetCloudExadataInfrastructureRequest const& request) override;

  future<StatusOr<google::longrunning::Operation>>
  AsyncCreateCloudExadataInfrastructure(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::oracledatabase::v1::
          CreateCloudExadataInfrastructureRequest const& request) override;

  StatusOr<google::longrunning::Operation> CreateCloudExadataInfrastructure(
      grpc::ClientContext& context, Options options,
      google::cloud::oracledatabase::v1::
          CreateCloudExadataInfrastructureRequest const& request) override;

  future<StatusOr<google::longrunning::Operation>>
  AsyncDeleteCloudExadataInfrastructure(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::oracledatabase::v1::
          DeleteCloudExadataInfrastructureRequest const& request) override;

  StatusOr<google::longrunning::Operation> DeleteCloudExadataInfrastructure(
      grpc::ClientContext& context, Options options,
      google::cloud::oracledatabase::v1::
          DeleteCloudExadataInfrastructureRequest const& request) override;

  StatusOr<google::cloud::oracledatabase::v1::ListCloudVmClustersResponse>
  ListCloudVmClusters(
      grpc::ClientContext& context, Options const& options,
      google::cloud::oracledatabase::v1::ListCloudVmClustersRequest const&
          request) override;

  StatusOr<google::cloud::oracledatabase::v1::CloudVmCluster> GetCloudVmCluster(
      grpc::ClientContext& context, Options const& options,
      google::cloud::oracledatabase::v1::GetCloudVmClusterRequest const&
          request) override;

  future<StatusOr<google::longrunning::Operation>> AsyncCreateCloudVmCluster(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::oracledatabase::v1::CreateCloudVmClusterRequest const&
          request) override;

  StatusOr<google::longrunning::Operation> CreateCloudVmCluster(
      grpc::ClientContext& context, Options options,
      google::cloud::oracledatabase::v1::CreateCloudVmClusterRequest const&
          request) override;

  future<StatusOr<google::longrunning::Operation>> AsyncDeleteCloudVmCluster(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::oracledatabase::v1::DeleteCloudVmClusterRequest const&
          request) override;

  StatusOr<google::longrunning::Operation> DeleteCloudVmCluster(
      grpc::ClientContext& context, Options options,
      google::cloud::oracledatabase::v1::DeleteCloudVmClusterRequest const&
          request) override;

  StatusOr<google::cloud::oracledatabase::v1::ListEntitlementsResponse>
  ListEntitlements(
      grpc::ClientContext& context, Options const& options,
      google::cloud::oracledatabase::v1::ListEntitlementsRequest const& request)
      override;

  StatusOr<google::cloud::oracledatabase::v1::ListDbServersResponse>
  ListDbServers(grpc::ClientContext& context, Options const& options,
                google::cloud::oracledatabase::v1::ListDbServersRequest const&
                    request) override;

  StatusOr<google::cloud::oracledatabase::v1::ListDbNodesResponse> ListDbNodes(
      grpc::ClientContext& context, Options const& options,
      google::cloud::oracledatabase::v1::ListDbNodesRequest const& request)
      override;

  StatusOr<google::cloud::oracledatabase::v1::ListGiVersionsResponse>
  ListGiVersions(grpc::ClientContext& context, Options const& options,
                 google::cloud::oracledatabase::v1::ListGiVersionsRequest const&
                     request) override;

  StatusOr<google::cloud::oracledatabase::v1::ListDbSystemShapesResponse>
  ListDbSystemShapes(
      grpc::ClientContext& context, Options const& options,
      google::cloud::oracledatabase::v1::ListDbSystemShapesRequest const&
          request) override;

  StatusOr<google::cloud::oracledatabase::v1::ListAutonomousDatabasesResponse>
  ListAutonomousDatabases(
      grpc::ClientContext& context, Options const& options,
      google::cloud::oracledatabase::v1::ListAutonomousDatabasesRequest const&
          request) override;

  StatusOr<google::cloud::oracledatabase::v1::AutonomousDatabase>
  GetAutonomousDatabase(
      grpc::ClientContext& context, Options const& options,
      google::cloud::oracledatabase::v1::GetAutonomousDatabaseRequest const&
          request) override;

  future<StatusOr<google::longrunning::Operation>>
  AsyncCreateAutonomousDatabase(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::oracledatabase::v1::CreateAutonomousDatabaseRequest const&
          request) override;

  StatusOr<google::longrunning::Operation> CreateAutonomousDatabase(
      grpc::ClientContext& context, Options options,
      google::cloud::oracledatabase::v1::CreateAutonomousDatabaseRequest const&
          request) override;

  future<StatusOr<google::longrunning::Operation>>
  AsyncDeleteAutonomousDatabase(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::oracledatabase::v1::DeleteAutonomousDatabaseRequest const&
          request) override;

  StatusOr<google::longrunning::Operation> DeleteAutonomousDatabase(
      grpc::ClientContext& context, Options options,
      google::cloud::oracledatabase::v1::DeleteAutonomousDatabaseRequest const&
          request) override;

  future<StatusOr<google::longrunning::Operation>>
  AsyncRestoreAutonomousDatabase(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::oracledatabase::v1::RestoreAutonomousDatabaseRequest const&
          request) override;

  StatusOr<google::longrunning::Operation> RestoreAutonomousDatabase(
      grpc::ClientContext& context, Options options,
      google::cloud::oracledatabase::v1::RestoreAutonomousDatabaseRequest const&
          request) override;

  StatusOr<google::cloud::oracledatabase::v1::
               GenerateAutonomousDatabaseWalletResponse>
  GenerateAutonomousDatabaseWallet(
      grpc::ClientContext& context, Options const& options,
      google::cloud::oracledatabase::v1::
          GenerateAutonomousDatabaseWalletRequest const& request) override;

  StatusOr<google::cloud::oracledatabase::v1::ListAutonomousDbVersionsResponse>
  ListAutonomousDbVersions(
      grpc::ClientContext& context, Options const& options,
      google::cloud::oracledatabase::v1::ListAutonomousDbVersionsRequest const&
          request) override;

  StatusOr<google::cloud::oracledatabase::v1::
               ListAutonomousDatabaseCharacterSetsResponse>
  ListAutonomousDatabaseCharacterSets(
      grpc::ClientContext& context, Options const& options,
      google::cloud::oracledatabase::v1::
          ListAutonomousDatabaseCharacterSetsRequest const& request) override;

  StatusOr<
      google::cloud::oracledatabase::v1::ListAutonomousDatabaseBackupsResponse>
  ListAutonomousDatabaseBackups(
      grpc::ClientContext& context, Options const& options,
      google::cloud::oracledatabase::v1::
          ListAutonomousDatabaseBackupsRequest const& request) override;

  future<StatusOr<google::longrunning::Operation>> AsyncStopAutonomousDatabase(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::oracledatabase::v1::StopAutonomousDatabaseRequest const&
          request) override;

  StatusOr<google::longrunning::Operation> StopAutonomousDatabase(
      grpc::ClientContext& context, Options options,
      google::cloud::oracledatabase::v1::StopAutonomousDatabaseRequest const&
          request) override;

  future<StatusOr<google::longrunning::Operation>> AsyncStartAutonomousDatabase(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::oracledatabase::v1::StartAutonomousDatabaseRequest const&
          request) override;

  StatusOr<google::longrunning::Operation> StartAutonomousDatabase(
      grpc::ClientContext& context, Options options,
      google::cloud::oracledatabase::v1::StartAutonomousDatabaseRequest const&
          request) override;

  future<StatusOr<google::longrunning::Operation>>
  AsyncRestartAutonomousDatabase(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::oracledatabase::v1::RestartAutonomousDatabaseRequest const&
          request) override;

  StatusOr<google::longrunning::Operation> RestartAutonomousDatabase(
      grpc::ClientContext& context, Options options,
      google::cloud::oracledatabase::v1::RestartAutonomousDatabaseRequest const&
          request) override;

  StatusOr<google::cloud::location::ListLocationsResponse> ListLocations(
      grpc::ClientContext& context, Options const& options,
      google::cloud::location::ListLocationsRequest const& request) override;

  StatusOr<google::cloud::location::Location> GetLocation(
      grpc::ClientContext& context, Options const& options,
      google::cloud::location::GetLocationRequest const& request) override;

  StatusOr<google::longrunning::ListOperationsResponse> ListOperations(
      grpc::ClientContext& context, Options const& options,
      google::longrunning::ListOperationsRequest const& request) override;

  StatusOr<google::longrunning::Operation> GetOperation(
      grpc::ClientContext& context, Options const& options,
      google::longrunning::GetOperationRequest const& request) override;

  Status DeleteOperation(
      grpc::ClientContext& context, Options const& options,
      google::longrunning::DeleteOperationRequest const& request) override;

  Status CancelOperation(
      grpc::ClientContext& context, Options const& options,
      google::longrunning::CancelOperationRequest const& request) override;

  future<StatusOr<google::longrunning::Operation>> AsyncGetOperation(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::longrunning::GetOperationRequest const& request) override;

  future<Status> AsyncCancelOperation(
      google::cloud::CompletionQueue& cq,
      std::shared_ptr<grpc::ClientContext> context,
      google::cloud::internal::ImmutableOptions options,
      google::longrunning::CancelOperationRequest const& request) override;

 private:
  std::shared_ptr<OracleDatabaseStub> child_;
  std::shared_ptr<opentelemetry::context::propagation::TextMapPropagator>
      propagator_;
};

#endif  // GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

/**
 * Applies the tracing decorator to the given stub.
 *
 * The stub is only decorated if the library has been compiled with
 * OpenTelemetry.
 */
std::shared_ptr<OracleDatabaseStub> MakeOracleDatabaseTracingStub(
    std::shared_ptr<OracleDatabaseStub> stub);

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace oracledatabase_v1_internal
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_ORACLEDATABASE_V1_INTERNAL_ORACLE_DATABASE_TRACING_STUB_H
