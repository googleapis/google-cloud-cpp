// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/gkehub/v1/service.proto

#include "google/cloud/gkehub/internal/gke_hub_tracing_stub.h"

namespace google {
namespace cloud {
namespace gkehub_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

GkeHubTracingStub::GkeHubTracingStub(std::shared_ptr<GkeHubStub> child)
    : child_(std::move(child)) {}

StatusOr<google::cloud::gkehub::v1::ListMembershipsResponse>
GkeHubTracingStub::ListMemberships(
    grpc::ClientContext& context,
    google::cloud::gkehub::v1::ListMembershipsRequest const& request) {
  return child_->ListMemberships(context, request);
}

StatusOr<google::cloud::gkehub::v1::ListFeaturesResponse>
GkeHubTracingStub::ListFeatures(
    grpc::ClientContext& context,
    google::cloud::gkehub::v1::ListFeaturesRequest const& request) {
  return child_->ListFeatures(context, request);
}

StatusOr<google::cloud::gkehub::v1::Membership>
GkeHubTracingStub::GetMembership(
    grpc::ClientContext& context,
    google::cloud::gkehub::v1::GetMembershipRequest const& request) {
  return child_->GetMembership(context, request);
}

StatusOr<google::cloud::gkehub::v1::Feature> GkeHubTracingStub::GetFeature(
    grpc::ClientContext& context,
    google::cloud::gkehub::v1::GetFeatureRequest const& request) {
  return child_->GetFeature(context, request);
}

future<StatusOr<google::longrunning::Operation>>
GkeHubTracingStub::AsyncCreateMembership(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::gkehub::v1::CreateMembershipRequest const& request) {
  return child_->AsyncCreateMembership(cq, std::move(context), request);
}

future<StatusOr<google::longrunning::Operation>>
GkeHubTracingStub::AsyncCreateFeature(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::gkehub::v1::CreateFeatureRequest const& request) {
  return child_->AsyncCreateFeature(cq, std::move(context), request);
}

future<StatusOr<google::longrunning::Operation>>
GkeHubTracingStub::AsyncDeleteMembership(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::gkehub::v1::DeleteMembershipRequest const& request) {
  return child_->AsyncDeleteMembership(cq, std::move(context), request);
}

future<StatusOr<google::longrunning::Operation>>
GkeHubTracingStub::AsyncDeleteFeature(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::gkehub::v1::DeleteFeatureRequest const& request) {
  return child_->AsyncDeleteFeature(cq, std::move(context), request);
}

future<StatusOr<google::longrunning::Operation>>
GkeHubTracingStub::AsyncUpdateMembership(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::gkehub::v1::UpdateMembershipRequest const& request) {
  return child_->AsyncUpdateMembership(cq, std::move(context), request);
}

future<StatusOr<google::longrunning::Operation>>
GkeHubTracingStub::AsyncUpdateFeature(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::gkehub::v1::UpdateFeatureRequest const& request) {
  return child_->AsyncUpdateFeature(cq, std::move(context), request);
}

StatusOr<google::cloud::gkehub::v1::GenerateConnectManifestResponse>
GkeHubTracingStub::GenerateConnectManifest(
    grpc::ClientContext& context,
    google::cloud::gkehub::v1::GenerateConnectManifestRequest const& request) {
  return child_->GenerateConnectManifest(context, request);
}

future<StatusOr<google::longrunning::Operation>>
GkeHubTracingStub::AsyncGetOperation(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::longrunning::GetOperationRequest const& request) {
  return child_->AsyncGetOperation(cq, std::move(context), request);
}

future<Status> GkeHubTracingStub::AsyncCancelOperation(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::longrunning::CancelOperationRequest const& request) {
  return child_->AsyncCancelOperation(cq, std::move(context), request);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace gkehub_internal
}  // namespace cloud
}  // namespace google
