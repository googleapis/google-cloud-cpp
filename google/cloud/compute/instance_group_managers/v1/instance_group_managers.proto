// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/compute_public_google_rest_v1.json
// revision: 20230221

syntax = "proto3";

package google.cloud.cpp.compute.instance_group_managers.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/cloud/compute/v1/internal/common.proto";
import "google/cloud/extended_operations.proto";

// Service for the instanceGroupManagers resource.
// https://cloud.google.com/compute/docs/reference/rest/v1/instanceGroupManagers
service InstanceGroupManagers {
  option (google.api.default_host) = "compute.googleapis.com";
  option (google.api.oauth_scopes) =
      "https://www.googleapis.com/auth/cloud-platform,"
      "https://www.googleapis.com/auth/compute,"
      "https://www.googleapis.com/auth/compute.readonly";

  // Flags the specified instances to be removed from the managed instance
  // group. Abandoning an instance does not delete the instance, but it does
  // remove the instance from any target pools that are applied by the managed
  // instance group. This method reduces the targetSize of the managed instance
  // group by the number of instances that you abandon. This operation is marked
  // as DONE when the action is scheduled even if the instances have not yet
  // been removed from the group. You must separately verify the status of the
  // abandoning action with the listmanagedinstances method. If the group is
  // part of a backend service that has enabled connection draining, it can take
  // up to 60 seconds after the connection draining duration has elapsed before
  // the VM instance is removed or deleted. You can specify a maximum of 1000
  // instances with this method per request.
  rpc AbandonInstances(AbandonInstancesRequest)
      returns (google.cloud.cpp.compute.v1.Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project=project}/zones/{zone=zone}/instanceGroupManagers/{instance_group_manager=instance_group_manager}/abandonInstances"
      body: "instance_group_managers_abandon_instances_request_resource"
    };
    option (google.api.method_signature) =
        "project,zone,instance_group_manager,instance_group_managers_abandon_instances_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Retrieves the list of managed instance groups and groups them by zone.
  rpc AggregatedListInstanceGroupManagers(
      AggregatedListInstanceGroupManagersRequest)
      returns (google.cloud.cpp.compute.v1.InstanceGroupManagerAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project=project}/aggregated/instanceGroupManagers"
    };
    option (google.api.method_signature) = "project";
  }

  // Applies changes to selected instances on the managed instance group. This
  // method can be used to apply new overrides and/or new versions.
  rpc ApplyUpdatesToInstances(ApplyUpdatesToInstancesRequest)
      returns (google.cloud.cpp.compute.v1.Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project=project}/zones/{zone=zone}/instanceGroupManagers/{instance_group_manager=instance_group_manager}/applyUpdatesToInstances"
      body: "instance_group_managers_apply_updates_request_resource"
    };
    option (google.api.method_signature) =
        "project,zone,instance_group_manager,instance_group_managers_apply_updates_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Creates instances with per-instance configurations in this managed instance
  // group. Instances are created using the current instance template. The
  // create instances operation is marked DONE if the createInstances request is
  // successful. The underlying actions take additional time. You must
  // separately verify the status of the creating or actions with the
  // listmanagedinstances method.
  rpc CreateInstances(CreateInstancesRequest)
      returns (google.cloud.cpp.compute.v1.Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project=project}/zones/{zone=zone}/instanceGroupManagers/{instance_group_manager=instance_group_manager}/createInstances"
      body: "instance_group_managers_create_instances_request_resource"
    };
    option (google.api.method_signature) =
        "project,zone,instance_group_manager,instance_group_managers_create_instances_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Deletes the specified managed instance group and all of the instances in
  // that group. Note that the instance group must not belong to a backend
  // service. Read Deleting an instance group for more information.
  rpc DeleteInstanceGroupManagers(DeleteInstanceGroupManagersRequest)
      returns (google.cloud.cpp.compute.v1.Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project=project}/zones/{zone=zone}/instanceGroupManagers/{instance_group_manager=instance_group_manager}"
    };
    option (google.api.method_signature) =
        "project,zone,instance_group_manager";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Flags the specified instances in the managed instance group for immediate
  // deletion. The instances are also removed from any target pools of which
  // they were a member. This method reduces the targetSize of the managed
  // instance group by the number of instances that you delete. This operation
  // is marked as DONE when the action is scheduled even if the instances are
  // still being deleted. You must separately verify the status of the deleting
  // action with the listmanagedinstances method. If the group is part of a
  // backend service that has enabled connection draining, it can take up to 60
  // seconds after the connection draining duration has elapsed before the VM
  // instance is removed or deleted. You can specify a maximum of 1000 instances
  // with this method per request.
  rpc DeleteInstances(DeleteInstancesRequest)
      returns (google.cloud.cpp.compute.v1.Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project=project}/zones/{zone=zone}/instanceGroupManagers/{instance_group_manager=instance_group_manager}/deleteInstances"
      body: "instance_group_managers_delete_instances_request_resource"
    };
    option (google.api.method_signature) =
        "project,zone,instance_group_manager,instance_group_managers_delete_instances_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Deletes selected per-instance configurations for the managed instance
  // group.
  rpc DeletePerInstanceConfigs(DeletePerInstanceConfigsRequest)
      returns (google.cloud.cpp.compute.v1.Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project=project}/zones/{zone=zone}/instanceGroupManagers/{instance_group_manager=instance_group_manager}/deletePerInstanceConfigs"
      body: "instance_group_managers_delete_per_instance_configs_req_resource"
    };
    option (google.api.method_signature) =
        "project,zone,instance_group_manager,instance_group_managers_delete_per_instance_configs_req_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Returns all of the details about the specified managed instance group.
  rpc GetInstanceGroupManagers(GetInstanceGroupManagersRequest)
      returns (google.cloud.cpp.compute.v1.InstanceGroupManager) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project=project}/zones/{zone=zone}/instanceGroupManagers/{instance_group_manager=instance_group_manager}"
    };
    option (google.api.method_signature) =
        "project,zone,instance_group_manager";
  }

  // Creates a managed instance group using the information that you specify in
  // the request. After the group is created, instances in the group are created
  // using the specified instance template. This operation is marked as DONE
  // when the group is created even if the instances in the group have not yet
  // been created. You must separately verify the status of the individual
  // instances with the listmanagedinstances method. A managed instance group
  // can have up to 1000 VM instances per group. Please contact Cloud Support if
  // you need an increase in this limit.
  rpc InsertInstanceGroupManagers(InsertInstanceGroupManagersRequest)
      returns (google.cloud.cpp.compute.v1.Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project=project}/zones/{zone=zone}/instanceGroupManagers"
      body: "instance_group_manager_resource"
    };
    option (google.api.method_signature) =
        "project,zone,instance_group_manager_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Retrieves a list of managed instance groups that are contained within the
  // specified project and zone.
  rpc ListInstanceGroupManagers(ListInstanceGroupManagersRequest)
      returns (google.cloud.cpp.compute.v1.InstanceGroupManagerList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project=project}/zones/{zone=zone}/instanceGroupManagers"
    };
    option (google.api.method_signature) = "project,zone";
  }

  // Lists all errors thrown by actions on instances for a given managed
  // instance group. The filter and orderBy query parameters are not supported.
  rpc ListErrors(ListErrorsRequest) returns (
      google.cloud.cpp.compute.v1.InstanceGroupManagersListErrorsResponse) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project=project}/zones/{zone=zone}/instanceGroupManagers/{instance_group_manager=instance_group_manager}/listErrors"
    };
    option (google.api.method_signature) =
        "project,zone,instance_group_manager";
  }

  // Lists all of the instances in the managed instance group. Each instance in
  // the list has a currentAction, which indicates the action that the managed
  // instance group is performing on the instance. For example, if the group is
  // still creating an instance, the currentAction is CREATING. If a previous
  // action failed, the list displays the errors for that failed action. The
  // orderBy query parameter is not supported. The `pageToken` query parameter
  // is supported only in the alpha and beta API and only if the group's
  // `listManagedInstancesResults` field is set to `PAGINATED`.
  rpc ListManagedInstances(ListManagedInstancesRequest)
      returns (google.cloud.cpp.compute.v1
                   .InstanceGroupManagersListManagedInstancesResponse) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project=project}/zones/{zone=zone}/instanceGroupManagers/{instance_group_manager=instance_group_manager}/listManagedInstances"
      body: "*"
    };
    option (google.api.method_signature) =
        "project,zone,instance_group_manager";
  }

  // Lists all of the per-instance configurations defined for the managed
  // instance group. The orderBy query parameter is not supported.
  rpc ListPerInstanceConfigs(ListPerInstanceConfigsRequest)
      returns (google.cloud.cpp.compute.v1
                   .InstanceGroupManagersListPerInstanceConfigsResp) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project=project}/zones/{zone=zone}/instanceGroupManagers/{instance_group_manager=instance_group_manager}/listPerInstanceConfigs"
      body: "*"
    };
    option (google.api.method_signature) =
        "project,zone,instance_group_manager";
  }

  // Updates a managed instance group using the information that you specify in
  // the request. This operation is marked as DONE when the group is patched
  // even if the instances in the group are still in the process of being
  // patched. You must separately verify the status of the individual instances
  // with the listManagedInstances method. This method supports PATCH semantics
  // and uses the JSON merge patch format and processing rules. If you update
  // your group to specify a new template or instance configuration, it's
  // possible that your intended specification for each VM in the group is
  // different from the current state of that VM. To learn how to apply an
  // updated configuration to the VMs in a MIG, see Updating instances in a MIG.
  rpc PatchInstanceGroupManagers(PatchInstanceGroupManagersRequest)
      returns (google.cloud.cpp.compute.v1.Operation) {
    option (google.api.http) = {
      patch: "/compute/v1/projects/{project=project}/zones/{zone=zone}/instanceGroupManagers/{instance_group_manager=instance_group_manager}"
      body: "instance_group_manager_resource"
    };
    option (google.api.method_signature) =
        "project,zone,instance_group_manager,instance_group_manager_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Inserts or patches per-instance configurations for the managed instance
  // group. perInstanceConfig.name serves as a key used to distinguish whether
  // to perform insert or patch.
  rpc PatchPerInstanceConfigs(PatchPerInstanceConfigsRequest)
      returns (google.cloud.cpp.compute.v1.Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project=project}/zones/{zone=zone}/instanceGroupManagers/{instance_group_manager=instance_group_manager}/patchPerInstanceConfigs"
      body: "instance_group_managers_patch_per_instance_configs_req_resource"
    };
    option (google.api.method_signature) =
        "project,zone,instance_group_manager,instance_group_managers_patch_per_instance_configs_req_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Flags the specified VM instances in the managed instance group to be
  // immediately recreated. Each instance is recreated using the group's current
  // configuration. This operation is marked as DONE when the flag is set even
  // if the instances have not yet been recreated. You must separately verify
  // the status of each instance by checking its currentAction field; for more
  // information, see Checking the status of managed instances. If the group is
  // part of a backend service that has enabled connection draining, it can take
  // up to 60 seconds after the connection draining duration has elapsed before
  // the VM instance is removed or deleted. You can specify a maximum of 1000
  // instances with this method per request.
  rpc RecreateInstances(RecreateInstancesRequest)
      returns (google.cloud.cpp.compute.v1.Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project=project}/zones/{zone=zone}/instanceGroupManagers/{instance_group_manager=instance_group_manager}/recreateInstances"
      body: "instance_group_managers_recreate_instances_request_resource"
    };
    option (google.api.method_signature) =
        "project,zone,instance_group_manager,instance_group_managers_recreate_instances_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Resizes the managed instance group. If you increase the size, the group
  // creates new instances using the current instance template. If you decrease
  // the size, the group deletes instances. The resize operation is marked DONE
  // when the resize actions are scheduled even if the group has not yet added
  // or deleted any instances. You must separately verify the status of the
  // creating or deleting actions with the listmanagedinstances method. When
  // resizing down, the instance group arbitrarily chooses the order in which
  // VMs are deleted. The group takes into account some VM attributes when
  // making the selection including: + The status of the VM instance. + The
  // health of the VM instance. + The instance template version the VM is based
  // on. + For regional managed instance groups, the location of the VM
  // instance. This list is subject to change. If the group is part of a backend
  // service that has enabled connection draining, it can take up to 60 seconds
  // after the connection draining duration has elapsed before the VM instance
  // is removed or deleted.
  rpc Resize(ResizeRequest) returns (google.cloud.cpp.compute.v1.Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project=project}/zones/{zone=zone}/instanceGroupManagers/{instance_group_manager=instance_group_manager}/resize"
      body: "*"
    };
    option (google.api.method_signature) =
        "project,zone,instance_group_manager,size";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Specifies the instance template to use when creating new instances in this
  // group. The templates for existing instances in the group do not change
  // unless you run recreateInstances, run applyUpdatesToInstances, or set the
  // group's updatePolicy.type to PROACTIVE.
  rpc SetInstanceTemplate(SetInstanceTemplateRequest)
      returns (google.cloud.cpp.compute.v1.Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project=project}/zones/{zone=zone}/instanceGroupManagers/{instance_group_manager=instance_group_manager}/setInstanceTemplate"
      body: "instance_group_managers_set_instance_template_request_resource"
    };
    option (google.api.method_signature) =
        "project,zone,instance_group_manager,instance_group_managers_set_instance_template_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Modifies the target pools to which all instances in this managed instance
  // group are assigned. The target pools automatically apply to all of the
  // instances in the managed instance group. This operation is marked DONE when
  // you make the request even if the instances have not yet been added to their
  // target pools. The change might take some time to apply to all of the
  // instances in the group depending on the size of the group.
  rpc SetTargetPools(SetTargetPoolsRequest)
      returns (google.cloud.cpp.compute.v1.Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project=project}/zones/{zone=zone}/instanceGroupManagers/{instance_group_manager=instance_group_manager}/setTargetPools"
      body: "instance_group_managers_set_target_pools_request_resource"
    };
    option (google.api.method_signature) =
        "project,zone,instance_group_manager,instance_group_managers_set_target_pools_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Inserts or updates per-instance configurations for the managed instance
  // group. perInstanceConfig.name serves as a key used to distinguish whether
  // to perform insert or patch.
  rpc UpdatePerInstanceConfigs(UpdatePerInstanceConfigsRequest)
      returns (google.cloud.cpp.compute.v1.Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project=project}/zones/{zone=zone}/instanceGroupManagers/{instance_group_manager=instance_group_manager}/updatePerInstanceConfigs"
      body: "instance_group_managers_update_per_instance_configs_req_resource"
    };
    option (google.api.method_signature) =
        "project,zone,instance_group_manager,instance_group_managers_update_per_instance_configs_req_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }
}

// Request message for AbandonInstances.
message AbandonInstancesRequest {
  // The name of the managed instance group.
  string instance_group_manager = 1 [(google.api.field_behavior) = REQUIRED];

  // The InstanceGroupManagersAbandonInstancesRequest for this request.
  optional
      google.cloud.cpp.compute.v1.InstanceGroupManagersAbandonInstancesRequest
          instance_group_managers_abandon_instances_request_resource = 2
      [json_name = "__json_request_body"];

  // Project ID for this request.
  string project = 3 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so
  // that if you must retry your request, the server will know to ignore the
  // request if it has already been completed. For example, consider a situation
  // where you make an initial request and the request times out. If you make
  // the request again with the same request ID, the server can check if
  // original operation with the same request ID was received, and if so, will
  // ignore the second request. This prevents clients from accidentally creating
  // duplicate commitments. The request ID must be a valid UUID with the
  // exception that zero UUID is not supported (
  // 00000000-0000-0000-0000-000000000000).
  optional string request_id = 4;

  // The name of the zone where the managed instance group is located.
  string zone = 5 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];
}

// Request message for AggregatedListInstanceGroupManagers.
message AggregatedListInstanceGroupManagersRequest {
  // A filter expression that filters resources listed in the response. Most
  // Compute resources support two types of filter expressions: expressions that
  // support regular expressions and expressions that follow API improvement
  // proposal AIP-160. If you want to use AIP-160, your expression must specify
  // the field name, an operator, and the value that you want to use for
  // filtering. The value must be a string, a number, or a boolean. The operator
  // must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you
  // are filtering Compute Engine instances, you can exclude instances named
  // `example-instance` by specifying `name != example-instance`. The `:`
  // operator can be used with string fields to match substrings. For non-string
  // fields it is equivalent to the `=` operator. The `:*` comparison can be
  // used to test whether a key has been defined. For example, to find all
  // objects with `owner` label use: ``` labels.owner:* ``` You can also filter
  // nested fields. For example, you could specify `scheduling.automaticRestart
  // = false` to include instances only if they are not scheduled for automatic
  // restarts. You can use filtering on nested fields to filter based on
  // resource labels. To filter on multiple expressions, provide each separate
  // expression within parentheses. For example: ```
  // (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By
  // default, each expression is an `AND` expression. However, you can include
  // `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform =
  // "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
  // (scheduling.automaticRestart = true) ``` If you want to use a regular
  // expression, use the `eq` (equal) or `ne` (not equal) operator against a
  // single un-parenthesized expression with or without quotes or against
  // multiple parenthesized expressions. Examples: `fieldname eq unquoted
  // literal` `fieldname eq 'single quoted literal'` `fieldname eq "double
  // quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The
  // literal value is interpreted as a regular expression using Google RE2
  // library syntax. The literal value must match the entire field. For example,
  // to filter for instances that do not end with name "instance", you would use
  // `name ne .*instance`.
  optional string filter = 1;

  // Indicates whether every visible scope for each scope type (zone, region,
  // global) should be included in the response. For new resource types added
  // after this field, the flag has no effect as new resource types will always
  // include every visible scope for each scope type in response. For resource
  // types which predate this field, if this flag is omitted or false, only
  // scopes of the scope types where the resource type is expected to be found
  // will be included.
  optional bool include_all_scopes = 2;

  // The maximum number of results per page that should be returned. If the
  // number of available results is larger than `maxResults`, Compute Engine
  // returns a `nextPageToken` that can be used to get the next page of results
  // in subsequent list requests. Acceptable values are `0` to `500`, inclusive.
  // (Default: `500`)
  optional uint32 max_results = 3;

  // Sorts list results by a certain order. By default, results are returned in
  // alphanumerical order based on the resource name. You can also sort results
  // in descending order based on the creation timestamp using
  // `orderBy="creationTimestamp desc"`. This sorts results based on the
  // `creationTimestamp` field in reverse chronological order (newest result
  // first). Use this to sort resources like operations so that the newest
  // operation is returned first. Currently, only sorting by `name` or
  // `creationTimestamp desc` is supported.
  optional string order_by = 4;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken`
  // returned by a previous list request to get the next page of results.
  optional string page_token = 5;

  // Project ID for this request.
  string project = 6 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case
  // of failure. The default value is false.
  optional bool return_partial_success = 7;
}

// Request message for ApplyUpdatesToInstances.
message ApplyUpdatesToInstancesRequest {
  // The name of the managed instance group, should conform to RFC1035.
  string instance_group_manager = 1 [(google.api.field_behavior) = REQUIRED];

  // The InstanceGroupManagersApplyUpdatesRequest for this request.
  optional google.cloud.cpp.compute.v1.InstanceGroupManagersApplyUpdatesRequest
      instance_group_managers_apply_updates_request_resource = 2
      [json_name = "__json_request_body"];

  // Project ID for this request.
  string project = 3 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The name of the zone where the managed instance group is located. Should
  // conform to RFC1035.
  string zone = 4 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];
}

// Request message for CreateInstances.
message CreateInstancesRequest {
  // The name of the managed instance group. It should conform to RFC1035.
  string instance_group_manager = 1 [(google.api.field_behavior) = REQUIRED];

  // The InstanceGroupManagersCreateInstancesRequest for this request.
  optional
      google.cloud.cpp.compute.v1.InstanceGroupManagersCreateInstancesRequest
          instance_group_managers_create_instances_request_resource = 2
      [json_name = "__json_request_body"];

  // Project ID for this request.
  string project = 3 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so
  // that if you must retry your request, the server will know to ignore the
  // request if it has already been completed. For example, consider a situation
  // where you make an initial request and the request times out. If you make
  // the request again with the same request ID, the server can check if
  // original operation with the same request ID was received, and if so, will
  // ignore the second request. The request ID must be a valid UUID with the
  // exception that zero UUID is not supported (
  // 00000000-0000-0000-0000-000000000000).
  optional string request_id = 4;

  // The name of the zone where the managed instance group is located. It should
  // conform to RFC1035.
  string zone = 5 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];
}

// Request message for DeleteInstanceGroupManagers.
message DeleteInstanceGroupManagersRequest {
  // The name of the managed instance group to delete.
  string instance_group_manager = 1 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 2 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so
  // that if you must retry your request, the server will know to ignore the
  // request if it has already been completed. For example, consider a situation
  // where you make an initial request and the request times out. If you make
  // the request again with the same request ID, the server can check if
  // original operation with the same request ID was received, and if so, will
  // ignore the second request. This prevents clients from accidentally creating
  // duplicate commitments. The request ID must be a valid UUID with the
  // exception that zero UUID is not supported (
  // 00000000-0000-0000-0000-000000000000).
  optional string request_id = 3;

  // The name of the zone where the managed instance group is located.
  string zone = 4 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];
}

// Request message for DeleteInstances.
message DeleteInstancesRequest {
  // The name of the managed instance group.
  string instance_group_manager = 1 [(google.api.field_behavior) = REQUIRED];

  // The InstanceGroupManagersDeleteInstancesRequest for this request.
  optional
      google.cloud.cpp.compute.v1.InstanceGroupManagersDeleteInstancesRequest
          instance_group_managers_delete_instances_request_resource = 2
      [json_name = "__json_request_body"];

  // Project ID for this request.
  string project = 3 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so
  // that if you must retry your request, the server will know to ignore the
  // request if it has already been completed. For example, consider a situation
  // where you make an initial request and the request times out. If you make
  // the request again with the same request ID, the server can check if
  // original operation with the same request ID was received, and if so, will
  // ignore the second request. This prevents clients from accidentally creating
  // duplicate commitments. The request ID must be a valid UUID with the
  // exception that zero UUID is not supported (
  // 00000000-0000-0000-0000-000000000000).
  optional string request_id = 4;

  // The name of the zone where the managed instance group is located.
  string zone = 5 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];
}

// Request message for DeletePerInstanceConfigs.
message DeletePerInstanceConfigsRequest {
  // The name of the managed instance group. It should conform to RFC1035.
  string instance_group_manager = 1 [(google.api.field_behavior) = REQUIRED];

  // The InstanceGroupManagersDeletePerInstanceConfigsReq for this request.
  optional google.cloud.cpp.compute.v1
      .InstanceGroupManagersDeletePerInstanceConfigsReq
          instance_group_managers_delete_per_instance_configs_req_resource = 2
      [json_name = "__json_request_body"];

  // Project ID for this request.
  string project = 3 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The name of the zone where the managed instance group is located. It should
  // conform to RFC1035.
  string zone = 4 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];
}

// Request message for GetInstanceGroupManagers.
message GetInstanceGroupManagersRequest {
  // The name of the managed instance group.
  string instance_group_manager = 1 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 2 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone where the managed instance group is located.
  string zone = 3 [(google.api.field_behavior) = REQUIRED];
}

// Request message for InsertInstanceGroupManagers.
message InsertInstanceGroupManagersRequest {
  // The InstanceGroupManager for this request.
  optional google.cloud.cpp.compute.v1.InstanceGroupManager
      instance_group_manager_resource = 1 [json_name = "__json_request_body"];

  // Project ID for this request.
  string project = 2 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so
  // that if you must retry your request, the server will know to ignore the
  // request if it has already been completed. For example, consider a situation
  // where you make an initial request and the request times out. If you make
  // the request again with the same request ID, the server can check if
  // original operation with the same request ID was received, and if so, will
  // ignore the second request. This prevents clients from accidentally creating
  // duplicate commitments. The request ID must be a valid UUID with the
  // exception that zero UUID is not supported (
  // 00000000-0000-0000-0000-000000000000).
  optional string request_id = 3;

  // The name of the zone where you want to create the managed instance group.
  string zone = 4 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];
}

// Request message for ListErrors.
message ListErrorsRequest {
  // A filter expression that filters resources listed in the response. Most
  // Compute resources support two types of filter expressions: expressions that
  // support regular expressions and expressions that follow API improvement
  // proposal AIP-160. If you want to use AIP-160, your expression must specify
  // the field name, an operator, and the value that you want to use for
  // filtering. The value must be a string, a number, or a boolean. The operator
  // must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you
  // are filtering Compute Engine instances, you can exclude instances named
  // `example-instance` by specifying `name != example-instance`. The `:`
  // operator can be used with string fields to match substrings. For non-string
  // fields it is equivalent to the `=` operator. The `:*` comparison can be
  // used to test whether a key has been defined. For example, to find all
  // objects with `owner` label use: ``` labels.owner:* ``` You can also filter
  // nested fields. For example, you could specify `scheduling.automaticRestart
  // = false` to include instances only if they are not scheduled for automatic
  // restarts. You can use filtering on nested fields to filter based on
  // resource labels. To filter on multiple expressions, provide each separate
  // expression within parentheses. For example: ```
  // (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By
  // default, each expression is an `AND` expression. However, you can include
  // `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform =
  // "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
  // (scheduling.automaticRestart = true) ``` If you want to use a regular
  // expression, use the `eq` (equal) or `ne` (not equal) operator against a
  // single un-parenthesized expression with or without quotes or against
  // multiple parenthesized expressions. Examples: `fieldname eq unquoted
  // literal` `fieldname eq 'single quoted literal'` `fieldname eq "double
  // quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The
  // literal value is interpreted as a regular expression using Google RE2
  // library syntax. The literal value must match the entire field. For example,
  // to filter for instances that do not end with name "instance", you would use
  // `name ne .*instance`.
  optional string filter = 1;

  // The name of the managed instance group. It must be a string that meets the
  // requirements in RFC1035, or an unsigned long integer: must match regexp
  // pattern: (?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?)|1-9{0,19}.
  string instance_group_manager = 2 [(google.api.field_behavior) = REQUIRED];

  // The maximum number of results per page that should be returned. If the
  // number of available results is larger than `maxResults`, Compute Engine
  // returns a `nextPageToken` that can be used to get the next page of results
  // in subsequent list requests. Acceptable values are `0` to `500`, inclusive.
  // (Default: `500`)
  optional uint32 max_results = 3;

  // Sorts list results by a certain order. By default, results are returned in
  // alphanumerical order based on the resource name. You can also sort results
  // in descending order based on the creation timestamp using
  // `orderBy="creationTimestamp desc"`. This sorts results based on the
  // `creationTimestamp` field in reverse chronological order (newest result
  // first). Use this to sort resources like operations so that the newest
  // operation is returned first. Currently, only sorting by `name` or
  // `creationTimestamp desc` is supported.
  optional string order_by = 4;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken`
  // returned by a previous list request to get the next page of results.
  optional string page_token = 5;

  // Project ID for this request.
  string project = 6 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case
  // of failure. The default value is false.
  optional bool return_partial_success = 7;

  // The name of the zone where the managed instance group is located. It should
  // conform to RFC1035.
  string zone = 8 [(google.api.field_behavior) = REQUIRED];
}

// Request message for ListInstanceGroupManagers.
message ListInstanceGroupManagersRequest {
  // A filter expression that filters resources listed in the response. Most
  // Compute resources support two types of filter expressions: expressions that
  // support regular expressions and expressions that follow API improvement
  // proposal AIP-160. If you want to use AIP-160, your expression must specify
  // the field name, an operator, and the value that you want to use for
  // filtering. The value must be a string, a number, or a boolean. The operator
  // must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you
  // are filtering Compute Engine instances, you can exclude instances named
  // `example-instance` by specifying `name != example-instance`. The `:`
  // operator can be used with string fields to match substrings. For non-string
  // fields it is equivalent to the `=` operator. The `:*` comparison can be
  // used to test whether a key has been defined. For example, to find all
  // objects with `owner` label use: ``` labels.owner:* ``` You can also filter
  // nested fields. For example, you could specify `scheduling.automaticRestart
  // = false` to include instances only if they are not scheduled for automatic
  // restarts. You can use filtering on nested fields to filter based on
  // resource labels. To filter on multiple expressions, provide each separate
  // expression within parentheses. For example: ```
  // (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By
  // default, each expression is an `AND` expression. However, you can include
  // `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform =
  // "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
  // (scheduling.automaticRestart = true) ``` If you want to use a regular
  // expression, use the `eq` (equal) or `ne` (not equal) operator against a
  // single un-parenthesized expression with or without quotes or against
  // multiple parenthesized expressions. Examples: `fieldname eq unquoted
  // literal` `fieldname eq 'single quoted literal'` `fieldname eq "double
  // quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The
  // literal value is interpreted as a regular expression using Google RE2
  // library syntax. The literal value must match the entire field. For example,
  // to filter for instances that do not end with name "instance", you would use
  // `name ne .*instance`.
  optional string filter = 1;

  // The maximum number of results per page that should be returned. If the
  // number of available results is larger than `maxResults`, Compute Engine
  // returns a `nextPageToken` that can be used to get the next page of results
  // in subsequent list requests. Acceptable values are `0` to `500`, inclusive.
  // (Default: `500`)
  optional uint32 max_results = 2;

  // Sorts list results by a certain order. By default, results are returned in
  // alphanumerical order based on the resource name. You can also sort results
  // in descending order based on the creation timestamp using
  // `orderBy="creationTimestamp desc"`. This sorts results based on the
  // `creationTimestamp` field in reverse chronological order (newest result
  // first). Use this to sort resources like operations so that the newest
  // operation is returned first. Currently, only sorting by `name` or
  // `creationTimestamp desc` is supported.
  optional string order_by = 3;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken`
  // returned by a previous list request to get the next page of results.
  optional string page_token = 4;

  // Project ID for this request.
  string project = 5 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case
  // of failure. The default value is false.
  optional bool return_partial_success = 6;

  // The name of the zone where the managed instance group is located.
  string zone = 7 [(google.api.field_behavior) = REQUIRED];
}

// Request message for ListManagedInstances.
message ListManagedInstancesRequest {
  // A filter expression that filters resources listed in the response. Most
  // Compute resources support two types of filter expressions: expressions that
  // support regular expressions and expressions that follow API improvement
  // proposal AIP-160. If you want to use AIP-160, your expression must specify
  // the field name, an operator, and the value that you want to use for
  // filtering. The value must be a string, a number, or a boolean. The operator
  // must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you
  // are filtering Compute Engine instances, you can exclude instances named
  // `example-instance` by specifying `name != example-instance`. The `:`
  // operator can be used with string fields to match substrings. For non-string
  // fields it is equivalent to the `=` operator. The `:*` comparison can be
  // used to test whether a key has been defined. For example, to find all
  // objects with `owner` label use: ``` labels.owner:* ``` You can also filter
  // nested fields. For example, you could specify `scheduling.automaticRestart
  // = false` to include instances only if they are not scheduled for automatic
  // restarts. You can use filtering on nested fields to filter based on
  // resource labels. To filter on multiple expressions, provide each separate
  // expression within parentheses. For example: ```
  // (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By
  // default, each expression is an `AND` expression. However, you can include
  // `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform =
  // "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
  // (scheduling.automaticRestart = true) ``` If you want to use a regular
  // expression, use the `eq` (equal) or `ne` (not equal) operator against a
  // single un-parenthesized expression with or without quotes or against
  // multiple parenthesized expressions. Examples: `fieldname eq unquoted
  // literal` `fieldname eq 'single quoted literal'` `fieldname eq "double
  // quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The
  // literal value is interpreted as a regular expression using Google RE2
  // library syntax. The literal value must match the entire field. For example,
  // to filter for instances that do not end with name "instance", you would use
  // `name ne .*instance`.
  optional string filter = 1;

  // The name of the managed instance group.
  string instance_group_manager = 2 [(google.api.field_behavior) = REQUIRED];

  // The maximum number of results per page that should be returned. If the
  // number of available results is larger than `maxResults`, Compute Engine
  // returns a `nextPageToken` that can be used to get the next page of results
  // in subsequent list requests. Acceptable values are `0` to `500`, inclusive.
  // (Default: `500`)
  optional uint32 max_results = 3;

  // Sorts list results by a certain order. By default, results are returned in
  // alphanumerical order based on the resource name. You can also sort results
  // in descending order based on the creation timestamp using
  // `orderBy="creationTimestamp desc"`. This sorts results based on the
  // `creationTimestamp` field in reverse chronological order (newest result
  // first). Use this to sort resources like operations so that the newest
  // operation is returned first. Currently, only sorting by `name` or
  // `creationTimestamp desc` is supported.
  optional string order_by = 4;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken`
  // returned by a previous list request to get the next page of results.
  optional string page_token = 5;

  // Project ID for this request.
  string project = 6 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case
  // of failure. The default value is false.
  optional bool return_partial_success = 7;

  // The name of the zone where the managed instance group is located.
  string zone = 8 [(google.api.field_behavior) = REQUIRED];
}

// Request message for ListPerInstanceConfigs.
message ListPerInstanceConfigsRequest {
  // A filter expression that filters resources listed in the response. Most
  // Compute resources support two types of filter expressions: expressions that
  // support regular expressions and expressions that follow API improvement
  // proposal AIP-160. If you want to use AIP-160, your expression must specify
  // the field name, an operator, and the value that you want to use for
  // filtering. The value must be a string, a number, or a boolean. The operator
  // must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you
  // are filtering Compute Engine instances, you can exclude instances named
  // `example-instance` by specifying `name != example-instance`. The `:`
  // operator can be used with string fields to match substrings. For non-string
  // fields it is equivalent to the `=` operator. The `:*` comparison can be
  // used to test whether a key has been defined. For example, to find all
  // objects with `owner` label use: ``` labels.owner:* ``` You can also filter
  // nested fields. For example, you could specify `scheduling.automaticRestart
  // = false` to include instances only if they are not scheduled for automatic
  // restarts. You can use filtering on nested fields to filter based on
  // resource labels. To filter on multiple expressions, provide each separate
  // expression within parentheses. For example: ```
  // (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By
  // default, each expression is an `AND` expression. However, you can include
  // `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform =
  // "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
  // (scheduling.automaticRestart = true) ``` If you want to use a regular
  // expression, use the `eq` (equal) or `ne` (not equal) operator against a
  // single un-parenthesized expression with or without quotes or against
  // multiple parenthesized expressions. Examples: `fieldname eq unquoted
  // literal` `fieldname eq 'single quoted literal'` `fieldname eq "double
  // quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The
  // literal value is interpreted as a regular expression using Google RE2
  // library syntax. The literal value must match the entire field. For example,
  // to filter for instances that do not end with name "instance", you would use
  // `name ne .*instance`.
  optional string filter = 1;

  // The name of the managed instance group. It should conform to RFC1035.
  string instance_group_manager = 2 [(google.api.field_behavior) = REQUIRED];

  // The maximum number of results per page that should be returned. If the
  // number of available results is larger than `maxResults`, Compute Engine
  // returns a `nextPageToken` that can be used to get the next page of results
  // in subsequent list requests. Acceptable values are `0` to `500`, inclusive.
  // (Default: `500`)
  optional uint32 max_results = 3;

  // Sorts list results by a certain order. By default, results are returned in
  // alphanumerical order based on the resource name. You can also sort results
  // in descending order based on the creation timestamp using
  // `orderBy="creationTimestamp desc"`. This sorts results based on the
  // `creationTimestamp` field in reverse chronological order (newest result
  // first). Use this to sort resources like operations so that the newest
  // operation is returned first. Currently, only sorting by `name` or
  // `creationTimestamp desc` is supported.
  optional string order_by = 4;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken`
  // returned by a previous list request to get the next page of results.
  optional string page_token = 5;

  // Project ID for this request.
  string project = 6 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case
  // of failure. The default value is false.
  optional bool return_partial_success = 7;

  // The name of the zone where the managed instance group is located. It should
  // conform to RFC1035.
  string zone = 8 [(google.api.field_behavior) = REQUIRED];
}

// Request message for PatchInstanceGroupManagers.
message PatchInstanceGroupManagersRequest {
  // The name of the instance group manager.
  string instance_group_manager = 1 [(google.api.field_behavior) = REQUIRED];

  // The InstanceGroupManager for this request.
  optional google.cloud.cpp.compute.v1.InstanceGroupManager
      instance_group_manager_resource = 2 [json_name = "__json_request_body"];

  // Project ID for this request.
  string project = 3 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so
  // that if you must retry your request, the server will know to ignore the
  // request if it has already been completed. For example, consider a situation
  // where you make an initial request and the request times out. If you make
  // the request again with the same request ID, the server can check if
  // original operation with the same request ID was received, and if so, will
  // ignore the second request. This prevents clients from accidentally creating
  // duplicate commitments. The request ID must be a valid UUID with the
  // exception that zero UUID is not supported (
  // 00000000-0000-0000-0000-000000000000).
  optional string request_id = 4;

  // The name of the zone where you want to create the managed instance group.
  string zone = 5 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];
}

// Request message for PatchPerInstanceConfigs.
message PatchPerInstanceConfigsRequest {
  // The name of the managed instance group. It should conform to RFC1035.
  string instance_group_manager = 1 [(google.api.field_behavior) = REQUIRED];

  // The InstanceGroupManagersPatchPerInstanceConfigsReq for this request.
  optional google.cloud.cpp.compute.v1
      .InstanceGroupManagersPatchPerInstanceConfigsReq
          instance_group_managers_patch_per_instance_configs_req_resource = 2
      [json_name = "__json_request_body"];

  // Project ID for this request.
  string project = 3 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so
  // that if you must retry your request, the server will know to ignore the
  // request if it has already been completed. For example, consider a situation
  // where you make an initial request and the request times out. If you make
  // the request again with the same request ID, the server can check if
  // original operation with the same request ID was received, and if so, will
  // ignore the second request. This prevents clients from accidentally creating
  // duplicate commitments. The request ID must be a valid UUID with the
  // exception that zero UUID is not supported (
  // 00000000-0000-0000-0000-000000000000).
  optional string request_id = 4;

  // The name of the zone where the managed instance group is located. It should
  // conform to RFC1035.
  string zone = 5 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];
}

// Request message for RecreateInstances.
message RecreateInstancesRequest {
  // The name of the managed instance group.
  string instance_group_manager = 1 [(google.api.field_behavior) = REQUIRED];

  // The InstanceGroupManagersRecreateInstancesRequest for this request.
  optional
      google.cloud.cpp.compute.v1.InstanceGroupManagersRecreateInstancesRequest
          instance_group_managers_recreate_instances_request_resource = 2
      [json_name = "__json_request_body"];

  // Project ID for this request.
  string project = 3 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so
  // that if you must retry your request, the server will know to ignore the
  // request if it has already been completed. For example, consider a situation
  // where you make an initial request and the request times out. If you make
  // the request again with the same request ID, the server can check if
  // original operation with the same request ID was received, and if so, will
  // ignore the second request. This prevents clients from accidentally creating
  // duplicate commitments. The request ID must be a valid UUID with the
  // exception that zero UUID is not supported (
  // 00000000-0000-0000-0000-000000000000).
  optional string request_id = 4;

  // The name of the zone where the managed instance group is located.
  string zone = 5 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];
}

// Request message for Resize.
message ResizeRequest {
  // The name of the managed instance group.
  string instance_group_manager = 1 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 2 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so
  // that if you must retry your request, the server will know to ignore the
  // request if it has already been completed. For example, consider a situation
  // where you make an initial request and the request times out. If you make
  // the request again with the same request ID, the server can check if
  // original operation with the same request ID was received, and if so, will
  // ignore the second request. This prevents clients from accidentally creating
  // duplicate commitments. The request ID must be a valid UUID with the
  // exception that zero UUID is not supported (
  // 00000000-0000-0000-0000-000000000000).
  optional string request_id = 3;

  // The number of running instances that the managed instance group should
  // maintain at any given time. The group automatically adds or removes
  // instances to maintain the number of instances specified by this parameter.
  int32 size = 4 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone where the managed instance group is located.
  string zone = 5 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];
}

// Request message for SetInstanceTemplate.
message SetInstanceTemplateRequest {
  // The name of the managed instance group.
  string instance_group_manager = 1 [(google.api.field_behavior) = REQUIRED];

  // The InstanceGroupManagersSetInstanceTemplateRequest for this request.
  optional google.cloud.cpp.compute.v1
      .InstanceGroupManagersSetInstanceTemplateRequest
          instance_group_managers_set_instance_template_request_resource = 2
      [json_name = "__json_request_body"];

  // Project ID for this request.
  string project = 3 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so
  // that if you must retry your request, the server will know to ignore the
  // request if it has already been completed. For example, consider a situation
  // where you make an initial request and the request times out. If you make
  // the request again with the same request ID, the server can check if
  // original operation with the same request ID was received, and if so, will
  // ignore the second request. This prevents clients from accidentally creating
  // duplicate commitments. The request ID must be a valid UUID with the
  // exception that zero UUID is not supported (
  // 00000000-0000-0000-0000-000000000000).
  optional string request_id = 4;

  // The name of the zone where the managed instance group is located.
  string zone = 5 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];
}

// Request message for SetTargetPools.
message SetTargetPoolsRequest {
  // The name of the managed instance group.
  string instance_group_manager = 1 [(google.api.field_behavior) = REQUIRED];

  // The InstanceGroupManagersSetTargetPoolsRequest for this request.
  optional
      google.cloud.cpp.compute.v1.InstanceGroupManagersSetTargetPoolsRequest
          instance_group_managers_set_target_pools_request_resource = 2
      [json_name = "__json_request_body"];

  // Project ID for this request.
  string project = 3 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so
  // that if you must retry your request, the server will know to ignore the
  // request if it has already been completed. For example, consider a situation
  // where you make an initial request and the request times out. If you make
  // the request again with the same request ID, the server can check if
  // original operation with the same request ID was received, and if so, will
  // ignore the second request. This prevents clients from accidentally creating
  // duplicate commitments. The request ID must be a valid UUID with the
  // exception that zero UUID is not supported (
  // 00000000-0000-0000-0000-000000000000).
  optional string request_id = 4;

  // The name of the zone where the managed instance group is located.
  string zone = 5 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];
}

// Request message for UpdatePerInstanceConfigs.
message UpdatePerInstanceConfigsRequest {
  // The name of the managed instance group. It should conform to RFC1035.
  string instance_group_manager = 1 [(google.api.field_behavior) = REQUIRED];

  // The InstanceGroupManagersUpdatePerInstanceConfigsReq for this request.
  optional google.cloud.cpp.compute.v1
      .InstanceGroupManagersUpdatePerInstanceConfigsReq
          instance_group_managers_update_per_instance_configs_req_resource = 2
      [json_name = "__json_request_body"];

  // Project ID for this request.
  string project = 3 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so
  // that if you must retry your request, the server will know to ignore the
  // request if it has already been completed. For example, consider a situation
  // where you make an initial request and the request times out. If you make
  // the request again with the same request ID, the server can check if
  // original operation with the same request ID was received, and if so, will
  // ignore the second request. This prevents clients from accidentally creating
  // duplicate commitments. The request ID must be a valid UUID with the
  // exception that zero UUID is not supported (
  // 00000000-0000-0000-0000-000000000000).
  optional string request_id = 4;

  // The name of the zone where the managed instance group is located. It should
  // conform to RFC1035.
  string zone = 5 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];
}
