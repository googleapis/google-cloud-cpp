// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/compute/region_instance_group_managers/v1/region_instance_group_managers.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_REGION_INSTANCE_GROUP_MANAGERS_V1_INTERNAL_REGION_INSTANCE_GROUP_MANAGERS_REST_LOGGING_DECORATOR_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_REGION_INSTANCE_GROUP_MANAGERS_V1_INTERNAL_REGION_INSTANCE_GROUP_MANAGERS_REST_LOGGING_DECORATOR_H

#include "google/cloud/compute/region_instance_group_managers/v1/internal/region_instance_group_managers_rest_stub.h"
#include "google/cloud/future.h"
#include "google/cloud/internal/rest_context.h"
#include "google/cloud/tracing_options.h"
#include "google/cloud/version.h"
#include <google/cloud/compute/region_instance_group_managers/v1/region_instance_group_managers.pb.h>
#include <memory>
#include <set>
#include <string>

namespace google {
namespace cloud {
namespace compute_region_instance_group_managers_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

class RegionInstanceGroupManagersRestLogging : public RegionInstanceGroupManagersRestStub {
 public:
  ~RegionInstanceGroupManagersRestLogging() override = default;
  RegionInstanceGroupManagersRestLogging(std::shared_ptr<RegionInstanceGroupManagersRestStub> child,
                       TracingOptions tracing_options,
                       std::set<std::string> components);

  StatusOr<google::cloud::cpp::compute::v1::Operation> AbandonInstances(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::regionInstanceGroupManagers::v1::AbandonInstancesRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation> ApplyUpdatesToInstances(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::regionInstanceGroupManagers::v1::ApplyUpdatesToInstancesRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation> CreateInstances(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::regionInstanceGroupManagers::v1::CreateInstancesRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteRegionInstanceGroupManagers(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::regionInstanceGroupManagers::v1::DeleteRegionInstanceGroupManagersRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteInstances(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::regionInstanceGroupManagers::v1::DeleteInstancesRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation> DeletePerInstanceConfigs(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::regionInstanceGroupManagers::v1::DeletePerInstanceConfigsRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::InstanceGroupManager> GetRegionInstanceGroupManagers(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::regionInstanceGroupManagers::v1::GetRegionInstanceGroupManagersRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation> InsertRegionInstanceGroupManagers(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::regionInstanceGroupManagers::v1::InsertRegionInstanceGroupManagersRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::RegionInstanceGroupManagerList> ListRegionInstanceGroupManagers(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::regionInstanceGroupManagers::v1::ListRegionInstanceGroupManagersRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::RegionInstanceGroupManagersListErrorsResponse> ListErrors(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::regionInstanceGroupManagers::v1::ListErrorsRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::RegionInstanceGroupManagersListInstancesResponse> ListManagedInstances(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::regionInstanceGroupManagers::v1::ListManagedInstancesRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::RegionInstanceGroupManagersListInstanceConfigsResp> ListPerInstanceConfigs(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::regionInstanceGroupManagers::v1::ListPerInstanceConfigsRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation> PatchRegionInstanceGroupManagers(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::regionInstanceGroupManagers::v1::PatchRegionInstanceGroupManagersRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation> PatchPerInstanceConfigs(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::regionInstanceGroupManagers::v1::PatchPerInstanceConfigsRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation> RecreateInstances(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::regionInstanceGroupManagers::v1::RecreateInstancesRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation> Resize(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::regionInstanceGroupManagers::v1::ResizeRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation> SetInstanceTemplate(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::regionInstanceGroupManagers::v1::SetInstanceTemplateRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation> SetTargetPools(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::regionInstanceGroupManagers::v1::SetTargetPoolsRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation> UpdatePerInstanceConfigs(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::regionInstanceGroupManagers::v1::UpdatePerInstanceConfigsRequest const& request) override;

 private:
  std::shared_ptr<RegionInstanceGroupManagersRestStub> child_;
  TracingOptions tracing_options_;
  std::set<std::string> components_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_region_instance_group_managers_v1_internal
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_REGION_INSTANCE_GROUP_MANAGERS_V1_INTERNAL_REGION_INSTANCE_GROUP_MANAGERS_REST_LOGGING_DECORATOR_H
