// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/compute/region_commitments/v1/region_commitments.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_REGION_COMMITMENTS_V1_REGION_COMMITMENTS_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_REGION_COMMITMENTS_V1_REGION_COMMITMENTS_CLIENT_H

#include "google/cloud/compute/region_commitments/v1/region_commitments_rest_connection.h"
#include "google/cloud/experimental_tag.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace compute_region_commitments_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service for the regionCommitments resource.
/// https://cloud.google.com/compute/docs/reference/rest/v1/regionCommitments
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class RegionCommitmentsClient {
 public:
  explicit RegionCommitmentsClient(ExperimentalTag, std::shared_ptr<RegionCommitmentsConnection> connection, Options opts = {});
  ~RegionCommitmentsClient();

  ///@{
  /// @name Copy and move support
  RegionCommitmentsClient(RegionCommitmentsClient const&) = default;
  RegionCommitmentsClient& operator=(RegionCommitmentsClient const&) = default;
  RegionCommitmentsClient(RegionCommitmentsClient&&) = default;
  RegionCommitmentsClient& operator=(RegionCommitmentsClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(RegionCommitmentsClient const& a, RegionCommitmentsClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(RegionCommitmentsClient const& a, RegionCommitmentsClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Retrieves an aggregated list of commitments by region.
  ///
  /// @param project  Project ID for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::CommitmentAggregatedList,google/cloud/compute/v1/internal/common.proto#L3774}
  ///
  /// [google.cloud.cpp.compute.regionCommitments.v1.AggregatedListRegionCommitmentsRequest]: @googleapis_reference_link{google/cloud/compute/region_commitments/v1/region_commitments.proto#L83}
  /// [google.cloud.cpp.compute.v1.CommitmentAggregatedList]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L3774}
  ///
  StatusOr<google::cloud::cpp::compute::v1::CommitmentAggregatedList>
  AggregatedListRegionCommitments(std::string const& project, Options opts = {});

  ///
  /// Retrieves an aggregated list of commitments by region.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::regionCommitments::v1::AggregatedListRegionCommitmentsRequest,google/cloud/compute/region_commitments/v1/region_commitments.proto#L83}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::CommitmentAggregatedList,google/cloud/compute/v1/internal/common.proto#L3774}
  ///
  /// [google.cloud.cpp.compute.regionCommitments.v1.AggregatedListRegionCommitmentsRequest]: @googleapis_reference_link{google/cloud/compute/region_commitments/v1/region_commitments.proto#L83}
  /// [google.cloud.cpp.compute.v1.CommitmentAggregatedList]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L3774}
  ///
  StatusOr<google::cloud::cpp::compute::v1::CommitmentAggregatedList>
  AggregatedListRegionCommitments(google::cloud::cpp::compute::regionCommitments::v1::AggregatedListRegionCommitmentsRequest const& request, Options opts = {});

  ///
  /// Returns the specified commitment resource.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region for this request.
  /// @param commitment  Name of the commitment to return.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Commitment,google/cloud/compute/v1/internal/common.proto#L3663}
  ///
  /// [google.cloud.cpp.compute.regionCommitments.v1.GetRegionCommitmentsRequest]: @googleapis_reference_link{google/cloud/compute/region_commitments/v1/region_commitments.proto#L157}
  /// [google.cloud.cpp.compute.v1.Commitment]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L3663}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Commitment>
  GetRegionCommitments(std::string const& project, std::string const& region, std::string const& commitment, Options opts = {});

  ///
  /// Returns the specified commitment resource.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::regionCommitments::v1::GetRegionCommitmentsRequest,google/cloud/compute/region_commitments/v1/region_commitments.proto#L157}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Commitment,google/cloud/compute/v1/internal/common.proto#L3663}
  ///
  /// [google.cloud.cpp.compute.regionCommitments.v1.GetRegionCommitmentsRequest]: @googleapis_reference_link{google/cloud/compute/region_commitments/v1/region_commitments.proto#L157}
  /// [google.cloud.cpp.compute.v1.Commitment]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L3663}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Commitment>
  GetRegionCommitments(google::cloud::cpp::compute::regionCommitments::v1::GetRegionCommitmentsRequest const& request, Options opts = {});

  ///
  /// Creates a commitment in the specified project using the data included in
  /// the request.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region for this request.
  /// @param commitment_resource  The Commitment for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.regionCommitments.v1.InsertRegionCommitmentsRequest]: @googleapis_reference_link{google/cloud/compute/region_commitments/v1/region_commitments.proto#L169}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  InsertRegionCommitments(std::string const& project, std::string const& region, google::cloud::cpp::compute::v1::Commitment const& commitment_resource, Options opts = {});

  ///
  /// Creates a commitment in the specified project using the data included in
  /// the request.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::regionCommitments::v1::InsertRegionCommitmentsRequest,google/cloud/compute/region_commitments/v1/region_commitments.proto#L169}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.regionCommitments.v1.InsertRegionCommitmentsRequest]: @googleapis_reference_link{google/cloud/compute/region_commitments/v1/region_commitments.proto#L169}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  InsertRegionCommitments(google::cloud::cpp::compute::regionCommitments::v1::InsertRegionCommitmentsRequest const& request, Options opts = {});

  ///
  /// Retrieves a list of commitments contained within the specified region.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Commitment,google/cloud/compute/v1/internal/common.proto#L3663}
  ///
  /// [google.cloud.cpp.compute.regionCommitments.v1.ListRegionCommitmentsRequest]: @googleapis_reference_link{google/cloud/compute/region_commitments/v1/region_commitments.proto#L193}
  /// [google.cloud.cpp.compute.v1.Commitment]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L3663}
  ///
  StreamRange<google::cloud::cpp::compute::v1::Commitment>
  ListRegionCommitments(std::string const& project, std::string const& region, Options opts = {});

  ///
  /// Retrieves a list of commitments contained within the specified region.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::regionCommitments::v1::ListRegionCommitmentsRequest,google/cloud/compute/region_commitments/v1/region_commitments.proto#L193}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Commitment,google/cloud/compute/v1/internal/common.proto#L3663}
  ///
  /// [google.cloud.cpp.compute.regionCommitments.v1.ListRegionCommitmentsRequest]: @googleapis_reference_link{google/cloud/compute/region_commitments/v1/region_commitments.proto#L193}
  /// [google.cloud.cpp.compute.v1.Commitment]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L3663}
  ///
  StreamRange<google::cloud::cpp::compute::v1::Commitment>
  ListRegionCommitments(google::cloud::cpp::compute::regionCommitments::v1::ListRegionCommitmentsRequest request, Options opts = {});

  ///
  /// Updates the specified commitment with the data included in the request.
  /// Update is performed only on selected fields included as part of
  /// update-mask. Only the following fields can be modified: auto_renew.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region for this request.
  /// @param commitment  Name of the commitment for which auto renew is being updated.
  /// @param commitment_resource  The Commitment for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.regionCommitments.v1.UpdateRegionCommitmentsRequest]: @googleapis_reference_link{google/cloud/compute/region_commitments/v1/region_commitments.proto#L261}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  UpdateRegionCommitments(std::string const& project, std::string const& region, std::string const& commitment, google::cloud::cpp::compute::v1::Commitment const& commitment_resource, Options opts = {});

  ///
  /// Updates the specified commitment with the data included in the request.
  /// Update is performed only on selected fields included as part of
  /// update-mask. Only the following fields can be modified: auto_renew.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::regionCommitments::v1::UpdateRegionCommitmentsRequest,google/cloud/compute/region_commitments/v1/region_commitments.proto#L261}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.regionCommitments.v1.UpdateRegionCommitmentsRequest]: @googleapis_reference_link{google/cloud/compute/region_commitments/v1/region_commitments.proto#L261}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  UpdateRegionCommitments(google::cloud::cpp::compute::regionCommitments::v1::UpdateRegionCommitmentsRequest const& request, Options opts = {});

 private:
  std::shared_ptr<RegionCommitmentsConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_region_commitments_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_REGION_COMMITMENTS_V1_REGION_COMMITMENTS_CLIENT_H
