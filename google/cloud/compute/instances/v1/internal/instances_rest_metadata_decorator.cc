// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/compute/instances/v1/instances.proto

#include "google/cloud/compute/instances/v1/internal/instances_rest_metadata_decorator.h"
#include "google/cloud/common_options.h"
#include "google/cloud/internal/absl_str_cat_quiet.h"
#include "google/cloud/internal/absl_str_join_quiet.h"
#include "google/cloud/internal/api_client_header.h"
#include "google/cloud/status_or.h"
#include "absl/strings/str_format.h"
#include <memory>

namespace google {
namespace cloud {
namespace compute_instances_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

InstancesRestMetadata::InstancesRestMetadata(
    std::shared_ptr<InstancesRestStub> child)
    : child_(std::move(child)),
      api_client_header_(
          google::cloud::internal::ApiClientHeader("generator")) {}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::AddAccessConfig(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::AddAccessConfigRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->AddAccessConfig(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::AddResourcePolicies(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::
        AddResourcePoliciesRequest const& request) {
  SetMetadata(rest_context);
  return child_->AddResourcePolicies(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::InstanceAggregatedList>
InstancesRestMetadata::AggregatedListInstances(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::
        AggregatedListInstancesRequest const& request) {
  SetMetadata(rest_context);
  return child_->AggregatedListInstances(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::AttachDisk(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::AttachDiskRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->AttachDisk(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::BulkInsert(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::BulkInsertRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->BulkInsert(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::DeleteInstances(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::DeleteInstancesRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->DeleteInstances(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::DeleteAccessConfig(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::DeleteAccessConfigRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->DeleteAccessConfig(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::DetachDisk(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::DetachDiskRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->DetachDisk(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Instance>
InstancesRestMetadata::GetInstances(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::GetInstancesRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->GetInstances(rest_context, request);
}

StatusOr<
    google::cloud::cpp::compute::v1::InstancesGetEffectiveFirewallsResponse>
InstancesRestMetadata::GetEffectiveFirewalls(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::
        GetEffectiveFirewallsRequest const& request) {
  SetMetadata(rest_context);
  return child_->GetEffectiveFirewalls(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::GuestAttributes>
InstancesRestMetadata::GetGuestAttributes(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::GetGuestAttributesRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->GetGuestAttributes(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Policy>
InstancesRestMetadata::GetIamPolicy(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::GetIamPolicyRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->GetIamPolicy(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Screenshot>
InstancesRestMetadata::GetScreenshot(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::GetScreenshotRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->GetScreenshot(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::SerialPortOutput>
InstancesRestMetadata::GetSerialPortOutput(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::
        GetSerialPortOutputRequest const& request) {
  SetMetadata(rest_context);
  return child_->GetSerialPortOutput(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::ShieldedInstanceIdentity>
InstancesRestMetadata::GetShieldedInstanceIdentity(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::
        GetShieldedInstanceIdentityRequest const& request) {
  SetMetadata(rest_context);
  return child_->GetShieldedInstanceIdentity(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::InsertInstances(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::InsertInstancesRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->InsertInstances(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::InstanceList>
InstancesRestMetadata::ListInstances(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::ListInstancesRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->ListInstances(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::InstanceListReferrers>
InstancesRestMetadata::ListReferrers(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::ListReferrersRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->ListReferrers(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::RemoveResourcePolicies(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::
        RemoveResourcePoliciesRequest const& request) {
  SetMetadata(rest_context);
  return child_->RemoveResourcePolicies(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::Reset(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::ResetRequest const& request) {
  SetMetadata(rest_context);
  return child_->Reset(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::Resume(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::ResumeRequest const& request) {
  SetMetadata(rest_context);
  return child_->Resume(rest_context, request);
}

Status InstancesRestMetadata::SendDiagnosticInterrupt(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::
        SendDiagnosticInterruptRequest const& request) {
  SetMetadata(rest_context);
  return child_->SendDiagnosticInterrupt(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::SetDeletionProtection(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::
        SetDeletionProtectionRequest const& request) {
  SetMetadata(rest_context);
  return child_->SetDeletionProtection(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::SetDiskAutoDelete(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::SetDiskAutoDeleteRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->SetDiskAutoDelete(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Policy>
InstancesRestMetadata::SetIamPolicy(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::SetIamPolicyRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->SetIamPolicy(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::SetLabels(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::SetLabelsRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->SetLabels(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::SetMachineResources(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::
        SetMachineResourcesRequest const& request) {
  SetMetadata(rest_context);
  return child_->SetMachineResources(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::SetMachineType(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::SetMachineTypeRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->SetMachineType(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::SetMetadata(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::SetMetadataRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->SetMetadata(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::SetMinCpuPlatform(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::SetMinCpuPlatformRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->SetMinCpuPlatform(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::SetName(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::SetNameRequest const& request) {
  SetMetadata(rest_context);
  return child_->SetName(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::SetScheduling(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::SetSchedulingRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->SetScheduling(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::SetServiceAccount(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::SetServiceAccountRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->SetServiceAccount(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::SetShieldedInstanceIntegrityPolicy(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::
        SetShieldedInstanceIntegrityPolicyRequest const& request) {
  SetMetadata(rest_context);
  return child_->SetShieldedInstanceIntegrityPolicy(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::SetTags(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::SetTagsRequest const& request) {
  SetMetadata(rest_context);
  return child_->SetTags(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::SimulateMaintenanceEvent(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::
        SimulateMaintenanceEventRequest const& request) {
  SetMetadata(rest_context);
  return child_->SimulateMaintenanceEvent(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::Start(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::StartRequest const& request) {
  SetMetadata(rest_context);
  return child_->Start(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::StartWithEncryptionKey(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::
        StartWithEncryptionKeyRequest const& request) {
  SetMetadata(rest_context);
  return child_->StartWithEncryptionKey(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::Stop(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::StopRequest const& request) {
  SetMetadata(rest_context);
  return child_->Stop(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::Suspend(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::SuspendRequest const& request) {
  SetMetadata(rest_context);
  return child_->Suspend(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::TestPermissionsResponse>
InstancesRestMetadata::TestIamPermissions(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::TestIamPermissionsRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->TestIamPermissions(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::UpdateInstances(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::UpdateInstancesRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->UpdateInstances(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::UpdateAccessConfig(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::UpdateAccessConfigRequest const&
        request) {
  SetMetadata(rest_context);
  return child_->UpdateAccessConfig(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::UpdateDisplayDevice(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::
        UpdateDisplayDeviceRequest const& request) {
  SetMetadata(rest_context);
  return child_->UpdateDisplayDevice(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::UpdateNetworkInterface(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::
        UpdateNetworkInterfaceRequest const& request) {
  SetMetadata(rest_context);
  return child_->UpdateNetworkInterface(rest_context, request);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InstancesRestMetadata::UpdateShieldedInstanceConfig(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::instances::v1::
        UpdateShieldedInstanceConfigRequest const& request) {
  SetMetadata(rest_context);
  return child_->UpdateShieldedInstanceConfig(rest_context, request);
}

void InstancesRestMetadata::SetMetadata(
    rest_internal::RestContext& rest_context,
    std::vector<std::string> const& params) {
  rest_context.AddHeader("x-goog-api-client", api_client_header_);
  if (!params.empty()) {
    rest_context.AddHeader("x-goog-request-params", absl::StrJoin(params, "&"));
  }
  auto const& options = internal::CurrentOptions();
  if (options.has<UserProjectOption>()) {
    rest_context.AddHeader("x-goog-user-project",
                           options.get<UserProjectOption>());
  }
  if (options.has<google::cloud::QuotaUserOption>()) {
    rest_context.AddHeader("x-goog-quota-user",
                           options.get<google::cloud::QuotaUserOption>());
  }
  if (options.has<google::cloud::ServerTimeoutOption>()) {
    auto ms_rep = absl::StrCat(
        absl::Dec(options.get<google::cloud::ServerTimeoutOption>().count(),
                  absl::kZeroPad4));
    rest_context.AddHeader("x-server-timeout",
                           ms_rep.insert(ms_rep.size() - 3, "."));
  }
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_instances_v1_internal
}  // namespace cloud
}  // namespace google
