// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source:
// google/cloud/compute/public_advertised_prefixes/v1/public_advertised_prefixes.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_PUBLIC_ADVERTISED_PREFIXES_V1_PUBLIC_ADVERTISED_PREFIXES_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_PUBLIC_ADVERTISED_PREFIXES_V1_PUBLIC_ADVERTISED_PREFIXES_CLIENT_H

#include "google/cloud/compute/public_advertised_prefixes/v1/public_advertised_prefixes_rest_connection.h"
#include "google/cloud/experimental_tag.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <memory>

namespace google {
namespace cloud {
namespace compute_public_advertised_prefixes_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service for the publicAdvertisedPrefixes resource.
/// https://cloud.google.com/compute/docs/reference/rest/v1/publicAdvertisedPrefixes
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class PublicAdvertisedPrefixesClient {
 public:
  explicit PublicAdvertisedPrefixesClient(
      ExperimentalTag,
      std::shared_ptr<PublicAdvertisedPrefixesConnection> connection,
      Options opts = {});
  ~PublicAdvertisedPrefixesClient();

  ///@{
  /// @name Copy and move support
  PublicAdvertisedPrefixesClient(PublicAdvertisedPrefixesClient const&) =
      default;
  PublicAdvertisedPrefixesClient& operator=(
      PublicAdvertisedPrefixesClient const&) = default;
  PublicAdvertisedPrefixesClient(PublicAdvertisedPrefixesClient&&) = default;
  PublicAdvertisedPrefixesClient& operator=(PublicAdvertisedPrefixesClient&&) =
      default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(PublicAdvertisedPrefixesClient const& a,
                         PublicAdvertisedPrefixesClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(PublicAdvertisedPrefixesClient const& a,
                         PublicAdvertisedPrefixesClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Deletes the specified PublicAdvertisedPrefix
  ///
  /// @param project  Project ID for this request.
  /// @param public_advertised_prefix  Name of the PublicAdvertisedPrefix
  /// resource to delete.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.publicAdvertisedPrefixes.v1.DeletePublicAdvertisedPrefixesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/public_advertised_prefixes/v1/public_advertised_prefixes.proto#L84}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  DeletePublicAdvertisedPrefixes(std::string const& project,
                                 std::string const& public_advertised_prefix,
                                 Options opts = {});

  ///
  /// Deletes the specified PublicAdvertisedPrefix
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::publicAdvertisedPrefixes::v1::DeletePublicAdvertisedPrefixesRequest,google/cloud/compute/public_advertised_prefixes/v1/public_advertised_prefixes.proto#L84}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.publicAdvertisedPrefixes.v1.DeletePublicAdvertisedPrefixesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/public_advertised_prefixes/v1/public_advertised_prefixes.proto#L84}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  DeletePublicAdvertisedPrefixes(
      google::cloud::cpp::compute::publicAdvertisedPrefixes::v1::
          DeletePublicAdvertisedPrefixesRequest const& request,
      Options opts = {});

  ///
  /// Returns the specified PublicAdvertisedPrefix resource.
  ///
  /// @param project  Project ID for this request.
  /// @param public_advertised_prefix  Name of the PublicAdvertisedPrefix
  /// resource to return.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::PublicAdvertisedPrefix,google/cloud/compute/v1/internal/common.proto#L18860}
  ///
  /// [google.cloud.cpp.compute.publicAdvertisedPrefixes.v1.GetPublicAdvertisedPrefixesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/public_advertised_prefixes/v1/public_advertised_prefixes.proto#L105}
  /// [google.cloud.cpp.compute.v1.PublicAdvertisedPrefix]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L18860}
  ///
  StatusOr<google::cloud::cpp::compute::v1::PublicAdvertisedPrefix>
  GetPublicAdvertisedPrefixes(std::string const& project,
                              std::string const& public_advertised_prefix,
                              Options opts = {});

  ///
  /// Returns the specified PublicAdvertisedPrefix resource.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::publicAdvertisedPrefixes::v1::GetPublicAdvertisedPrefixesRequest,google/cloud/compute/public_advertised_prefixes/v1/public_advertised_prefixes.proto#L105}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::PublicAdvertisedPrefix,google/cloud/compute/v1/internal/common.proto#L18860}
  ///
  /// [google.cloud.cpp.compute.publicAdvertisedPrefixes.v1.GetPublicAdvertisedPrefixesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/public_advertised_prefixes/v1/public_advertised_prefixes.proto#L105}
  /// [google.cloud.cpp.compute.v1.PublicAdvertisedPrefix]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L18860}
  ///
  StatusOr<google::cloud::cpp::compute::v1::PublicAdvertisedPrefix>
  GetPublicAdvertisedPrefixes(
      google::cloud::cpp::compute::publicAdvertisedPrefixes::v1::
          GetPublicAdvertisedPrefixesRequest const& request,
      Options opts = {});

  ///
  /// Creates a PublicAdvertisedPrefix in the specified project using the
  /// parameters that are included in the request.
  ///
  /// @param project  Project ID for this request.
  /// @param public_advertised_prefix_resource  The PublicAdvertisedPrefix for
  /// this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.publicAdvertisedPrefixes.v1.InsertPublicAdvertisedPrefixesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/public_advertised_prefixes/v1/public_advertised_prefixes.proto#L114}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  InsertPublicAdvertisedPrefixes(
      std::string const& project,
      google::cloud::cpp::compute::v1::PublicAdvertisedPrefix const&
          public_advertised_prefix_resource,
      Options opts = {});

  ///
  /// Creates a PublicAdvertisedPrefix in the specified project using the
  /// parameters that are included in the request.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::publicAdvertisedPrefixes::v1::InsertPublicAdvertisedPrefixesRequest,google/cloud/compute/public_advertised_prefixes/v1/public_advertised_prefixes.proto#L114}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.publicAdvertisedPrefixes.v1.InsertPublicAdvertisedPrefixesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/public_advertised_prefixes/v1/public_advertised_prefixes.proto#L114}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  InsertPublicAdvertisedPrefixes(
      google::cloud::cpp::compute::publicAdvertisedPrefixes::v1::
          InsertPublicAdvertisedPrefixesRequest const& request,
      Options opts = {});

  ///
  /// Lists the PublicAdvertisedPrefixes for a project.
  ///
  /// @param project  Project ID for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::PublicAdvertisedPrefix,google/cloud/compute/v1/internal/common.proto#L18860}
  ///
  /// [google.cloud.cpp.compute.publicAdvertisedPrefixes.v1.ListPublicAdvertisedPrefixesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/public_advertised_prefixes/v1/public_advertised_prefixes.proto#L135}
  /// [google.cloud.cpp.compute.v1.PublicAdvertisedPrefix]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L18860}
  ///
  StreamRange<google::cloud::cpp::compute::v1::PublicAdvertisedPrefix>
  ListPublicAdvertisedPrefixes(std::string const& project, Options opts = {});

  ///
  /// Lists the PublicAdvertisedPrefixes for a project.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::publicAdvertisedPrefixes::v1::ListPublicAdvertisedPrefixesRequest,google/cloud/compute/public_advertised_prefixes/v1/public_advertised_prefixes.proto#L135}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::PublicAdvertisedPrefix,google/cloud/compute/v1/internal/common.proto#L18860}
  ///
  /// [google.cloud.cpp.compute.publicAdvertisedPrefixes.v1.ListPublicAdvertisedPrefixesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/public_advertised_prefixes/v1/public_advertised_prefixes.proto#L135}
  /// [google.cloud.cpp.compute.v1.PublicAdvertisedPrefix]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L18860}
  ///
  StreamRange<google::cloud::cpp::compute::v1::PublicAdvertisedPrefix>
  ListPublicAdvertisedPrefixes(
      google::cloud::cpp::compute::publicAdvertisedPrefixes::v1::
          ListPublicAdvertisedPrefixesRequest request,
      Options opts = {});

  ///
  /// Patches the specified Router resource with the data included in the
  /// request. This method supports PATCH semantics and uses JSON merge patch
  /// format and processing rules.
  ///
  /// @param project  Project ID for this request.
  /// @param public_advertised_prefix  Name of the PublicAdvertisedPrefix
  /// resource to patch.
  /// @param public_advertised_prefix_resource  The PublicAdvertisedPrefix for
  /// this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.publicAdvertisedPrefixes.v1.PatchPublicAdvertisedPrefixesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/public_advertised_prefixes/v1/public_advertised_prefixes.proto#L200}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  PatchPublicAdvertisedPrefixes(
      std::string const& project, std::string const& public_advertised_prefix,
      google::cloud::cpp::compute::v1::PublicAdvertisedPrefix const&
          public_advertised_prefix_resource,
      Options opts = {});

  ///
  /// Patches the specified Router resource with the data included in the
  /// request. This method supports PATCH semantics and uses JSON merge patch
  /// format and processing rules.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::publicAdvertisedPrefixes::v1::PatchPublicAdvertisedPrefixesRequest,google/cloud/compute/public_advertised_prefixes/v1/public_advertised_prefixes.proto#L200}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.publicAdvertisedPrefixes.v1.PatchPublicAdvertisedPrefixesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/public_advertised_prefixes/v1/public_advertised_prefixes.proto#L200}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  PatchPublicAdvertisedPrefixes(
      google::cloud::cpp::compute::publicAdvertisedPrefixes::v1::
          PatchPublicAdvertisedPrefixesRequest const& request,
      Options opts = {});

 private:
  std::shared_ptr<PublicAdvertisedPrefixesConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_public_advertised_prefixes_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_PUBLIC_ADVERTISED_PREFIXES_V1_PUBLIC_ADVERTISED_PREFIXES_CLIENT_H
