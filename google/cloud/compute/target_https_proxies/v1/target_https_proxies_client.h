// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_TARGET_HTTPS_PROXIES_V1_TARGET_HTTPS_PROXIES_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_TARGET_HTTPS_PROXIES_V1_TARGET_HTTPS_PROXIES_CLIENT_H

#include "google/cloud/compute/target_https_proxies/v1/target_https_proxies_rest_connection.h"
#include "google/cloud/experimental_tag.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace compute_target_https_proxies_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service for the targetHttpsProxies resource.
/// https://cloud.google.com/compute/docs/reference/rest/v1/targetHttpsProxies
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class TargetHttpsProxiesClient {
 public:
  explicit TargetHttpsProxiesClient(ExperimentalTag, std::shared_ptr<TargetHttpsProxiesConnection> connection, Options opts = {});
  ~TargetHttpsProxiesClient();

  ///@{
  /// @name Copy and move support
  TargetHttpsProxiesClient(TargetHttpsProxiesClient const&) = default;
  TargetHttpsProxiesClient& operator=(TargetHttpsProxiesClient const&) = default;
  TargetHttpsProxiesClient(TargetHttpsProxiesClient&&) = default;
  TargetHttpsProxiesClient& operator=(TargetHttpsProxiesClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(TargetHttpsProxiesClient const& a, TargetHttpsProxiesClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(TargetHttpsProxiesClient const& a, TargetHttpsProxiesClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Retrieves the list of all TargetHttpsProxy resources, regional and global,
  /// available to the specified project.
  ///
  /// @param project  Name of the project scoping this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::TargetHttpsProxyAggregatedList,google/cloud/compute/v1/internal/common.proto#L26947}
  ///
  /// [google.cloud.cpp.compute.targetHttpsProxies.v1.AggregatedListTargetHttpsProxiesRequest]: @googleapis_reference_link{google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L147}
  /// [google.cloud.cpp.compute.v1.TargetHttpsProxyAggregatedList]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L26947}
  ///
  StatusOr<google::cloud::cpp::compute::v1::TargetHttpsProxyAggregatedList>
  AggregatedListTargetHttpsProxies(std::string const& project, Options opts = {});

  ///
  /// Retrieves the list of all TargetHttpsProxy resources, regional and global,
  /// available to the specified project.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::targetHttpsProxies::v1::AggregatedListTargetHttpsProxiesRequest,google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L147}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::TargetHttpsProxyAggregatedList,google/cloud/compute/v1/internal/common.proto#L26947}
  ///
  /// [google.cloud.cpp.compute.targetHttpsProxies.v1.AggregatedListTargetHttpsProxiesRequest]: @googleapis_reference_link{google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L147}
  /// [google.cloud.cpp.compute.v1.TargetHttpsProxyAggregatedList]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L26947}
  ///
  StatusOr<google::cloud::cpp::compute::v1::TargetHttpsProxyAggregatedList>
  AggregatedListTargetHttpsProxies(google::cloud::cpp::compute::targetHttpsProxies::v1::AggregatedListTargetHttpsProxiesRequest const& request, Options opts = {});

  ///
  /// Deletes the specified TargetHttpsProxy resource.
  ///
  /// @param project  Project ID for this request.
  /// @param target_https_proxy  Name of the TargetHttpsProxy resource to delete.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.targetHttpsProxies.v1.DeleteTargetHttpsProxiesRequest]: @googleapis_reference_link{google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L221}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  DeleteTargetHttpsProxies(std::string const& project, std::string const& target_https_proxy, Options opts = {});

  ///
  /// Deletes the specified TargetHttpsProxy resource.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::targetHttpsProxies::v1::DeleteTargetHttpsProxiesRequest,google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L221}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.targetHttpsProxies.v1.DeleteTargetHttpsProxiesRequest]: @googleapis_reference_link{google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L221}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  DeleteTargetHttpsProxies(google::cloud::cpp::compute::targetHttpsProxies::v1::DeleteTargetHttpsProxiesRequest const& request, Options opts = {});

  ///
  /// Returns the specified TargetHttpsProxy resource.
  ///
  /// @param project  Project ID for this request.
  /// @param target_https_proxy  Name of the TargetHttpsProxy resource to return.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::TargetHttpsProxy,google/cloud/compute/v1/internal/common.proto#L26842}
  ///
  /// [google.cloud.cpp.compute.targetHttpsProxies.v1.GetTargetHttpsProxiesRequest]: @googleapis_reference_link{google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L242}
  /// [google.cloud.cpp.compute.v1.TargetHttpsProxy]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L26842}
  ///
  StatusOr<google::cloud::cpp::compute::v1::TargetHttpsProxy>
  GetTargetHttpsProxies(std::string const& project, std::string const& target_https_proxy, Options opts = {});

  ///
  /// Returns the specified TargetHttpsProxy resource.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::targetHttpsProxies::v1::GetTargetHttpsProxiesRequest,google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L242}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::TargetHttpsProxy,google/cloud/compute/v1/internal/common.proto#L26842}
  ///
  /// [google.cloud.cpp.compute.targetHttpsProxies.v1.GetTargetHttpsProxiesRequest]: @googleapis_reference_link{google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L242}
  /// [google.cloud.cpp.compute.v1.TargetHttpsProxy]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L26842}
  ///
  StatusOr<google::cloud::cpp::compute::v1::TargetHttpsProxy>
  GetTargetHttpsProxies(google::cloud::cpp::compute::targetHttpsProxies::v1::GetTargetHttpsProxiesRequest const& request, Options opts = {});

  ///
  /// Creates a TargetHttpsProxy resource in the specified project using the data
  /// included in the request.
  ///
  /// @param project  Project ID for this request.
  /// @param target_https_proxy_resource  The TargetHttpsProxy for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.targetHttpsProxies.v1.InsertTargetHttpsProxiesRequest]: @googleapis_reference_link{google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L251}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  InsertTargetHttpsProxies(std::string const& project, google::cloud::cpp::compute::v1::TargetHttpsProxy const& target_https_proxy_resource, Options opts = {});

  ///
  /// Creates a TargetHttpsProxy resource in the specified project using the data
  /// included in the request.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::targetHttpsProxies::v1::InsertTargetHttpsProxiesRequest,google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L251}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.targetHttpsProxies.v1.InsertTargetHttpsProxiesRequest]: @googleapis_reference_link{google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L251}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  InsertTargetHttpsProxies(google::cloud::cpp::compute::targetHttpsProxies::v1::InsertTargetHttpsProxiesRequest const& request, Options opts = {});

  ///
  /// Retrieves the list of TargetHttpsProxy resources available to the specified
  /// project.
  ///
  /// @param project  Project ID for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::TargetHttpsProxy,google/cloud/compute/v1/internal/common.proto#L26842}
  ///
  /// [google.cloud.cpp.compute.targetHttpsProxies.v1.ListTargetHttpsProxiesRequest]: @googleapis_reference_link{google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L272}
  /// [google.cloud.cpp.compute.v1.TargetHttpsProxy]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L26842}
  ///
  StreamRange<google::cloud::cpp::compute::v1::TargetHttpsProxy>
  ListTargetHttpsProxies(std::string const& project, Options opts = {});

  ///
  /// Retrieves the list of TargetHttpsProxy resources available to the specified
  /// project.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::targetHttpsProxies::v1::ListTargetHttpsProxiesRequest,google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L272}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::TargetHttpsProxy,google/cloud/compute/v1/internal/common.proto#L26842}
  ///
  /// [google.cloud.cpp.compute.targetHttpsProxies.v1.ListTargetHttpsProxiesRequest]: @googleapis_reference_link{google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L272}
  /// [google.cloud.cpp.compute.v1.TargetHttpsProxy]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L26842}
  ///
  StreamRange<google::cloud::cpp::compute::v1::TargetHttpsProxy>
  ListTargetHttpsProxies(google::cloud::cpp::compute::targetHttpsProxies::v1::ListTargetHttpsProxiesRequest request, Options opts = {});

  ///
  /// Patches the specified TargetHttpsProxy resource with the data included in
  /// the request. This method supports PATCH semantics and uses JSON merge patch
  /// format and processing rules.
  ///
  /// @param project  Project ID for this request.
  /// @param target_https_proxy  Name of the TargetHttpsProxy resource to patch.
  /// @param target_https_proxy_resource  The TargetHttpsProxy for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.targetHttpsProxies.v1.PatchTargetHttpsProxiesRequest]: @googleapis_reference_link{google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L337}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  PatchTargetHttpsProxies(std::string const& project, std::string const& target_https_proxy, google::cloud::cpp::compute::v1::TargetHttpsProxy const& target_https_proxy_resource, Options opts = {});

  ///
  /// Patches the specified TargetHttpsProxy resource with the data included in
  /// the request. This method supports PATCH semantics and uses JSON merge patch
  /// format and processing rules.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::targetHttpsProxies::v1::PatchTargetHttpsProxiesRequest,google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L337}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.targetHttpsProxies.v1.PatchTargetHttpsProxiesRequest]: @googleapis_reference_link{google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L337}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  PatchTargetHttpsProxies(google::cloud::cpp::compute::targetHttpsProxies::v1::PatchTargetHttpsProxiesRequest const& request, Options opts = {});

  ///
  /// Changes the Certificate Map for TargetHttpsProxy.
  ///
  /// @param project  Project ID for this request.
  /// @param target_https_proxy  Name of the TargetHttpsProxy resource whose CertificateMap is to be set.
  ///  The name must be 1-63 characters long, and comply with RFC1035.
  /// @param target_https_proxies_set_certificate_map_request_resource  The TargetHttpsProxiesSetCertificateMapRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.targetHttpsProxies.v1.SetCertificateMapRequest]: @googleapis_reference_link{google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L361}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  SetCertificateMap(std::string const& project, std::string const& target_https_proxy, google::cloud::cpp::compute::v1::TargetHttpsProxiesSetCertificateMapRequest const& target_https_proxies_set_certificate_map_request_resource, Options opts = {});

  ///
  /// Changes the Certificate Map for TargetHttpsProxy.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::targetHttpsProxies::v1::SetCertificateMapRequest,google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L361}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.targetHttpsProxies.v1.SetCertificateMapRequest]: @googleapis_reference_link{google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L361}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  SetCertificateMap(google::cloud::cpp::compute::targetHttpsProxies::v1::SetCertificateMapRequest const& request, Options opts = {});

  ///
  /// Sets the QUIC override policy for TargetHttpsProxy.
  ///
  /// @param project  Project ID for this request.
  /// @param target_https_proxy  Name of the TargetHttpsProxy resource to set the QUIC override policy for.
  ///  The name should conform to RFC1035.
  /// @param target_https_proxies_set_quic_override_request_resource  The TargetHttpsProxiesSetQuicOverrideRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.targetHttpsProxies.v1.SetQuicOverrideRequest]: @googleapis_reference_link{google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L386}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  SetQuicOverride(std::string const& project, std::string const& target_https_proxy, google::cloud::cpp::compute::v1::TargetHttpsProxiesSetQuicOverrideRequest const& target_https_proxies_set_quic_override_request_resource, Options opts = {});

  ///
  /// Sets the QUIC override policy for TargetHttpsProxy.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::targetHttpsProxies::v1::SetQuicOverrideRequest,google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L386}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.targetHttpsProxies.v1.SetQuicOverrideRequest]: @googleapis_reference_link{google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L386}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  SetQuicOverride(google::cloud::cpp::compute::targetHttpsProxies::v1::SetQuicOverrideRequest const& request, Options opts = {});

  ///
  /// Replaces SslCertificates for TargetHttpsProxy.
  ///
  /// @param project  Project ID for this request.
  /// @param target_https_proxy  Name of the TargetHttpsProxy resource to set an SslCertificates resource
  ///  for.
  /// @param target_https_proxies_set_ssl_certificates_request_resource  The TargetHttpsProxiesSetSslCertificatesRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.targetHttpsProxies.v1.SetSslCertificatesRequest]: @googleapis_reference_link{google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L411}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  SetSslCertificates(std::string const& project, std::string const& target_https_proxy, google::cloud::cpp::compute::v1::TargetHttpsProxiesSetSslCertificatesRequest const& target_https_proxies_set_ssl_certificates_request_resource, Options opts = {});

  ///
  /// Replaces SslCertificates for TargetHttpsProxy.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::targetHttpsProxies::v1::SetSslCertificatesRequest,google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L411}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.targetHttpsProxies.v1.SetSslCertificatesRequest]: @googleapis_reference_link{google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L411}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  SetSslCertificates(google::cloud::cpp::compute::targetHttpsProxies::v1::SetSslCertificatesRequest const& request, Options opts = {});

  ///
  /// Sets the SSL policy for TargetHttpsProxy. The SSL policy specifies the
  /// server-side support for SSL features. This affects connections between
  /// clients and the HTTPS proxy load balancer. They do not affect the
  /// connection between the load balancer and the backends.
  ///
  /// @param project  Project ID for this request.
  /// @param target_https_proxy  Name of the TargetHttpsProxy resource whose SSL policy is to be set. The
  ///  name must be 1-63 characters long, and comply with RFC1035.
  /// @param ssl_policy_reference_resource  The SslPolicyReference for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.targetHttpsProxies.v1.SetSslPolicyRequest]: @googleapis_reference_link{google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L436}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  SetSslPolicy(std::string const& project, std::string const& target_https_proxy, google::cloud::cpp::compute::v1::SslPolicyReference const& ssl_policy_reference_resource, Options opts = {});

  ///
  /// Sets the SSL policy for TargetHttpsProxy. The SSL policy specifies the
  /// server-side support for SSL features. This affects connections between
  /// clients and the HTTPS proxy load balancer. They do not affect the
  /// connection between the load balancer and the backends.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::targetHttpsProxies::v1::SetSslPolicyRequest,google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L436}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.targetHttpsProxies.v1.SetSslPolicyRequest]: @googleapis_reference_link{google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L436}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  SetSslPolicy(google::cloud::cpp::compute::targetHttpsProxies::v1::SetSslPolicyRequest const& request, Options opts = {});

  ///
  /// Changes the URL map for TargetHttpsProxy.
  ///
  /// @param project  Project ID for this request.
  /// @param target_https_proxy  Name of the TargetHttpsProxy resource whose URL map is to be set.
  /// @param url_map_reference_resource  The UrlMapReference for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.targetHttpsProxies.v1.SetUrlMapRequest]: @googleapis_reference_link{google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L461}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  SetUrlMap(std::string const& project, std::string const& target_https_proxy, google::cloud::cpp::compute::v1::UrlMapReference const& url_map_reference_resource, Options opts = {});

  ///
  /// Changes the URL map for TargetHttpsProxy.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::targetHttpsProxies::v1::SetUrlMapRequest,google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L461}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.targetHttpsProxies.v1.SetUrlMapRequest]: @googleapis_reference_link{google/cloud/compute/target_https_proxies/v1/target_https_proxies.proto#L461}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  SetUrlMap(google::cloud::cpp::compute::targetHttpsProxies::v1::SetUrlMapRequest const& request, Options opts = {});

 private:
  std::shared_ptr<TargetHttpsProxiesConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_target_https_proxies_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_TARGET_HTTPS_PROXIES_V1_TARGET_HTTPS_PROXIES_CLIENT_H
