// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/compute/node_types/v1/node_types.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_NODE_TYPES_V1_NODE_TYPES_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_NODE_TYPES_V1_NODE_TYPES_CLIENT_H

#include "google/cloud/compute/node_types/v1/node_types_rest_connection.h"
#include "google/cloud/experimental_tag.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace compute_node_types_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service for the nodeTypes resource.
/// https://cloud.google.com/compute/docs/reference/rest/v1/nodeTypes
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class NodeTypesClient {
 public:
  explicit NodeTypesClient(ExperimentalTag,
                           std::shared_ptr<NodeTypesConnection> connection,
                           Options opts = {});
  ~NodeTypesClient();

  ///@{
  /// @name Copy and move support
  NodeTypesClient(NodeTypesClient const&) = default;
  NodeTypesClient& operator=(NodeTypesClient const&) = default;
  NodeTypesClient(NodeTypesClient&&) = default;
  NodeTypesClient& operator=(NodeTypesClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(NodeTypesClient const& a, NodeTypesClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(NodeTypesClient const& a, NodeTypesClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Retrieves an aggregated list of node types.
  ///
  /// @param project  Project ID for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::NodeTypeAggregatedList,google/cloud/compute/v1/internal/common.proto#L16941}
  ///
  /// [google.cloud.cpp.compute.nodeTypes.v1.AggregatedListNodeTypesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_types/v1/node_types.proto#L59}
  /// [google.cloud.cpp.compute.v1.NodeTypeAggregatedList]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L16941}
  ///
  StatusOr<google::cloud::cpp::compute::v1::NodeTypeAggregatedList>
  AggregatedListNodeTypes(std::string const& project, Options opts = {});

  ///
  /// Retrieves an aggregated list of node types.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::nodeTypes::v1::AggregatedListNodeTypesRequest,google/cloud/compute/node_types/v1/node_types.proto#L59}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::NodeTypeAggregatedList,google/cloud/compute/v1/internal/common.proto#L16941}
  ///
  /// [google.cloud.cpp.compute.nodeTypes.v1.AggregatedListNodeTypesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_types/v1/node_types.proto#L59}
  /// [google.cloud.cpp.compute.v1.NodeTypeAggregatedList]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L16941}
  ///
  StatusOr<google::cloud::cpp::compute::v1::NodeTypeAggregatedList>
  AggregatedListNodeTypes(google::cloud::cpp::compute::nodeTypes::v1::
                              AggregatedListNodeTypesRequest const& request,
                          Options opts = {});

  ///
  /// Returns the specified node type.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param node_type  Name of the node type to return.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::NodeType,google/cloud/compute/v1/internal/common.proto#L16898}
  ///
  /// [google.cloud.cpp.compute.nodeTypes.v1.GetNodeTypesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_types/v1/node_types.proto#L133}
  /// [google.cloud.cpp.compute.v1.NodeType]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L16898}
  ///
  StatusOr<google::cloud::cpp::compute::v1::NodeType> GetNodeTypes(
      std::string const& project, std::string const& zone,
      std::string const& node_type, Options opts = {});

  ///
  /// Returns the specified node type.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::nodeTypes::v1::GetNodeTypesRequest,google/cloud/compute/node_types/v1/node_types.proto#L133}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::NodeType,google/cloud/compute/v1/internal/common.proto#L16898}
  ///
  /// [google.cloud.cpp.compute.nodeTypes.v1.GetNodeTypesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_types/v1/node_types.proto#L133}
  /// [google.cloud.cpp.compute.v1.NodeType]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L16898}
  ///
  StatusOr<google::cloud::cpp::compute::v1::NodeType> GetNodeTypes(
      google::cloud::cpp::compute::nodeTypes::v1::GetNodeTypesRequest const&
          request,
      Options opts = {});

  ///
  /// Retrieves a list of node types available to the specified project.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::NodeType,google/cloud/compute/v1/internal/common.proto#L16898}
  ///
  /// [google.cloud.cpp.compute.nodeTypes.v1.ListNodeTypesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_types/v1/node_types.proto#L145}
  /// [google.cloud.cpp.compute.v1.NodeType]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L16898}
  ///
  StreamRange<google::cloud::cpp::compute::v1::NodeType> ListNodeTypes(
      std::string const& project, std::string const& zone, Options opts = {});

  ///
  /// Retrieves a list of node types available to the specified project.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::nodeTypes::v1::ListNodeTypesRequest,google/cloud/compute/node_types/v1/node_types.proto#L145}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::NodeType,google/cloud/compute/v1/internal/common.proto#L16898}
  ///
  /// [google.cloud.cpp.compute.nodeTypes.v1.ListNodeTypesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_types/v1/node_types.proto#L145}
  /// [google.cloud.cpp.compute.v1.NodeType]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L16898}
  ///
  StreamRange<google::cloud::cpp::compute::v1::NodeType> ListNodeTypes(
      google::cloud::cpp::compute::nodeTypes::v1::ListNodeTypesRequest request,
      Options opts = {});

 private:
  std::shared_ptr<NodeTypesConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_node_types_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_NODE_TYPES_V1_NODE_TYPES_CLIENT_H
