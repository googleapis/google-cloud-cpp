// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/compute/images/v1/images.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_IMAGES_V1_IMAGES_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_IMAGES_V1_IMAGES_CLIENT_H

#include "google/cloud/compute/images/v1/images_rest_connection.h"
#include "google/cloud/experimental_tag.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace compute_images_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service for the images resource.
/// https://cloud.google.com/compute/docs/reference/rest/v1/images
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class ImagesClient {
 public:
  explicit ImagesClient(ExperimentalTag,
                        std::shared_ptr<ImagesConnection> connection,
                        Options opts = {});
  ~ImagesClient();

  ///@{
  /// @name Copy and move support
  ImagesClient(ImagesClient const&) = default;
  ImagesClient& operator=(ImagesClient const&) = default;
  ImagesClient(ImagesClient&&) = default;
  ImagesClient& operator=(ImagesClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(ImagesClient const& a, ImagesClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(ImagesClient const& a, ImagesClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Deletes the specified image.
  ///
  /// @param project  Project ID for this request.
  /// @param image  Name of the image resource to delete.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.images.v1.DeleteImagesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/images/v1/images.proto#L165}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteImages(
      std::string const& project, std::string const& image, Options opts = {});

  ///
  /// Deletes the specified image.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::images::v1::DeleteImagesRequest,google/cloud/compute/images/v1/images.proto#L165}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.images.v1.DeleteImagesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/images/v1/images.proto#L165}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteImages(
      google::cloud::cpp::compute::images::v1::DeleteImagesRequest const&
          request,
      Options opts = {});

  ///
  /// Sets the deprecation status of an image. If an empty request body is
  /// given, clears the deprecation status instead.
  ///
  /// @param project  Project ID for this request.
  /// @param image  Image name.
  /// @param deprecation_status_resource  The DeprecationStatus for this
  /// request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.images.v1.DeprecateRequest]:
  /// @googleapis_reference_link{google/cloud/compute/images/v1/images.proto#L189}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> Deprecate(
      std::string const& project, std::string const& image,
      google::cloud::cpp::compute::v1::DeprecationStatus const&
          deprecation_status_resource,
      Options opts = {});

  ///
  /// Sets the deprecation status of an image. If an empty request body is
  /// given, clears the deprecation status instead.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::images::v1::DeprecateRequest,google/cloud/compute/images/v1/images.proto#L189}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.images.v1.DeprecateRequest]:
  /// @googleapis_reference_link{google/cloud/compute/images/v1/images.proto#L189}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> Deprecate(
      google::cloud::cpp::compute::images::v1::DeprecateRequest const& request,
      Options opts = {});

  ///
  /// Returns the specified image.
  ///
  /// @param project  Project ID for this request.
  /// @param image  Name of the image resource to return.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Image,google/cloud/compute/v1/internal/common.proto#L8782}
  ///
  /// [google.cloud.cpp.compute.images.v1.GetImagesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/images/v1/images.proto#L239}
  /// [google.cloud.cpp.compute.v1.Image]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L8782}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Image> GetImages(
      std::string const& project, std::string const& image, Options opts = {});

  ///
  /// Returns the specified image.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::images::v1::GetImagesRequest,google/cloud/compute/images/v1/images.proto#L239}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Image,google/cloud/compute/v1/internal/common.proto#L8782}
  ///
  /// [google.cloud.cpp.compute.images.v1.GetImagesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/images/v1/images.proto#L239}
  /// [google.cloud.cpp.compute.v1.Image]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L8782}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Image> GetImages(
      google::cloud::cpp::compute::images::v1::GetImagesRequest const& request,
      Options opts = {});

  ///
  /// Returns the latest image that is part of an image family and is not
  /// deprecated. For more information on image families, see Public image
  /// families documentation.
  ///
  /// @param project  The image project that the image belongs to. For example,
  /// to get a CentOS
  ///  image, specify centos-cloud as the image project.
  /// @param family  Name of the image family to search for.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Image,google/cloud/compute/v1/internal/common.proto#L8782}
  ///
  /// [google.cloud.cpp.compute.images.v1.GetFromFamilyRequest]:
  /// @googleapis_reference_link{google/cloud/compute/images/v1/images.proto#L217}
  /// [google.cloud.cpp.compute.v1.Image]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L8782}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Image> GetFromFamily(
      std::string const& project, std::string const& family, Options opts = {});

  ///
  /// Returns the latest image that is part of an image family and is not
  /// deprecated. For more information on image families, see Public image
  /// families documentation.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::images::v1::GetFromFamilyRequest,google/cloud/compute/images/v1/images.proto#L217}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Image,google/cloud/compute/v1/internal/common.proto#L8782}
  ///
  /// [google.cloud.cpp.compute.images.v1.GetFromFamilyRequest]:
  /// @googleapis_reference_link{google/cloud/compute/images/v1/images.proto#L217}
  /// [google.cloud.cpp.compute.v1.Image]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L8782}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Image> GetFromFamily(
      google::cloud::cpp::compute::images::v1::GetFromFamilyRequest const&
          request,
      Options opts = {});

  ///
  /// Gets the access control policy for a resource. May be empty if no such
  /// policy or resource exists.
  ///
  /// @param project  Project ID for this request.
  /// @param resource  Name or id of the resource for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Policy,google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  /// [google.cloud.cpp.compute.images.v1.GetIamPolicyRequest]:
  /// @googleapis_reference_link{google/cloud/compute/images/v1/images.proto#L227}
  /// [google.cloud.cpp.compute.v1.Policy]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Policy> GetIamPolicy(
      std::string const& project, std::string const& resource,
      Options opts = {});

  ///
  /// Gets the access control policy for a resource. May be empty if no such
  /// policy or resource exists.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::images::v1::GetIamPolicyRequest,google/cloud/compute/images/v1/images.proto#L227}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Policy,google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  /// [google.cloud.cpp.compute.images.v1.GetIamPolicyRequest]:
  /// @googleapis_reference_link{google/cloud/compute/images/v1/images.proto#L227}
  /// [google.cloud.cpp.compute.v1.Policy]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Policy> GetIamPolicy(
      google::cloud::cpp::compute::images::v1::GetIamPolicyRequest const&
          request,
      Options opts = {});

  ///
  /// Creates an image in the specified project using the data included in the
  /// request.
  ///
  /// @param project  Project ID for this request.
  /// @param image_resource  The Image for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.images.v1.InsertImagesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/images/v1/images.proto#L248}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> InsertImages(
      std::string const& project,
      google::cloud::cpp::compute::v1::Image const& image_resource,
      Options opts = {});

  ///
  /// Creates an image in the specified project using the data included in the
  /// request.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::images::v1::InsertImagesRequest,google/cloud/compute/images/v1/images.proto#L248}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.images.v1.InsertImagesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/images/v1/images.proto#L248}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> InsertImages(
      google::cloud::cpp::compute::images::v1::InsertImagesRequest const&
          request,
      Options opts = {});

  ///
  /// Retrieves the list of custom images available to the specified project.
  /// Custom images are images you create that belong to your project. This
  /// method does not get any images that belong to other projects, including
  /// publicly-available images, like Debian 8. If you want to get a list of
  /// publicly-available images, use this method to make a request to the
  /// respective image project, such as debian-cloud or windows-cloud.
  ///
  /// @param project  Project ID for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Image,google/cloud/compute/v1/internal/common.proto#L8782}
  ///
  /// [google.cloud.cpp.compute.images.v1.ListImagesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/images/v1/images.proto#L275}
  /// [google.cloud.cpp.compute.v1.Image]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L8782}
  ///
  StreamRange<google::cloud::cpp::compute::v1::Image> ListImages(
      std::string const& project, Options opts = {});

  ///
  /// Retrieves the list of custom images available to the specified project.
  /// Custom images are images you create that belong to your project. This
  /// method does not get any images that belong to other projects, including
  /// publicly-available images, like Debian 8. If you want to get a list of
  /// publicly-available images, use this method to make a request to the
  /// respective image project, such as debian-cloud or windows-cloud.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::images::v1::ListImagesRequest,google/cloud/compute/images/v1/images.proto#L275}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Image,google/cloud/compute/v1/internal/common.proto#L8782}
  ///
  /// [google.cloud.cpp.compute.images.v1.ListImagesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/images/v1/images.proto#L275}
  /// [google.cloud.cpp.compute.v1.Image]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L8782}
  ///
  StreamRange<google::cloud::cpp::compute::v1::Image> ListImages(
      google::cloud::cpp::compute::images::v1::ListImagesRequest request,
      Options opts = {});

  ///
  /// Patches the specified image with the data included in the request. Only
  /// the following fields can be modified: family, description, deprecation
  /// status.
  ///
  /// @param project  Project ID for this request.
  /// @param image  Name of the image resource to patch.
  /// @param image_resource  The Image for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.images.v1.PatchImagesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/images/v1/images.proto#L340}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> PatchImages(
      std::string const& project, std::string const& image,
      google::cloud::cpp::compute::v1::Image const& image_resource,
      Options opts = {});

  ///
  /// Patches the specified image with the data included in the request. Only
  /// the following fields can be modified: family, description, deprecation
  /// status.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::images::v1::PatchImagesRequest,google/cloud/compute/images/v1/images.proto#L340}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.images.v1.PatchImagesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/images/v1/images.proto#L340}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> PatchImages(
      google::cloud::cpp::compute::images::v1::PatchImagesRequest const&
          request,
      Options opts = {});

  ///
  /// Sets the access control policy on the specified resource. Replaces any
  /// existing policy.
  ///
  /// @param project  Project ID for this request.
  /// @param resource  Name or id of the resource for this request.
  /// @param global_set_policy_request_resource  The GlobalSetPolicyRequest for
  /// this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Policy,google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  /// [google.cloud.cpp.compute.images.v1.SetIamPolicyRequest]:
  /// @googleapis_reference_link{google/cloud/compute/images/v1/images.proto#L367}
  /// [google.cloud.cpp.compute.v1.Policy]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Policy> SetIamPolicy(
      std::string const& project, std::string const& resource,
      google::cloud::cpp::compute::v1::GlobalSetPolicyRequest const&
          global_set_policy_request_resource,
      Options opts = {});

  ///
  /// Sets the access control policy on the specified resource. Replaces any
  /// existing policy.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::images::v1::SetIamPolicyRequest,google/cloud/compute/images/v1/images.proto#L367}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Policy,google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  /// [google.cloud.cpp.compute.images.v1.SetIamPolicyRequest]:
  /// @googleapis_reference_link{google/cloud/compute/images/v1/images.proto#L367}
  /// [google.cloud.cpp.compute.v1.Policy]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Policy> SetIamPolicy(
      google::cloud::cpp::compute::images::v1::SetIamPolicyRequest const&
          request,
      Options opts = {});

  ///
  /// Sets the labels on an image. To learn more about labels, read the Labeling
  /// Resources documentation.
  ///
  /// @param project  Project ID for this request.
  /// @param resource  Name or id of the resource for this request.
  /// @param global_set_labels_request_resource  The GlobalSetLabelsRequest for
  /// this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.images.v1.SetLabelsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/images/v1/images.proto#L380}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetLabels(
      std::string const& project, std::string const& resource,
      google::cloud::cpp::compute::v1::GlobalSetLabelsRequest const&
          global_set_labels_request_resource,
      Options opts = {});

  ///
  /// Sets the labels on an image. To learn more about labels, read the Labeling
  /// Resources documentation.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::images::v1::SetLabelsRequest,google/cloud/compute/images/v1/images.proto#L380}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.images.v1.SetLabelsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/images/v1/images.proto#L380}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetLabels(
      google::cloud::cpp::compute::images::v1::SetLabelsRequest const& request,
      Options opts = {});

  ///
  /// Returns permissions that a caller has on the specified resource.
  ///
  /// @param project  Project ID for this request.
  /// @param resource  Name or id of the resource for this request.
  /// @param test_permissions_request_resource  The TestPermissionsRequest for
  /// this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::TestPermissionsResponse,google/cloud/compute/v1/internal/common.proto#L28939}
  ///
  /// [google.cloud.cpp.compute.images.v1.TestIamPermissionsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/images/v1/images.proto#L396}
  /// [google.cloud.cpp.compute.v1.TestPermissionsResponse]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L28939}
  ///
  StatusOr<google::cloud::cpp::compute::v1::TestPermissionsResponse>
  TestIamPermissions(
      std::string const& project, std::string const& resource,
      google::cloud::cpp::compute::v1::TestPermissionsRequest const&
          test_permissions_request_resource,
      Options opts = {});

  ///
  /// Returns permissions that a caller has on the specified resource.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::images::v1::TestIamPermissionsRequest,google/cloud/compute/images/v1/images.proto#L396}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::TestPermissionsResponse,google/cloud/compute/v1/internal/common.proto#L28939}
  ///
  /// [google.cloud.cpp.compute.images.v1.TestIamPermissionsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/images/v1/images.proto#L396}
  /// [google.cloud.cpp.compute.v1.TestPermissionsResponse]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L28939}
  ///
  StatusOr<google::cloud::cpp::compute::v1::TestPermissionsResponse>
  TestIamPermissions(
      google::cloud::cpp::compute::images::v1::TestIamPermissionsRequest const&
          request,
      Options opts = {});

 private:
  std::shared_ptr<ImagesConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_images_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_IMAGES_V1_IMAGES_CLIENT_H
