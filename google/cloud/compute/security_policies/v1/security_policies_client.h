// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/compute/security_policies/v1/security_policies.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_SECURITY_POLICIES_V1_SECURITY_POLICIES_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_SECURITY_POLICIES_V1_SECURITY_POLICIES_CLIENT_H

#include "google/cloud/compute/security_policies/v1/security_policies_rest_connection.h"
#include "google/cloud/experimental_tag.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace compute_security_policies_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service for the securityPolicies resource.
/// https://cloud.google.com/compute/docs/reference/rest/v1/securityPolicies
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class SecurityPoliciesClient {
 public:
  explicit SecurityPoliciesClient(
      ExperimentalTag, std::shared_ptr<SecurityPoliciesConnection> connection,
      Options opts = {});
  ~SecurityPoliciesClient();

  ///@{
  /// @name Copy and move support
  SecurityPoliciesClient(SecurityPoliciesClient const&) = default;
  SecurityPoliciesClient& operator=(SecurityPoliciesClient const&) = default;
  SecurityPoliciesClient(SecurityPoliciesClient&&) = default;
  SecurityPoliciesClient& operator=(SecurityPoliciesClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(SecurityPoliciesClient const& a,
                         SecurityPoliciesClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(SecurityPoliciesClient const& a,
                         SecurityPoliciesClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Inserts a rule into a security policy.
  ///
  /// @param project  Project ID for this request.
  /// @param security_policy  Name of the security policy to update.
  /// @param security_policy_rule_resource  The SecurityPolicyRule for this
  /// request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.AddRuleRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L169}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> AddRule(
      std::string const& project, std::string const& security_policy,
      google::cloud::cpp::compute::v1::SecurityPolicyRule const&
          security_policy_rule_resource,
      Options opts = {});

  ///
  /// Inserts a rule into a security policy.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::securityPolicies::v1::AddRuleRequest,google/cloud/compute/security_policies/v1/security_policies.proto#L169}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.AddRuleRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L169}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> AddRule(
      google::cloud::cpp::compute::securityPolicies::v1::AddRuleRequest const&
          request,
      Options opts = {});

  ///
  /// Retrieves the list of all SecurityPolicy resources, regional and global,
  /// available to the specified project.
  ///
  /// @param project  Name of the project scoping this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::SecurityPoliciesAggregatedList,google/cloud/compute/v1/internal/common.proto#L23194}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.AggregatedListSecurityPoliciesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L188}
  /// [google.cloud.cpp.compute.v1.SecurityPoliciesAggregatedList]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L23194}
  ///
  StatusOr<google::cloud::cpp::compute::v1::SecurityPoliciesAggregatedList>
  AggregatedListSecurityPolicies(std::string const& project, Options opts = {});

  ///
  /// Retrieves the list of all SecurityPolicy resources, regional and global,
  /// available to the specified project.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::securityPolicies::v1::AggregatedListSecurityPoliciesRequest,google/cloud/compute/security_policies/v1/security_policies.proto#L188}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::SecurityPoliciesAggregatedList,google/cloud/compute/v1/internal/common.proto#L23194}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.AggregatedListSecurityPoliciesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L188}
  /// [google.cloud.cpp.compute.v1.SecurityPoliciesAggregatedList]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L23194}
  ///
  StatusOr<google::cloud::cpp::compute::v1::SecurityPoliciesAggregatedList>
  AggregatedListSecurityPolicies(
      google::cloud::cpp::compute::securityPolicies::v1::
          AggregatedListSecurityPoliciesRequest const& request,
      Options opts = {});

  ///
  /// Deletes the specified policy.
  ///
  /// @param project  Project ID for this request.
  /// @param security_policy  Name of the security policy to delete.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.DeleteSecurityPoliciesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L262}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteSecurityPolicies(
      std::string const& project, std::string const& security_policy,
      Options opts = {});

  ///
  /// Deletes the specified policy.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::securityPolicies::v1::DeleteSecurityPoliciesRequest,google/cloud/compute/security_policies/v1/security_policies.proto#L262}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.DeleteSecurityPoliciesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L262}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteSecurityPolicies(
      google::cloud::cpp::compute::securityPolicies::v1::
          DeleteSecurityPoliciesRequest const& request,
      Options opts = {});

  ///
  /// List all of the ordered rules present in a single specified policy.
  ///
  /// @param project  Project ID for this request.
  /// @param security_policy  Name of the security policy to get.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::SecurityPolicy,google/cloud/compute/v1/internal/common.proto#L23400}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.GetSecurityPoliciesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L298}
  /// [google.cloud.cpp.compute.v1.SecurityPolicy]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L23400}
  ///
  StatusOr<google::cloud::cpp::compute::v1::SecurityPolicy> GetSecurityPolicies(
      std::string const& project, std::string const& security_policy,
      Options opts = {});

  ///
  /// List all of the ordered rules present in a single specified policy.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::securityPolicies::v1::GetSecurityPoliciesRequest,google/cloud/compute/security_policies/v1/security_policies.proto#L298}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::SecurityPolicy,google/cloud/compute/v1/internal/common.proto#L23400}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.GetSecurityPoliciesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L298}
  /// [google.cloud.cpp.compute.v1.SecurityPolicy]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L23400}
  ///
  StatusOr<google::cloud::cpp::compute::v1::SecurityPolicy> GetSecurityPolicies(
      google::cloud::cpp::compute::securityPolicies::v1::
          GetSecurityPoliciesRequest const& request,
      Options opts = {});

  ///
  /// Gets a rule at the specified priority.
  ///
  /// @param project  Project ID for this request.
  /// @param security_policy  Name of the security policy to which the queried
  /// rule belongs.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::SecurityPolicyRule,google/cloud/compute/v1/internal/common.proto#L23644}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.GetRuleRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L286}
  /// [google.cloud.cpp.compute.v1.SecurityPolicyRule]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L23644}
  ///
  StatusOr<google::cloud::cpp::compute::v1::SecurityPolicyRule> GetRule(
      std::string const& project, std::string const& security_policy,
      Options opts = {});

  ///
  /// Gets a rule at the specified priority.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::securityPolicies::v1::GetRuleRequest,google/cloud/compute/security_policies/v1/security_policies.proto#L286}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::SecurityPolicyRule,google/cloud/compute/v1/internal/common.proto#L23644}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.GetRuleRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L286}
  /// [google.cloud.cpp.compute.v1.SecurityPolicyRule]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L23644}
  ///
  StatusOr<google::cloud::cpp::compute::v1::SecurityPolicyRule> GetRule(
      google::cloud::cpp::compute::securityPolicies::v1::GetRuleRequest const&
          request,
      Options opts = {});

  ///
  /// Creates a new policy in the specified project using the data included in
  /// the request.
  ///
  /// @param project  Project ID for this request.
  /// @param security_policy_resource  The SecurityPolicy for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.InsertSecurityPoliciesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L307}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> InsertSecurityPolicies(
      std::string const& project,
      google::cloud::cpp::compute::v1::SecurityPolicy const&
          security_policy_resource,
      Options opts = {});

  ///
  /// Creates a new policy in the specified project using the data included in
  /// the request.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::securityPolicies::v1::InsertSecurityPoliciesRequest,google/cloud/compute/security_policies/v1/security_policies.proto#L307}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.InsertSecurityPoliciesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L307}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> InsertSecurityPolicies(
      google::cloud::cpp::compute::securityPolicies::v1::
          InsertSecurityPoliciesRequest const& request,
      Options opts = {});

  ///
  /// List all the policies that have been configured for the specified project.
  ///
  /// @param project  Project ID for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::SecurityPolicy,google/cloud/compute/v1/internal/common.proto#L23400}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.ListSecurityPoliciesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L400}
  /// [google.cloud.cpp.compute.v1.SecurityPolicy]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L23400}
  ///
  StreamRange<google::cloud::cpp::compute::v1::SecurityPolicy>
  ListSecurityPolicies(std::string const& project, Options opts = {});

  ///
  /// List all the policies that have been configured for the specified project.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::securityPolicies::v1::ListSecurityPoliciesRequest,google/cloud/compute/security_policies/v1/security_policies.proto#L400}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::SecurityPolicy,google/cloud/compute/v1/internal/common.proto#L23400}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.ListSecurityPoliciesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L400}
  /// [google.cloud.cpp.compute.v1.SecurityPolicy]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L23400}
  ///
  StreamRange<google::cloud::cpp::compute::v1::SecurityPolicy>
  ListSecurityPolicies(google::cloud::cpp::compute::securityPolicies::v1::
                           ListSecurityPoliciesRequest request,
                       Options opts = {});

  ///
  /// Gets the current list of preconfigured Web Application Firewall (WAF)
  /// expressions.
  ///
  /// @param project  Project ID for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::SecurityPoliciesListPreconfiguredExpressionSetsResponse,google/cloud/compute/v1/internal/common.proto#L23302}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.ListPreconfiguredExpressionSetsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L335}
  /// [google.cloud.cpp.compute.v1.SecurityPoliciesListPreconfiguredExpressionSetsResponse]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L23302}
  ///
  StatusOr<google::cloud::cpp::compute::v1::
               SecurityPoliciesListPreconfiguredExpressionSetsResponse>
  ListPreconfiguredExpressionSets(std::string const& project,
                                  Options opts = {});

  ///
  /// Gets the current list of preconfigured Web Application Firewall (WAF)
  /// expressions.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::securityPolicies::v1::ListPreconfiguredExpressionSetsRequest,google/cloud/compute/security_policies/v1/security_policies.proto#L335}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::SecurityPoliciesListPreconfiguredExpressionSetsResponse,google/cloud/compute/v1/internal/common.proto#L23302}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.ListPreconfiguredExpressionSetsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L335}
  /// [google.cloud.cpp.compute.v1.SecurityPoliciesListPreconfiguredExpressionSetsResponse]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L23302}
  ///
  StatusOr<google::cloud::cpp::compute::v1::
               SecurityPoliciesListPreconfiguredExpressionSetsResponse>
  ListPreconfiguredExpressionSets(
      google::cloud::cpp::compute::securityPolicies::v1::
          ListPreconfiguredExpressionSetsRequest const& request,
      Options opts = {});

  ///
  /// Patches the specified policy with the data included in the request. To
  /// clear fields in the rule, leave the fields empty and specify them in the
  /// updateMask. This cannot be used to be update the rules in the policy.
  /// Please use the per rule methods like addRule, patchRule, and removeRule
  /// instead.
  ///
  /// @param project  Project ID for this request.
  /// @param security_policy  Name of the security policy to update.
  /// @param security_policy_resource  The SecurityPolicy for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.PatchSecurityPoliciesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L487}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> PatchSecurityPolicies(
      std::string const& project, std::string const& security_policy,
      google::cloud::cpp::compute::v1::SecurityPolicy const&
          security_policy_resource,
      Options opts = {});

  ///
  /// Patches the specified policy with the data included in the request. To
  /// clear fields in the rule, leave the fields empty and specify them in the
  /// updateMask. This cannot be used to be update the rules in the policy.
  /// Please use the per rule methods like addRule, patchRule, and removeRule
  /// instead.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::securityPolicies::v1::PatchSecurityPoliciesRequest,google/cloud/compute/security_policies/v1/security_policies.proto#L487}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.PatchSecurityPoliciesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L487}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> PatchSecurityPolicies(
      google::cloud::cpp::compute::securityPolicies::v1::
          PatchSecurityPoliciesRequest const& request,
      Options opts = {});

  ///
  /// Patches a rule at the specified priority.
  ///
  /// @param project  Project ID for this request.
  /// @param security_policy  Name of the security policy to update.
  /// @param security_policy_rule_resource  The SecurityPolicyRule for this
  /// request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.PatchRuleRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L465}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> PatchRule(
      std::string const& project, std::string const& security_policy,
      google::cloud::cpp::compute::v1::SecurityPolicyRule const&
          security_policy_rule_resource,
      Options opts = {});

  ///
  /// Patches a rule at the specified priority.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::securityPolicies::v1::PatchRuleRequest,google/cloud/compute/security_policies/v1/security_policies.proto#L465}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.PatchRuleRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L465}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> PatchRule(
      google::cloud::cpp::compute::securityPolicies::v1::PatchRuleRequest const&
          request,
      Options opts = {});

  ///
  /// Deletes a rule at the specified priority.
  ///
  /// @param project  Project ID for this request.
  /// @param security_policy  Name of the security policy to update.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.RemoveRuleRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L515}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> RemoveRule(
      std::string const& project, std::string const& security_policy,
      Options opts = {});

  ///
  /// Deletes a rule at the specified priority.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::securityPolicies::v1::RemoveRuleRequest,google/cloud/compute/security_policies/v1/security_policies.proto#L515}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.RemoveRuleRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L515}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> RemoveRule(
      google::cloud::cpp::compute::securityPolicies::v1::
          RemoveRuleRequest const& request,
      Options opts = {});

  ///
  /// Sets the labels on a security policy. To learn more about labels, read the
  /// Labeling Resources documentation.
  ///
  /// @param project  Project ID for this request.
  /// @param resource  Name or id of the resource for this request.
  /// @param global_set_labels_request_resource  The GlobalSetLabelsRequest for
  /// this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.SetLabelsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L530}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetLabels(
      std::string const& project, std::string const& resource,
      google::cloud::cpp::compute::v1::GlobalSetLabelsRequest const&
          global_set_labels_request_resource,
      Options opts = {});

  ///
  /// Sets the labels on a security policy. To learn more about labels, read the
  /// Labeling Resources documentation.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::securityPolicies::v1::SetLabelsRequest,google/cloud/compute/security_policies/v1/security_policies.proto#L530}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.securityPolicies.v1.SetLabelsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/security_policies/v1/security_policies.proto#L530}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetLabels(
      google::cloud::cpp::compute::securityPolicies::v1::SetLabelsRequest const&
          request,
      Options opts = {});

 private:
  std::shared_ptr<SecurityPoliciesConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_security_policies_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_SECURITY_POLICIES_V1_SECURITY_POLICIES_CLIENT_H
