// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_GLOBAL_NETWORK_ENDPOINT_GROUPS_V1_GLOBAL_NETWORK_ENDPOINT_GROUPS_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_GLOBAL_NETWORK_ENDPOINT_GROUPS_V1_GLOBAL_NETWORK_ENDPOINT_GROUPS_CLIENT_H

#include "google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups_rest_connection.h"
#include "google/cloud/experimental_tag.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace compute_global_network_endpoint_groups_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service for the globalNetworkEndpointGroups resource.
/// https://cloud.google.com/compute/docs/reference/rest/v1/globalNetworkEndpointGroups
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class GlobalNetworkEndpointGroupsClient {
 public:
  explicit GlobalNetworkEndpointGroupsClient(ExperimentalTag, std::shared_ptr<GlobalNetworkEndpointGroupsConnection> connection, Options opts = {});
  ~GlobalNetworkEndpointGroupsClient();

  ///@{
  /// @name Copy and move support
  GlobalNetworkEndpointGroupsClient(GlobalNetworkEndpointGroupsClient const&) = default;
  GlobalNetworkEndpointGroupsClient& operator=(GlobalNetworkEndpointGroupsClient const&) = default;
  GlobalNetworkEndpointGroupsClient(GlobalNetworkEndpointGroupsClient&&) = default;
  GlobalNetworkEndpointGroupsClient& operator=(GlobalNetworkEndpointGroupsClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(GlobalNetworkEndpointGroupsClient const& a, GlobalNetworkEndpointGroupsClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(GlobalNetworkEndpointGroupsClient const& a, GlobalNetworkEndpointGroupsClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Attach a network endpoint to the specified network endpoint group.
  ///
  /// @param project  Project ID for this request.
  /// @param network_endpoint_group  The name of the network endpoint group where you are attaching network
  ///  endpoints to. It should comply with RFC1035.
  /// @param global_network_endpoint_groups_attach_endpoints_request_resource  The GlobalNetworkEndpointGroupsAttachEndpointsRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.globalNetworkEndpointGroups.v1.AttachNetworkEndpointsRequest]: @googleapis_reference_link{google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups.proto#L103}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  AttachNetworkEndpoints(std::string const& project, std::string const& network_endpoint_group, google::cloud::cpp::compute::v1::GlobalNetworkEndpointGroupsAttachEndpointsRequest const& global_network_endpoint_groups_attach_endpoints_request_resource, Options opts = {});

  ///
  /// Attach a network endpoint to the specified network endpoint group.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::globalNetworkEndpointGroups::v1::AttachNetworkEndpointsRequest,google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups.proto#L103}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.globalNetworkEndpointGroups.v1.AttachNetworkEndpointsRequest]: @googleapis_reference_link{google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups.proto#L103}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  AttachNetworkEndpoints(google::cloud::cpp::compute::globalNetworkEndpointGroups::v1::AttachNetworkEndpointsRequest const& request, Options opts = {});

  ///
  /// Deletes the specified network endpoint group.Note that the NEG cannot be
  /// deleted if there are backend services referencing it.
  ///
  /// @param project  Project ID for this request.
  /// @param network_endpoint_group  The name of the network endpoint group to delete. It should comply with
  ///  RFC1035.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.globalNetworkEndpointGroups.v1.DeleteGlobalNetworkEndpointGroupsRequest]: @googleapis_reference_link{google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups.proto#L128}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  DeleteGlobalNetworkEndpointGroups(std::string const& project, std::string const& network_endpoint_group, Options opts = {});

  ///
  /// Deletes the specified network endpoint group.Note that the NEG cannot be
  /// deleted if there are backend services referencing it.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::globalNetworkEndpointGroups::v1::DeleteGlobalNetworkEndpointGroupsRequest,google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups.proto#L128}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.globalNetworkEndpointGroups.v1.DeleteGlobalNetworkEndpointGroupsRequest]: @googleapis_reference_link{google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups.proto#L128}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  DeleteGlobalNetworkEndpointGroups(google::cloud::cpp::compute::globalNetworkEndpointGroups::v1::DeleteGlobalNetworkEndpointGroupsRequest const& request, Options opts = {});

  ///
  /// Detach the network endpoint from the specified network endpoint group.
  ///
  /// @param project  Project ID for this request.
  /// @param network_endpoint_group  The name of the network endpoint group where you are removing network
  ///  endpoints. It should comply with RFC1035.
  /// @param global_network_endpoint_groups_detach_endpoints_request_resource  The GlobalNetworkEndpointGroupsDetachEndpointsRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.globalNetworkEndpointGroups.v1.DetachNetworkEndpointsRequest]: @googleapis_reference_link{google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups.proto#L150}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  DetachNetworkEndpoints(std::string const& project, std::string const& network_endpoint_group, google::cloud::cpp::compute::v1::GlobalNetworkEndpointGroupsDetachEndpointsRequest const& global_network_endpoint_groups_detach_endpoints_request_resource, Options opts = {});

  ///
  /// Detach the network endpoint from the specified network endpoint group.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::globalNetworkEndpointGroups::v1::DetachNetworkEndpointsRequest,google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups.proto#L150}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.globalNetworkEndpointGroups.v1.DetachNetworkEndpointsRequest]: @googleapis_reference_link{google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups.proto#L150}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  DetachNetworkEndpoints(google::cloud::cpp::compute::globalNetworkEndpointGroups::v1::DetachNetworkEndpointsRequest const& request, Options opts = {});

  ///
  /// Returns the specified network endpoint group.
  ///
  /// @param project  Project ID for this request.
  /// @param network_endpoint_group  The name of the network endpoint group. It should comply with RFC1035.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::NetworkEndpointGroup,google/cloud/compute/v1/internal/common.proto#L14957}
  ///
  /// [google.cloud.cpp.compute.globalNetworkEndpointGroups.v1.GetGlobalNetworkEndpointGroupsRequest]: @googleapis_reference_link{google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups.proto#L175}
  /// [google.cloud.cpp.compute.v1.NetworkEndpointGroup]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L14957}
  ///
  StatusOr<google::cloud::cpp::compute::v1::NetworkEndpointGroup>
  GetGlobalNetworkEndpointGroups(std::string const& project, std::string const& network_endpoint_group, Options opts = {});

  ///
  /// Returns the specified network endpoint group.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::globalNetworkEndpointGroups::v1::GetGlobalNetworkEndpointGroupsRequest,google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups.proto#L175}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::NetworkEndpointGroup,google/cloud/compute/v1/internal/common.proto#L14957}
  ///
  /// [google.cloud.cpp.compute.globalNetworkEndpointGroups.v1.GetGlobalNetworkEndpointGroupsRequest]: @googleapis_reference_link{google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups.proto#L175}
  /// [google.cloud.cpp.compute.v1.NetworkEndpointGroup]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L14957}
  ///
  StatusOr<google::cloud::cpp::compute::v1::NetworkEndpointGroup>
  GetGlobalNetworkEndpointGroups(google::cloud::cpp::compute::globalNetworkEndpointGroups::v1::GetGlobalNetworkEndpointGroupsRequest const& request, Options opts = {});

  ///
  /// Creates a network endpoint group in the specified project using the
  /// parameters that are included in the request.
  ///
  /// @param project  Project ID for this request.
  /// @param network_endpoint_group_resource  The NetworkEndpointGroup for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.globalNetworkEndpointGroups.v1.InsertGlobalNetworkEndpointGroupsRequest]: @googleapis_reference_link{google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups.proto#L184}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  InsertGlobalNetworkEndpointGroups(std::string const& project, google::cloud::cpp::compute::v1::NetworkEndpointGroup const& network_endpoint_group_resource, Options opts = {});

  ///
  /// Creates a network endpoint group in the specified project using the
  /// parameters that are included in the request.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::globalNetworkEndpointGroups::v1::InsertGlobalNetworkEndpointGroupsRequest,google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups.proto#L184}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.globalNetworkEndpointGroups.v1.InsertGlobalNetworkEndpointGroupsRequest]: @googleapis_reference_link{google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups.proto#L184}
  /// [google.cloud.cpp.compute.v1.Operation]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation>
  InsertGlobalNetworkEndpointGroups(google::cloud::cpp::compute::globalNetworkEndpointGroups::v1::InsertGlobalNetworkEndpointGroupsRequest const& request, Options opts = {});

  ///
  /// Retrieves the list of network endpoint groups that are located in the
  /// specified project.
  ///
  /// @param project  Project ID for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::NetworkEndpointGroup,google/cloud/compute/v1/internal/common.proto#L14957}
  ///
  /// [google.cloud.cpp.compute.globalNetworkEndpointGroups.v1.ListGlobalNetworkEndpointGroupsRequest]: @googleapis_reference_link{google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups.proto#L205}
  /// [google.cloud.cpp.compute.v1.NetworkEndpointGroup]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L14957}
  ///
  StreamRange<google::cloud::cpp::compute::v1::NetworkEndpointGroup>
  ListGlobalNetworkEndpointGroups(std::string const& project, Options opts = {});

  ///
  /// Retrieves the list of network endpoint groups that are located in the
  /// specified project.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::globalNetworkEndpointGroups::v1::ListGlobalNetworkEndpointGroupsRequest,google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups.proto#L205}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::NetworkEndpointGroup,google/cloud/compute/v1/internal/common.proto#L14957}
  ///
  /// [google.cloud.cpp.compute.globalNetworkEndpointGroups.v1.ListGlobalNetworkEndpointGroupsRequest]: @googleapis_reference_link{google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups.proto#L205}
  /// [google.cloud.cpp.compute.v1.NetworkEndpointGroup]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L14957}
  ///
  StreamRange<google::cloud::cpp::compute::v1::NetworkEndpointGroup>
  ListGlobalNetworkEndpointGroups(google::cloud::cpp::compute::globalNetworkEndpointGroups::v1::ListGlobalNetworkEndpointGroupsRequest request, Options opts = {});

  ///
  /// Lists the network endpoints in the specified network endpoint group.
  ///
  /// @param project  Project ID for this request.
  /// @param network_endpoint_group  The name of the network endpoint group from which you want to generate a
  ///  list of included network endpoints. It should comply with RFC1035.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::NetworkEndpointWithHealthStatus,google/cloud/compute/v1/internal/common.proto#L15564}
  ///
  /// [google.cloud.cpp.compute.globalNetworkEndpointGroups.v1.ListNetworkEndpointsRequest]: @googleapis_reference_link{google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups.proto#L270}
  /// [google.cloud.cpp.compute.v1.NetworkEndpointWithHealthStatus]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L15564}
  ///
  StreamRange<google::cloud::cpp::compute::v1::NetworkEndpointWithHealthStatus>
  ListNetworkEndpoints(std::string const& project, std::string const& network_endpoint_group, Options opts = {});

  ///
  /// Lists the network endpoints in the specified network endpoint group.
  ///
  /// @param request @googleapis_link{google::cloud::cpp::compute::globalNetworkEndpointGroups::v1::ListNetworkEndpointsRequest,google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups.proto#L270}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return @googleapis_link{google::cloud::cpp::compute::v1::NetworkEndpointWithHealthStatus,google/cloud/compute/v1/internal/common.proto#L15564}
  ///
  /// [google.cloud.cpp.compute.globalNetworkEndpointGroups.v1.ListNetworkEndpointsRequest]: @googleapis_reference_link{google/cloud/compute/global_network_endpoint_groups/v1/global_network_endpoint_groups.proto#L270}
  /// [google.cloud.cpp.compute.v1.NetworkEndpointWithHealthStatus]: @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L15564}
  ///
  StreamRange<google::cloud::cpp::compute::v1::NetworkEndpointWithHealthStatus>
  ListNetworkEndpoints(google::cloud::cpp::compute::globalNetworkEndpointGroups::v1::ListNetworkEndpointsRequest request, Options opts = {});

 private:
  std::shared_ptr<GlobalNetworkEndpointGroupsConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_global_network_endpoint_groups_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_GLOBAL_NETWORK_ENDPOINT_GROUPS_V1_GLOBAL_NETWORK_ENDPOINT_GROUPS_CLIENT_H
