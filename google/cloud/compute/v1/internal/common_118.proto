// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/compute_public_google_rest_v1.json
// revision: 20230920

syntax = "proto3";

package google.cloud.cpp.compute.v1;

// Represents a Subnetwork resource. A subnetwork (also known as a subnet) is a
// logical partition of a Virtual Private Cloud network with one primary IP
// range and zero or more secondary IP ranges. For more information, read
// Virtual Private Cloud (VPC) Network.
message Subnetwork {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1;

  // An optional description of this resource. Provide this property when you
  // create the resource. This field can be set only at resource creation time.
  optional string description = 2;

  // Whether to enable flow logging for this subnetwork. If this field is not
  // explicitly set, it will not appear in get listings. If not set the default
  // behavior is determined by the org policy, if there is no org policy
  // specified, then it will default to disabled. This field isn't supported if
  // the subnet purpose field is set to REGIONAL_MANAGED_PROXY.
  optional bool enable_flow_logs = 3;

  // The external IPv6 address range that is owned by this subnetwork.
  optional string external_ipv6_prefix = 4;

  // Fingerprint of this resource. A hash of the contents stored in this object.
  // This field is used in optimistic locking. This field will be ignored when
  // inserting a Subnetwork. An up-to-date fingerprint must be provided in order
  // to update the Subnetwork, otherwise the request will fail with error 412
  // conditionNotMet. To see the latest fingerprint, make a get() request to
  // retrieve a Subnetwork.
  optional string fingerprint = 5;

  // [Output Only] The gateway address for default routes to reach destination
  // addresses outside this subnetwork.
  optional string gateway_address = 6;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 7;

  // [Output Only] The internal IPv6 address range that is assigned to this
  // subnetwork.
  optional string internal_ipv6_prefix = 8;

  // The range of internal addresses that are owned by this subnetwork. Provide
  // this property when you create the subnetwork. For example, 10.0.0.0/8 or
  // 100.64.0.0/10. Ranges must be unique and non-overlapping within a network.
  // Only IPv4 is supported. This field is set at resource creation time. The
  // range can be any range listed in the Valid ranges list. The range can be
  // expanded after creation using expandIpCidrRange.
  optional string ip_cidr_range = 9;

  // The access type of IPv6 address this subnet holds. It's immutable and can
  // only be specified during creation or the first time the subnet is updated
  // into IPV4_IPV6 dual stack.
  // EXTERNAL: VMs on this subnet will be assigned IPv6 addresses that are
  // accessible via the Internet, as well as the VPC network.
  // INTERNAL: VMs on this subnet will be assigned IPv6 addresses that are only
  // accessible over the VPC network.
  optional string ipv6_access_type = 10;

  // [Output Only] This field is for internal use.
  optional string ipv6_cidr_range = 11;

  // [Output Only] Type of the resource. Always compute#subnetwork for
  // Subnetwork resources.
  optional string kind = 12;

  // This field denotes the VPC flow logging options for this subnetwork. If
  // logging is enabled, logs are exported to Cloud Logging.
  optional SubnetworkLogConfig log_config = 13;

  // The name of the resource, provided by the client when initially creating
  // the resource. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and match the
  // regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
  // character must be a lowercase letter, and all following characters must be
  // a dash, lowercase letter, or digit, except the last character, which cannot
  // be a dash.
  optional string name = 14;

  // The URL of the network to which this subnetwork belongs, provided by the
  // client when initially creating the subnetwork. This field can be set only
  // at resource creation time.
  optional string network = 15;

  // Whether the VMs in this subnet can access Google services without assigned
  // external IP addresses. This field can be both set at resource creation time
  // and updated using setPrivateIpGoogleAccess.
  optional bool private_ip_google_access = 16;

  // This field is for internal use. This field can be both set at resource
  // creation time and updated using patch.
  // DISABLE_GOOGLE_ACCESS: Disable private IPv6 access to/from Google services.
  // ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE: Bidirectional private IPv6 access
  // to/from Google services.
  // ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE: Outbound private IPv6 access from VMs
  // in this subnet to Google services.
  optional string private_ipv6_google_access = 17;

  // The purpose of the resource. This field can be either PRIVATE,
  // REGIONAL_MANAGED_PROXY, PRIVATE_SERVICE_CONNECT, or
  // INTERNAL_HTTPS_LOAD_BALANCER. PRIVATE is the default purpose for
  // user-created subnets or subnets that are automatically created in auto mode
  // networks. A subnet with purpose set to REGIONAL_MANAGED_PROXY is a
  // user-created subnetwork that is reserved for regional Envoy-based load
  // balancers. A subnet with purpose set to PRIVATE_SERVICE_CONNECT is used to
  // publish services using Private Service Connect. A subnet with purpose set
  // to INTERNAL_HTTPS_LOAD_BALANCER is a proxy-only subnet that can be used
  // only by regional internal HTTP(S) load balancers. Note that
  // REGIONAL_MANAGED_PROXY is the preferred setting for all regional Envoy load
  // balancers. If unspecified, the subnet purpose defaults to PRIVATE. The
  // enableFlowLogs field isn't supported if the subnet purpose field is set to
  // REGIONAL_MANAGED_PROXY.
  // GLOBAL_MANAGED_PROXY: Subnet reserved for Global Envoy-based Load
  // Balancing.
  // INTERNAL_HTTPS_LOAD_BALANCER: Subnet reserved for Internal HTTP(S) Load
  // Balancing.
  // PRIVATE: Regular user created or automatically created subnet.
  // PRIVATE_RFC_1918: Regular user created or automatically created subnet.
  // PRIVATE_SERVICE_CONNECT: Subnetworks created for Private Service Connect in
  // the producer network.
  // REGIONAL_MANAGED_PROXY: Subnetwork used for Regional Envoy-based Load
  // Balancing.
  optional string purpose = 18;

  // URL of the region where the Subnetwork resides. This field can be set only
  // at resource creation time.
  optional string region = 19;

  // The role of subnetwork. Currently, this field is only used when purpose =
  // REGIONAL_MANAGED_PROXY. The value can be set to ACTIVE or BACKUP. An ACTIVE
  // subnetwork is one that is currently being used for Envoy-based load
  // balancers in a region. A BACKUP subnetwork is one that is ready to be
  // promoted to ACTIVE or is currently draining. This field can be updated with
  // a patch request.
  // ACTIVE: The ACTIVE subnet that is currently used.
  // BACKUP: The BACKUP subnet that could be promoted to ACTIVE.
  optional string role = 20;

  // An array of configurations for secondary IP ranges for VM instances
  // contained in this subnetwork. The primary IP of such VM must belong to the
  // primary ipCidrRange of the subnetwork. The alias IPs may belong to either
  // primary or secondary ranges. This field can be updated with a patch
  // request.
  repeated SubnetworkSecondaryRange secondary_ip_ranges = 21;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 22;

  // The stack type for the subnet. If set to IPV4_ONLY, new VMs in the subnet
  // are assigned IPv4 addresses only. If set to IPV4_IPV6, new VMs in the
  // subnet can be assigned both IPv4 and IPv6 addresses. If not specified,
  // IPV4_ONLY is used. This field can be both set at resource creation time and
  // updated using patch.
  // IPV4_IPV6: New VMs in this subnet can have both IPv4 and IPv6 addresses.
  // IPV4_ONLY: New VMs in this subnet will only be assigned IPv4 addresses.
  optional string stack_type = 23;

  // [Output Only] The state of the subnetwork, which can be one of the
  // following values: READY: Subnetwork is created and ready to use DRAINING:
  // only applicable to subnetworks that have the purpose set to
  // INTERNAL_HTTPS_LOAD_BALANCER and indicates that connections to the load
  // balancer are being drained. A subnetwork that is draining cannot be used or
  // modified until it reaches a status of READY
  // DRAINING: Subnetwork is being drained.
  // READY: Subnetwork is ready for use.
  optional string state = 24;
}

message SubnetworkAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of SubnetworksScopedList resources.
  map<string, SubnetworksScopedList> items = 2;

  // [Output Only] Type of resource. Always compute#subnetworkAggregatedList for
  // aggregated lists of subnetworks.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Contains a list of Subnetwork resources.
message SubnetworkList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of Subnetwork resources.
  repeated Subnetwork items = 2;

  // [Output Only] Type of resource. Always compute#subnetworkList for lists of
  // subnetworks.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// The available logging options for this subnetwork.
message SubnetworkLogConfig {
  // Can only be specified if VPC flow logging for this subnetwork is enabled.
  // Toggles the aggregation interval for collecting flow logs. Increasing the
  // interval time will reduce the amount of generated flow logs for long
  // lasting connections. Default is an interval of 5 seconds per connection.
  // INTERVAL_10_MIN:
  // INTERVAL_15_MIN:
  // INTERVAL_1_MIN:
  // INTERVAL_30_SEC:
  // INTERVAL_5_MIN:
  // INTERVAL_5_SEC:
  optional string aggregation_interval = 1;

  // Whether to enable flow logging for this subnetwork. If this field is not
  // explicitly set, it will not appear in get listings. If not set the default
  // behavior is determined by the org policy, if there is no org policy
  // specified, then it will default to disabled. Flow logging isn't supported
  // if the subnet purpose field is set to REGIONAL_MANAGED_PROXY.
  optional bool enable = 2;

  // Can only be specified if VPC flow logs for this subnetwork is enabled. The
  // filter expression is used to define which VPC flow logs should be exported
  // to Cloud Logging.
  optional string filter_expr = 3;

  // Can only be specified if VPC flow logging for this subnetwork is enabled.
  // The value of the field must be in [0, 1]. Set the sampling rate of VPC flow
  // logs within the subnetwork where 1.0 means all collected logs are reported
  // and 0.0 means no logs are reported. Default is 0.5 unless otherwise
  // specified by the org policy, which means half of all collected logs are
  // reported.
  optional float flow_sampling = 4;

  // Can only be specified if VPC flow logs for this subnetwork is enabled.
  // Configures whether all, none or a subset of metadata fields should be added
  // to the reported VPC flow logs. Default is EXCLUDE_ALL_METADATA.
  // CUSTOM_METADATA:
  // EXCLUDE_ALL_METADATA:
  // INCLUDE_ALL_METADATA:
  optional string metadata = 5;

  // Can only be specified if VPC flow logs for this subnetwork is enabled and
  // "metadata" was set to CUSTOM_METADATA.
  repeated string metadata_fields = 6;
}

// Represents a secondary IP range of a subnetwork.
message SubnetworkSecondaryRange {
  // The range of IP addresses belonging to this subnetwork secondary range.
  // Provide this property when you create the subnetwork. Ranges must be unique
  // and non-overlapping with all primary and secondary IP ranges within a
  // network. Only IPv4 is supported. The range can be any range listed in the
  // Valid ranges list.
  optional string ip_cidr_range = 1;

  // The name associated with this subnetwork secondary range, used when adding
  // an alias IP range to a VM instance. The name must be 1-63 characters long,
  // and comply with RFC1035. The name must be unique within the subnetwork.
  optional string range_name = 2;
}

message SubnetworksExpandIpCidrRangeRequest {
  // The IP (in CIDR format or netmask) of internal addresses that are legal on
  // this Subnetwork. This range should be disjoint from other subnetworks
  // within this network. This range can only be larger than (i.e. a superset
  // of) the range previously defined before the update.
  optional string ip_cidr_range = 1;
}

message SubnetworksScopedList {
  // A list of subnetworks contained in this scope.
  repeated Subnetwork subnetworks = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // An informational warning that appears when the list of addresses is empty.
  optional Warning warning = 2;
}

message SubnetworksSetPrivateIpGoogleAccessRequest {
  optional bool private_ip_google_access = 1;
}

// Subnetwork which the current user has compute.subnetworks.use permission on.
message UsableSubnetwork {
  // [Output Only] The external IPv6 address range that is assigned to this
  // subnetwork.
  optional string external_ipv6_prefix = 1;

  // [Output Only] The internal IPv6 address range that is assigned to this
  // subnetwork.
  optional string internal_ipv6_prefix = 2;

  // The range of internal addresses that are owned by this subnetwork.
  optional string ip_cidr_range = 3;

  // The access type of IPv6 address this subnet holds. It's immutable and can
  // only be specified during creation or the first time the subnet is updated
  // into IPV4_IPV6 dual stack.
  // EXTERNAL: VMs on this subnet will be assigned IPv6 addresses that are
  // accessible via the Internet, as well as the VPC network.
  // INTERNAL: VMs on this subnet will be assigned IPv6 addresses that are only
  // accessible over the VPC network.
  optional string ipv6_access_type = 4;

  // Network URL.
  optional string network = 5;

  // The purpose of the resource. This field can be either PRIVATE,
  // REGIONAL_MANAGED_PROXY, PRIVATE_SERVICE_CONNECT, or
  // INTERNAL_HTTPS_LOAD_BALANCER. PRIVATE is the default purpose for
  // user-created subnets or subnets that are automatically created in auto mode
  // networks. A subnet with purpose set to REGIONAL_MANAGED_PROXY is a
  // user-created subnetwork that is reserved for regional Envoy-based load
  // balancers. A subnet with purpose set to PRIVATE_SERVICE_CONNECT is used to
  // publish services using Private Service Connect. A subnet with purpose set
  // to INTERNAL_HTTPS_LOAD_BALANCER is a proxy-only subnet that can be used
  // only by regional internal HTTP(S) load balancers. Note that
  // REGIONAL_MANAGED_PROXY is the preferred setting for all regional Envoy load
  // balancers. If unspecified, the subnet purpose defaults to PRIVATE. The
  // enableFlowLogs field isn't supported if the subnet purpose field is set to
  // REGIONAL_MANAGED_PROXY.
  // GLOBAL_MANAGED_PROXY: Subnet reserved for Global Envoy-based Load
  // Balancing.
  // INTERNAL_HTTPS_LOAD_BALANCER: Subnet reserved for Internal HTTP(S) Load
  // Balancing.
  // PRIVATE: Regular user created or automatically created subnet.
  // PRIVATE_RFC_1918: Regular user created or automatically created subnet.
  // PRIVATE_SERVICE_CONNECT: Subnetworks created for Private Service Connect in
  // the producer network.
  // REGIONAL_MANAGED_PROXY: Subnetwork used for Regional Envoy-based Load
  // Balancing.
  optional string purpose = 6;

  // The role of subnetwork. Currently, this field is only used when purpose =
  // REGIONAL_MANAGED_PROXY. The value can be set to ACTIVE or BACKUP. An ACTIVE
  // subnetwork is one that is currently being used for Envoy-based load
  // balancers in a region. A BACKUP subnetwork is one that is ready to be
  // promoted to ACTIVE or is currently draining. This field can be updated with
  // a patch request.
  // ACTIVE: The ACTIVE subnet that is currently used.
  // BACKUP: The BACKUP subnet that could be promoted to ACTIVE.
  optional string role = 7;

  // Secondary IP ranges.
  repeated UsableSubnetworkSecondaryRange secondary_ip_ranges = 8;

  // The stack type for the subnet. If set to IPV4_ONLY, new VMs in the subnet
  // are assigned IPv4 addresses only. If set to IPV4_IPV6, new VMs in the
  // subnet can be assigned both IPv4 and IPv6 addresses. If not specified,
  // IPV4_ONLY is used. This field can be both set at resource creation time and
  // updated using patch.
  // IPV4_IPV6: New VMs in this subnet can have both IPv4 and IPv6 addresses.
  // IPV4_ONLY: New VMs in this subnet will only be assigned IPv4 addresses.
  optional string stack_type = 9;

  // Subnetwork URL.
  optional string subnetwork = 10;
}

// Secondary IP range of a usable subnetwork.
message UsableSubnetworkSecondaryRange {
  // The range of IP addresses belonging to this subnetwork secondary range.
  optional string ip_cidr_range = 1;

  // The name associated with this subnetwork secondary range, used when adding
  // an alias IP range to a VM instance. The name must be 1-63 characters long,
  // and comply with RFC1035. The name must be unique within the subnetwork.
  optional string range_name = 2;
}

message UsableSubnetworksAggregatedList {
  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 1;

  // [Output] A list of usable subnetwork URLs.
  repeated UsableSubnetwork items = 2;

  // [Output Only] Type of resource. Always
  // compute#usableSubnetworksAggregatedList for aggregated lists of usable
  // subnetworks.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results. In special cases listUsable may return
  // 0 subnetworks and nextPageToken which still should be used to get the next
  // page of results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // LIST_OVERHEAD_QUOTA_EXCEED: Resource can't be retrieved due to list
    // overhead quota exceed which captures the amount of resources filtered out
    // by user-defined list filter.
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}
