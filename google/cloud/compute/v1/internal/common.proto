// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.cpp.compute.v1;

// A specification of the type and number of accelerator cards attached to the
// instance.
message AcceleratorConfig {
  // The number of the guest accelerator cards exposed to this instance.
  optional int32 accelerator_count = 1;

  // Full or partial URL of the accelerator type resource to attach to this
  // instance. For example:
  // projects/my-project/zones/us-central1-c/acceleratorTypes/nvidia-tesla-p100
  // If you are creating an instance template, specify only the accelerator
  // name. See GPUs on Compute Engine for a full list of accelerator types.
  optional string accelerator_type = 2;
}

// Represents an Accelerator Type resource. Google Cloud Platform provides
// graphics processing units (accelerators) that you can add to VM instances to
// improve or accelerate performance when working with intensive workloads. For
// more information, read GPUs on Compute Engine.
message AcceleratorType {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1;

  // [Output Only] The deprecation status associated with this accelerator type.
  optional DeprecationStatus deprecated = 2;

  // [Output Only] An optional textual description of the resource.
  optional string description = 3;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 4;

  // [Output Only] The type of the resource. Always compute#acceleratorType for
  // accelerator types.
  optional string kind = 5;

  // [Output Only] Maximum number of accelerator cards allowed per instance.
  optional int32 maximum_cards_per_instance = 6;

  // [Output Only] Name of the resource.
  optional string name = 7;

  // [Output Only] Server-defined, fully qualified URL for this resource.
  optional string self_link = 8;

  // [Output Only] The name of the zone where the accelerator type resides, such
  // as us-central1-a. You must specify this field as part of the HTTP request
  // URL. It is not settable as a field in the request body.
  optional string zone = 9;
}

message AcceleratorTypeAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of AcceleratorTypesScopedList resources.
  map<string, AcceleratorTypesScopedList> items = 2;

  // [Output Only] Type of resource. Always
  // compute#acceleratorTypeAggregatedList for aggregated lists of accelerator
  // types.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Contains a list of accelerator types.
message AcceleratorTypeList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of AcceleratorType resources.
  repeated AcceleratorType items = 2;

  // [Output Only] Type of resource. Always compute#acceleratorTypeList for
  // lists of accelerator types.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message AcceleratorTypesScopedList {
  // [Output Only] A list of accelerator types contained in this scope.
  repeated AcceleratorType accelerator_types = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] An informational warning that appears when the accelerator
  // types list is empty.
  optional Warning warning = 2;
}

// An access configuration attached to an instance's network interface. Only one
// access config per instance is supported.
message AccessConfig {
  // The first IPv6 address of the external IPv6 range associated with this
  // instance, prefix length is stored in externalIpv6PrefixLength in
  // ipv6AccessConfig. To use a static external IP address, it must be unused
  // and in the same region as the instance's zone. If not specified, Google
  // Cloud will automatically assign an external IPv6 address from the
  // instance's subnetwork.
  optional string external_ipv6 = 1;

  // The prefix length of the external IPv6 range.
  optional int32 external_ipv6_prefix_length = 2;

  // [Output Only] Type of the resource. Always compute#accessConfig for access
  // configs.
  optional string kind = 3;

  // The name of this access configuration. The default and recommended name is
  // External NAT, but you can use any arbitrary string, such as My external IP
  // or Network Access.
  optional string name = 4;

  // An external IP address associated with this instance. Specify an unused
  // static external IP address available to the project or leave this field
  // undefined to use an IP from a shared ephemeral IP address pool. If you
  // specify a static external IP address, it must live in the same region as
  // the zone of the instance.
  optional string nat_ip = 5;

  // This signifies the networking tier used for configuring this access
  // configuration and can only take the following values: PREMIUM, STANDARD. If
  // an AccessConfig is specified without a valid external IP address, an
  // ephemeral IP will be created with this networkTier. If an AccessConfig with
  // a valid external IP address is specified, it must match that of the
  // networkTier associated with the Address resource owning that IP.
  // FIXED_STANDARD: Public internet quality with fixed bandwidth.
  // PREMIUM: High quality, Google-grade network tier, support for all
  // networking products.
  // STANDARD: Public internet quality, only limited support for other
  // networking products.
  // STANDARD_OVERRIDES_FIXED_STANDARD: (Output only) Temporary tier for
  // FIXED_STANDARD when fixed standard tier is expired or not configured.
  optional string network_tier = 6;

  // The DNS domain name for the public PTR record. You can set this field only
  // if the `setPublicPtr` field is enabled in accessConfig. If this field is
  // unspecified in ipv6AccessConfig, a default PTR record will be createc for
  // first IP in associated external IPv6 range.
  optional string public_ptr_domain_name = 7;

  // Specifies whether a public DNS 'PTR' record should be created to map the
  // external IP address of the instance to a DNS domain name. This field is not
  // used in ipv6AccessConfig. A default PTR record will be created if the VM
  // has external IPv6 range associated.
  optional bool set_public_ptr = 8;

  // The type of configuration. The default and only option is ONE_TO_ONE_NAT.
  // DIRECT_IPV6:
  // ONE_TO_ONE_NAT:
  optional string type = 9;
}

// Represents an IP Address resource. Google Compute Engine has two IP Address
// resources: * [Global (external and
// internal)](https://cloud.google.com/compute/docs/reference/rest/v1/globalAddresses)
// * [Regional (external and
// internal)](https://cloud.google.com/compute/docs/reference/rest/v1/addresses)
// For more information, see Reserving a static external IP address.
message Address {
  // The static IP address represented by this resource.
  optional string address = 1;

  // The type of address to reserve, either INTERNAL or EXTERNAL. If
  // unspecified, defaults to EXTERNAL.
  // EXTERNAL: A publicly visible external IP address.
  // INTERNAL: A private network IP address, for use with an Instance or
  // Internal Load Balancer forwarding rule.
  // UNSPECIFIED_TYPE:
  optional string address_type = 2;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 3;

  // An optional description of this resource. Provide this field when you
  // create the resource.
  optional string description = 4;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 5;

  // The IP version that will be used by this address. Valid options are IPV4 or
  // IPV6. This can only be specified for a global address.
  // IPV4:
  // IPV6:
  // UNSPECIFIED_VERSION:
  optional string ip_version = 6;

  // The endpoint type of this address, which should be VM or NETLB. This is
  // used for deciding which type of endpoint this address can be used after the
  // external IPv6 address reservation.
  // NETLB: Reserved IPv6 address can be used on network load balancer.
  // VM: Reserved IPv6 address can be used on VM.
  optional string ipv6_endpoint_type = 7;

  // [Output Only] Type of the resource. Always compute#address for addresses.
  optional string kind = 8;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a
  // lowercase letter, and all following characters (except for the last
  // character) must be a dash, lowercase letter, or digit. The last character
  // must be a lowercase letter or digit.
  optional string name = 9;

  // The URL of the network in which to reserve the address. This field can only
  // be used with INTERNAL type with the VPC_PEERING purpose.
  optional string network = 10;

  // This signifies the networking tier used for configuring this address and
  // can only take the following values: PREMIUM or STANDARD. Internal IP
  // addresses are always Premium Tier; global external IP addresses are always
  // Premium Tier; regional external IP addresses can be either Standard or
  // Premium Tier. If this field is not specified, it is assumed to be PREMIUM.
  // FIXED_STANDARD: Public internet quality with fixed bandwidth.
  // PREMIUM: High quality, Google-grade network tier, support for all
  // networking products.
  // STANDARD: Public internet quality, only limited support for other
  // networking products.
  // STANDARD_OVERRIDES_FIXED_STANDARD: (Output only) Temporary tier for
  // FIXED_STANDARD when fixed standard tier is expired or not configured.
  optional string network_tier = 11;

  // The prefix length if the resource represents an IP range.
  optional int32 prefix_length = 12;

  // The purpose of this resource, which can be one of the following values: -
  // GCE_ENDPOINT for addresses that are used by VM instances, alias IP ranges,
  // load balancers, and similar resources. - DNS_RESOLVER for a DNS resolver
  // address in a subnetwork for a Cloud DNS inbound forwarder IP addresses
  // (regional internal IP address in a subnet of a VPC network) - VPC_PEERING
  // for global internal IP addresses used for private services access allocated
  // ranges. - NAT_AUTO for the regional external IP addresses used by Cloud NAT
  // when allocating addresses using automatic NAT IP address allocation. -
  // IPSEC_INTERCONNECT for addresses created from a private IP range that are
  // reserved for a VLAN attachment in an *HA VPN over Cloud Interconnect*
  // configuration. These addresses are regional resources. -
  // `SHARED_LOADBALANCER_VIP` for an internal IP address that is assigned to
  // multiple internal forwarding rules. - `PRIVATE_SERVICE_CONNECT` for a
  // private network address that is used to configure Private Service Connect.
  // Only global internal addresses can use this purpose.
  // DNS_RESOLVER: DNS resolver address in the subnetwork.
  // GCE_ENDPOINT: VM internal/alias IP, Internal LB service IP, etc.
  // IPSEC_INTERCONNECT: A regional internal IP address range reserved for the
  // VLAN attachment that is used in HA VPN over Cloud Interconnect. This
  // regional internal IP address range must not overlap with any IP address
  // range of subnet/route in the VPC network and its peering networks. After
  // the VLAN attachment is created with the reserved IP address range, when
  // creating a new VPN gateway, its interface IP address is allocated from the
  // associated VLAN attachment’s IP address range.
  // NAT_AUTO: External IP automatically reserved for Cloud NAT.
  // PRIVATE_SERVICE_CONNECT: A private network IP address that can be used to
  // configure Private Service Connect. This purpose can be specified only for
  // GLOBAL addresses of Type INTERNAL
  // SERVERLESS: A regional internal IP address range reserved for Serverless.
  // SHARED_LOADBALANCER_VIP: A private network IP address that can be shared by
  // multiple Internal Load Balancer forwarding rules.
  // VPC_PEERING: IP range for peer networks.
  optional string purpose = 13;

  // [Output Only] The URL of the region where a regional address resides. For
  // regional addresses, you must specify the region as a path parameter in the
  // HTTP request URL. *This field is not applicable to global addresses.*
  optional string region = 14;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 15;

  // [Output Only] The status of the address, which can be one of RESERVING,
  // RESERVED, or IN_USE. An address that is RESERVING is currently in the
  // process of being reserved. A RESERVED address is currently reserved and
  // available to use. An IN_USE address is currently being used by another
  // resource and is not available.
  // IN_USE: Address is being used by another resource and is not available.
  // RESERVED: Address is reserved and available to use.
  // RESERVING: Address is being reserved.
  optional string status = 16;

  // The URL of the subnetwork in which to reserve the address. If an IP address
  // is specified, it must be within the subnetwork's IP range. This field can
  // only be used with INTERNAL type with a GCE_ENDPOINT or DNS_RESOLVER
  // purpose.
  optional string subnetwork = 17;

  // [Output Only] The URLs of the resources that are using this address.
  repeated string users = 18;
}

message AddressAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of AddressesScopedList resources.
  map<string, AddressesScopedList> items = 2;

  // [Output Only] Type of resource. Always compute#addressAggregatedList for
  // aggregated lists of addresses.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Contains a list of addresses.
message AddressList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of Address resources.
  repeated Address items = 2;

  // [Output Only] Type of resource. Always compute#addressList for lists of
  // addresses.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message AddressesScopedList {
  // [Output Only] A list of addresses contained in this scope.
  repeated Address addresses = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning which replaces the list of addresses
  // when the list is empty.
  optional Warning warning = 2;
}

// Specifies options for controlling advanced machine features. Options that
// would traditionally be configured in a BIOS belong here. Features that
// require operating system support may have corresponding entries in the
// GuestOsFeatures of an Image (e.g., whether or not the OS in the Image
// supports nested virtualization being enabled or disabled).
message AdvancedMachineFeatures {
  // Whether to enable nested virtualization or not (default is false).
  optional bool enable_nested_virtualization = 1;

  // Whether to enable UEFI networking for instance creation.
  optional bool enable_uefi_networking = 2;

  // The number of threads per physical core. To disable simultaneous
  // multithreading (SMT) set this to 1. If unset, the maximum number of threads
  // supported per core by the underlying processor is assumed.
  optional int32 threads_per_core = 3;

  // The number of physical cores to expose to an instance. Multiply by the
  // number of threads per core to compute the total number of virtual CPUs to
  // expose to the instance. If unset, the number of cores is inferred from the
  // instance's nominal CPU count and the underlying platform's SMT width.
  optional int32 visible_core_count = 4;
}

// An alias IP range attached to an instance's network interface.
message AliasIpRange {
  // The IP alias ranges to allocate for this interface. This IP CIDR range must
  // belong to the specified subnetwork and cannot contain IP addresses reserved
  // by system or used by other network interfaces. This range may be a single
  // IP address (such as 10.2.3.4), a netmask (such as /24) or a CIDR-formatted
  // string (such as 10.1.2.0/24).
  optional string ip_cidr_range = 1;

  // The name of a subnetwork secondary IP range from which to allocate an IP
  // alias range. If not specified, the primary range of the subnetwork is used.
  optional string subnetwork_range_name = 2;
}

// [Output Only] Contains output only fields.
message AllocationResourceStatus {
  // Allocation Properties of this reservation.
  optional AllocationResourceStatusSpecificSKUAllocation
      specific_sku_allocation = 1;
}

// Contains Properties set for the reservation.
message AllocationResourceStatusSpecificSKUAllocation {
  // ID of the instance template used to populate reservation properties.
  optional string source_instance_template_id = 1;
}

message AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk {
  // Specifies the size of the disk in base-2 GB.
  optional string disk_size_gb = 1;

  // Specifies the disk interface to use for attaching this disk, which is
  // either SCSI or NVME. The default is SCSI. For performance characteristics
  // of SCSI over NVMe, see Local SSD performance.
  // NVME:
  // SCSI:
  optional string interface = 2;
}

// Properties of the SKU instances being reserved. Next ID: 9
message AllocationSpecificSKUAllocationReservedInstanceProperties {
  // Specifies accelerator type and count.
  repeated AcceleratorConfig guest_accelerators = 1;

  // Specifies amount of local ssd to reserve with each instance. The type of
  // disk is local-ssd.
  repeated
      AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk
          local_ssds = 2;

  // An opaque location hint used to place the allocation close to other
  // resources. This field is for use by internal tools that use the public API.
  optional string location_hint = 3;

  // Specifies type of machine (name only) which has fixed number of vCPUs and
  // fixed amount of memory. This also includes specifying custom machine type
  // following custom-NUMBER_OF_CPUS-AMOUNT_OF_MEMORY pattern.
  optional string machine_type = 4;

  // Minimum cpu platform the reservation.
  optional string min_cpu_platform = 5;
}

// This reservation type allows to pre allocate specific instance configuration.
// Next ID: 6
message AllocationSpecificSKUReservation {
  // [Output Only] Indicates how many instances are actually usable currently.
  optional string assured_count = 1;

  // Specifies the number of resources that are allocated.
  optional string count = 2;

  // [Output Only] Indicates how many instances are in use.
  optional string in_use_count = 3;

  // The instance properties for the reservation.
  optional AllocationSpecificSKUAllocationReservedInstanceProperties
      instance_properties = 4;

  // Specifies the instance template to create the reservation. If you use this
  // field, you must exclude the instanceProperties field. This field is
  // optional, and it can be a full or partial URL. For example, the following
  // are all valid URLs to an instance template: -
  // https://www.googleapis.com/compute/v1/projects/project
  // /global/instanceTemplates/instanceTemplate -
  // projects/project/global/instanceTemplates/instanceTemplate -
  // global/instanceTemplates/instanceTemplate
  optional string source_instance_template = 5;
}

// An instance-attached disk resource.
message AttachedDisk {
  // [Output Only] The architecture of the attached disk. Valid values are ARM64
  // or X86_64.
  // ARCHITECTURE_UNSPECIFIED: Default value indicating Architecture is not set.
  // ARM64: Machines with architecture ARM64
  // X86_64: Machines with architecture X86_64
  optional string architecture = 1;

  // Specifies whether the disk will be auto-deleted when the instance is
  // deleted (but not when the disk is detached from the instance).
  optional bool auto_delete = 2;

  // Indicates that this is a boot disk. The virtual machine will use the first
  // partition of the disk for its root filesystem.
  optional bool boot = 3;

  // Specifies a unique device name of your choice that is reflected into the
  // /dev/disk/by-id/google-* tree of a Linux operating system running within
  // the instance. This name can be used to reference the device for mounting,
  // resizing, and so on, from within the instance. If not specified, the server
  // chooses a default device name to apply to this disk, in the form
  // persistent-disk-x, where x is a number assigned by Google Compute Engine.
  // This field is only applicable for persistent disks.
  optional string device_name = 4;

  // Encrypts or decrypts a disk using a customer-supplied encryption key. If
  // you are creating a new disk, this field encrypts the new disk using an
  // encryption key that you provide. If you are attaching an existing disk that
  // is already encrypted, this field decrypts the disk using the
  // customer-supplied encryption key. If you encrypt a disk using a
  // customer-supplied key, you must provide the same key again when you attempt
  // to use this resource at a later time. For example, you must provide the key
  // when you create a snapshot or an image from the disk or when you attach the
  // disk to a virtual machine instance. If you do not provide an encryption
  // key, then the disk will be encrypted using an automatically generated key
  // and you do not need to provide a key to use the disk later. Instance
  // templates do not store customer-supplied encryption keys, so you cannot use
  // your own keys to encrypt disks in a managed instance group.
  optional CustomerEncryptionKey disk_encryption_key = 5;

  // The size of the disk in GB.
  optional string disk_size_gb = 6;

  // [Input Only] Whether to force attach the regional disk even if it's
  // currently attached to another instance. If you try to force attach a zonal
  // disk to an instance, you will receive an error.
  optional bool force_attach = 7;

  // A list of features to enable on the guest operating system. Applicable only
  // for bootable images. Read Enabling guest operating system features to see a
  // list of available options.
  repeated GuestOsFeature guest_os_features = 8;

  // [Output Only] A zero-based index to this disk, where 0 is reserved for the
  // boot disk. If you have many disks attached to an instance, each disk would
  // have a unique index number.
  optional int32 index = 9;

  // [Input Only] Specifies the parameters for a new disk that will be created
  // alongside the new instance. Use initialization parameters to create boot
  // disks or local SSDs attached to the new instance. This property is mutually
  // exclusive with the source property; you can only define one or the other,
  // but not both.
  optional AttachedDiskInitializeParams initialize_params = 10;

  // Specifies the disk interface to use for attaching this disk, which is
  // either SCSI or NVME. For most machine types, the default is SCSI. Local
  // SSDs can use either NVME or SCSI. In certain configurations, persistent
  // disks can use NVMe. For more information, see About persistent disks.
  // NVME:
  // SCSI:
  optional string interface = 11;

  // [Output Only] Type of the resource. Always compute#attachedDisk for
  // attached disks.
  optional string kind = 12;

  // [Output Only] Any valid publicly visible licenses.
  repeated string licenses = 13;

  // The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If
  // not specified, the default is to attach the disk in READ_WRITE mode.
  // READ_ONLY: Attaches this disk in read-only mode. Multiple virtual machines
  // can use a disk in read-only mode at a time.
  // READ_WRITE: *[Default]* Attaches this disk in read-write mode. Only one
  // virtual machine at a time can be attached to a disk in read-write mode.
  optional string mode = 14;

  // [Output Only] shielded vm initial state stored on disk
  optional InitialStateConfig shielded_instance_initial_state = 15;

  // Specifies a valid partial or full URL to an existing Persistent Disk
  // resource. When creating a new instance, one of initializeParams.sourceImage
  // or initializeParams.sourceSnapshot or disks.source is required except for
  // local SSD. If desired, you can also attach existing non-root persistent
  // disks using this property. This field is only applicable for persistent
  // disks. Note that for InstanceTemplate, specify the disk name for zonal
  // disk, and the URL for regional disk.
  optional string source = 16;

  // Specifies the type of the disk, either SCRATCH or PERSISTENT. If not
  // specified, the default is PERSISTENT.
  // PERSISTENT:
  // SCRATCH:
  optional string type = 17;
}

// [Input Only] Specifies the parameters for a new disk that will be created
// alongside the new instance. Use initialization parameters to create boot
// disks or local SSDs attached to the new instance. This field is persisted and
// returned for instanceTemplate and not returned in the context of instance.
// This property is mutually exclusive with the source property; you can only
// define one or the other, but not both.
message AttachedDiskInitializeParams {
  // The architecture of the attached disk. Valid values are arm64 or x86_64.
  // ARCHITECTURE_UNSPECIFIED: Default value indicating Architecture is not set.
  // ARM64: Machines with architecture ARM64
  // X86_64: Machines with architecture X86_64
  optional string architecture = 1;

  // An optional description. Provide this property when creating the disk.
  optional string description = 2;

  // Specifies the disk name. If not specified, the default is to use the name
  // of the instance. If a disk with the same name already exists in the given
  // region, the existing disk is attached to the new instance and the new disk
  // is not created.
  optional string disk_name = 3;

  // Specifies the size of the disk in base-2 GB. The size must be at least 10
  // GB. If you specify a sourceImage, which is required for boot disks, the
  // default size is the size of the sourceImage. If you do not specify a
  // sourceImage, the default disk size is 500 GB.
  optional string disk_size_gb = 4;

  // Specifies the disk type to use to create the instance. If not specified,
  // the default is pd-standard, specified using the full URL. For example:
  // https://www.googleapis.com/compute/v1/projects/project/zones/zone
  // /diskTypes/pd-standard For a full list of acceptable values, see Persistent
  // disk types. If you specify this field when creating a VM, you can provide
  // either the full or partial URL. For example, the following values are
  // valid: - https://www.googleapis.com/compute/v1/projects/project/zones/zone
  // /diskTypes/diskType - projects/project/zones/zone/diskTypes/diskType -
  // zones/zone/diskTypes/diskType If you specify this field when creating or
  // updating an instance template or all-instances configuration, specify the
  // type of the disk, not the URL. For example: pd-standard.
  optional string disk_type = 5;

  // Labels to apply to this disk. These can be later modified by the
  // disks.setLabels method. This field is only applicable for persistent disks.
  map<string, string> labels = 6;

  // A list of publicly visible licenses. Reserved for Google's use.
  repeated string licenses = 7;

  // Specifies which action to take on instance update with this disk. Default
  // is to use the existing disk.
  // RECREATE_DISK: Always recreate the disk.
  // RECREATE_DISK_IF_SOURCE_CHANGED: Recreate the disk if source (image,
  // snapshot) of this disk is different from source of existing disk.
  // USE_EXISTING_DISK: Use the existing disk, this is the default behaviour.
  optional string on_update_action = 8;

  // Indicates how many IOPS to provision for the disk. This sets the number of
  // I/O operations per second that the disk can handle. Values must be between
  // 10,000 and 120,000. For more details, see the Extreme persistent disk
  // documentation.
  optional string provisioned_iops = 9;

  // Resource manager tags to be bound to the disk. Tag keys and values have the
  // same definition as resource manager tags. Keys must be in the format
  // `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The
  // field is ignored (both PUT & PATCH) when empty.
  map<string, string> resource_manager_tags = 10;

  // Resource policies applied to this disk for automatic snapshot creations.
  // Specified using the full or partial URL. For instance template, specify
  // only the resource policy name.
  repeated string resource_policies = 11;

  // The source image to create this disk. When creating a new instance, one of
  // initializeParams.sourceImage or initializeParams.sourceSnapshot or
  // disks.source is required except for local SSD. To create a disk with one of
  // the public operating system images, specify the image by its family name.
  // For example, specify family/debian-9 to use the latest Debian 9 image:
  // projects/debian-cloud/global/images/family/debian-9 Alternatively, use a
  // specific version of a public operating system image:
  // projects/debian-cloud/global/images/debian-9-stretch-vYYYYMMDD To create a
  // disk with a custom image that you created, specify the image name in the
  // following format: global/images/my-custom-image You can also specify a
  // custom image by its image family, which returns the latest version of the
  // image in that family. Replace the image name with family/family-name:
  // global/images/family/my-image-family If the source image is deleted later,
  // this field will not be set.
  optional string source_image = 12;

  // The customer-supplied encryption key of the source image. Required if the
  // source image is protected by a customer-supplied encryption key.
  // InstanceTemplate and InstancePropertiesPatch do not store customer-supplied
  // encryption keys, so you cannot create disks for instances in a managed
  // instance group if the source images are encrypted with your own keys.
  optional CustomerEncryptionKey source_image_encryption_key = 13;

  // The source snapshot to create this disk. When creating a new instance, one
  // of initializeParams.sourceSnapshot or initializeParams.sourceImage or
  // disks.source is required except for local SSD. To create a disk with a
  // snapshot that you created, specify the snapshot name in the following
  // format: global/snapshots/my-backup If the source snapshot is deleted later,
  // this field will not be set.
  optional string source_snapshot = 14;

  // The customer-supplied encryption key of the source snapshot.
  optional CustomerEncryptionKey source_snapshot_encryption_key = 15;
}

// Specifies the audit configuration for a service. The configuration determines
// which permission types are logged, and what identities, if any, are exempted
// from logging. An AuditConfig must have one or more AuditLogConfigs. If there
// are AuditConfigs for both `allServices` and a specific service, the union of
// the two AuditConfigs is used for that service: the log_types specified in
// each AuditConfig are enabled, and the exempted_members in each AuditLogConfig
// are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [
// { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
// "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE"
// }, { "log_type": "ADMIN_READ" } ] }, { "service":
// "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
// "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
// "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables
// DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
// jose@example.com from DATA_READ logging, and aliya@example.com from
// DATA_WRITE logging.
message AuditConfig {
  // The configuration for logging of each type of permission.
  repeated AuditLogConfig audit_log_configs = 1;

  // This is deprecated and has no effect. Do not use.
  repeated string exempted_members = 2;

  // Specifies a service that will be enabled for audit logging. For example,
  // `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a
  // special value that covers all services.
  optional string service = 3;
}

// Provides the configuration for logging a type of permissions. Example: {
// "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
// "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables
// 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from
// DATA_READ logging.
message AuditLogConfig {
  // Specifies the identities that do not cause logging for this type of
  // permission. Follows the same format of Binding.members.
  repeated string exempted_members = 1;

  // This is deprecated and has no effect. Do not use.
  optional bool ignore_child_exemptions = 2;

  // The log type that this config enables.
  // ADMIN_READ: Admin reads. Example: CloudIAM getIamPolicy
  // DATA_READ: Data reads. Example: CloudSQL Users list
  // DATA_WRITE: Data writes. Example: CloudSQL Users create
  // LOG_TYPE_UNSPECIFIED: Default case. Should never be this.
  optional string log_type = 3;
}

// This is deprecated and has no effect. Do not use.
message AuthorizationLoggingOptions {
  // This is deprecated and has no effect. Do not use.
  // ADMIN_READ: This is deprecated and has no effect. Do not use.
  // ADMIN_WRITE: This is deprecated and has no effect. Do not use.
  // DATA_READ: This is deprecated and has no effect. Do not use.
  // DATA_WRITE: This is deprecated and has no effect. Do not use.
  // PERMISSION_TYPE_UNSPECIFIED: This is deprecated and has no effect. Do not
  // use.
  optional string permission_type = 1;
}

// Represents an Autoscaler resource. Google Compute Engine has two Autoscaler
// resources: * [Zonal](/compute/docs/reference/rest/v1/autoscalers) *
// [Regional](/compute/docs/reference/rest/v1/regionAutoscalers) Use autoscalers
// to automatically add or delete instances from a managed instance group
// according to your defined autoscaling policy. For more information, read
// Autoscaling Groups of Instances. For zonal managed instance groups resource,
// use the autoscaler resource. For regional managed instance groups, use the
// regionAutoscalers resource.
message Autoscaler {
  // The configuration parameters for the autoscaling algorithm. You can define
  // one or more signals for an autoscaler: cpuUtilization,
  // customMetricUtilizations, and loadBalancingUtilization. If none of these
  // are specified, the default will be to autoscale based on cpuUtilization to
  // 0.6 or 60%.
  optional AutoscalingPolicy autoscaling_policy = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 2;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 3;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 4;

  // [Output Only] Type of the resource. Always compute#autoscaler for
  // autoscalers.
  optional string kind = 5;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 6;

  // [Output Only] Target recommended MIG size (number of instances) computed by
  // autoscaler. Autoscaler calculates the recommended MIG size even when the
  // autoscaling policy mode is different from ON. This field is empty when
  // autoscaler is not connected to an existing managed instance group or
  // autoscaler did not generate its prediction.
  optional int32 recommended_size = 7;

  // [Output Only] URL of the region where the instance group resides (for
  // autoscalers living in regional scope).
  optional string region = 8;

  // [Output Only] Status information of existing scaling schedules.
  map<string, ScalingScheduleStatus> scaling_schedule_status = 9;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 10;

  // [Output Only] The status of the autoscaler configuration. Current set of
  // possible values: - PENDING: Autoscaler backend hasn't read new/updated
  // configuration. - DELETING: Configuration is being deleted. - ACTIVE:
  // Configuration is acknowledged to be effective. Some warnings might be
  // present in the statusDetails field. - ERROR: Configuration has errors.
  // Actionable for users. Details are present in the statusDetails field. New
  // values might be added in the future.
  // ACTIVE: Configuration is acknowledged to be effective
  // DELETING: Configuration is being deleted
  // ERROR: Configuration has errors. Actionable for users.
  // PENDING: Autoscaler backend hasn't read new/updated configuration
  optional string status = 11;

  // [Output Only] Human-readable details about the current state of the
  // autoscaler. Read the documentation for Commonly returned status messages
  // for examples of status messages you might encounter.
  repeated AutoscalerStatusDetails status_details = 12;

  // URL of the managed instance group that this autoscaler will scale. This
  // field is required when creating an autoscaler.
  optional string target = 13;

  // [Output Only] URL of the zone where the instance group resides (for
  // autoscalers living in zonal scope).
  optional string zone = 14;
}

message AutoscalerAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of AutoscalersScopedList resources.
  map<string, AutoscalersScopedList> items = 2;

  // [Output Only] Type of resource. Always compute#autoscalerAggregatedList for
  // aggregated lists of autoscalers.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources. end_interface:
  // MixerListResponseWithEtagBuilder
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Contains a list of Autoscaler resources.
message AutoscalerList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of Autoscaler resources.
  repeated Autoscaler items = 2;

  // [Output Only] Type of resource. Always compute#autoscalerList for lists of
  // autoscalers.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message AutoscalerStatusDetails {
  // The status message.
  optional string message = 1;

  // The type of error, warning, or notice returned. Current set of possible
  // values: - ALL_INSTANCES_UNHEALTHY (WARNING): All instances in the instance
  // group are unhealthy (not in RUNNING state). -
  // BACKEND_SERVICE_DOES_NOT_EXIST (ERROR): There is no backend service
  // attached to the instance group. - CAPPED_AT_MAX_NUM_REPLICAS (WARNING):
  // Autoscaler recommends a size greater than maxNumReplicas. -
  // CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE (WARNING): The custom metric samples
  // are not exported often enough to be a credible base for autoscaling. -
  // CUSTOM_METRIC_INVALID (ERROR): The custom metric that was specified does
  // not exist or does not have the necessary labels. - MIN_EQUALS_MAX
  // (WARNING): The minNumReplicas is equal to maxNumReplicas. This means the
  // autoscaler cannot add or remove instances from the instance group. -
  // MISSING_CUSTOM_METRIC_DATA_POINTS (WARNING): The autoscaler did not receive
  // any data from the custom metric configured for autoscaling. -
  // MISSING_LOAD_BALANCING_DATA_POINTS (WARNING): The autoscaler is configured
  // to scale based on a load balancing signal but the instance group has not
  // received any requests from the load balancer. - MODE_OFF (WARNING):
  // Autoscaling is turned off. The number of instances in the group won't
  // change automatically. The autoscaling configuration is preserved. -
  // MODE_ONLY_UP (WARNING): Autoscaling is in the "Autoscale only out" mode.
  // The autoscaler can add instances but not remove any. -
  // MORE_THAN_ONE_BACKEND_SERVICE (ERROR): The instance group cannot be
  // autoscaled because it has more than one backend service attached to it. -
  // NOT_ENOUGH_QUOTA_AVAILABLE (ERROR): There is insufficient quota for the
  // necessary resources, such as CPU or number of instances. -
  // REGION_RESOURCE_STOCKOUT (ERROR): Shown only for regional autoscalers:
  // there is a resource stockout in the chosen region. -
  // SCALING_TARGET_DOES_NOT_EXIST (ERROR): The target to be scaled does not
  // exist. - UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION (ERROR):
  // Autoscaling does not work with an HTTP/S load balancer that has been
  // configured for maxRate. - ZONE_RESOURCE_STOCKOUT (ERROR): For zonal
  // autoscalers: there is a resource stockout in the chosen zone. For regional
  // autoscalers: in at least one of the zones you're using there is a resource
  // stockout. New values might be added in the future. Some of the values might
  // not be available in all API versions.
  // ALL_INSTANCES_UNHEALTHY: All instances in the instance group are unhealthy
  // (not in RUNNING state).
  // BACKEND_SERVICE_DOES_NOT_EXIST: There is no backend service attached to the
  // instance group.
  // CAPPED_AT_MAX_NUM_REPLICAS: Autoscaler recommends a size greater than
  // maxNumReplicas.
  // CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE: The custom metric samples are not
  // exported often enough to be a credible base for autoscaling.
  // CUSTOM_METRIC_INVALID: The custom metric that was specified does not exist
  // or does not have the necessary labels.
  // MIN_EQUALS_MAX: The minNumReplicas is equal to maxNumReplicas. This means
  // the autoscaler cannot add or remove instances from the instance group.
  // MISSING_CUSTOM_METRIC_DATA_POINTS: The autoscaler did not receive any data
  // from the custom metric configured for autoscaling.
  // MISSING_LOAD_BALANCING_DATA_POINTS: The autoscaler is configured to scale
  // based on a load balancing signal but the instance group has not received
  // any requests from the load balancer.
  // MODE_OFF: Autoscaling is turned off. The number of instances in the group
  // won't change automatically. The autoscaling configuration is preserved.
  // MODE_ONLY_SCALE_OUT: Autoscaling is in the "Autoscale only scale out" mode.
  // Instances in the group will be only added.
  // MODE_ONLY_UP: Autoscaling is in the "Autoscale only out" mode. Instances in
  // the group will be only added.
  // MORE_THAN_ONE_BACKEND_SERVICE: The instance group cannot be autoscaled
  // because it has more than one backend service attached to it.
  // NOT_ENOUGH_QUOTA_AVAILABLE: There is insufficient quota for the necessary
  // resources, such as CPU or number of instances.
  // REGION_RESOURCE_STOCKOUT: Showed only for regional autoscalers: there is a
  // resource stockout in the chosen region.
  // SCALING_TARGET_DOES_NOT_EXIST: The target to be scaled does not exist.
  // SCHEDULED_INSTANCES_GREATER_THAN_AUTOSCALER_MAX: For some scaling schedules
  // minRequiredReplicas is greater than maxNumReplicas. Autoscaler always
  // recommends at most maxNumReplicas instances.
  // SCHEDULED_INSTANCES_LESS_THAN_AUTOSCALER_MIN: For some scaling schedules
  // minRequiredReplicas is less than minNumReplicas. Autoscaler always
  // recommends at least minNumReplicas instances.
  // UNKNOWN:
  // UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION: Autoscaling does not
  // work with an HTTP/S load balancer that has been configured for maxRate.
  // ZONE_RESOURCE_STOCKOUT: For zonal autoscalers: there is a resource stockout
  // in the chosen zone. For regional autoscalers: in at least one of the zones
  // you're using there is a resource stockout.
  optional string type = 2;
}

message AutoscalersScopedList {
  // [Output Only] A list of autoscalers contained in this scope.
  repeated Autoscaler autoscalers = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning which replaces the list of autoscalers
  // when the list is empty.
  optional Warning warning = 2;
}

// Cloud Autoscaler policy.
message AutoscalingPolicy {
  // The number of seconds that the autoscaler waits before it starts collecting
  // information from a new instance. This prevents the autoscaler from
  // collecting information when the instance is initializing, during which the
  // collected usage would not be reliable. The default time autoscaler waits is
  // 60 seconds. Virtual machine initialization times might vary because of
  // numerous factors. We recommend that you test how long an instance may take
  // to initialize. To do this, create an instance and time the startup process.
  optional int32 cool_down_period_sec = 1;

  // Defines the CPU utilization policy that allows the autoscaler to scale
  // based on the average CPU utilization of a managed instance group.
  optional AutoscalingPolicyCpuUtilization cpu_utilization = 2;

  // Configuration parameters of autoscaling based on a custom metric.
  repeated AutoscalingPolicyCustomMetricUtilization custom_metric_utilizations =
      3;

  // Configuration parameters of autoscaling based on load balancer.
  optional AutoscalingPolicyLoadBalancingUtilization
      load_balancing_utilization = 4;

  // The maximum number of instances that the autoscaler can scale out to. This
  // is required when creating or updating an autoscaler. The maximum number of
  // replicas must not be lower than minimal number of replicas.
  optional int32 max_num_replicas = 5;

  // The minimum number of replicas that the autoscaler can scale in to. This
  // cannot be less than 0. If not provided, autoscaler chooses a default value
  // depending on maximum number of instances allowed.
  optional int32 min_num_replicas = 6;

  // Defines operating mode for this policy.
  // OFF: Do not automatically scale the MIG in or out. The recommended_size
  // field contains the size of MIG that would be set if the actuation mode was
  // enabled.
  // ON: Automatically scale the MIG in and out according to the policy.
  // ONLY_SCALE_OUT: Automatically create VMs according to the policy, but do
  // not scale the MIG in.
  // ONLY_UP: Automatically create VMs according to the policy, but do not scale
  // the MIG in.
  optional string mode = 7;

  optional AutoscalingPolicyScaleInControl scale_in_control = 8;

  // Scaling schedules defined for an autoscaler. Multiple schedules can be set
  // on an autoscaler, and they can overlap. During overlapping periods the
  // greatest min_required_replicas of all scaling schedules is applied. Up to
  // 128 scaling schedules are allowed.
  map<string, AutoscalingPolicyScalingSchedule> scaling_schedules = 9;
}

// CPU utilization policy.
message AutoscalingPolicyCpuUtilization {
  // Indicates whether predictive autoscaling based on CPU metric is enabled.
  // Valid values are: * NONE (default). No predictive method is used. The
  // autoscaler scales the group to meet current demand based on real-time
  // metrics. * OPTIMIZE_AVAILABILITY. Predictive autoscaling improves
  // availability by monitoring daily and weekly load patterns and scaling out
  // ahead of anticipated demand.
  // NONE: No predictive method is used. The autoscaler scales the group to meet
  // current demand based on real-time metrics
  // OPTIMIZE_AVAILABILITY: Predictive autoscaling improves availability by
  // monitoring daily and weekly load patterns and scaling out ahead of
  // anticipated demand.
  optional string predictive_method = 1;

  // The target CPU utilization that the autoscaler maintains. Must be a float
  // value in the range (0, 1]. If not specified, the default is 0.6. If the CPU
  // level is below the target utilization, the autoscaler scales in the number
  // of instances until it reaches the minimum number of instances you specified
  // or until the average CPU of your instances reaches the target utilization.
  // If the average CPU is above the target utilization, the autoscaler scales
  // out until it reaches the maximum number of instances you specified or until
  // the average utilization reaches the target utilization.
  optional double utilization_target = 2;
}

// Custom utilization metric policy.
message AutoscalingPolicyCustomMetricUtilization {
  // A filter string, compatible with a Stackdriver Monitoring filter string for
  // TimeSeries.list API call. This filter is used to select a specific
  // TimeSeries for the purpose of autoscaling and to determine whether the
  // metric is exporting per-instance or per-group data. For the filter to be
  // valid for autoscaling purposes, the following rules apply: - You can only
  // use the AND operator for joining selectors. - You can only use direct
  // equality comparison operator (=) without any functions for each selector. -
  // You can specify the metric in both the filter string and in the metric
  // field. However, if specified in both places, the metric must be identical.
  // - The monitored resource type determines what kind of values are expected
  // for the metric. If it is a gce_instance, the autoscaler expects the metric
  // to include a separate TimeSeries for each instance in a group. In such a
  // case, you cannot filter on resource labels. If the resource type is any
  // other value, the autoscaler expects this metric to contain values that
  // apply to the entire autoscaled instance group and resource label filtering
  // can be performed to point autoscaler at the correct TimeSeries to scale
  // upon. This is called a *per-group metric* for the purpose of autoscaling.
  // If not specified, the type defaults to gce_instance. Try to provide a
  // filter that is selective enough to pick just one TimeSeries for the
  // autoscaled group or for each of the instances (if you are using
  // gce_instance resource type). If multiple TimeSeries are returned upon the
  // query execution, the autoscaler will sum their respective values to obtain
  // its scaling value.
  optional string filter = 1;

  // The identifier (type) of the Stackdriver Monitoring metric. The metric
  // cannot have negative values. The metric must have a value type of INT64 or
  // DOUBLE.
  optional string metric = 2;

  // If scaling is based on a per-group metric value that represents the total
  // amount of work to be done or resource usage, set this value to an amount
  // assigned for a single instance of the scaled group. Autoscaler keeps the
  // number of instances proportional to the value of this metric. The metric
  // itself does not change value due to group resizing. A good metric to use
  // with the target is for example
  // pubsub.googleapis.com/subscription/num_undelivered_messages or a custom
  // metric exporting the total number of requests coming to your instances. A
  // bad example would be a metric exporting an average or median latency, since
  // this value can't include a chunk assignable to a single instance, it could
  // be better used with utilization_target instead.
  optional double single_instance_assignment = 3;

  // The target value of the metric that autoscaler maintains. This must be a
  // positive value. A utilization metric scales number of virtual machines
  // handling requests to increase or decrease proportionally to the metric. For
  // example, a good metric to use as a utilization_target is
  // https://www.googleapis.com/compute/v1/instance/network/received_bytes_count.
  // The autoscaler works to keep this value constant for each of the instances.
  optional double utilization_target = 4;

  // Defines how target utilization value is expressed for a Stackdriver
  // Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or DELTA_PER_MINUTE.
  // DELTA_PER_MINUTE: Sets the utilization target value for a cumulative or
  // delta metric, expressed as the rate of growth per minute.
  // DELTA_PER_SECOND: Sets the utilization target value for a cumulative or
  // delta metric, expressed as the rate of growth per second.
  // GAUGE: Sets the utilization target value for a gauge metric. The autoscaler
  // will collect the average utilization of the virtual machines from the last
  // couple of minutes, and compare the value to the utilization target value to
  // perform autoscaling.
  optional string utilization_target_type = 5;
}

// Configuration parameters of autoscaling based on load balancing.
message AutoscalingPolicyLoadBalancingUtilization {
  // Fraction of backend capacity utilization (set in HTTP(S) load balancing
  // configuration) that the autoscaler maintains. Must be a positive float
  // value. If not defined, the default is 0.8.
  optional double utilization_target = 1;
}

// Configuration that allows for slower scale in so that even if Autoscaler
// recommends an abrupt scale in of a MIG, it will be throttled as specified by
// the parameters below.
message AutoscalingPolicyScaleInControl {
  // Maximum allowed number (or %) of VMs that can be deducted from the peak
  // recommendation during the window autoscaler looks at when computing
  // recommendations. Possibly all these VMs can be deleted at once so user
  // service needs to be prepared to lose that many VMs in one step.
  optional FixedOrPercent max_scaled_in_replicas = 1;

  // How far back autoscaling looks when computing recommendations to include
  // directives regarding slower scale in, as described above.
  optional int32 time_window_sec = 2;
}

// Scaling based on user-defined schedule. The message describes a single
// scaling schedule. A scaling schedule changes the minimum number of VM
// instances an autoscaler can recommend, which can trigger scaling out.
message AutoscalingPolicyScalingSchedule {
  // A description of a scaling schedule.
  optional string description = 1;

  // A boolean value that specifies whether a scaling schedule can influence
  // autoscaler recommendations. If set to true, then a scaling schedule has no
  // effect. This field is optional, and its value is false by default.
  optional bool disabled = 2;

  // The duration of time intervals, in seconds, for which this scaling schedule
  // is to run. The minimum allowed value is 300. This field is required.
  optional int32 duration_sec = 3;

  // The minimum number of VM instances that the autoscaler will recommend in
  // time intervals starting according to schedule. This field is required.
  optional int32 min_required_replicas = 4;

  // The start timestamps of time intervals when this scaling schedule is to
  // provide a scaling signal. This field uses the extended cron format (with an
  // optional year field). The expression can describe a single timestamp if the
  // optional year is set, in which case the scaling schedule runs once. The
  // schedule is interpreted with respect to time_zone. This field is required.
  // Note: These timestamps only describe when autoscaler starts providing the
  // scaling signal. The VMs need additional time to become serving.
  optional string schedule = 5;

  // The time zone to use when interpreting the schedule. The value of this
  // field must be a time zone name from the tz database:
  // http://en.wikipedia.org/wiki/Tz_database. This field is assigned a default
  // value of “UTC” if left empty.
  optional string time_zone = 6;
}

// Message containing information of one individual backend.
message Backend {
  // Specifies how to determine whether the backend of a load balancer can
  // handle additional traffic or is fully loaded. For usage guidelines, see
  // Connection balancing mode. Backends must use compatible balancing modes.
  // For more information, see Supported balancing modes and target capacity
  // settings and Restrictions and guidance for instance groups. Note:
  // Currently, if you use the API to configure incompatible balancing modes,
  // the configuration might be accepted even though it has no impact and is
  // ignored. Specifically, Backend.maxUtilization is ignored when
  // Backend.balancingMode is RATE. In the future, this incompatible combination
  // will be rejected.
  // CONNECTION: Balance based on the number of simultaneous connections.
  // RATE: Balance based on requests per second (RPS).
  // UTILIZATION: Balance based on the backend utilization.
  optional string balancing_mode = 1;

  // A multiplier applied to the backend's target capacity of its balancing
  // mode. The default value is 1, which means the group serves up to 100% of
  // its configured capacity (depending on balancingMode). A setting of 0 means
  // the group is completely drained, offering 0% of its available capacity. The
  // valid ranges are 0.0 and [0.1,1.0]. You cannot configure a setting larger
  // than 0 and smaller than 0.1. You cannot configure a setting of 0 when there
  // is only one backend attached to the backend service. Not available with
  // backends that don't support using a balancingMode. This includes backends
  // such as global internet NEGs, regional serverless NEGs, and PSC NEGs.
  optional float capacity_scaler = 2;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 3;

  // This field designates whether this is a failover backend. More than one
  // failover backend can be configured for a given BackendService.
  optional bool failover = 4;

  // The fully-qualified URL of an instance group or network endpoint group
  // (NEG) resource. To determine what types of backends a load balancer
  // supports, see the [Backend services
  // overview](https://cloud.google.com/load-balancing/docs/backend-service#backends).
  // You must use the *fully-qualified* URL (starting with
  // https://www.googleapis.com/) to specify the instance group or NEG. Partial
  // URLs are not supported.
  optional string group = 5;

  // Defines a target maximum number of simultaneous connections. For usage
  // guidelines, see Connection balancing mode and Utilization balancing mode.
  // Not available if the backend's balancingMode is RATE.
  optional int32 max_connections = 6;

  // Defines a target maximum number of simultaneous connections. For usage
  // guidelines, see Connection balancing mode and Utilization balancing mode.
  // Not available if the backend's balancingMode is RATE.
  optional int32 max_connections_per_endpoint = 7;

  // Defines a target maximum number of simultaneous connections. For usage
  // guidelines, see Connection balancing mode and Utilization balancing mode.
  // Not available if the backend's balancingMode is RATE.
  optional int32 max_connections_per_instance = 8;

  // Defines a maximum number of HTTP requests per second (RPS). For usage
  // guidelines, see Rate balancing mode and Utilization balancing mode. Not
  // available if the backend's balancingMode is CONNECTION.
  optional int32 max_rate = 9;

  // Defines a maximum target for requests per second (RPS). For usage
  // guidelines, see Rate balancing mode and Utilization balancing mode. Not
  // available if the backend's balancingMode is CONNECTION.
  optional float max_rate_per_endpoint = 10;

  // Defines a maximum target for requests per second (RPS). For usage
  // guidelines, see Rate balancing mode and Utilization balancing mode. Not
  // available if the backend's balancingMode is CONNECTION.
  optional float max_rate_per_instance = 11;

  // Optional parameter to define a target capacity for the UTILIZATION
  // balancing mode. The valid range is [0.0, 1.0]. For usage guidelines, see
  // Utilization balancing mode.
  optional float max_utilization = 12;
}

// Represents a Cloud Storage Bucket resource. This Cloud Storage bucket
// resource is referenced by a URL map of a load balancer. For more information,
// read Backend Buckets.
message BackendBucket {
  // Cloud Storage bucket name.
  optional string bucket_name = 1;

  // Cloud CDN configuration for this BackendBucket.
  optional BackendBucketCdnPolicy cdn_policy = 2;

  // Compress text responses using Brotli or gzip compression, based on the
  // client's Accept-Encoding header.
  // AUTOMATIC: Automatically uses the best compression based on the
  // Accept-Encoding header sent by the client.
  // DISABLED: Disables compression. Existing compressed responses cached by
  // Cloud CDN will not be served to clients.
  optional string compression_mode = 3;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 4;

  // Headers that the HTTP/S load balancer should add to proxied responses.
  repeated string custom_response_headers = 5;

  // An optional textual description of the resource; provided by the client
  // when the resource is created.
  optional string description = 6;

  // [Output Only] The resource URL for the edge security policy associated with
  // this backend bucket.
  optional string edge_security_policy = 7;

  // If true, enable Cloud CDN for this BackendBucket.
  optional bool enable_cdn = 8;

  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 9;

  // Type of the resource.
  optional string kind = 10;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 11;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 12;
}

// Message containing Cloud CDN configuration for a backend bucket.
message BackendBucketCdnPolicy {
  // Bypass the cache when the specified request headers are matched - e.g.
  // Pragma or Authorization headers. Up to 5 headers can be specified. The
  // cache is bypassed for all cdnPolicy.cacheMode settings.
  repeated BackendBucketCdnPolicyBypassCacheOnRequestHeader
      bypass_cache_on_request_headers = 1;

  // The CacheKeyPolicy for this CdnPolicy.
  optional BackendBucketCdnPolicyCacheKeyPolicy cache_key_policy = 2;

  // Specifies the cache setting for all responses from this backend. The
  // possible values are: USE_ORIGIN_HEADERS Requires the origin to set valid
  // caching headers to cache content. Responses without these headers will not
  // be cached at Google's edge, and will require a full trip to the origin on
  // every request, potentially impacting performance and increasing load on the
  // origin server. FORCE_CACHE_ALL Cache all content, ignoring any "private",
  // "no-store" or "no-cache" directives in Cache-Control response headers.
  // Warning: this may result in Cloud CDN caching private, per-user (user
  // identifiable) content. CACHE_ALL_STATIC Automatically cache static content,
  // including common image formats, media (video and audio), and web assets
  // (JavaScript and CSS). Requests and responses that are marked as
  // uncacheable, as well as dynamic content (including HTML), will not be
  // cached.
  // CACHE_ALL_STATIC: Automatically cache static content, including common
  // image formats, media (video and audio), and web assets (JavaScript and
  // CSS). Requests and responses that are marked as uncacheable, as well as
  // dynamic content (including HTML), will not be cached.
  // FORCE_CACHE_ALL: Cache all content, ignoring any "private", "no-store" or
  // "no-cache" directives in Cache-Control response headers. Warning: this may
  // result in Cloud CDN caching private, per-user (user identifiable) content.
  // INVALID_CACHE_MODE:
  // USE_ORIGIN_HEADERS: Requires the origin to set valid caching headers to
  // cache content. Responses without these headers will not be cached at
  // Google's edge, and will require a full trip to the origin on every request,
  // potentially impacting performance and increasing load on the origin server.
  optional string cache_mode = 3;

  // Specifies a separate client (e.g. browser client) maximum TTL. This is used
  // to clamp the max-age (or Expires) value sent to the client. With
  // FORCE_CACHE_ALL, the lesser of client_ttl and default_ttl is used for the
  // response max-age directive, along with a "public" directive. For cacheable
  // content in CACHE_ALL_STATIC mode, client_ttl clamps the max-age from the
  // origin (if specified), or else sets the response max-age directive to the
  // lesser of the client_ttl and default_ttl, and also ensures a "public"
  // cache-control directive is present. If a client TTL is not specified, a
  // default value (1 hour) will be used. The maximum allowed value is
  // 31,622,400s (1 year).
  optional int32 client_ttl = 4;

  // Specifies the default TTL for cached content served by this origin for
  // responses that do not have an existing valid TTL (max-age or s-max-age).
  // Setting a TTL of "0" means "always revalidate". The value of defaultTTL
  // cannot be set to a value greater than that of maxTTL, but can be equal.
  // When the cacheMode is set to FORCE_CACHE_ALL, the defaultTTL will overwrite
  // the TTL set in all responses. The maximum allowed value is 31,622,400s (1
  // year), noting that infrequently accessed objects may be evicted from the
  // cache before the defined TTL.
  optional int32 default_ttl = 5;

  // Specifies the maximum allowed TTL for cached content served by this origin.
  // Cache directives that attempt to set a max-age or s-maxage higher than
  // this, or an Expires header more than maxTTL seconds in the future will be
  // capped at the value of maxTTL, as if it were the value of an s-maxage
  // Cache-Control directive. Headers sent to the client will not be modified.
  // Setting a TTL of "0" means "always revalidate". The maximum allowed value
  // is 31,622,400s (1 year), noting that infrequently accessed objects may be
  // evicted from the cache before the defined TTL.
  optional int32 max_ttl = 6;

  // Negative caching allows per-status code TTLs to be set, in order to apply
  // fine-grained caching for common errors or redirects. This can reduce the
  // load on your origin and improve end-user experience by reducing response
  // latency. When the cache mode is set to CACHE_ALL_STATIC or
  // USE_ORIGIN_HEADERS, negative caching applies to responses with the
  // specified response code that lack any Cache-Control, Expires, or Pragma:
  // no-cache directives. When the cache mode is set to FORCE_CACHE_ALL,
  // negative caching applies to all responses with the specified response code,
  // and override any caching headers. By default, Cloud CDN will apply the
  // following default TTLs to these status codes: HTTP 300 (Multiple Choice),
  // 301, 308 (Permanent Redirects): 10m HTTP 404 (Not Found), 410 (Gone), 451
  // (Unavailable For Legal Reasons): 120s HTTP 405 (Method Not Found), 421
  // (Misdirected Request), 501 (Not Implemented): 60s. These defaults can be
  // overridden in negative_caching_policy.
  optional bool negative_caching = 7;

  // Sets a cache TTL for the specified HTTP status code. negative_caching must
  // be enabled to configure negative_caching_policy. Omitting the policy and
  // leaving negative_caching enabled will use Cloud CDN's default cache TTLs.
  // Note that when specifying an explicit negative_caching_policy, you should
  // take care to specify a cache TTL for all response codes that you wish to
  // cache. Cloud CDN will not apply any default negative caching when a policy
  // exists.
  repeated BackendBucketCdnPolicyNegativeCachingPolicy negative_caching_policy =
      8;

  // If true then Cloud CDN will combine multiple concurrent cache fill requests
  // into a small number of requests to the origin.
  optional bool request_coalescing = 9;

  // Serve existing content from the cache (if available) when revalidating
  // content with the origin, or when an error is encountered when refreshing
  // the cache. This setting defines the default "max-stale" duration for any
  // cached responses that do not specify a max-stale directive. Stale responses
  // that exceed the TTL configured here will not be served. The default limit
  // (max-stale) is 86400s (1 day), which will allow stale content to be served
  // up to this limit beyond the max-age (or s-max-age) of a cached response.
  // The maximum allowed value is 604800 (1 week). Set this to zero (0) to
  // disable serve-while-stale.
  optional int32 serve_while_stale = 10;

  // Maximum number of seconds the response to a signed URL request will be
  // considered fresh. After this time period, the response will be revalidated
  // before being served. Defaults to 1hr (3600s). When serving responses to
  // signed URL requests, Cloud CDN will internally behave as though all
  // responses from this backend had a "Cache-Control: public, max-age=[TTL]"
  // header, regardless of any existing Cache-Control header. The actual headers
  // served in responses will not be altered.
  optional string signed_url_cache_max_age_sec = 11;

  // [Output Only] Names of the keys for signing request URLs.
  repeated string signed_url_key_names = 12;
}

// Bypass the cache when the specified request headers are present, e.g. Pragma
// or Authorization headers. Values are case insensitive. The presence of such a
// header overrides the cache_mode setting.
message BackendBucketCdnPolicyBypassCacheOnRequestHeader {
  // The header field name to match on when bypassing cache. Values are
  // case-insensitive.
  optional string header_name = 1;
}

// Message containing what to include in the cache key for a request for Cloud
// CDN.
message BackendBucketCdnPolicyCacheKeyPolicy {
  // Allows HTTP request headers (by name) to be used in the cache key.
  repeated string include_http_headers = 1;

  // Names of query string parameters to include in cache keys. Default
  // parameters are always included. '&' and '=' will be percent encoded and not
  // treated as delimiters.
  repeated string query_string_whitelist = 2;
}

// Specify CDN TTLs for response error codes.
message BackendBucketCdnPolicyNegativeCachingPolicy {
  // The HTTP status code to define a TTL against. Only HTTP status codes 300,
  // 301, 302, 307, 308, 404, 405, 410, 421, 451 and 501 are can be specified as
  // values, and you cannot specify a status code more than once.
  optional int32 code = 1;

  // The TTL (in seconds) for which to cache responses with the corresponding
  // status code. The maximum allowed value is 1800s (30 minutes), noting that
  // infrequently accessed objects may be evicted from the cache before the
  // defined TTL.
  optional int32 ttl = 2;
}

// Contains a list of BackendBucket resources.
message BackendBucketList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of BackendBucket resources.
  repeated BackendBucket items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// Represents a Backend Service resource. A backend service defines how Google
// Cloud load balancers distribute traffic. The backend service configuration
// contains a set of values, such as the protocol used to connect to backends,
// various distribution and session settings, health checks, and timeouts. These
// settings provide fine-grained control over how your load balancer behaves.
// Most of the settings have default values that allow for easy configuration if
// you need to get started quickly. Backend services in Google Compute Engine
// can be either regionally or globally scoped. *
// [Global](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices)
// *
// [Regional](https://cloud.google.com/compute/docs/reference/rest/v1/regionBackendServices)
// For more information, see Backend Services.
message BackendService {
  // Lifetime of cookies in seconds. This setting is applicable to external and
  // internal HTTP(S) load balancers and Traffic Director and requires
  // GENERATED_COOKIE or HTTP_COOKIE session affinity. If set to 0, the cookie
  // is non-persistent and lasts only until the end of the browser session (or
  // equivalent). The maximum allowed value is two weeks (1,209,600). Not
  // supported when the backend service is referenced by a URL map that is bound
  // to target gRPC proxy that has validateForProxyless field set to true.
  optional int32 affinity_cookie_ttl_sec = 1;

  // The list of backends that serve this BackendService.
  repeated Backend backends = 2;

  // Cloud CDN configuration for this BackendService. Only available for
  // specified load balancer types.
  optional BackendServiceCdnPolicy cdn_policy = 3;

  optional CircuitBreakers circuit_breakers = 4;

  // Compress text responses using Brotli or gzip compression, based on the
  // client's Accept-Encoding header.
  // AUTOMATIC: Automatically uses the best compression based on the
  // Accept-Encoding header sent by the client.
  // DISABLED: Disables compression. Existing compressed responses cached by
  // Cloud CDN will not be served to clients.
  optional string compression_mode = 5;

  optional ConnectionDraining connection_draining = 6;

  // Connection Tracking configuration for this BackendService. Connection
  // tracking policy settings are only available for Network Load Balancing and
  // Internal TCP/UDP Load Balancing.
  optional BackendServiceConnectionTrackingPolicy connection_tracking_policy =
      7;

  // Consistent Hash-based load balancing can be used to provide soft session
  // affinity based on HTTP headers, cookies or other properties. This load
  // balancing policy is applicable only for HTTP connections. The affinity to a
  // particular destination host will be lost when one or more hosts are
  // added/removed from the destination service. This field specifies parameters
  // that control consistent hashing. This field is only applicable when
  // localityLbPolicy is set to MAGLEV or RING_HASH. This field is applicable to
  // either: - A regional backend service with the service_protocol set to HTTP,
  // HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED. - A
  // global backend service with the load_balancing_scheme set to
  // INTERNAL_SELF_MANAGED.
  optional ConsistentHashLoadBalancerSettings consistent_hash = 8;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 9;

  // Headers that the load balancer adds to proxied requests. See [Creating
  // custom
  // headers](https://cloud.google.com/load-balancing/docs/custom-headers).
  repeated string custom_request_headers = 10;

  // Headers that the load balancer adds to proxied responses. See [Creating
  // custom
  // headers](https://cloud.google.com/load-balancing/docs/custom-headers).
  repeated string custom_response_headers = 11;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 12;

  // [Output Only] The resource URL for the edge security policy associated with
  // this backend service.
  optional string edge_security_policy = 13;

  // If true, enables Cloud CDN for the backend service of an external HTTP(S)
  // load balancer.
  optional bool enable_cdn = 14;

  // Requires at least one backend instance group to be defined as a backup
  // (failover) backend. For load balancers that have configurable failover:
  // [Internal TCP/UDP Load
  // Balancing](https://cloud.google.com/load-balancing/docs/internal/failover-overview)
  // and [external TCP/UDP Load
  // Balancing](https://cloud.google.com/load-balancing/docs/network/networklb-failover-overview).
  optional BackendServiceFailoverPolicy failover_policy = 15;

  // Fingerprint of this resource. A hash of the contents stored in this object.
  // This field is used in optimistic locking. This field will be ignored when
  // inserting a BackendService. An up-to-date fingerprint must be provided in
  // order to update the BackendService, otherwise the request will fail with
  // error 412 conditionNotMet. To see the latest fingerprint, make a get()
  // request to retrieve a BackendService.
  optional string fingerprint = 16;

  // The list of URLs to the healthChecks, httpHealthChecks (legacy), or
  // httpsHealthChecks (legacy) resource for health checking this backend
  // service. Not all backend services support legacy health checks. See Load
  // balancer guide. Currently, at most one health check can be specified for
  // each backend service. Backend services with instance group or zonal NEG
  // backends must have a health check. Backend services with internet or
  // serverless NEG backends must not have a health check.
  repeated string health_checks = 17;

  // The configurations for Identity-Aware Proxy on this resource. Not available
  // for Internal TCP/UDP Load Balancing and Network Load Balancing.
  optional BackendServiceIAP iap = 18;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 19;

  // [Output Only] Type of resource. Always compute#backendService for backend
  // services.
  optional string kind = 20;

  // Specifies the load balancer type. A backend service created for one type of
  // load balancer cannot be used with another. For more information, refer to
  // Choosing a load balancer.
  // EXTERNAL: Signifies that this will be used for external HTTP(S), SSL Proxy,
  // TCP Proxy, or Network Load Balancing
  // EXTERNAL_MANAGED: Signifies that this will be used for External Managed
  // HTTP(S) Load Balancing.
  // INTERNAL: Signifies that this will be used for Internal TCP/UDP Load
  // Balancing.
  // INTERNAL_MANAGED: Signifies that this will be used for Internal HTTP(S)
  // Load Balancing.
  // INTERNAL_SELF_MANAGED: Signifies that this will be used by Traffic
  // Director.
  // INVALID_LOAD_BALANCING_SCHEME:
  optional string load_balancing_scheme = 21;

  // A list of locality load-balancing policies to be used in order of
  // preference. When you use localityLbPolicies, you must set at least one
  // value for either the localityLbPolicies[].policy or the
  // localityLbPolicies[].customPolicy field. localityLbPolicies overrides any
  // value set in the localityLbPolicy field. For an example of how to use this
  // field, see Define a list of preferred policies. Caution: This field and its
  // children are intended for use in a service mesh that includes gRPC clients
  // only. Envoy proxies can't use backend services that have this
  // configuration.
  repeated BackendServiceLocalityLoadBalancingPolicyConfig
      locality_lb_policies = 22;

  // The load balancing algorithm used within the scope of the locality. The
  // possible values are: - ROUND_ROBIN: This is a simple policy in which each
  // healthy backend is selected in round robin order. This is the default. -
  // LEAST_REQUEST: An O(1) algorithm which selects two random healthy hosts and
  // picks the host which has fewer active requests. - RING_HASH: The
  // ring/modulo hash load balancer implements consistent hashing to backends.
  // The algorithm has the property that the addition/removal of a host from a
  // set of N hosts only affects 1/N of the requests. - RANDOM: The load
  // balancer selects a random healthy host. - ORIGINAL_DESTINATION: Backend
  // host is selected based on the client connection metadata, i.e., connections
  // are opened to the same address as the destination address of the incoming
  // connection before the connection was redirected to the load balancer. -
  // MAGLEV: used as a drop in replacement for the ring hash load balancer.
  // Maglev is not as stable as ring hash but has faster table lookup build
  // times and host selection times. For more information about Maglev, see
  // https://ai.google/research/pubs/pub44824 This field is applicable to
  // either: - A regional backend service with the service_protocol set to HTTP,
  // HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED. - A
  // global backend service with the load_balancing_scheme set to
  // INTERNAL_SELF_MANAGED. If sessionAffinity is not NONE, and this field is
  // not set to MAGLEV or RING_HASH, session affinity settings will not take
  // effect. Only ROUND_ROBIN and RING_HASH are supported when the backend
  // service is referenced by a URL map that is bound to target gRPC proxy that
  // has validateForProxyless field set to true.
  // INVALID_LB_POLICY:
  // LEAST_REQUEST: An O(1) algorithm which selects two random healthy hosts and
  // picks the host which has fewer active requests.
  // MAGLEV: This algorithm implements consistent hashing to backends. Maglev
  // can be used as a drop in replacement for the ring hash load balancer.
  // Maglev is not as stable as ring hash but has faster table lookup build
  // times and host selection times. For more information about Maglev, see
  // https://ai.google/research/pubs/pub44824
  // ORIGINAL_DESTINATION: Backend host is selected based on the client
  // connection metadata, i.e., connections are opened to the same address as
  // the destination address of the incoming connection before the connection
  // was redirected to the load balancer.
  // RANDOM: The load balancer selects a random healthy host.
  // RING_HASH: The ring/modulo hash load balancer implements consistent hashing
  // to backends. The algorithm has the property that the addition/removal of a
  // host from a set of N hosts only affects 1/N of the requests.
  // ROUND_ROBIN: This is a simple policy in which each healthy backend is
  // selected in round robin order. This is the default.
  // WEIGHTED_MAGLEV: Per-instance weighted Load Balancing via health check
  // reported weights. If set, the Backend Service must configure a non legacy
  // HTTP-based Health Check, and health check replies are expected to contain
  // non-standard HTTP response header field X-Load-Balancing-Endpoint-Weight to
  // specify the per-instance weights. If set, Load Balancing is weighted based
  // on the per-instance weights reported in the last processed health check
  // replies, as long as every instance either reported a valid weight or had
  // UNAVAILABLE_WEIGHT. Otherwise, Load Balancing remains equal-weight. This
  // option is only supported in Network Load Balancing.
  optional string locality_lb_policy = 23;

  // This field denotes the logging options for the load balancer traffic served
  // by this backend service. If logging is enabled, logs will be exported to
  // Stackdriver.
  optional BackendServiceLogConfig log_config = 24;

  // Specifies the default maximum duration (timeout) for streams to this
  // service. Duration is computed from the beginning of the stream until the
  // response has been completely processed, including all retries. A stream
  // that does not complete in this duration is closed. If not specified, there
  // will be no timeout limit, i.e. the maximum duration is infinite. This value
  // can be overridden in the PathMatcher configuration of the UrlMap that
  // references this backend service. This field is only allowed when the
  // loadBalancingScheme of the backend service is INTERNAL_SELF_MANAGED.
  optional Duration max_stream_duration = 25;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 26;

  // The URL of the network to which this backend service belongs. This field
  // can only be specified when the load balancing scheme is set to INTERNAL.
  optional string network = 27;

  // Settings controlling the eviction of unhealthy hosts from the load
  // balancing pool for the backend service. If not set, this feature is
  // considered disabled. This field is applicable to either: - A regional
  // backend service with the service_protocol set to HTTP, HTTPS, HTTP2, or
  // GRPC, and load_balancing_scheme set to INTERNAL_MANAGED. - A global backend
  // service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED.
  optional OutlierDetection outlier_detection = 28;

  // Deprecated in favor of portName. The TCP port to connect on the backend.
  // The default value is 80. For Internal TCP/UDP Load Balancing and Network
  // Load Balancing, omit port.
  optional int32 port = 29;

  // A named port on a backend instance group representing the port for
  // communication to the backend VMs in that group. The named port must be
  // [defined on each backend instance
  // group](https://cloud.google.com/load-balancing/docs/backend-service#named_ports).
  // This parameter has no meaning if the backends are NEGs. For Internal
  // TCP/UDP Load Balancing and Network Load Balancing, omit port_name.
  optional string port_name = 30;

  // The protocol this BackendService uses to communicate with backends.
  // Possible values are HTTP, HTTPS, HTTP2, TCP, SSL, UDP or GRPC. depending on
  // the chosen load balancer or Traffic Director configuration. Refer to the
  // documentation for the load balancers or for Traffic Director for more
  // information. Must be set to GRPC when the backend service is referenced by
  // a URL map that is bound to target gRPC proxy.
  // GRPC: gRPC (available for Traffic Director).
  // HTTP:
  // HTTP2: HTTP/2 with SSL.
  // HTTPS:
  // SSL: TCP proxying with SSL.
  // TCP: TCP proxying or TCP pass-through.
  // UDP: UDP.
  // UNSPECIFIED: If a Backend Service has UNSPECIFIED as its protocol, it can
  // be used with any L3/L4 Forwarding Rules.
  optional string protocol = 31;

  // [Output Only] URL of the region where the regional backend service resides.
  // This field is not applicable to global backend services. You must specify
  // this field as part of the HTTP request URL. It is not settable as a field
  // in the request body.
  optional string region = 32;

  // [Output Only] The resource URL for the security policy associated with this
  // backend service.
  optional string security_policy = 33;

  // This field specifies the security settings that apply to this backend
  // service. This field is applicable to a global backend service with the
  // load_balancing_scheme set to INTERNAL_SELF_MANAGED.
  optional SecuritySettings security_settings = 34;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 35;

  // URLs of networkservices.ServiceBinding resources. Can only be set if load
  // balancing scheme is INTERNAL_SELF_MANAGED. If set, lists of backends and
  // health checks must be both empty.
  repeated string service_bindings = 36;

  // Type of session affinity to use. The default is NONE. Only NONE and
  // HEADER_FIELD are supported when the backend service is referenced by a URL
  // map that is bound to target gRPC proxy that has validateForProxyless field
  // set to true. For more details, see: [Session
  // Affinity](https://cloud.google.com/load-balancing/docs/backend-service#session_affinity).
  // CLIENT_IP: 2-tuple hash on packet's source and destination IP addresses.
  // Connections from the same source IP address to the same destination IP
  // address will be served by the same backend VM while that VM remains
  // healthy.
  // CLIENT_IP_NO_DESTINATION: 1-tuple hash only on packet's source IP address.
  // Connections from the same source IP address will be served by the same
  // backend VM while that VM remains healthy. This option can only be used for
  // Internal TCP/UDP Load Balancing.
  // CLIENT_IP_PORT_PROTO: 5-tuple hash on packet's source and destination IP
  // addresses, IP protocol, and source and destination ports. Connections for
  // the same IP protocol from the same source IP address and port to the same
  // destination IP address and port will be served by the same backend VM while
  // that VM remains healthy. This option cannot be used for HTTP(S) load
  // balancing.
  // CLIENT_IP_PROTO: 3-tuple hash on packet's source and destination IP
  // addresses, and IP protocol. Connections for the same IP protocol from the
  // same source IP address to the same destination IP address will be served by
  // the same backend VM while that VM remains healthy. This option cannot be
  // used for HTTP(S) load balancing.
  // GENERATED_COOKIE: Hash based on a cookie generated by the L7 loadbalancer.
  // Only valid for HTTP(S) load balancing.
  // HEADER_FIELD: The hash is based on a user specified header field.
  // HTTP_COOKIE: The hash is based on a user provided cookie.
  // NONE: No session affinity. Connections from the same client IP may go to
  // any instance in the pool.
  optional string session_affinity = 37;

  optional Subsetting subsetting = 38;

  // The backend service timeout has a different meaning depending on the type
  // of load balancer. For more information see, Backend service settings. The
  // default is 30 seconds. The full range of timeout values allowed goes from 1
  // through 2,147,483,647 seconds. This value can be overridden in the
  // PathMatcher configuration of the UrlMap that references this backend
  // service. Not supported when the backend service is referenced by a URL map
  // that is bound to target gRPC proxy that has validateForProxyless field set
  // to true. Instead, use maxStreamDuration.
  optional int32 timeout_sec = 39;
}

// Contains a list of BackendServicesScopedList.
message BackendServiceAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of BackendServicesScopedList resources.
  map<string, BackendServicesScopedList> items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Message containing Cloud CDN configuration for a backend service.
message BackendServiceCdnPolicy {
  // Bypass the cache when the specified request headers are matched - e.g.
  // Pragma or Authorization headers. Up to 5 headers can be specified. The
  // cache is bypassed for all cdnPolicy.cacheMode settings.
  repeated BackendServiceCdnPolicyBypassCacheOnRequestHeader
      bypass_cache_on_request_headers = 1;

  // The CacheKeyPolicy for this CdnPolicy.
  optional CacheKeyPolicy cache_key_policy = 2;

  // Specifies the cache setting for all responses from this backend. The
  // possible values are: USE_ORIGIN_HEADERS Requires the origin to set valid
  // caching headers to cache content. Responses without these headers will not
  // be cached at Google's edge, and will require a full trip to the origin on
  // every request, potentially impacting performance and increasing load on the
  // origin server. FORCE_CACHE_ALL Cache all content, ignoring any "private",
  // "no-store" or "no-cache" directives in Cache-Control response headers.
  // Warning: this may result in Cloud CDN caching private, per-user (user
  // identifiable) content. CACHE_ALL_STATIC Automatically cache static content,
  // including common image formats, media (video and audio), and web assets
  // (JavaScript and CSS). Requests and responses that are marked as
  // uncacheable, as well as dynamic content (including HTML), will not be
  // cached.
  // CACHE_ALL_STATIC: Automatically cache static content, including common
  // image formats, media (video and audio), and web assets (JavaScript and
  // CSS). Requests and responses that are marked as uncacheable, as well as
  // dynamic content (including HTML), will not be cached.
  // FORCE_CACHE_ALL: Cache all content, ignoring any "private", "no-store" or
  // "no-cache" directives in Cache-Control response headers. Warning: this may
  // result in Cloud CDN caching private, per-user (user identifiable) content.
  // INVALID_CACHE_MODE:
  // USE_ORIGIN_HEADERS: Requires the origin to set valid caching headers to
  // cache content. Responses without these headers will not be cached at
  // Google's edge, and will require a full trip to the origin on every request,
  // potentially impacting performance and increasing load on the origin server.
  optional string cache_mode = 3;

  // Specifies a separate client (e.g. browser client) maximum TTL. This is used
  // to clamp the max-age (or Expires) value sent to the client. With
  // FORCE_CACHE_ALL, the lesser of client_ttl and default_ttl is used for the
  // response max-age directive, along with a "public" directive. For cacheable
  // content in CACHE_ALL_STATIC mode, client_ttl clamps the max-age from the
  // origin (if specified), or else sets the response max-age directive to the
  // lesser of the client_ttl and default_ttl, and also ensures a "public"
  // cache-control directive is present. If a client TTL is not specified, a
  // default value (1 hour) will be used. The maximum allowed value is
  // 31,622,400s (1 year).
  optional int32 client_ttl = 4;

  // Specifies the default TTL for cached content served by this origin for
  // responses that do not have an existing valid TTL (max-age or s-max-age).
  // Setting a TTL of "0" means "always revalidate". The value of defaultTTL
  // cannot be set to a value greater than that of maxTTL, but can be equal.
  // When the cacheMode is set to FORCE_CACHE_ALL, the defaultTTL will overwrite
  // the TTL set in all responses. The maximum allowed value is 31,622,400s (1
  // year), noting that infrequently accessed objects may be evicted from the
  // cache before the defined TTL.
  optional int32 default_ttl = 5;

  // Specifies the maximum allowed TTL for cached content served by this origin.
  // Cache directives that attempt to set a max-age or s-maxage higher than
  // this, or an Expires header more than maxTTL seconds in the future will be
  // capped at the value of maxTTL, as if it were the value of an s-maxage
  // Cache-Control directive. Headers sent to the client will not be modified.
  // Setting a TTL of "0" means "always revalidate". The maximum allowed value
  // is 31,622,400s (1 year), noting that infrequently accessed objects may be
  // evicted from the cache before the defined TTL.
  optional int32 max_ttl = 6;

  // Negative caching allows per-status code TTLs to be set, in order to apply
  // fine-grained caching for common errors or redirects. This can reduce the
  // load on your origin and improve end-user experience by reducing response
  // latency. When the cache mode is set to CACHE_ALL_STATIC or
  // USE_ORIGIN_HEADERS, negative caching applies to responses with the
  // specified response code that lack any Cache-Control, Expires, or Pragma:
  // no-cache directives. When the cache mode is set to FORCE_CACHE_ALL,
  // negative caching applies to all responses with the specified response code,
  // and override any caching headers. By default, Cloud CDN will apply the
  // following default TTLs to these status codes: HTTP 300 (Multiple Choice),
  // 301, 308 (Permanent Redirects): 10m HTTP 404 (Not Found), 410 (Gone), 451
  // (Unavailable For Legal Reasons): 120s HTTP 405 (Method Not Found), 421
  // (Misdirected Request), 501 (Not Implemented): 60s. These defaults can be
  // overridden in negative_caching_policy.
  optional bool negative_caching = 7;

  // Sets a cache TTL for the specified HTTP status code. negative_caching must
  // be enabled to configure negative_caching_policy. Omitting the policy and
  // leaving negative_caching enabled will use Cloud CDN's default cache TTLs.
  // Note that when specifying an explicit negative_caching_policy, you should
  // take care to specify a cache TTL for all response codes that you wish to
  // cache. Cloud CDN will not apply any default negative caching when a policy
  // exists.
  repeated BackendServiceCdnPolicyNegativeCachingPolicy
      negative_caching_policy = 8;

  // If true then Cloud CDN will combine multiple concurrent cache fill requests
  // into a small number of requests to the origin.
  optional bool request_coalescing = 9;

  // Serve existing content from the cache (if available) when revalidating
  // content with the origin, or when an error is encountered when refreshing
  // the cache. This setting defines the default "max-stale" duration for any
  // cached responses that do not specify a max-stale directive. Stale responses
  // that exceed the TTL configured here will not be served. The default limit
  // (max-stale) is 86400s (1 day), which will allow stale content to be served
  // up to this limit beyond the max-age (or s-max-age) of a cached response.
  // The maximum allowed value is 604800 (1 week). Set this to zero (0) to
  // disable serve-while-stale.
  optional int32 serve_while_stale = 10;

  // Maximum number of seconds the response to a signed URL request will be
  // considered fresh. After this time period, the response will be revalidated
  // before being served. Defaults to 1hr (3600s). When serving responses to
  // signed URL requests, Cloud CDN will internally behave as though all
  // responses from this backend had a "Cache-Control: public, max-age=[TTL]"
  // header, regardless of any existing Cache-Control header. The actual headers
  // served in responses will not be altered.
  optional string signed_url_cache_max_age_sec = 11;

  // [Output Only] Names of the keys for signing request URLs.
  repeated string signed_url_key_names = 12;
}

// Bypass the cache when the specified request headers are present, e.g. Pragma
// or Authorization headers. Values are case insensitive. The presence of such a
// header overrides the cache_mode setting.
message BackendServiceCdnPolicyBypassCacheOnRequestHeader {
  // The header field name to match on when bypassing cache. Values are
  // case-insensitive.
  optional string header_name = 1;
}

// Specify CDN TTLs for response error codes.
message BackendServiceCdnPolicyNegativeCachingPolicy {
  // The HTTP status code to define a TTL against. Only HTTP status codes 300,
  // 301, 302, 307, 308, 404, 405, 410, 421, 451 and 501 are can be specified as
  // values, and you cannot specify a status code more than once.
  optional int32 code = 1;

  // The TTL (in seconds) for which to cache responses with the corresponding
  // status code. The maximum allowed value is 1800s (30 minutes), noting that
  // infrequently accessed objects may be evicted from the cache before the
  // defined TTL.
  optional int32 ttl = 2;
}

// Connection Tracking configuration for this BackendService.
message BackendServiceConnectionTrackingPolicy {
  // Specifies connection persistence when backends are unhealthy. The default
  // value is DEFAULT_FOR_PROTOCOL. If set to DEFAULT_FOR_PROTOCOL, the existing
  // connections persist on unhealthy backends only for connection-oriented
  // protocols (TCP and SCTP) and only if the Tracking Mode is PER_CONNECTION
  // (default tracking mode) or the Session Affinity is configured for 5-tuple.
  // They do not persist for UDP. If set to NEVER_PERSIST, after a backend
  // becomes unhealthy, the existing connections on the unhealthy backend are
  // never persisted on the unhealthy backend. They are always diverted to newly
  // selected healthy backends (unless all backends are unhealthy). If set to
  // ALWAYS_PERSIST, existing connections always persist on unhealthy backends
  // regardless of protocol and session affinity. It is generally not
  // recommended to use this mode overriding the default. For more details, see
  // [Connection Persistence for Network Load
  // Balancing](https://cloud.google.com/load-balancing/docs/network/networklb-backend-service#connection-persistence)
  // and [Connection Persistence for Internal TCP/UDP Load
  // Balancing](https://cloud.google.com/load-balancing/docs/internal#connection-persistence).
  // ALWAYS_PERSIST:
  // DEFAULT_FOR_PROTOCOL:
  // NEVER_PERSIST:
  optional string connection_persistence_on_unhealthy_backends = 1;

  // Enable Strong Session Affinity for Network Load Balancing. This option is
  // not available publicly.
  optional bool enable_strong_affinity = 2;

  // Specifies how long to keep a Connection Tracking entry while there is no
  // matching traffic (in seconds). For Internal TCP/UDP Load Balancing: - The
  // minimum (default) is 10 minutes and the maximum is 16 hours. - It can be
  // set only if Connection Tracking is less than 5-tuple (i.e. Session Affinity
  // is CLIENT_IP_NO_DESTINATION, CLIENT_IP or CLIENT_IP_PROTO, and Tracking
  // Mode is PER_SESSION). For Network Load Balancer the default is 60 seconds.
  // This option is not available publicly.
  optional int32 idle_timeout_sec = 3;

  // Specifies the key used for connection tracking. There are two options: -
  // PER_CONNECTION: This is the default mode. The Connection Tracking is
  // performed as per the Connection Key (default Hash Method) for the specific
  // protocol. - PER_SESSION: The Connection Tracking is performed as per the
  // configured Session Affinity. It matches the configured Session Affinity.
  // For more details, see [Tracking Mode for Network Load
  // Balancing](https://cloud.google.com/load-balancing/docs/network/networklb-backend-service#tracking-mode)
  // and [Tracking Mode for Internal TCP/UDP Load
  // Balancing](https://cloud.google.com/load-balancing/docs/internal#tracking-mode).
  // INVALID_TRACKING_MODE:
  // PER_CONNECTION:
  // PER_SESSION:
  optional string tracking_mode = 4;
}

// For load balancers that have configurable failover: [Internal TCP/UDP Load
// Balancing](https://cloud.google.com/load-balancing/docs/internal/failover-overview)
// and [external TCP/UDP Load
// Balancing](https://cloud.google.com/load-balancing/docs/network/networklb-failover-overview).
// On failover or failback, this field indicates whether connection draining
// will be honored. Google Cloud has a fixed connection draining timeout of 10
// minutes. A setting of true terminates existing TCP connections to the active
// pool during failover and failback, immediately draining traffic. A setting of
// false allows existing TCP connections to persist, even on VMs no longer in
// the active pool, for up to the duration of the connection draining timeout
// (10 minutes).
message BackendServiceFailoverPolicy {
  // This can be set to true only if the protocol is TCP. The default is false.
  optional bool disable_connection_drain_on_failover = 1;

  // If set to true, connections to the load balancer are dropped when all
  // primary and all backup backend VMs are unhealthy.If set to false,
  // connections are distributed among all primary VMs when all primary and all
  // backup backend VMs are unhealthy. For load balancers that have configurable
  // failover: [Internal TCP/UDP Load
  // Balancing](https://cloud.google.com/load-balancing/docs/internal/failover-overview)
  // and [external TCP/UDP Load
  // Balancing](https://cloud.google.com/load-balancing/docs/network/networklb-failover-overview).
  // The default is false.
  optional bool drop_traffic_if_unhealthy = 2;

  // The value of the field must be in the range [0, 1]. If the value is 0, the
  // load balancer performs a failover when the number of healthy primary VMs
  // equals zero. For all other values, the load balancer performs a failover
  // when the total number of healthy primary VMs is less than this ratio. For
  // load balancers that have configurable failover: [Internal TCP/UDP Load
  // Balancing](https://cloud.google.com/load-balancing/docs/internal/failover-overview)
  // and [external TCP/UDP Load
  // Balancing](https://cloud.google.com/load-balancing/docs/network/networklb-failover-overview).
  optional float failover_ratio = 3;
}

message BackendServiceGroupHealth {
  // Metadata defined as annotations on the network endpoint group.
  map<string, string> annotations = 1;

  // Health state of the backend instances or endpoints in requested instance or
  // network endpoint group, determined based on configured health checks.
  repeated HealthStatus health_status = 2;

  // [Output Only] Type of resource. Always compute#backendServiceGroupHealth
  // for the health of backend services.
  optional string kind = 3;
}

// Identity-Aware Proxy
message BackendServiceIAP {
  // Whether the serving infrastructure will authenticate and authorize all
  // incoming requests. If true, the oauth2ClientId and oauth2ClientSecret
  // fields must be non-empty.
  optional bool enabled = 1;

  // OAuth2 client ID to use for the authentication flow.
  optional string oauth2_client_id = 2;

  // OAuth2 client secret to use for the authentication flow. For security
  // reasons, this value cannot be retrieved via the API. Instead, the SHA-256
  // hash of the value is returned in the oauth2ClientSecretSha256 field.
  // @InputOnly
  optional string oauth2_client_secret = 3;

  // [Output Only] SHA256 hash value for the field oauth2_client_secret above.
  optional string oauth2_client_secret_sha256 = 4;
}

// Contains a list of BackendService resources.
message BackendServiceList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of BackendService resources.
  repeated BackendService items = 2;

  // [Output Only] Type of resource. Always compute#backendServiceList for lists
  // of backend services.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// Container for either a built-in LB policy supported by gRPC or Envoy or a
// custom one implemented by the end user.
message BackendServiceLocalityLoadBalancingPolicyConfig {
  optional BackendServiceLocalityLoadBalancingPolicyConfigCustomPolicy
      custom_policy = 1;

  optional BackendServiceLocalityLoadBalancingPolicyConfigPolicy policy = 2;
}

// The configuration for a custom policy implemented by the user and deployed
// with the client.
message BackendServiceLocalityLoadBalancingPolicyConfigCustomPolicy {
  // An optional, arbitrary JSON object with configuration data, understood by a
  // locally installed custom policy implementation.
  optional string data = 1;

  // Identifies the custom policy. The value should match the name of a custom
  // implementation registered on the gRPC clients. It should follow protocol
  // buffer message naming conventions and include the full path (for example,
  // myorg.CustomLbPolicy). The maximum length is 256 characters. Do not specify
  // the same custom policy more than once for a backend. If you do, the
  // configuration is rejected. For an example of how to use this field, see Use
  // a custom policy.
  optional string name = 2;
}

// The configuration for a built-in load balancing policy.
message BackendServiceLocalityLoadBalancingPolicyConfigPolicy {
  // The name of a locality load-balancing policy. Valid values include
  // ROUND_ROBIN and, for Java clients, LEAST_REQUEST. For information about
  // these values, see the description of localityLbPolicy. Do not specify the
  // same policy more than once for a backend. If you do, the configuration is
  // rejected.
  // INVALID_LB_POLICY:
  // LEAST_REQUEST: An O(1) algorithm which selects two random healthy hosts and
  // picks the host which has fewer active requests.
  // MAGLEV: This algorithm implements consistent hashing to backends. Maglev
  // can be used as a drop in replacement for the ring hash load balancer.
  // Maglev is not as stable as ring hash but has faster table lookup build
  // times and host selection times. For more information about Maglev, see
  // https://ai.google/research/pubs/pub44824
  // ORIGINAL_DESTINATION: Backend host is selected based on the client
  // connection metadata, i.e., connections are opened to the same address as
  // the destination address of the incoming connection before the connection
  // was redirected to the load balancer.
  // RANDOM: The load balancer selects a random healthy host.
  // RING_HASH: The ring/modulo hash load balancer implements consistent hashing
  // to backends. The algorithm has the property that the addition/removal of a
  // host from a set of N hosts only affects 1/N of the requests.
  // ROUND_ROBIN: This is a simple policy in which each healthy backend is
  // selected in round robin order. This is the default.
  // WEIGHTED_MAGLEV: Per-instance weighted Load Balancing via health check
  // reported weights. If set, the Backend Service must configure a non legacy
  // HTTP-based Health Check, and health check replies are expected to contain
  // non-standard HTTP response header field X-Load-Balancing-Endpoint-Weight to
  // specify the per-instance weights. If set, Load Balancing is weighted based
  // on the per-instance weights reported in the last processed health check
  // replies, as long as every instance either reported a valid weight or had
  // UNAVAILABLE_WEIGHT. Otherwise, Load Balancing remains equal-weight. This
  // option is only supported in Network Load Balancing.
  optional string name = 1;
}

// The available logging options for the load balancer traffic served by this
// backend service.
message BackendServiceLogConfig {
  // Denotes whether to enable logging for the load balancer traffic served by
  // this backend service. The default value is false.
  optional bool enable = 1;

  // This field can only be specified if logging is enabled for this backend
  // service and "logConfig.optionalMode" was set to CUSTOM. Contains a list of
  // optional fields you want to include in the logs. For example:
  // serverInstance, serverGkeDetails.cluster, serverGkeDetails.pod.podNamespace
  repeated string optional_fields = 2;

  // This field can only be specified if logging is enabled for this backend
  // service. Configures whether all, none or a subset of optional fields should
  // be added to the reported logs. One of [INCLUDE_ALL_OPTIONAL,
  // EXCLUDE_ALL_OPTIONAL, CUSTOM]. Default is EXCLUDE_ALL_OPTIONAL.
  // CUSTOM: A subset of optional fields.
  // EXCLUDE_ALL_OPTIONAL: None optional fields.
  // INCLUDE_ALL_OPTIONAL: All optional fields.
  optional string optional_mode = 3;

  // This field can only be specified if logging is enabled for this backend
  // service. The value of the field must be in [0, 1]. This configures the
  // sampling rate of requests to the load balancer where 1.0 means all logged
  // requests are reported and 0.0 means no logged requests are reported. The
  // default value is 1.0.
  optional float sample_rate = 4;
}

message BackendServiceReference {
  optional string backend_service = 1;
}

message BackendServicesScopedList {
  // A list of BackendServices contained in this scope.
  repeated BackendService backend_services = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // Informational warning which replaces the list of backend services when the
  // list is empty.
  optional Warning warning = 2;
}

message BfdPacket {
  // The Authentication Present bit of the BFD packet. This is specified in
  // section 4.1 of RFC5880
  optional bool authentication_present = 1;

  // The Control Plane Independent bit of the BFD packet. This is specified in
  // section 4.1 of RFC5880
  optional bool control_plane_independent = 2;

  // The demand bit of the BFD packet. This is specified in section 4.1 of
  // RFC5880
  optional bool demand = 3;

  // The diagnostic code specifies the local system's reason for the last change
  // in session state. This allows remote systems to determine the reason that
  // the previous session failed, for example. These diagnostic codes are
  // specified in section 4.1 of RFC5880
  // ADMINISTRATIVELY_DOWN:
  // CONCATENATED_PATH_DOWN:
  // CONTROL_DETECTION_TIME_EXPIRED:
  // DIAGNOSTIC_UNSPECIFIED:
  // ECHO_FUNCTION_FAILED:
  // FORWARDING_PLANE_RESET:
  // NEIGHBOR_SIGNALED_SESSION_DOWN:
  // NO_DIAGNOSTIC:
  // PATH_DOWN:
  // REVERSE_CONCATENATED_PATH_DOWN:
  optional string diagnostic = 4;

  // The Final bit of the BFD packet. This is specified in section 4.1 of
  // RFC5880
  optional bool final = 5;

  // The length of the BFD Control packet in bytes. This is specified in section
  // 4.1 of RFC5880
  optional uint32 length = 6;

  // The Required Min Echo RX Interval value in the BFD packet. This is
  // specified in section 4.1 of RFC5880
  optional uint32 min_echo_rx_interval_ms = 7;

  // The Required Min RX Interval value in the BFD packet. This is specified in
  // section 4.1 of RFC5880
  optional uint32 min_rx_interval_ms = 8;

  // The Desired Min TX Interval value in the BFD packet. This is specified in
  // section 4.1 of RFC5880
  optional uint32 min_tx_interval_ms = 9;

  // The detection time multiplier of the BFD packet. This is specified in
  // section 4.1 of RFC5880
  optional uint32 multiplier = 10;

  // The multipoint bit of the BFD packet. This is specified in section 4.1 of
  // RFC5880
  optional bool multipoint = 11;

  // The My Discriminator value in the BFD packet. This is specified in section
  // 4.1 of RFC5880
  optional uint32 my_discriminator = 12;

  // The Poll bit of the BFD packet. This is specified in section 4.1 of RFC5880
  optional bool poll = 13;

  // The current BFD session state as seen by the transmitting system. These
  // states are specified in section 4.1 of RFC5880
  // ADMIN_DOWN:
  // DOWN:
  // INIT:
  // STATE_UNSPECIFIED:
  // UP:
  optional string state = 14;

  // The version number of the BFD protocol, as specified in section 4.1 of
  // RFC5880.
  optional uint32 version = 15;

  // The Your Discriminator value in the BFD packet. This is specified in
  // section 4.1 of RFC5880
  optional uint32 your_discriminator = 16;
}

// Next free: 15
message BfdStatus {
  // The BFD session initialization mode for this BGP peer. If set to ACTIVE,
  // the Cloud Router will initiate the BFD session for this BGP peer. If set to
  // PASSIVE, the Cloud Router will wait for the peer router to initiate the BFD
  // session for this BGP peer. If set to DISABLED, BFD is disabled for this BGP
  // peer.
  // ACTIVE:
  // DISABLED:
  // PASSIVE:
  optional string bfd_session_initialization_mode = 1;

  // Unix timestamp of the most recent config update.
  optional string config_update_timestamp_micros = 2;

  // Control packet counts for the current BFD session.
  optional BfdStatusPacketCounts control_packet_counts = 3;

  // Inter-packet time interval statistics for control packets.
  repeated PacketIntervals control_packet_intervals = 4;

  // The diagnostic code specifies the local system's reason for the last change
  // in session state. This allows remote systems to determine the reason that
  // the previous session failed, for example. These diagnostic codes are
  // specified in section 4.1 of RFC5880
  // ADMINISTRATIVELY_DOWN:
  // CONCATENATED_PATH_DOWN:
  // CONTROL_DETECTION_TIME_EXPIRED:
  // DIAGNOSTIC_UNSPECIFIED:
  // ECHO_FUNCTION_FAILED:
  // FORWARDING_PLANE_RESET:
  // NEIGHBOR_SIGNALED_SESSION_DOWN:
  // NO_DIAGNOSTIC:
  // PATH_DOWN:
  // REVERSE_CONCATENATED_PATH_DOWN:
  optional string local_diagnostic = 5;

  // The current BFD session state as seen by the transmitting system. These
  // states are specified in section 4.1 of RFC5880
  // ADMIN_DOWN:
  // DOWN:
  // INIT:
  // STATE_UNSPECIFIED:
  // UP:
  optional string local_state = 6;

  // Negotiated transmit interval for control packets.
  optional uint32 negotiated_local_control_tx_interval_ms = 7;

  // The most recent Rx control packet for this BFD session.
  optional BfdPacket rx_packet = 8;

  // The most recent Tx control packet for this BFD session.
  optional BfdPacket tx_packet = 9;

  // Session uptime in milliseconds. Value will be 0 if session is not up.
  optional string uptime_ms = 10;
}

message BfdStatusPacketCounts {
  // Number of packets received since the beginning of the current BFD session.
  optional uint32 num_rx = 1;

  // Number of packets received that were rejected because of errors since the
  // beginning of the current BFD session.
  optional uint32 num_rx_rejected = 2;

  // Number of packets received that were successfully processed since the
  // beginning of the current BFD session.
  optional uint32 num_rx_successful = 3;

  // Number of packets transmitted since the beginning of the current BFD
  // session.
  optional uint32 num_tx = 4;
}

// Associates `members`, or principals, with a `role`.
message Binding {
  // This is deprecated and has no effect. Do not use.
  optional string binding_id = 1;

  // The condition that is associated with this binding. If the condition
  // evaluates to `true`, then this binding applies to the current request. If
  // the condition evaluates to `false`, then this binding does not apply to the
  // current request. However, a different role binding might grant the same
  // role to one or more of the principals in this binding. To learn which
  // resources support conditions in their IAM policies, see the [IAM
  // documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
  optional Expr condition = 2;

  // Specifies the principals requesting access for a Google Cloud resource.
  // `members` can have the following values: * `allUsers`: A special identifier
  // that represents anyone who is on the internet; with or without a Google
  // account. * `allAuthenticatedUsers`: A special identifier that represents
  // anyone who is authenticated with a Google account or a service account.
  // Does not include identities that come from external identity providers
  // (IdPs) through identity federation. * `user:{emailid}`: An email address
  // that represents a specific Google account. For example, `alice@example.com`
  // . * `serviceAccount:{emailid}`: An email address that represents a Google
  // service account. For example, `my-other-app@appspot.gserviceaccount.com`. *
  // `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An
  // identifier for a [Kubernetes service
  // account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
  // For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
  // `group:{emailid}`: An email address that represents a Google group. For
  // example, `admins@example.com`. * `domain:{domain}`: The G Suite domain
  // (primary) that represents all the users of that domain. For example,
  // `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`:
  // An email address (plus unique identifier) representing a user that has been
  // recently deleted. For example,
  // `alice@example.com?uid=123456789012345678901`. If the user is recovered,
  // this value reverts to `user:{emailid}` and the recovered user retains the
  // role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`:
  // An email address (plus unique identifier) representing a service account
  // that has been recently deleted. For example,
  // `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If
  // the service account is undeleted, this value reverts to
  // `serviceAccount:{emailid}` and the undeleted service account retains the
  // role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email
  // address (plus unique identifier) representing a Google group that has been
  // recently deleted. For example,
  // `admins@example.com?uid=123456789012345678901`. If the group is recovered,
  // this value reverts to `group:{emailid}` and the recovered group retains the
  // role in the binding.
  repeated string members = 3;

  // Role that is assigned to the list of `members`, or principals. For example,
  // `roles/viewer`, `roles/editor`, or `roles/owner`.
  optional string role = 4;
}

// A transient resource used in compute.instances.bulkInsert and
// compute.regionInstances.bulkInsert . This resource is not persisted anywhere,
// it is used only for processing the requests.
message BulkInsertInstanceResource {
  // The maximum number of instances to create.
  optional string count = 1;

  // The instance properties defining the VM instances to be created. Required
  // if sourceInstanceTemplate is not provided.
  optional InstanceProperties instance_properties = 2;

  // Policy for chosing target zone. For more information, see Create VMs in
  // bulk .
  optional LocationPolicy location_policy = 3;

  // The minimum number of instances to create. If no min_count is specified
  // then count is used as the default value. If min_count instances cannot be
  // created, then no instances will be created and instances already created
  // will be deleted.
  optional string min_count = 4;

  // The string pattern used for the names of the VMs. Either name_pattern or
  // per_instance_properties must be set. The pattern must contain one
  // continuous sequence of placeholder hash characters (#) with each character
  // corresponding to one digit of the generated instance name. Example: a
  // name_pattern of inst-#### generates instance names such as inst-0001 and
  // inst-0002. If existing instances in the same project and zone have names
  // that match the name pattern then the generated instance numbers start after
  // the biggest existing number. For example, if there exists an instance with
  // name inst-0050, then instance names generated using the pattern inst-####
  // begin with inst-0051. The name pattern placeholder #...# can contain up to
  // 18 characters.
  optional string name_pattern = 5;

  // Per-instance properties to be set on individual instances. Keys of this map
  // specify requested instance names. Can be empty if name_pattern is used.
  map<string, BulkInsertInstanceResourcePerInstanceProperties>
      per_instance_properties = 6;

  // Specifies the instance template from which to create instances. You may
  // combine sourceInstanceTemplate with instanceProperties to override specific
  // values from an existing instance template. Bulk API follows the semantics
  // of JSON Merge Patch described by RFC 7396. It can be a full or partial URL.
  // For example, the following are all valid URLs to an instance template: -
  // https://www.googleapis.com/compute/v1/projects/project
  // /global/instanceTemplates/instanceTemplate -
  // projects/project/global/instanceTemplates/instanceTemplate -
  // global/instanceTemplates/instanceTemplate This field is optional.
  optional string source_instance_template = 7;
}

// Per-instance properties to be set on individual instances. To be extended in
// the future.
message BulkInsertInstanceResourcePerInstanceProperties {
  // This field is only temporary. It will be removed. Do not use it.
  optional string name = 1;
}

message CacheInvalidationRule {
  // If set, this invalidation rule will only apply to requests with a Host
  // header matching host.
  optional string host = 1;

  optional string path = 2;
}

// Message containing what to include in the cache key for a request for Cloud
// CDN.
message CacheKeyPolicy {
  // If true, requests to different hosts will be cached separately.
  optional bool include_host = 1;

  // Allows HTTP request headers (by name) to be used in the cache key.
  repeated string include_http_headers = 2;

  // Allows HTTP cookies (by name) to be used in the cache key. The name=value
  // pair will be used in the cache key Cloud CDN generates.
  repeated string include_named_cookies = 3;

  // If true, http and https requests will be cached separately.
  optional bool include_protocol = 4;

  // If true, include query string parameters in the cache key according to
  // query_string_whitelist and query_string_blacklist. If neither is set, the
  // entire query string will be included. If false, the query string will be
  // excluded from the cache key entirely.
  optional bool include_query_string = 5;

  // Names of query string parameters to exclude in cache keys. All other
  // parameters will be included. Either specify query_string_whitelist or
  // query_string_blacklist, not both. '&' and '=' will be percent encoded and
  // not treated as delimiters.
  repeated string query_string_blacklist = 6;

  // Names of query string parameters to include in cache keys. All other
  // parameters will be excluded. Either specify query_string_whitelist or
  // query_string_blacklist, not both. '&' and '=' will be percent encoded and
  // not treated as delimiters.
  repeated string query_string_whitelist = 7;
}

// Settings controlling the volume of requests, connections and retries to this
// backend service.
message CircuitBreakers {
  // The maximum number of connections to the backend service. If not specified,
  // there is no limit. Not supported when the backend service is referenced by
  // a URL map that is bound to target gRPC proxy that has validateForProxyless
  // field set to true.
  optional int32 max_connections = 1;

  // The maximum number of pending requests allowed to the backend service. If
  // not specified, there is no limit. Not supported when the backend service is
  // referenced by a URL map that is bound to target gRPC proxy that has
  // validateForProxyless field set to true.
  optional int32 max_pending_requests = 2;

  // The maximum number of parallel requests that allowed to the backend
  // service. If not specified, there is no limit.
  optional int32 max_requests = 3;

  // Maximum requests for a single connection to the backend service. This
  // parameter is respected by both the HTTP/1.1 and HTTP/2 implementations. If
  // not specified, there is no limit. Setting this parameter to 1 will
  // effectively disable keep alive. Not supported when the backend service is
  // referenced by a URL map that is bound to target gRPC proxy that has
  // validateForProxyless field set to true.
  optional int32 max_requests_per_connection = 4;

  // The maximum number of parallel retries allowed to the backend cluster. If
  // not specified, the default is 1. Not supported when the backend service is
  // referenced by a URL map that is bound to target gRPC proxy that has
  // validateForProxyless field set to true.
  optional int32 max_retries = 5;
}

// Represents a regional Commitment resource. Creating a commitment resource
// means that you are purchasing a committed use contract with an explicit start
// and end time. You can create commitments based on vCPUs and memory usage and
// receive discounted rates. For full details, read Signing Up for Committed Use
// Discounts.
message Commitment {
  // Specifies whether to enable automatic renewal for the commitment. The
  // default value is false if not specified. The field can be updated until the
  // day of the commitment expiration at 12:00am PST. If the field is set to
  // true, the commitment will be automatically renewed for either one or three
  // years according to the terms of the existing commitment.
  optional bool auto_renew = 1;

  // The category of the commitment. Category MACHINE specifies commitments
  // composed of machine resources such as VCPU or MEMORY, listed in resources.
  // Category LICENSE specifies commitments composed of software licenses,
  // listed in licenseResources. Note that only MACHINE commitments should have
  // a Type specified.
  // CATEGORY_UNSPECIFIED:
  // LICENSE:
  // MACHINE:
  optional string category = 2;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 3;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 4;

  // [Output Only] Commitment end time in RFC3339 text format.
  optional string end_timestamp = 5;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 6;

  // [Output Only] Type of the resource. Always compute#commitment for
  // commitments.
  optional string kind = 7;

  // The license specification required as part of a license commitment.
  optional LicenseResourceCommitment license_resource = 8;

  // List of source commitments to be merged into a new commitment.
  repeated string merge_source_commitments = 9;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 10;

  // The plan for this commitment, which determines duration and discount rate.
  // The currently supported plans are TWELVE_MONTH (1 year), and
  // THIRTY_SIX_MONTH (3 years).
  // INVALID:
  // THIRTY_SIX_MONTH:
  // TWELVE_MONTH:
  optional string plan = 11;

  // [Output Only] URL of the region where this commitment may be used.
  optional string region = 12;

  // List of reservations in this commitment.
  repeated Reservation reservations = 13;

  // A list of commitment amounts for particular resources. Note that VCPU and
  // MEMORY resource commitments must occur together.
  repeated ResourceCommitment resources = 14;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 15;

  // Source commitment to be splitted into a new commitment.
  optional string split_source_commitment = 16;

  // [Output Only] Commitment start time in RFC3339 text format.
  optional string start_timestamp = 17;

  // [Output Only] Status of the commitment with regards to eventual expiration
  // (each commitment has an end date defined). One of the following values:
  // NOT_YET_ACTIVE, ACTIVE, EXPIRED.
  // ACTIVE:
  // CANCELLED: Deprecate CANCELED status. Will use separate status to
  // differentiate cancel by mergeCud or manual cancellation.
  // CREATING:
  // EXPIRED:
  // NOT_YET_ACTIVE:
  optional string status = 18;

  // [Output Only] An optional, human-readable explanation of the status.
  optional string status_message = 19;

  // The type of commitment, which affects the discount rate and the eligible
  // resources. Type MEMORY_OPTIMIZED specifies a commitment that will only
  // apply to memory optimized machines. Type ACCELERATOR_OPTIMIZED specifies a
  // commitment that will only apply to accelerator optimized machines.
  // ACCELERATOR_OPTIMIZED:
  // COMPUTE_OPTIMIZED:
  // COMPUTE_OPTIMIZED_C2D:
  // COMPUTE_OPTIMIZED_C3:
  // GENERAL_PURPOSE:
  // GENERAL_PURPOSE_E2:
  // GENERAL_PURPOSE_N2:
  // GENERAL_PURPOSE_N2D:
  // GENERAL_PURPOSE_T2D:
  // MEMORY_OPTIMIZED:
  // MEMORY_OPTIMIZED_M3:
  // TYPE_UNSPECIFIED:
  optional string type = 20;
}

message CommitmentAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of CommitmentsScopedList resources.
  map<string, CommitmentsScopedList> items = 2;

  // [Output Only] Type of resource. Always compute#commitmentAggregatedList for
  // aggregated lists of commitments.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Contains a list of Commitment resources.
message CommitmentList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of Commitment resources.
  repeated Commitment items = 2;

  // [Output Only] Type of resource. Always compute#commitmentList for lists of
  // commitments.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message CommitmentsScopedList {
  // [Output Only] A list of commitments contained in this scope.
  repeated Commitment commitments = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning which replaces the list of commitments
  // when the list is empty.
  optional Warning warning = 2;
}

// This is deprecated and has no effect. Do not use.
message Condition {
  // This is deprecated and has no effect. Do not use.
  // APPROVER: This is deprecated and has no effect. Do not use.
  // ATTRIBUTION: This is deprecated and has no effect. Do not use.
  // AUTHORITY: This is deprecated and has no effect. Do not use.
  // CREDENTIALS_TYPE: This is deprecated and has no effect. Do not use.
  // CREDS_ASSERTION: This is deprecated and has no effect. Do not use.
  // JUSTIFICATION_TYPE: This is deprecated and has no effect. Do not use.
  // NO_ATTR: This is deprecated and has no effect. Do not use.
  // SECURITY_REALM: This is deprecated and has no effect. Do not use.
  optional string iam = 1;

  // This is deprecated and has no effect. Do not use.
  // DISCHARGED: This is deprecated and has no effect. Do not use.
  // EQUALS: This is deprecated and has no effect. Do not use.
  // IN: This is deprecated and has no effect. Do not use.
  // NOT_EQUALS: This is deprecated and has no effect. Do not use.
  // NOT_IN: This is deprecated and has no effect. Do not use.
  // NO_OP: This is deprecated and has no effect. Do not use.
  optional string op = 2;

  // This is deprecated and has no effect. Do not use.
  optional string svc = 3;

  // This is deprecated and has no effect. Do not use.
  // IP: This is deprecated and has no effect. Do not use.
  // NAME: This is deprecated and has no effect. Do not use.
  // NO_ATTR: This is deprecated and has no effect. Do not use.
  // REGION: This is deprecated and has no effect. Do not use.
  // SERVICE: This is deprecated and has no effect. Do not use.
  optional string sys = 4;

  // This is deprecated and has no effect. Do not use.
  repeated string values = 5;
}

// A set of Confidential Instance options.
message ConfidentialInstanceConfig {
  // Defines whether the instance should have confidential compute enabled.
  optional bool enable_confidential_compute = 1;
}

// Message containing connection draining configuration.
message ConnectionDraining {
  // Configures a duration timeout for existing requests on a removed backend
  // instance. For supported load balancers and protocols, as described in
  // Enabling connection draining.
  optional int32 draining_timeout_sec = 1;
}

// This message defines settings for a consistent hash style load balancer.
message ConsistentHashLoadBalancerSettings {
  // Hash is based on HTTP Cookie. This field describes a HTTP cookie that will
  // be used as the hash key for the consistent hash load balancer. If the
  // cookie is not present, it will be generated. This field is applicable if
  // the sessionAffinity is set to HTTP_COOKIE. Not supported when the backend
  // service is referenced by a URL map that is bound to target gRPC proxy that
  // has validateForProxyless field set to true.
  optional ConsistentHashLoadBalancerSettingsHttpCookie http_cookie = 1;

  // The hash based on the value of the specified header field. This field is
  // applicable if the sessionAffinity is set to HEADER_FIELD.
  optional string http_header_name = 2;

  // The minimum number of virtual nodes to use for the hash ring. Defaults to
  // 1024. Larger ring sizes result in more granular load distributions. If the
  // number of hosts in the load balancing pool is larger than the ring size,
  // each host will be assigned a single virtual node.
  optional string minimum_ring_size = 3;
}

// The information about the HTTP Cookie on which the hash function is based for
// load balancing policies that use a consistent hash.
message ConsistentHashLoadBalancerSettingsHttpCookie {
  // Name of the cookie.
  optional string name = 1;

  // Path to set for the cookie.
  optional string path = 2;

  // Lifetime of the cookie.
  optional Duration ttl = 3;
}

// The specification for allowing client-side cross-origin requests. For more
// information about the W3C recommendation for cross-origin resource sharing
// (CORS), see Fetch API Living Standard.
message CorsPolicy {
  // In response to a preflight request, setting this to true indicates that the
  // actual request can include user credentials. This field translates to the
  // Access-Control-Allow-Credentials header. Default is false.
  optional bool allow_credentials = 1;

  // Specifies the content for the Access-Control-Allow-Headers header.
  repeated string allow_headers = 2;

  // Specifies the content for the Access-Control-Allow-Methods header.
  repeated string allow_methods = 3;

  // Specifies a regular expression that matches allowed origins. For more
  // information about the regular expression syntax, see Syntax. An origin is
  // allowed if it matches either an item in allowOrigins or an item in
  // allowOriginRegexes. Regular expressions can only be used when the
  // loadBalancingScheme is set to INTERNAL_SELF_MANAGED.
  repeated string allow_origin_regexes = 4;

  // Specifies the list of origins that is allowed to do CORS requests. An
  // origin is allowed if it matches either an item in allowOrigins or an item
  // in allowOriginRegexes.
  repeated string allow_origins = 5;

  // If true, the setting specifies the CORS policy is disabled. The default
  // value of false, which indicates that the CORS policy is in effect.
  optional bool disabled = 6;

  // Specifies the content for the Access-Control-Expose-Headers header.
  repeated string expose_headers = 7;

  // Specifies how long results of a preflight request can be cached in seconds.
  // This field translates to the Access-Control-Max-Age header.
  optional int32 max_age = 8;
}

message CustomerEncryptionKey {
  // The name of the encryption key that is stored in Google Cloud KMS. For
  // example: "kmsKeyName": "projects/kms_project_id/locations/region/keyRings/
  // key_region/cryptoKeys/key
  optional string kms_key_name = 1;

  // The service account being used for the encryption request for the given KMS
  // key. If absent, the Compute Engine default service account is used. For
  // example: "kmsKeyServiceAccount": "name@project_id.iam.gserviceaccount.com/
  optional string kms_key_service_account = 2;

  // Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648
  // base64 to either encrypt or decrypt this resource. You can provide either
  // the rawKey or the rsaEncryptedKey. For example: "rawKey":
  // "SGVsbG8gZnJvbSBHb29nbGUgQ2xvdWQgUGxhdGZvcm0="
  optional string raw_key = 3;

  // Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit
  // customer-supplied encryption key to either encrypt or decrypt this
  // resource. You can provide either the rawKey or the rsaEncryptedKey. For
  // example: "rsaEncryptedKey":
  // "ieCx/NcW06PcT7Ep1X6LUTc/hLvUDYyzSZPPVCVPTVEohpeHASqC8uw5TzyO9U+Fka9JFH
  // z0mBibXUInrC/jEk014kCK/NPjYgEMOyssZ4ZINPKxlUh2zn1bV+MCaTICrdmuSBTWlUUiFoD
  // D6PYznLwh8ZNdaheCeZ8ewEXgFQ8V+sDroLaN3Xs3MDTXQEMMoNUXMCZEIpg9Vtp9x2oe=="
  // The key must meet the following requirements before you can provide it to
  // Compute Engine: 1. The key is wrapped using a RSA public key certificate
  // provided by Google. 2. After being wrapped, the key must be encoded in RFC
  // 4648 base64 encoding. Gets the RSA public key certificate provided by
  // Google at:
  // https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem
  optional string rsa_encrypted_key = 4;

  // [Output only] The RFC 4648 base64 encoded SHA-256 hash of the
  // customer-supplied encryption key that protects this resource.
  optional string sha256 = 5;
}

message CustomerEncryptionKeyProtectedDisk {
  // Decrypts data associated with the disk with a customer-supplied encryption
  // key.
  optional CustomerEncryptionKey disk_encryption_key = 1;

  // Specifies a valid partial or full URL to an existing Persistent Disk
  // resource. This field is only applicable for persistent disks. For example:
  // "source": "/compute/v1/projects/project_id/zones/zone/disks/ disk_name
  optional string source = 2;
}

// Deprecation status for a public resource.
message DeprecationStatus {
  // An optional RFC3339 timestamp on or after which the state of this resource
  // is intended to change to DELETED. This is only informational and the status
  // will not change unless the client explicitly changes it.
  optional string deleted = 1;

  // An optional RFC3339 timestamp on or after which the state of this resource
  // is intended to change to DEPRECATED. This is only informational and the
  // status will not change unless the client explicitly changes it.
  optional string deprecated = 2;

  // An optional RFC3339 timestamp on or after which the state of this resource
  // is intended to change to OBSOLETE. This is only informational and the
  // status will not change unless the client explicitly changes it.
  optional string obsolete = 3;

  // The URL of the suggested replacement for a deprecated resource. The
  // suggested replacement resource must be the same kind of resource as the
  // deprecated resource.
  optional string replacement = 4;

  // The deprecation state of this resource. This can be ACTIVE, DEPRECATED,
  // OBSOLETE, or DELETED. Operations which communicate the end of life date for
  // an image, can use ACTIVE. Operations which create a new resource using a
  // DEPRECATED resource will return successfully, but with a warning indicating
  // the deprecated resource and recommending its replacement. Operations which
  // use OBSOLETE or DELETED resources will be rejected and result in an error.
  // ACTIVE:
  // DELETED:
  // DEPRECATED:
  // OBSOLETE:
  optional string state = 5;
}

// Represents a Persistent Disk resource. Google Compute Engine has two Disk
// resources: * [Zonal](/compute/docs/reference/rest/v1/disks) *
// [Regional](/compute/docs/reference/rest/v1/regionDisks) Persistent disks are
// required for running your VM instances. Create both boot and non-boot (data)
// persistent disks. For more information, read Persistent Disks. For more
// storage options, read Storage options. The disks resource represents a zonal
// persistent disk. For more information, read Zonal persistent disks. The
// regionDisks resource represents a regional persistent disk. For more
// information, read Regional resources.
message Disk {
  // The architecture of the disk. Valid values are ARM64 or X86_64.
  // ARCHITECTURE_UNSPECIFIED: Default value indicating Architecture is not set.
  // ARM64: Machines with architecture ARM64
  // X86_64: Machines with architecture X86_64
  optional string architecture = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 2;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 3;

  // Encrypts the disk using a customer-supplied encryption key or a
  // customer-managed encryption key. Encryption keys do not protect access to
  // metadata of the disk. After you encrypt a disk with a customer-supplied
  // key, you must provide the same key if you use the disk later. For example,
  // to create a disk snapshot, to create a disk image, to create a machine
  // image, or to attach the disk to a virtual machine. After you encrypt a disk
  // with a customer-managed key, the diskEncryptionKey.kmsKeyName is set to a
  // key *version* name once the disk is created. The disk is encrypted with
  // this version of the key. In the response, diskEncryptionKey.kmsKeyName
  // appears in the following format: "diskEncryptionKey.kmsKeyName":
  // "projects/kms_project_id/locations/region/keyRings/
  // key_region/cryptoKeys/key /cryptoKeysVersions/version If you do not provide
  // an encryption key when creating the disk, then the disk is encrypted using
  // an automatically generated key and you don't need to provide a key to use
  // the disk later.
  optional CustomerEncryptionKey disk_encryption_key = 4;

  // A list of features to enable on the guest operating system. Applicable only
  // for bootable images. Read Enabling guest operating system features to see a
  // list of available options.
  repeated GuestOsFeature guest_os_features = 5;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 6;

  // [Output Only] Type of the resource. Always compute#disk for disks.
  optional string kind = 7;

  // A fingerprint for the labels being applied to this disk, which is
  // essentially a hash of the labels set used for optimistic locking. The
  // fingerprint is initially generated by Compute Engine and changes after
  // every request to modify or update labels. You must always provide an
  // up-to-date fingerprint hash in order to update or change labels, otherwise
  // the request will fail with error 412 conditionNotMet. To see the latest
  // fingerprint, make a get() request to retrieve a disk.
  optional string label_fingerprint = 8;

  // Labels to apply to this disk. These can be later modified by the setLabels
  // method.
  map<string, string> labels = 9;

  // [Output Only] Last attach timestamp in RFC3339 text format.
  optional string last_attach_timestamp = 10;

  // [Output Only] Last detach timestamp in RFC3339 text format.
  optional string last_detach_timestamp = 11;

  // Integer license codes indicating which licenses are attached to this disk.
  repeated string license_codes = 12;

  // A list of publicly visible licenses. Reserved for Google's use.
  repeated string licenses = 13;

  // An opaque location hint used to place the disk close to other resources.
  // This field is for use by internal tools that use the public API.
  optional string location_hint = 14;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 15;

  // Internal use only.
  optional string options = 16;

  // Input only. [Input Only] Additional params passed with the request, but not
  // persisted as part of resource payload.
  optional DiskParams params = 17;

  // Physical block size of the persistent disk, in bytes. If not present in a
  // request, a default value is used. The currently supported size is 4096,
  // other sizes may be added in the future. If an unsupported value is
  // requested, the error message will list the supported values for the
  // caller's project.
  optional string physical_block_size_bytes = 18;

  // Indicates how many IOPS to provision for the disk. This sets the number of
  // I/O operations per second that the disk can handle. Values must be between
  // 10,000 and 120,000. For more details, see the Extreme persistent disk
  // documentation.
  optional string provisioned_iops = 19;

  // [Output Only] URL of the region where the disk resides. Only applicable for
  // regional resources. You must specify this field as part of the HTTP request
  // URL. It is not settable as a field in the request body.
  optional string region = 20;

  // URLs of the zones where the disk should be replicated to. Only applicable
  // for regional resources.
  repeated string replica_zones = 21;

  // Resource policies applied to this disk for automatic snapshot creations.
  repeated string resource_policies = 22;

  // [Output Only] Reserved for future use.
  optional bool satisfies_pzs = 23;

  // [Output Only] Server-defined fully-qualified URL for this resource.
  optional string self_link = 24;

  // Size, in GB, of the persistent disk. You can specify this field when
  // creating a persistent disk using the sourceImage, sourceSnapshot, or
  // sourceDisk parameter, or specify it alone to create an empty persistent
  // disk. If you specify this field along with a source, the value of sizeGb
  // must not be less than the size of the source. Acceptable values are 1 to
  // 65536, inclusive.
  optional string size_gb = 25;

  // The source disk used to create this disk. You can provide this as a partial
  // or full URL to the resource. For example, the following are valid values: -
  // https://www.googleapis.com/compute/v1/projects/project/zones/zone
  // /disks/disk -
  // https://www.googleapis.com/compute/v1/projects/project/regions/region
  // /disks/disk - projects/project/zones/zone/disks/disk -
  // projects/project/regions/region/disks/disk - zones/zone/disks/disk -
  // regions/region/disks/disk
  optional string source_disk = 26;

  // [Output Only] The unique ID of the disk used to create this disk. This
  // value identifies the exact disk that was used to create this persistent
  // disk. For example, if you created the persistent disk from a disk that was
  // later deleted and recreated under the same name, the source disk ID would
  // identify the exact version of the disk that was used.
  optional string source_disk_id = 27;

  // The source image used to create this disk. If the source image is deleted,
  // this field will not be set. To create a disk with one of the public
  // operating system images, specify the image by its family name. For example,
  // specify family/debian-9 to use the latest Debian 9 image:
  // projects/debian-cloud/global/images/family/debian-9 Alternatively, use a
  // specific version of a public operating system image:
  // projects/debian-cloud/global/images/debian-9-stretch-vYYYYMMDD To create a
  // disk with a custom image that you created, specify the image name in the
  // following format: global/images/my-custom-image You can also specify a
  // custom image by its image family, which returns the latest version of the
  // image in that family. Replace the image name with family/family-name:
  // global/images/family/my-image-family
  optional string source_image = 28;

  // The customer-supplied encryption key of the source image. Required if the
  // source image is protected by a customer-supplied encryption key.
  optional CustomerEncryptionKey source_image_encryption_key = 29;

  // [Output Only] The ID value of the image used to create this disk. This
  // value identifies the exact image that was used to create this persistent
  // disk. For example, if you created the persistent disk from an image that
  // was later deleted and recreated under the same name, the source image ID
  // would identify the exact version of the image that was used.
  optional string source_image_id = 30;

  // The source snapshot used to create this disk. You can provide this as a
  // partial or full URL to the resource. For example, the following are valid
  // values: - https://www.googleapis.com/compute/v1/projects/project
  // /global/snapshots/snapshot - projects/project/global/snapshots/snapshot -
  // global/snapshots/snapshot
  optional string source_snapshot = 31;

  // The customer-supplied encryption key of the source snapshot. Required if
  // the source snapshot is protected by a customer-supplied encryption key.
  optional CustomerEncryptionKey source_snapshot_encryption_key = 32;

  // [Output Only] The unique ID of the snapshot used to create this disk. This
  // value identifies the exact snapshot that was used to create this persistent
  // disk. For example, if you created the persistent disk from a snapshot that
  // was later deleted and recreated under the same name, the source snapshot ID
  // would identify the exact version of the snapshot that was used.
  optional string source_snapshot_id = 33;

  // The full Google Cloud Storage URI where the disk image is stored. This file
  // must be a gzip-compressed tarball whose name ends in .tar.gz or virtual
  // machine disk whose name ends in vmdk. Valid URIs may start with gs:// or
  // https://storage.googleapis.com/. This flag is not optimized for creating
  // multiple disks from a source storage object. To create many disks from a
  // source storage object, use gcloud compute images import instead.
  optional string source_storage_object = 34;

  // [Output Only] The status of disk creation. - CREATING: Disk is
  // provisioning. - RESTORING: Source data is being copied into the disk. -
  // FAILED: Disk creation failed. - READY: Disk is ready for use. - DELETING:
  // Disk is deleting.
  // CREATING: Disk is provisioning
  // DELETING: Disk is deleting.
  // FAILED: Disk creation failed.
  // READY: Disk is ready for use.
  // RESTORING: Source data is being copied into the disk.
  optional string status = 35;

  // URL of the disk type resource describing which disk type to use to create
  // the disk. Provide this when creating the disk. For example:
  // projects/project /zones/zone/diskTypes/pd-ssd . See Persistent disk types.
  optional string type = 36;

  // [Output Only] Links to the users of the disk (attached instances) in form:
  // projects/project/zones/zone/instances/instance
  repeated string users = 37;

  // [Output Only] URL of the zone where the disk resides. You must specify this
  // field as part of the HTTP request URL. It is not settable as a field in the
  // request body.
  optional string zone = 38;
}

message DiskAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of DisksScopedList resources.
  map<string, DisksScopedList> items = 2;

  // [Output Only] Type of resource. Always compute#diskAggregatedList for
  // aggregated lists of persistent disks.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// A specification of the desired way to instantiate a disk in the instance
// template when its created from a source instance.
message DiskInstantiationConfig {
  // Specifies whether the disk will be auto-deleted when the instance is
  // deleted (but not when the disk is detached from the instance).
  optional bool auto_delete = 1;

  // The custom source image to be used to restore this disk when instantiating
  // this instance template.
  optional string custom_image = 2;

  // Specifies the device name of the disk to which the configurations apply to.
  optional string device_name = 3;

  // Specifies whether to include the disk and what image to use. Possible
  // values are: - source-image: to use the same image that was used to create
  // the source instance's corresponding disk. Applicable to the boot disk and
  // additional read-write disks. - source-image-family: to use the same image
  // family that was used to create the source instance's corresponding disk.
  // Applicable to the boot disk and additional read-write disks. -
  // custom-image: to use a user-provided image url for disk creation.
  // Applicable to the boot disk and additional read-write disks. -
  // attach-read-only: to attach a read-only disk. Applicable to read-only
  // disks. - do-not-include: to exclude a disk from the template. Applicable to
  // additional read-write disks, local SSDs, and read-only disks.
  // ATTACH_READ_ONLY: Attach the existing disk in read-only mode. The request
  // will fail if the disk was attached in read-write mode on the source
  // instance. Applicable to: read-only disks.
  // BLANK: Create a blank disk. The disk will be created unformatted.
  // Applicable to: additional read-write disks, local SSDs.
  // CUSTOM_IMAGE: Use the custom image specified in the custom_image field.
  // Applicable to: boot disk, additional read-write disks.
  // DEFAULT: Use the default instantiation option for the corresponding type of
  // disk. For boot disk and any other R/W disks, new custom images will be
  // created from each disk. For read-only disks, they will be attached in
  // read-only mode. Local SSD disks will be created as blank volumes.
  // DO_NOT_INCLUDE: Do not include the disk in the instance template.
  // Applicable to: additional read-write disks, local SSDs, read-only disks.
  // SOURCE_IMAGE: Use the same source image used for creation of the source
  // instance's corresponding disk. The request will fail if the source VM's
  // disk was created from a snapshot. Applicable to: boot disk, additional
  // read-write disks.
  // SOURCE_IMAGE_FAMILY: Use the same source image family used for creation of
  // the source instance's corresponding disk. The request will fail if the
  // source image of the source disk does not belong to any image family.
  // Applicable to: boot disk, additional read-write disks.
  optional string instantiate_from = 4;
}

// A list of Disk resources.
message DiskList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of Disk resources.
  repeated Disk items = 2;

  // [Output Only] Type of resource. Always compute#diskList for lists of disks.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message DiskMoveRequest {
  // The URL of the destination zone to move the disk. This can be a full or
  // partial URL. For example, the following are all valid URLs to a zone: -
  // https://www.googleapis.com/compute/v1/projects/project/zones/zone -
  // projects/project/zones/zone - zones/zone
  optional string destination_zone = 1;

  // The URL of the target disk to move. This can be a full or partial URL. For
  // example, the following are all valid URLs to a disk: -
  // https://www.googleapis.com/compute/v1/projects/project/zones/zone
  // /disks/disk - projects/project/zones/zone/disks/disk -
  // zones/zone/disks/disk
  optional string target_disk = 2;
}

// Additional disk params.
message DiskParams {
  // Resource manager tags to be bound to the disk. Tag keys and values have the
  // same definition as resource manager tags. Keys must be in the format
  // `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The
  // field is ignored (both PUT & PATCH) when empty.
  map<string, string> resource_manager_tags = 1;
}

// Represents a Disk Type resource. Google Compute Engine has two Disk Type
// resources: * [Regional](/compute/docs/reference/rest/v1/regionDiskTypes) *
// [Zonal](/compute/docs/reference/rest/v1/diskTypes) You can choose from a
// variety of disk types based on your needs. For more information, read Storage
// options. The diskTypes resource represents disk types for a zonal persistent
// disk. For more information, read Zonal persistent disks. The regionDiskTypes
// resource represents disk types for a regional persistent disk. For more
// information, read Regional persistent disks.
message DiskType {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1;

  // [Output Only] Server-defined default disk size in GB.
  optional string default_disk_size_gb = 2;

  // [Output Only] The deprecation status associated with this disk type.
  optional DeprecationStatus deprecated = 3;

  // [Output Only] An optional description of this resource.
  optional string description = 4;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 5;

  // [Output Only] Type of the resource. Always compute#diskType for disk types.
  optional string kind = 6;

  // [Output Only] Name of the resource.
  optional string name = 7;

  // [Output Only] URL of the region where the disk type resides. Only
  // applicable for regional resources. You must specify this field as part of
  // the HTTP request URL. It is not settable as a field in the request body.
  optional string region = 8;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 9;

  // [Output Only] An optional textual description of the valid disk size, such
  // as "10GB-10TB".
  optional string valid_disk_size = 10;

  // [Output Only] URL of the zone where the disk type resides. You must specify
  // this field as part of the HTTP request URL. It is not settable as a field
  // in the request body.
  optional string zone = 11;
}

message DiskTypeAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of DiskTypesScopedList resources.
  map<string, DiskTypesScopedList> items = 2;

  // [Output Only] Type of resource. Always compute#diskTypeAggregatedList.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Contains a list of disk types.
message DiskTypeList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of DiskType resources.
  repeated DiskType items = 2;

  // [Output Only] Type of resource. Always compute#diskTypeList for disk types.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message DiskTypesScopedList {
  // [Output Only] A list of disk types contained in this scope.
  repeated DiskType disk_types = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning which replaces the list of disk types
  // when the list is empty.
  optional Warning warning = 2;
}

message DisksAddResourcePoliciesRequest {
  // Full or relative path to the resource policy to be added to this disk. You
  // can only specify one resource policy.
  repeated string resource_policies = 1;
}

message DisksRemoveResourcePoliciesRequest {
  // Resource policies to be removed from this disk.
  repeated string resource_policies = 1;
}

message DisksResizeRequest {
  // The new size of the persistent disk, which is specified in GB.
  optional string size_gb = 1;
}

message DisksScopedList {
  // [Output Only] A list of disks contained in this scope.
  repeated Disk disks = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning which replaces the list of disks when
  // the list is empty.
  optional Warning warning = 2;
}

// A set of Display Device options
message DisplayDevice {
  // Defines whether the instance has Display enabled.
  optional bool enable_display = 1;
}

message DistributionPolicy {
  // The distribution shape to which the group converges either proactively or
  // on resize events (depending on the value set in
  // updatePolicy.instanceRedistributionType).
  // ANY: The group picks zones for creating VM instances to fulfill the
  // requested number of VMs within present resource constraints and to maximize
  // utilization of unused zonal reservations. Recommended for batch workloads
  // that do not require high availability.
  // BALANCED: The group prioritizes acquisition of resources, scheduling VMs in
  // zones where resources are available while distributing VMs as evenly as
  // possible across selected zones to minimize the impact of zonal failure.
  // Recommended for highly available serving workloads.
  // EVEN: The group schedules VM instance creation and deletion to achieve and
  // maintain an even number of managed instances across the selected zones. The
  // distribution is even when the number of managed instances does not differ
  // by more than 1 between any two zones. Recommended for highly available
  // serving workloads.
  optional string target_shape = 1;

  // Zones where the regional managed instance group will create and manage its
  // instances.
  repeated DistributionPolicyZoneConfiguration zones = 2;
}

message DistributionPolicyZoneConfiguration {
  // The URL of the zone. The zone must exist in the region where the managed
  // instance group is located.
  optional string zone = 1;
}

// A Duration represents a fixed-length span of time represented as a count of
// seconds and fractions of seconds at nanosecond resolution. It is independent
// of any calendar and concepts like "day" or "month". Range is approximately
// 10,000 years.
message Duration {
  // Span of time that's a fraction of a second at nanosecond resolution.
  // Durations less than one second are represented with a 0 `seconds` field and
  // a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.
  optional int32 nanos = 1;

  // Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
  // inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr *
  // 24 hr/day * 365.25 days/year * 10000 years
  optional string seconds = 2;
}

// Describes the cause of the error with structured details. Example of an error
// when contacting the "pubsub.googleapis.com" API when it is not enabled: {
// "reason": "API_DISABLED" "domain": "googleapis.com" "metadata": { "resource":
// "projects/123", "service": "pubsub.googleapis.com" } } This response
// indicates that the pubsub.googleapis.com API is not enabled. Example of an
// error that is returned when attempting to create a Spanner instance in a
// region that is out of stock: { "reason": "STOCKOUT" "domain":
// "spanner.googleapis.com", "metadata": { "availableRegions":
// "us-central1,us-east2" } }
message ErrorInfo {
  // The logical grouping to which the "reason" belongs. The error domain is
  // typically the registered service name of the tool or product that generates
  // the error. Example: "pubsub.googleapis.com". If the error is generated by
  // some common infrastructure, the error domain must be a globally unique
  // value that identifies the infrastructure. For Google API infrastructure,
  // the error domain is "googleapis.com".
  optional string domain = 1;

  // Additional structured details about this error. Keys should match
  // /[a-zA-Z0-9-_]/ and be limited to 64 characters in length. When identifying
  // the current value of an exceeded limit, the units should be contained in
  // the key, not the value. For example, rather than {"instanceLimit":
  // "100/request"}, should be returned as, {"instanceLimitPerRequest": "100"},
  // if the client exceeds the number of instances that can be created in a
  // single (batch) request.
  map<string, string> metadatas = 2;

  // The reason of the error. This is a constant value that identifies the
  // proximate cause of the error. Error reasons are unique within a particular
  // domain of errors. This should be at most 63 characters and match a regular
  // expression of `A-Z+[A-Z0-9]`, which represents UPPER_SNAKE_CASE.
  optional string reason = 3;
}

message ExchangedPeeringRoute {
  // The destination range of the route.
  optional string dest_range = 1;

  // True if the peering route has been imported from a peer. The actual import
  // happens if the field networkPeering.importCustomRoutes is true for this
  // network, and networkPeering.exportCustomRoutes is true for the peer
  // network, and the import does not result in a route conflict.
  optional bool imported = 2;

  // The region of peering route next hop, only applies to dynamic routes.
  optional string next_hop_region = 3;

  // The priority of the peering route.
  optional uint32 priority = 4;

  // The type of the peering route.
  // DYNAMIC_PEERING_ROUTE: For routes exported from local network.
  // STATIC_PEERING_ROUTE: The peering route.
  // SUBNET_PEERING_ROUTE: The peering route corresponding to subnetwork range.
  optional string type = 5;
}

message ExchangedPeeringRoutesList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of ExchangedPeeringRoute resources.
  repeated ExchangedPeeringRoute items = 2;

  // [Output Only] Type of resource. Always compute#exchangedPeeringRoutesList
  // for exchanged peering routes lists.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// Represents a textual expression in the Common Expression Language (CEL)
// syntax. CEL is a C-like expression language. The syntax and semantics of CEL
// are documented at https://github.com/google/cel-spec. Example (Comparison):
// title: "Summary size limit" description: "Determines if a summary is less
// than 100 chars" expression: "document.summary.size() < 100" Example
// (Equality): title: "Requestor is owner" description: "Determines if requestor
// is the document owner" expression: "document.owner ==
// request.auth.claims.email" Example (Logic): title: "Public documents"
// description: "Determine whether the document should be publicly visible"
// expression: "document.type != 'private' && document.type != 'internal'"
// Example (Data Manipulation): title: "Notification string" description:
// "Create a notification string with a timestamp." expression: "'New message
// received at ' + string(document.create_time)" The exact variables and
// functions that may be referenced within an expression are determined by the
// service that evaluates it. See the service documentation for additional
// information.
message Expr {
  // Optional. Description of the expression. This is a longer text which
  // describes the expression, e.g. when hovered over it in a UI.
  optional string description = 1;

  // Textual representation of an expression in Common Expression Language
  // syntax.
  optional string expression = 2;

  // Optional. String indicating the location of the expression for error
  // reporting, e.g. a file name and a position in the file.
  optional string location = 3;

  // Optional. Title for the expression, i.e. a short string describing its
  // purpose. This can be used e.g. in UIs which allow to enter the expression.
  optional string title = 4;
}

// Represents an external VPN gateway. External VPN gateway is the on-premises
// VPN gateway(s) or another cloud provider's VPN gateway that connects to your
// Google Cloud VPN gateway. To create a highly available VPN from Google Cloud
// Platform to your VPN gateway or another cloud provider's VPN gateway, you
// must create a external VPN gateway resource with information about the other
// gateway. For more information about using external VPN gateways, see Creating
// an HA VPN gateway and tunnel pair to a peer VPN.
message ExternalVpnGateway {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 2;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 3;

  // A list of interfaces for this external VPN gateway. If your peer-side
  // gateway is an on-premises gateway and non-AWS cloud providers' gateway, at
  // most two interfaces can be provided for an external VPN gateway. If your
  // peer side is an AWS virtual private gateway, four interfaces should be
  // provided for an external VPN gateway.
  repeated ExternalVpnGatewayInterface interfaces = 4;

  // [Output Only] Type of the resource. Always compute#externalVpnGateway for
  // externalVpnGateways.
  optional string kind = 5;

  // A fingerprint for the labels being applied to this ExternalVpnGateway,
  // which is essentially a hash of the labels set used for optimistic locking.
  // The fingerprint is initially generated by Compute Engine and changes after
  // every request to modify or update labels. You must always provide an
  // up-to-date fingerprint hash in order to update or change labels, otherwise
  // the request will fail with error 412 conditionNotMet. To see the latest
  // fingerprint, make a get() request to retrieve an ExternalVpnGateway.
  optional string label_fingerprint = 6;

  // Labels for this resource. These can only be added or modified by the
  // setLabels method. Each label key/value pair must comply with RFC1035. Label
  // values may be empty.
  map<string, string> labels = 7;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 8;

  // Indicates the user-supplied redundancy type of this external VPN gateway.
  // FOUR_IPS_REDUNDANCY: The external VPN gateway has four public IP addresses;
  // at the time of writing this API, the AWS virtual private gateway is an
  // example which has four public IP addresses for high availability
  // connections; there should be two VPN connections in the AWS virtual private
  // gateway , each AWS VPN connection has two public IP addresses; please make
  // sure to put two public IP addresses from one AWS VPN connection into
  // interfaces 0 and 1 of this external VPN gateway, and put the other two
  // public IP addresses from another AWS VPN connection into interfaces 2 and 3
  // of this external VPN gateway. When displaying highly available
  // configuration status for the VPN tunnels connected to FOUR_IPS_REDUNDANCY
  // external VPN gateway, Google will always detect whether interfaces 0 and 1
  // are connected on one interface of HA Cloud VPN gateway, and detect whether
  // interfaces 2 and 3 are connected to another interface of the HA Cloud VPN
  // gateway.
  // SINGLE_IP_INTERNALLY_REDUNDANT: The external VPN gateway has only one
  // public IP address which internally provide redundancy or failover.
  // TWO_IPS_REDUNDANCY: The external VPN gateway has two public IP addresses
  // which are redundant with each other, the following two types of setup on
  // your on-premises side would have this type of redundancy: (1) Two separate
  // on-premises gateways, each with one public IP address, the two on-premises
  // gateways are redundant with each other. (2) A single on-premise gateway
  // with two public IP addresses that are redundant with eatch other.
  optional string redundancy_type = 9;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 10;
}

// The interface for the external VPN gateway.
message ExternalVpnGatewayInterface {
  // The numeric ID of this interface. The allowed input values for this id for
  // different redundancy types of external VPN gateway: -
  // SINGLE_IP_INTERNALLY_REDUNDANT - 0 - TWO_IPS_REDUNDANCY - 0, 1 -
  // FOUR_IPS_REDUNDANCY - 0, 1, 2, 3
  optional uint32 id = 1;

  // IP address of the interface in the external VPN gateway. Only IPv4 is
  // supported. This IP address can be either from your on-premise gateway or
  // another Cloud provider's VPN gateway, it cannot be an IP address from
  // Google Compute Engine.
  optional string ip_address = 2;
}

// Response to the list request, and contains a list of externalVpnGateways.
message ExternalVpnGatewayList {
  optional string etag = 1;

  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 2;

  // A list of ExternalVpnGateway resources.
  repeated ExternalVpnGateway items = 3;

  // [Output Only] Type of resource. Always compute#externalVpnGatewayList for
  // lists of externalVpnGateways.
  optional string kind = 4;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 5;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

message FileContentBuffer {
  // The raw content in the secure keys file.
  optional string content = 1;

  // The file type of source file.
  // BIN:
  // UNDEFINED:
  // X509:
  optional string file_type = 2;
}

// Represents a Firewall Rule resource. Firewall rules allow or deny ingress
// traffic to, and egress traffic from your instances. For more information,
// read Firewall rules.
message Firewall {
  message AllowedItem {
    // The IP protocol to which this rule applies. The protocol type is required
    // when creating a firewall rule. This value can either be one of the
    // following well known protocol strings (tcp, udp, icmp, esp, ah, ipip,
    // sctp) or the IP protocol number.
    optional string ip_protocol = 1;

    // An optional list of ports to which this rule applies. This field is only
    // applicable for the UDP or TCP protocol. Each entry must be either an
    // integer or a range. If not specified, this rule applies to connections
    // through any port. Example inputs include: ["22"], ["80","443"], and
    // ["12345-12349"].
    repeated string ports = 2;
  }

  // The list of ALLOW rules specified by this firewall. Each rule specifies a
  // protocol and port-range tuple that describes a permitted connection.
  repeated AllowedItem allowed = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 2;

  message DeniedItem {
    // The IP protocol to which this rule applies. The protocol type is required
    // when creating a firewall rule. This value can either be one of the
    // following well known protocol strings (tcp, udp, icmp, esp, ah, ipip,
    // sctp) or the IP protocol number.
    optional string ip_protocol = 1;

    // An optional list of ports to which this rule applies. This field is only
    // applicable for the UDP or TCP protocol. Each entry must be either an
    // integer or a range. If not specified, this rule applies to connections
    // through any port. Example inputs include: ["22"], ["80","443"], and
    // ["12345-12349"].
    repeated string ports = 2;
  }

  // The list of DENY rules specified by this firewall. Each rule specifies a
  // protocol and port-range tuple that describes a denied connection.
  repeated DeniedItem denied = 3;

  // An optional description of this resource. Provide this field when you
  // create the resource.
  optional string description = 4;

  // If destination ranges are specified, the firewall rule applies only to
  // traffic that has destination IP address in these ranges. These ranges must
  // be expressed in CIDR format. Both IPv4 and IPv6 are supported.
  repeated string destination_ranges = 5;

  // Direction of traffic to which this firewall applies, either `INGRESS` or
  // `EGRESS`. The default is `INGRESS`. For `EGRESS` traffic, you cannot
  // specify the sourceTags fields.
  // EGRESS: Indicates that firewall should apply to outgoing traffic.
  // INGRESS: Indicates that firewall should apply to incoming traffic.
  optional string direction = 6;

  // Denotes whether the firewall rule is disabled. When set to true, the
  // firewall rule is not enforced and the network behaves as if it did not
  // exist. If this is unspecified, the firewall rule will be enabled.
  optional bool disabled = 7;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 8;

  // [Output Only] Type of the resource. Always compute#firewall for firewall
  // rules.
  optional string kind = 9;

  // This field denotes the logging options for a particular firewall rule. If
  // logging is enabled, logs will be exported to Cloud Logging.
  optional FirewallLogConfig log_config = 10;

  // Name of the resource; provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a
  // lowercase letter, and all following characters (except for the last
  // character) must be a dash, lowercase letter, or digit. The last character
  // must be a lowercase letter or digit.
  optional string name = 11;

  // URL of the network resource for this firewall rule. If not specified when
  // creating a firewall rule, the default network is used:
  // global/networks/default If you choose to specify this field, you can
  // specify the network as a full or partial URL. For example, the following
  // are all valid URLs: -
  // https://www.googleapis.com/compute/v1/projects/myproject/global/networks/my-network
  // - projects/myproject/global/networks/my-network - global/networks/default
  optional string network = 12;

  // Priority for this rule. This is an integer between `0` and `65535`, both
  // inclusive. The default value is `1000`. Relative priorities determine which
  // rule takes effect if multiple rules apply. Lower values indicate higher
  // priority. For example, a rule with priority `0` has higher precedence than
  // a rule with priority `1`. DENY rules take precedence over ALLOW rules if
  // they have equal priority. Note that VPC networks have implied rules with a
  // priority of `65535`. To avoid conflicts with the implied rules, use a
  // priority number less than `65535`.
  optional int32 priority = 13;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 14;

  // If source ranges are specified, the firewall rule applies only to traffic
  // that has a source IP address in these ranges. These ranges must be
  // expressed in CIDR format. One or both of sourceRanges and sourceTags may be
  // set. If both fields are set, the rule applies to traffic that has a source
  // IP address within sourceRanges OR a source IP from a resource with a
  // matching tag listed in the sourceTags field. The connection does not need
  // to match both fields for the rule to apply. Both IPv4 and IPv6 are
  // supported.
  repeated string source_ranges = 15;

  // If source service accounts are specified, the firewall rules apply only to
  // traffic originating from an instance with a service account in this list.
  // Source service accounts cannot be used to control traffic to an instance's
  // external IP address because service accounts are associated with an
  // instance, not an IP address. sourceRanges can be set at the same time as
  // sourceServiceAccounts. If both are set, the firewall applies to traffic
  // that has a source IP address within the sourceRanges OR a source IP that
  // belongs to an instance with service account listed in sourceServiceAccount.
  // The connection does not need to match both fields for the firewall to
  // apply. sourceServiceAccounts cannot be used at the same time as sourceTags
  // or targetTags.
  repeated string source_service_accounts = 16;

  // If source tags are specified, the firewall rule applies only to traffic
  // with source IPs that match the primary network interfaces of VM instances
  // that have the tag and are in the same VPC network. Source tags cannot be
  // used to control traffic to an instance's external IP address, it only
  // applies to traffic between instances in the same virtual network. Because
  // tags are associated with instances, not IP addresses. One or both of
  // sourceRanges and sourceTags may be set. If both fields are set, the
  // firewall applies to traffic that has a source IP address within
  // sourceRanges OR a source IP from a resource with a matching tag listed in
  // the sourceTags field. The connection does not need to match both fields for
  // the firewall to apply.
  repeated string source_tags = 17;

  // A list of service accounts indicating sets of instances located in the
  // network that may make network connections as specified in allowed[].
  // targetServiceAccounts cannot be used at the same time as targetTags or
  // sourceTags. If neither targetServiceAccounts nor targetTags are specified,
  // the firewall rule applies to all instances on the specified network.
  repeated string target_service_accounts = 18;

  // A list of tags that controls which instances the firewall rule applies to.
  // If targetTags are specified, then the firewall rule applies only to
  // instances in the VPC network that have one of those tags. If no targetTags
  // are specified, the firewall rule applies to all instances on the specified
  // network.
  repeated string target_tags = 19;
}

// Contains a list of firewalls.
message FirewallList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of Firewall resources.
  repeated Firewall items = 2;

  // [Output Only] Type of resource. Always compute#firewallList for lists of
  // firewalls.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// The available logging options for a firewall rule.
message FirewallLogConfig {
  // This field denotes whether to enable logging for a particular firewall
  // rule.
  optional bool enable = 1;

  // This field can only be specified for a particular firewall rule if logging
  // is enabled for that rule. This field denotes whether to include or exclude
  // metadata for firewall logs.
  // EXCLUDE_ALL_METADATA:
  // INCLUDE_ALL_METADATA:
  optional string metadata = 2;
}

message FirewallPoliciesListAssociationsResponse {
  // A list of associations.
  repeated FirewallPolicyAssociation associations = 1;

  // [Output Only] Type of firewallPolicy associations. Always
  // compute#FirewallPoliciesListAssociations for lists of firewallPolicy
  // associations.
  optional string kind = 2;
}

// Represents a Firewall Policy resource.
message FirewallPolicy {
  // A list of associations that belong to this firewall policy.
  repeated FirewallPolicyAssociation associations = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 2;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 3;

  // Deprecated, please use short name instead. User-provided name of the
  // Organization firewall policy. The name should be unique in the organization
  // in which the firewall policy is created. This field is not applicable to
  // network firewall policies. This name must be set on creation and cannot be
  // changed. The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string display_name = 4;

  // Specifies a fingerprint for this resource, which is essentially a hash of
  // the metadata's contents and used for optimistic locking. The fingerprint is
  // initially generated by Compute Engine and changes after every request to
  // modify or update metadata. You must always provide an up-to-date
  // fingerprint hash in order to update or change metadata, otherwise the
  // request will fail with error 412 conditionNotMet. To see the latest
  // fingerprint, make get() request to the firewall policy.
  optional string fingerprint = 5;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 6;

  // [Output only] Type of the resource. Always compute#firewallPolicyfor
  // firewall policies
  optional string kind = 7;

  // Name of the resource. For Organization Firewall Policies it's a [Output
  // Only] numeric ID allocated by Google Cloud which uniquely identifies the
  // Organization Firewall Policy.
  optional string name = 8;

  // [Output Only] The parent of the firewall policy. This field is not
  // applicable to network firewall policies.
  optional string parent = 9;

  // [Output Only] URL of the region where the regional firewall policy resides.
  // This field is not applicable to global firewall policies. You must specify
  // this field as part of the HTTP request URL. It is not settable as a field
  // in the request body.
  optional string region = 10;

  // [Output Only] Total count of all firewall policy rule tuples. A firewall
  // policy can not exceed a set number of tuples.
  optional int32 rule_tuple_count = 11;

  // A list of rules that belong to this policy. There must always be a default
  // rule (rule with priority 2147483647 and match "*"). If no rules are
  // provided when creating a firewall policy, a default rule with action
  // "allow" will be added.
  repeated FirewallPolicyRule rules = 12;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 13;

  // [Output Only] Server-defined URL for this resource with the resource id.
  optional string self_link_with_id = 14;

  // User-provided name of the Organization firewall policy. The name should be
  // unique in the organization in which the firewall policy is created. This
  // field is not applicable to network firewall policies. This name must be set
  // on creation and cannot be changed. The name must be 1-63 characters long,
  // and comply with RFC1035. Specifically, the name must be 1-63 characters
  // long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
  // means the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the last
  // character, which cannot be a dash.
  optional string short_name = 15;
}

message FirewallPolicyAssociation {
  // The target that the firewall policy is attached to.
  optional string attachment_target = 1;

  // [Output Only] Deprecated, please use short name instead. The display name
  // of the firewall policy of the association.
  optional string display_name = 2;

  // [Output Only] The firewall policy ID of the association.
  optional string firewall_policy_id = 3;

  // The name for an association.
  optional string name = 4;

  // [Output Only] The short name of the firewall policy of the association.
  optional string short_name = 5;
}

message FirewallPolicyList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of FirewallPolicy resources.
  repeated FirewallPolicy items = 2;

  // [Output Only] Type of resource. Always compute#firewallPolicyList for
  // listsof FirewallPolicies
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 5;
}

// Represents a rule that describes one or more match conditions along with the
// action to be taken when traffic matches this condition (allow or deny).
message FirewallPolicyRule {
  // The Action to perform when the client connection triggers the rule. Valid
  // actions are "allow", "deny" and "goto_next".
  optional string action = 1;

  // An optional description for this resource.
  optional string description = 2;

  // The direction in which this rule applies.
  // EGRESS:
  // INGRESS:
  optional string direction = 3;

  // Denotes whether the firewall policy rule is disabled. When set to true, the
  // firewall policy rule is not enforced and traffic behaves as if it did not
  // exist. If this is unspecified, the firewall policy rule will be enabled.
  optional bool disabled = 4;

  // Denotes whether to enable logging for a particular rule. If logging is
  // enabled, logs will be exported to the configured export destination in
  // Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot
  // enable logging on "goto_next" rules.
  optional bool enable_logging = 5;

  // [Output only] Type of the resource. Always compute#firewallPolicyRule for
  // firewall policy rules
  optional string kind = 6;

  // A match condition that incoming traffic is evaluated against. If it
  // evaluates to true, the corresponding 'action' is enforced.
  optional FirewallPolicyRuleMatcher match = 7;

  // An integer indicating the priority of a rule in the list. The priority must
  // be a positive value between 0 and 2147483647. Rules are evaluated from
  // highest to lowest priority where 0 is the highest priority and 2147483647
  // is the lowest prority.
  optional int32 priority = 8;

  // An optional name for the rule. This field is not a unique identifier and
  // can be updated.
  optional string rule_name = 9;

  // [Output Only] Calculation of the complexity of a single firewall policy
  // rule.
  optional int32 rule_tuple_count = 10;

  // A list of network resource URLs to which this rule applies. This field
  // allows you to control which network's VMs get this rule. If this field is
  // left blank, all VMs within the organization will receive the rule.
  repeated string target_resources = 11;

  // A list of secure tags that controls which instances the firewall rule
  // applies to. If targetSecureTag are specified, then the firewall rule
  // applies only to instances in the VPC network that have one of those
  // EFFECTIVE secure tags, if all the target_secure_tag are in INEFFECTIVE
  // state, then this rule will be ignored. targetSecureTag may not be set at
  // the same time as targetServiceAccounts. If neither targetServiceAccounts
  // nor targetSecureTag are specified, the firewall rule applies to all
  // instances on the specified network. Maximum number of target label tags
  // allowed is 256.
  repeated FirewallPolicyRuleSecureTag target_secure_tags = 12;

  // A list of service accounts indicating the sets of instances that are
  // applied with this rule.
  repeated string target_service_accounts = 13;
}

// Represents a match condition that incoming traffic is evaluated against.
// Exactly one field must be specified.
message FirewallPolicyRuleMatcher {
  // CIDR IP address range. Maximum number of destination CIDR IP ranges allowed
  // is 5000.
  repeated string dest_ip_ranges = 1;

  // Pairs of IP protocols and ports that the rule should match.
  repeated FirewallPolicyRuleMatcherLayer4Config layer4_configs = 2;

  // CIDR IP address range. Maximum number of source CIDR IP ranges allowed is
  // 5000.
  repeated string src_ip_ranges = 3;

  // List of secure tag values, which should be matched at the source of the
  // traffic. For INGRESS rule, if all the srcSecureTag are INEFFECTIVE, and
  // there is no srcIpRange, this rule will be ignored. Maximum number of source
  // tag values allowed is 256.
  repeated FirewallPolicyRuleSecureTag src_secure_tags = 4;
}

message FirewallPolicyRuleMatcherLayer4Config {
  // The IP protocol to which this rule applies. The protocol type is required
  // when creating a firewall rule. This value can either be one of the
  // following well known protocol strings (tcp, udp, icmp, esp, ah, ipip,
  // sctp), or the IP protocol number.
  optional string ip_protocol = 1;

  // An optional list of ports to which this rule applies. This field is only
  // applicable for UDP or TCP protocol. Each entry must be either an integer or
  // a range. If not specified, this rule applies to connections through any
  // port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"].
  repeated string ports = 2;
}

message FirewallPolicyRuleSecureTag {
  // Name of the secure tag, created with TagManager's TagValue API.
  optional string name = 1;

  // [Output Only] State of the secure tag, either `EFFECTIVE` or `INEFFECTIVE`.
  // A secure tag is `INEFFECTIVE` when it is deleted or its network is deleted.
  // EFFECTIVE:
  // INEFFECTIVE:
  optional string state = 2;
}

// Encapsulates numeric value that can be either absolute or relative.
message FixedOrPercent {
  // [Output Only] Absolute value of VM instances calculated based on the
  // specific mode. - If the value is fixed, then the calculated value is equal
  // to the fixed value. - If the value is a percent, then the calculated value
  // is percent/100 * targetSize. For example, the calculated value of a 80% of
  // a managed instance group with 150 instances would be (80/100 * 150) = 120
  // VM instances. If there is a remainder, the number is rounded.
  optional int32 calculated = 1;

  // Specifies a fixed number of VM instances. This must be a positive integer.
  optional int32 fixed = 2;

  // Specifies a percentage of instances between 0 to 100%, inclusive. For
  // example, specify 80 for 80%.
  optional int32 percent = 3;
}

// Represents a Forwarding Rule resource. Forwarding rule resources in Google
// Cloud can be either regional or global in scope: *
// [Global](https://cloud.google.com/compute/docs/reference/rest/v1/globalForwardingRules)
// *
// [Regional](https://cloud.google.com/compute/docs/reference/rest/v1/forwardingRules)
// A forwarding rule and its corresponding IP address represent the frontend
// configuration of a Google Cloud Platform load balancer. Forwarding rules can
// also reference target instances and Cloud VPN Classic gateways
// (targetVpnGateway). For more information, read Forwarding rule concepts and
// Using protocol forwarding.
message ForwardingRule {
  // IP address for which this forwarding rule accepts traffic. When a client
  // sends traffic to this IP address, the forwarding rule directs the traffic
  // to the referenced target or backendService. While creating a forwarding
  // rule, specifying an IPAddress is required under the following
  // circumstances: - When the target is set to targetGrpcProxy and
  // validateForProxyless is set to true, the IPAddress should be set to
  // 0.0.0.0. - When the target is a Private Service Connect Google APIs bundle,
  // you must specify an IPAddress. Otherwise, you can optionally specify an IP
  // address that references an existing static (reserved) IP address resource.
  // When omitted, Google Cloud assigns an ephemeral IP address. Use one of the
  // following formats to specify an IP address while creating a forwarding
  // rule: * IP address number, as in `100.1.2.3` * IPv6 address range, as in
  // `2600:1234::/96` * Full resource URL, as in
  // https://www.googleapis.com/compute/v1/projects/
  // project_id/regions/region/addresses/address-name * Partial URL or by name,
  // as in: - projects/project_id/regions/region/addresses/address-name -
  // regions/region/addresses/address-name - global/addresses/address-name -
  // address-name The forwarding rule's target or backendService, and in most
  // cases, also the loadBalancingScheme, determine the type of IP address that
  // you can use. For detailed information, see [IP address
  // specifications](https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts#ip_address_specifications).
  // When reading an IPAddress, the API always returns the IP address number.
  optional string ip_address = 1;

  // The IP protocol to which this rule applies. For protocol forwarding, valid
  // options are TCP, UDP, ESP, AH, SCTP, ICMP and L3_DEFAULT. The valid IP
  // protocols are different for different load balancing products as described
  // in [Load balancing
  // features](https://cloud.google.com/load-balancing/docs/features#protocols_from_the_load_balancer_to_the_backends).
  // AH:
  // ESP:
  // ICMP:
  // L3_DEFAULT:
  // SCTP:
  // TCP:
  // UDP:
  optional string ip_protocol = 2;

  // This field can only be used: - If IPProtocol is one of TCP, UDP, or SCTP. -
  // By internal TCP/UDP load balancers, backend service-based network load
  // balancers, and internal and external protocol forwarding. Set this field to
  // true to allow packets addressed to any port or packets lacking destination
  // port information (for example, UDP fragments after the first fragment) to
  // be forwarded to the backends configured with this forwarding rule. The
  // ports, port_range, and allPorts fields are mutually exclusive.
  optional bool all_ports = 3;

  // This field is used along with the backend_service field for internal load
  // balancing or with the target field for internal TargetInstance. If the
  // field is set to TRUE, clients can access ILB from all regions. Otherwise
  // only allows access from clients in the same region as the internal load
  // balancer.
  optional bool allow_global_access = 4;

  // Identifies the backend service to which the forwarding rule sends traffic.
  // Required for Internal TCP/UDP Load Balancing and Network Load Balancing;
  // must be omitted for all other load balancer types.
  optional string backend_service = 5;

  // [Output Only] The URL for the corresponding base Forwarding Rule. By base
  // Forwarding Rule, we mean the Forwarding Rule that has the same IP address,
  // protocol, and port settings with the current Forwarding Rule, but without
  // sourceIPRanges specified. Always empty if the current Forwarding Rule does
  // not have sourceIPRanges specified.
  optional string base_forwarding_rule = 6;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 7;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 8;

  // Fingerprint of this resource. A hash of the contents stored in this object.
  // This field is used in optimistic locking. This field will be ignored when
  // inserting a ForwardingRule. Include the fingerprint in patch request to
  // ensure that you do not overwrite changes that were applied from another
  // concurrent request. To see the latest fingerprint, make a get() request to
  // retrieve a ForwardingRule.
  optional string fingerprint = 9;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 10;

  // The IP Version that will be used by this forwarding rule. Valid options are
  // IPV4 or IPV6.
  // IPV4:
  // IPV6:
  // UNSPECIFIED_VERSION:
  optional string ip_version = 11;

  // Indicates whether or not this load balancer can be used as a collector for
  // packet mirroring. To prevent mirroring loops, instances behind this load
  // balancer will not have their traffic mirrored even if a PacketMirroring
  // rule applies to them. This can only be set to true for load balancers that
  // have their loadBalancingScheme set to INTERNAL.
  optional bool is_mirroring_collector = 12;

  // [Output Only] Type of the resource. Always compute#forwardingRule for
  // Forwarding Rule resources.
  optional string kind = 13;

  // A fingerprint for the labels being applied to this resource, which is
  // essentially a hash of the labels set used for optimistic locking. The
  // fingerprint is initially generated by Compute Engine and changes after
  // every request to modify or update labels. You must always provide an
  // up-to-date fingerprint hash in order to update or change labels, otherwise
  // the request will fail with error 412 conditionNotMet. To see the latest
  // fingerprint, make a get() request to retrieve a ForwardingRule.
  optional string label_fingerprint = 14;

  // Labels for this resource. These can only be added or modified by the
  // setLabels method. Each label key/value pair must comply with RFC1035. Label
  // values may be empty.
  map<string, string> labels = 15;

  // Specifies the forwarding rule type. For more information about forwarding
  // rules, refer to Forwarding rule concepts.
  // EXTERNAL:
  // EXTERNAL_MANAGED:
  // INTERNAL:
  // INTERNAL_MANAGED:
  // INTERNAL_SELF_MANAGED:
  // INVALID:
  optional string load_balancing_scheme = 16;

  // Opaque filter criteria used by load balancer to restrict routing
  // configuration to a limited set of xDS compliant clients. In their xDS
  // requests to load balancer, xDS clients present node metadata. When there is
  // a match, the relevant configuration is made available to those proxies.
  // Otherwise, all the resources (e.g. TargetHttpProxy, UrlMap) referenced by
  // the ForwardingRule are not visible to those proxies. For each
  // metadataFilter in this list, if its filterMatchCriteria is set to
  // MATCH_ANY, at least one of the filterLabels must match the corresponding
  // label provided in the metadata. If its filterMatchCriteria is set to
  // MATCH_ALL, then all of its filterLabels must match with corresponding
  // labels provided in the metadata. If multiple metadataFilters are specified,
  // all of them need to be satisfied in order to be considered a match.
  // metadataFilters specified here will be applifed before those specified in
  // the UrlMap that this ForwardingRule references. metadataFilters only
  // applies to Loadbalancers that have their loadBalancingScheme set to
  // INTERNAL_SELF_MANAGED.
  repeated MetadataFilter metadata_filters = 17;

  // Name of the resource; provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash. For Private Service Connect forwarding rules that forward traffic to
  // Google APIs, the forwarding rule name must be a 1-20 characters string with
  // lowercase letters and numbers and must start with a letter.
  optional string name = 18;

  // This field is not used for external load balancing. For Internal TCP/UDP
  // Load Balancing, this field identifies the network that the load balanced IP
  // should belong to for this Forwarding Rule. If this field is not specified,
  // the default network will be used. For Private Service Connect forwarding
  // rules that forward traffic to Google APIs, a network must be provided.
  optional string network = 19;

  // This signifies the networking tier used for configuring this load balancer
  // and can only take the following values: PREMIUM, STANDARD. For regional
  // ForwardingRule, the valid values are PREMIUM and STANDARD. For
  // GlobalForwardingRule, the valid value is PREMIUM. If this field is not
  // specified, it is assumed to be PREMIUM. If IPAddress is specified, this
  // value must be equal to the networkTier of the Address.
  // FIXED_STANDARD: Public internet quality with fixed bandwidth.
  // PREMIUM: High quality, Google-grade network tier, support for all
  // networking products.
  // STANDARD: Public internet quality, only limited support for other
  // networking products.
  // STANDARD_OVERRIDES_FIXED_STANDARD: (Output only) Temporary tier for
  // FIXED_STANDARD when fixed standard tier is expired or not configured.
  optional string network_tier = 20;

  // This is used in PSC consumer ForwardingRule to control whether it should
  // try to auto-generate a DNS zone or not. Non-PSC forwarding rules do not use
  // this field.
  optional bool no_automate_dns_zone = 21;

  // This field can only be used: - If IPProtocol is one of TCP, UDP, or SCTP. -
  // By backend service-based network load balancers, target pool-based network
  // load balancers, internal proxy load balancers, external proxy load
  // balancers, Traffic Director, external protocol forwarding, and Classic VPN.
  // Some products have restrictions on what ports can be used. See port
  // specifications for details. Only packets addressed to ports in the
  // specified range will be forwarded to the backends configured with this
  // forwarding rule. The ports, port_range, and allPorts fields are mutually
  // exclusive. For external forwarding rules, two or more forwarding rules
  // cannot use the same [IPAddress, IPProtocol] pair, and cannot have
  // overlapping portRanges. For internal forwarding rules within the same VPC
  // network, two or more forwarding rules cannot use the same [IPAddress,
  // IPProtocol] pair, and cannot have overlapping portRanges. @pattern:
  // \\d+(?:-\\d+)?
  optional string port_range = 22;

  // This field can only be used: - If IPProtocol is one of TCP, UDP, or SCTP. -
  // By internal TCP/UDP load balancers, backend service-based network load
  // balancers, and internal protocol forwarding. You can specify a list of up
  // to five ports by number, separated by commas. The ports can be contiguous
  // or discontiguous. Only packets addressed to these ports will be forwarded
  // to the backends configured with this forwarding rule. For external
  // forwarding rules, two or more forwarding rules cannot use the same
  // [IPAddress, IPProtocol] pair, and cannot share any values defined in ports.
  // For internal forwarding rules within the same VPC network, two or more
  // forwarding rules cannot use the same [IPAddress, IPProtocol] pair, and
  // cannot share any values defined in ports. The ports, port_range, and
  // allPorts fields are mutually exclusive. @pattern: \\d+(?:-\\d+)?
  repeated string ports = 23;

  // [Output Only] The PSC connection id of the PSC Forwarding Rule.
  optional string psc_connection_id = 24;

  // ACCEPTED: The connection has been accepted by the producer.
  // CLOSED: The connection has been closed by the producer and will not serve
  // traffic going forward.
  // NEEDS_ATTENTION: The connection has been accepted by the producer, but the
  // producer needs to take further action before the forwarding rule can serve
  // traffic.
  // PENDING: The connection is pending acceptance by the producer.
  // REJECTED: The connection has been rejected by the producer.
  // STATUS_UNSPECIFIED:
  optional string psc_connection_status = 25;

  // [Output Only] URL of the region where the regional forwarding rule resides.
  // This field is not applicable to global forwarding rules. You must specify
  // this field as part of the HTTP request URL. It is not settable as a field
  // in the request body.
  optional string region = 26;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 27;

  // Service Directory resources to register this forwarding rule with.
  // Currently, only supports a single Service Directory resource.
  repeated ForwardingRuleServiceDirectoryRegistration
      service_directory_registrations = 28;

  // An optional prefix to the service name for this Forwarding Rule. If
  // specified, the prefix is the first label of the fully qualified service
  // name. The label must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the label must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash. This field is only used for internal load balancing.
  optional string service_label = 29;

  // [Output Only] The internal fully qualified service name for this Forwarding
  // Rule. This field is only used for internal load balancing.
  optional string service_name = 30;

  // If not empty, this Forwarding Rule will only forward the traffic when the
  // source IP address matches one of the IP addresses or CIDR ranges set here.
  // Note that a Forwarding Rule can only have up to 64 source IP ranges, and
  // this field can only be used with a regional Forwarding Rule whose scheme is
  // EXTERNAL. Each source_ip_range entry should be either an IP address (for
  // example, 1.2.3.4) or a CIDR range (for example, 1.2.3.0/24).
  repeated string source_ip_ranges = 31;

  // This field identifies the subnetwork that the load balanced IP should
  // belong to for this Forwarding Rule, used in internal load balancing and
  // network load balancing with IPv6. If the network specified is in auto
  // subnet mode, this field is optional. However, a subnetwork must be
  // specified if the network is in custom subnet mode or when creating external
  // forwarding rule with IPv6.
  optional string subnetwork = 32;

  // The URL of the target resource to receive the matched traffic. For regional
  // forwarding rules, this target must be in the same region as the forwarding
  // rule. For global forwarding rules, this target must be a global load
  // balancing resource. The forwarded traffic must be of a type appropriate to
  // the target object. - For load balancers, see the "Target" column in [Port
  // specifications](https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts#ip_address_specifications).
  // - For Private Service Connect forwarding rules that forward traffic to
  // Google APIs, provide the name of a supported Google API bundle: - vpc-sc -
  // APIs that support VPC Service Controls. - all-apis - All supported Google
  // APIs. - For Private Service Connect forwarding rules that forward traffic
  // to managed services, the target must be a service attachment.
  optional string target = 33;
}

message ForwardingRuleAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of ForwardingRulesScopedList resources.
  map<string, ForwardingRulesScopedList> items = 2;

  // [Output Only] Type of resource. Always compute#forwardingRuleAggregatedList
  // for lists of forwarding rules.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Contains a list of ForwardingRule resources.
message ForwardingRuleList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of ForwardingRule resources.
  repeated ForwardingRule items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message ForwardingRuleReference {
  optional string forwarding_rule = 1;
}

// Describes the auto-registration of the Forwarding Rule to Service Directory.
// The region and project of the Service Directory resource generated from this
// registration will be the same as this Forwarding Rule.
message ForwardingRuleServiceDirectoryRegistration {
  // Service Directory namespace to register the forwarding rule under.
  optional string namespace = 1;

  // Service Directory service to register the forwarding rule under.
  optional string service = 2;

  // [Optional] Service Directory region to register this global forwarding rule
  // under. Default to "us-central1". Only used for PSC for Google APIs. All PSC
  // for Google APIs Forwarding Rules on the same network should use the same
  // Service Directory region.
  optional string service_directory_region = 3;
}

message ForwardingRulesScopedList {
  // A list of forwarding rules contained in this scope.
  repeated ForwardingRule forwarding_rules = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // Informational warning which replaces the list of forwarding rules when the
  // list is empty.
  optional Warning warning = 2;
}

message GRPCHealthCheck {
  // The gRPC service name for the health check. This field is optional. The
  // value of grpc_service_name has the following meanings by convention: -
  // Empty service_name means the overall status of all services at the backend.
  // - Non-empty service_name means the health of that gRPC service, as defined
  // by the owner of the service. The grpc_service_name can only be ASCII.
  optional string grpc_service_name = 1;

  // The TCP port number to which the health check prober sends packets. Valid
  // values are 1 through 65535.
  optional int32 port = 2;

  // Not supported.
  optional string port_name = 3;

  // Specifies how a port is selected for health checking. Can be one of the
  // following values: USE_FIXED_PORT: Specifies a port number explicitly using
  // the port field in the health check. Supported by backend services for
  // pass-through load balancers and backend services for proxy load balancers.
  // Not supported by target pools. The health check supports all backends
  // supported by the backend service provided the backend can be health
  // checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT
  // network endpoint groups, and instance group backends. USE_NAMED_PORT: Not
  // supported. USE_SERVING_PORT: Provides an indirect method of specifying the
  // health check port by referring to the backend service. Only supported by
  // backend services for proxy load balancers. Not supported by target pools.
  // Not supported by backend services for pass-through load balancers. Supports
  // all backends that can be health checked; for example, GCE_VM_IP_PORT
  // network endpoint groups and instance group backends. For GCE_VM_IP_PORT
  // network endpoint group backends, the health check uses the port number
  // specified for each endpoint in the network endpoint group. For instance
  // group backends, the health check uses the port number determined by looking
  // up the backend service's named port in the instance group's list of named
  // ports.
  // USE_FIXED_PORT: The port number in the health check's port is used for
  // health checking. Applies to network endpoint group and instance group
  // backends.
  // USE_NAMED_PORT: Not supported.
  // USE_SERVING_PORT: For network endpoint group backends, the health check
  // uses the port number specified on each endpoint in the network endpoint
  // group. For instance group backends, the health check uses the port number
  // specified for the backend service's named port defined in the instance
  // group's named ports.
  optional string port_specification = 4;
}

message GlobalNetworkEndpointGroupsAttachEndpointsRequest {
  // The list of network endpoints to be attached.
  repeated NetworkEndpoint network_endpoints = 1;
}

message GlobalNetworkEndpointGroupsDetachEndpointsRequest {
  // The list of network endpoints to be detached.
  repeated NetworkEndpoint network_endpoints = 1;
}

message GlobalOrganizationSetPolicyRequest {
  // Flatten Policy to create a backward compatible wire-format. Deprecated. Use
  // 'policy' to specify bindings.
  repeated Binding bindings = 1;

  // Flatten Policy to create a backward compatible wire-format. Deprecated. Use
  // 'policy' to specify the etag.
  optional string etag = 2;

  // REQUIRED: The complete policy to be applied to the 'resource'. The size of
  // the policy is limited to a few 10s of KB. An empty policy is in general a
  // valid policy but certain services (like Projects) might reject them.
  optional Policy policy = 3;
}

message GlobalSetLabelsRequest {
  // The fingerprint of the previous set of labels for this resource, used to
  // detect conflicts. The fingerprint is initially generated by Compute Engine
  // and changes after every request to modify or update labels. You must always
  // provide an up-to-date fingerprint hash when updating or changing labels,
  // otherwise the request will fail with error 412 conditionNotMet. Make a
  // get() request to the resource to get the latest fingerprint.
  optional string label_fingerprint = 1;

  // A list of labels to apply for this resource. Each label must comply with
  // the requirements for labels. For example, "webserver-frontend": "images". A
  // label value can also be empty (e.g. "my-label": "").
  map<string, string> labels = 2;
}

message GlobalSetPolicyRequest {
  // Flatten Policy to create a backward compatible wire-format. Deprecated. Use
  // 'policy' to specify bindings.
  repeated Binding bindings = 1;

  // Flatten Policy to create a backward compatible wire-format. Deprecated. Use
  // 'policy' to specify the etag.
  optional string etag = 2;

  // REQUIRED: The complete policy to be applied to the 'resource'. The size of
  // the policy is limited to a few 10s of KB. An empty policy is in general a
  // valid policy but certain services (like Projects) might reject them.
  optional Policy policy = 3;
}

// A guest attributes entry.
message GuestAttributes {
  // [Output Only] Type of the resource. Always compute#guestAttributes for
  // guest attributes entry.
  optional string kind = 1;

  // The path to be queried. This can be the default namespace ('') or a nested
  // namespace ('\/') or a specified key ('\/\').
  optional string query_path = 2;

  // [Output Only] The value of the requested queried path.
  optional GuestAttributesValue query_value = 3;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 4;

  // The key to search for.
  optional string variable_key = 5;

  // [Output Only] The value found for the requested key.
  optional string variable_value = 6;
}

// A guest attributes namespace/key/value entry.
message GuestAttributesEntry {
  // Key for the guest attribute entry.
  optional string key = 1;

  // Namespace for the guest attribute entry.
  optional string namespace = 2;

  // Value for the guest attribute entry.
  optional string value = 3;
}

// Array of guest attribute namespace/key/value tuples.
message GuestAttributesValue {
  repeated GuestAttributesEntry items = 1;
}

// Guest OS features.
message GuestOsFeature {
  // The ID of a supported feature. To add multiple values, use commas to
  // separate values. Set to one or more of the following values: -
  // VIRTIO_SCSI_MULTIQUEUE - WINDOWS - MULTI_IP_SUBNET - UEFI_COMPATIBLE -
  // GVNIC - SEV_CAPABLE - SUSPEND_RESUME_COMPATIBLE - SEV_SNP_CAPABLE For more
  // information, see Enabling guest operating system features.
  // FEATURE_TYPE_UNSPECIFIED:
  // GVNIC:
  // MULTI_IP_SUBNET:
  // SECURE_BOOT:
  // SEV_CAPABLE:
  // SEV_SNP_CAPABLE:
  // UEFI_COMPATIBLE:
  // VIRTIO_SCSI_MULTIQUEUE:
  // WINDOWS:
  optional string type = 1;
}

message HTTP2HealthCheck {
  // The value of the host header in the HTTP/2 health check request. If left
  // empty (default value), the host header is set to the destination IP address
  // to which health check packets are sent. The destination IP address depends
  // on the type of load balancer. For details, see:
  // https://cloud.google.com/load-balancing/docs/health-check-concepts#hc-packet-dest
  optional string host = 1;

  // The TCP port number to which the health check prober sends packets. The
  // default value is 443. Valid values are 1 through 65535.
  optional int32 port = 2;

  // Not supported.
  optional string port_name = 3;

  // Specifies how a port is selected for health checking. Can be one of the
  // following values: USE_FIXED_PORT: Specifies a port number explicitly using
  // the port field in the health check. Supported by backend services for
  // pass-through load balancers and backend services for proxy load balancers.
  // Not supported by target pools. The health check supports all backends
  // supported by the backend service provided the backend can be health
  // checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT
  // network endpoint groups, and instance group backends. USE_NAMED_PORT: Not
  // supported. USE_SERVING_PORT: Provides an indirect method of specifying the
  // health check port by referring to the backend service. Only supported by
  // backend services for proxy load balancers. Not supported by target pools.
  // Not supported by backend services for pass-through load balancers. Supports
  // all backends that can be health checked; for example, GCE_VM_IP_PORT
  // network endpoint groups and instance group backends. For GCE_VM_IP_PORT
  // network endpoint group backends, the health check uses the port number
  // specified for each endpoint in the network endpoint group. For instance
  // group backends, the health check uses the port number determined by looking
  // up the backend service's named port in the instance group's list of named
  // ports.
  // USE_FIXED_PORT: The port number in the health check's port is used for
  // health checking. Applies to network endpoint group and instance group
  // backends.
  // USE_NAMED_PORT: Not supported.
  // USE_SERVING_PORT: For network endpoint group backends, the health check
  // uses the port number specified on each endpoint in the network endpoint
  // group. For instance group backends, the health check uses the port number
  // specified for the backend service's named port defined in the instance
  // group's named ports.
  optional string port_specification = 4;

  // Specifies the type of proxy header to append before sending data to the
  // backend, either NONE or PROXY_V1. The default is NONE.
  // NONE:
  // PROXY_V1:
  optional string proxy_header = 5;

  // The request path of the HTTP/2 health check request. The default value is
  // /.
  optional string request_path = 6;

  // Creates a content-based HTTP/2 health check. In addition to the required
  // HTTP 200 (OK) status code, you can configure the health check to pass only
  // when the backend sends this specific ASCII response string within the first
  // 1024 bytes of the HTTP response body. For details, see:
  // https://cloud.google.com/load-balancing/docs/health-check-concepts#criteria-protocol-http
  optional string response = 7;
}

message HTTPHealthCheck {
  // The value of the host header in the HTTP health check request. If left
  // empty (default value), the host header is set to the destination IP address
  // to which health check packets are sent. The destination IP address depends
  // on the type of load balancer. For details, see:
  // https://cloud.google.com/load-balancing/docs/health-check-concepts#hc-packet-dest
  optional string host = 1;

  // The TCP port number to which the health check prober sends packets. The
  // default value is 80. Valid values are 1 through 65535.
  optional int32 port = 2;

  // Not supported.
  optional string port_name = 3;

  // Specifies how a port is selected for health checking. Can be one of the
  // following values: USE_FIXED_PORT: Specifies a port number explicitly using
  // the port field in the health check. Supported by backend services for
  // pass-through load balancers and backend services for proxy load balancers.
  // Also supported in legacy HTTP health checks for target pools. The health
  // check supports all backends supported by the backend service provided the
  // backend can be health checked. For example, GCE_VM_IP network endpoint
  // groups, GCE_VM_IP_PORT network endpoint groups, and instance group
  // backends. USE_NAMED_PORT: Not supported. USE_SERVING_PORT: Provides an
  // indirect method of specifying the health check port by referring to the
  // backend service. Only supported by backend services for proxy load
  // balancers. Not supported by target pools. Not supported by backend services
  // for pass-through load balancers. Supports all backends that can be health
  // checked; for example, GCE_VM_IP_PORT network endpoint groups and instance
  // group backends. For GCE_VM_IP_PORT network endpoint group backends, the
  // health check uses the port number specified for each endpoint in the
  // network endpoint group. For instance group backends, the health check uses
  // the port number determined by looking up the backend service's named port
  // in the instance group's list of named ports.
  // USE_FIXED_PORT: The port number in the health check's port is used for
  // health checking. Applies to network endpoint group and instance group
  // backends.
  // USE_NAMED_PORT: Not supported.
  // USE_SERVING_PORT: For network endpoint group backends, the health check
  // uses the port number specified on each endpoint in the network endpoint
  // group. For instance group backends, the health check uses the port number
  // specified for the backend service's named port defined in the instance
  // group's named ports.
  optional string port_specification = 4;

  // Specifies the type of proxy header to append before sending data to the
  // backend, either NONE or PROXY_V1. The default is NONE.
  // NONE:
  // PROXY_V1:
  optional string proxy_header = 5;

  // The request path of the HTTP health check request. The default value is /.
  optional string request_path = 6;

  // Creates a content-based HTTP health check. In addition to the required HTTP
  // 200 (OK) status code, you can configure the health check to pass only when
  // the backend sends this specific ASCII response string within the first 1024
  // bytes of the HTTP response body. For details, see:
  // https://cloud.google.com/load-balancing/docs/health-check-concepts#criteria-protocol-http
  optional string response = 7;
}

message HTTPSHealthCheck {
  // The value of the host header in the HTTPS health check request. If left
  // empty (default value), the host header is set to the destination IP address
  // to which health check packets are sent. The destination IP address depends
  // on the type of load balancer. For details, see:
  // https://cloud.google.com/load-balancing/docs/health-check-concepts#hc-packet-dest
  optional string host = 1;

  // The TCP port number to which the health check prober sends packets. The
  // default value is 443. Valid values are 1 through 65535.
  optional int32 port = 2;

  // Not supported.
  optional string port_name = 3;

  // Specifies how a port is selected for health checking. Can be one of the
  // following values: USE_FIXED_PORT: Specifies a port number explicitly using
  // the port field in the health check. Supported by backend services for
  // pass-through load balancers and backend services for proxy load balancers.
  // Not supported by target pools. The health check supports all backends
  // supported by the backend service provided the backend can be health
  // checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT
  // network endpoint groups, and instance group backends. USE_NAMED_PORT: Not
  // supported. USE_SERVING_PORT: Provides an indirect method of specifying the
  // health check port by referring to the backend service. Only supported by
  // backend services for proxy load balancers. Not supported by target pools.
  // Not supported by backend services for pass-through load balancers. Supports
  // all backends that can be health checked; for example, GCE_VM_IP_PORT
  // network endpoint groups and instance group backends. For GCE_VM_IP_PORT
  // network endpoint group backends, the health check uses the port number
  // specified for each endpoint in the network endpoint group. For instance
  // group backends, the health check uses the port number determined by looking
  // up the backend service's named port in the instance group's list of named
  // ports.
  // USE_FIXED_PORT: The port number in the health check's port is used for
  // health checking. Applies to network endpoint group and instance group
  // backends.
  // USE_NAMED_PORT: Not supported.
  // USE_SERVING_PORT: For network endpoint group backends, the health check
  // uses the port number specified on each endpoint in the network endpoint
  // group. For instance group backends, the health check uses the port number
  // specified for the backend service's named port defined in the instance
  // group's named ports.
  optional string port_specification = 4;

  // Specifies the type of proxy header to append before sending data to the
  // backend, either NONE or PROXY_V1. The default is NONE.
  // NONE:
  // PROXY_V1:
  optional string proxy_header = 5;

  // The request path of the HTTPS health check request. The default value is /.
  optional string request_path = 6;

  // Creates a content-based HTTPS health check. In addition to the required
  // HTTP 200 (OK) status code, you can configure the health check to pass only
  // when the backend sends this specific ASCII response string within the first
  // 1024 bytes of the HTTP response body. For details, see:
  // https://cloud.google.com/load-balancing/docs/health-check-concepts#criteria-protocol-http
  optional string response = 7;
}

// Represents a Health Check resource. Google Compute Engine has two Health
// Check resources: * [Global](/compute/docs/reference/rest/v1/healthChecks) *
// [Regional](/compute/docs/reference/rest/v1/regionHealthChecks) Internal
// HTTP(S) load balancers must use regional health checks
// (`compute.v1.regionHealthChecks`). Traffic Director must use global health
// checks (`compute.v1.HealthChecks`). Internal TCP/UDP load balancers can use
// either regional or global health checks (`compute.v1.regionHealthChecks` or
// `compute.v1.HealthChecks`). External HTTP(S), TCP proxy, and SSL proxy load
// balancers as well as managed instance group auto-healing must use global
// health checks (`compute.v1.HealthChecks`). Backend service-based network load
// balancers must use regional health checks (`compute.v1.regionHealthChecks`).
// Target pool-based network load balancers must use legacy HTTP health checks
// (`compute.v1.httpHealthChecks`). For more information, see Health checks
// overview.
message HealthCheck {
  // How often (in seconds) to send a health check. The default value is 5
  // seconds.
  optional int32 check_interval_sec = 1;

  // [Output Only] Creation timestamp in 3339 text format.
  optional string creation_timestamp = 2;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 3;

  optional GRPCHealthCheck grpc_health_check = 4;

  // A so-far unhealthy instance will be marked healthy after this many
  // consecutive successes. The default value is 2.
  optional int32 healthy_threshold = 5;

  optional HTTP2HealthCheck http2_health_check = 6;

  optional HTTPHealthCheck http_health_check = 7;

  optional HTTPSHealthCheck https_health_check = 8;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 9;

  // Type of the resource.
  optional string kind = 10;

  // Configure logging on this health check.
  optional HealthCheckLogConfig log_config = 11;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035. For
  // example, a name that is 1-63 characters long, matches the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?`, and otherwise complies with
  // RFC1035. This regular expression describes a name where the first character
  // is a lowercase letter, and all following characters are a dash, lowercase
  // letter, or digit, except the last character, which isn't a dash.
  optional string name = 12;

  // [Output Only] Region where the health check resides. Not applicable to
  // global health checks.
  optional string region = 13;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 14;

  optional SSLHealthCheck ssl_health_check = 15;

  optional TCPHealthCheck tcp_health_check = 16;

  // How long (in seconds) to wait before claiming failure. The default value is
  // 5 seconds. It is invalid for timeoutSec to have greater value than
  // checkIntervalSec.
  optional int32 timeout_sec = 17;

  // Specifies the type of the healthCheck, either TCP, SSL, HTTP, HTTPS, HTTP2
  // or GRPC. Exactly one of the protocol-specific health check fields must be
  // specified, which must match type field.
  // GRPC:
  // HTTP:
  // HTTP2:
  // HTTPS:
  // INVALID:
  // SSL:
  // TCP:
  optional string type = 18;

  // A so-far healthy instance will be marked unhealthy after this many
  // consecutive failures. The default value is 2.
  optional int32 unhealthy_threshold = 19;
}

// Contains a list of HealthCheck resources.
message HealthCheckList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of HealthCheck resources.
  repeated HealthCheck items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// Configuration of logging on a health check. If logging is enabled, logs will
// be exported to Stackdriver.
message HealthCheckLogConfig {
  // Indicates whether or not to export logs. This is false by default, which
  // means no health check logging will be done.
  optional bool enable = 1;
}

// A full or valid partial URL to a health check. For example, the following are
// valid URLs: -
// https://www.googleapis.com/compute/beta/projects/project-id/global/httpHealthChecks/health-check
// - projects/project-id/global/httpHealthChecks/health-check -
// global/httpHealthChecks/health-check
message HealthCheckReference {
  optional string health_check = 1;
}

// Represents a Health-Check as a Service resource.
message HealthCheckService {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 2;

  // Fingerprint of this resource. A hash of the contents stored in this object.
  // This field is used in optimistic locking. This field will be ignored when
  // inserting a HealthCheckService. An up-to-date fingerprint must be provided
  // in order to patch/update the HealthCheckService; Otherwise, the request
  // will fail with error 412 conditionNotMet. To see the latest fingerprint,
  // make a get() request to retrieve the HealthCheckService.
  optional string fingerprint = 3;

  // A list of URLs to the HealthCheck resources. Must have at least one
  // HealthCheck, and not more than 10 for regional HealthCheckService, and not
  // more than 1 for global HealthCheckService. HealthCheck resources must have
  // portSpecification=USE_SERVING_PORT or portSpecification=USE_FIXED_PORT. For
  // regional HealthCheckService, the HealthCheck must be regional and in the
  // same region. For global HealthCheckService, HealthCheck must be global. Mix
  // of regional and global HealthChecks is not supported. Multiple regional
  // HealthChecks must belong to the same region. Regional HealthChecks must
  // belong to the same region as zones of NetworkEndpointGroups. For global
  // HealthCheckService using global INTERNET_IP_PORT NetworkEndpointGroups, the
  // global HealthChecks must specify sourceRegions, and HealthChecks that
  // specify sourceRegions can only be used with global INTERNET_IP_PORT
  // NetworkEndpointGroups.
  repeated string health_checks = 4;

  // Optional. Policy for how the results from multiple health checks for the
  // same endpoint are aggregated. Defaults to NO_AGGREGATION if unspecified. -
  // NO_AGGREGATION. An EndpointHealth message is returned for each pair in the
  // health check service. - AND. If any health check of an endpoint reports
  // UNHEALTHY, then UNHEALTHY is the HealthState of the endpoint. If all health
  // checks report HEALTHY, the HealthState of the endpoint is HEALTHY. . This
  // is only allowed with regional HealthCheckService.
  // AND: If any backend's health check reports UNHEALTHY, then UNHEALTHY is the
  // HealthState of the entire health check service. If all backend's are
  // healthy, the HealthState of the health check service is HEALTHY.
  // NO_AGGREGATION: An EndpointHealth message is returned for each backend in
  // the health check service.
  optional string health_status_aggregation_policy = 5;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 6;

  // [Output only] Type of the resource. Always compute#healthCheckServicefor
  // health check services.
  optional string kind = 7;

  // Name of the resource. The name must be 1-63 characters long, and comply
  // with RFC1035. Specifically, the name must be 1-63 characters long and match
  // the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
  // character must be a lowercase letter, and all following characters must be
  // a dash, lowercase letter, or digit, except the last character, which cannot
  // be a dash.
  optional string name = 8;

  // A list of URLs to the NetworkEndpointGroup resources. Must not have more
  // than 100. For regional HealthCheckService, NEGs must be in zones in the
  // region of the HealthCheckService. For global HealthCheckServices, the
  // NetworkEndpointGroups must be global INTERNET_IP_PORT.
  repeated string network_endpoint_groups = 9;

  // A list of URLs to the NotificationEndpoint resources. Must not have more
  // than 10. A list of endpoints for receiving notifications of change in
  // health status. For regional HealthCheckService, NotificationEndpoint must
  // be regional and in the same region. For global HealthCheckService,
  // NotificationEndpoint must be global.
  repeated string notification_endpoints = 10;

  // [Output Only] URL of the region where the health check service resides.
  // This field is not applicable to global health check services. You must
  // specify this field as part of the HTTP request URL. It is not settable as a
  // field in the request body.
  optional string region = 11;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 12;
}

// A full or valid partial URL to a health check service. For example, the
// following are valid URLs: -
// https://www.googleapis.com/compute/beta/projects/project-id/regions/us-west1/healthCheckServices/health-check-service
// -
// projects/project-id/regions/us-west1/healthCheckServices/health-check-service
// - regions/us-west1/healthCheckServices/health-check-service
message HealthCheckServiceReference {
  optional string health_check_service = 1;
}

message HealthCheckServicesList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of HealthCheckService resources.
  repeated HealthCheckService items = 2;

  // [Output Only] Type of the resource. Always compute#healthCheckServicesList
  // for lists of HealthCheckServices.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message HealthChecksAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of HealthChecksScopedList resources.
  map<string, HealthChecksScopedList> items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

message HealthChecksScopedList {
  // A list of HealthChecks contained in this scope.
  repeated HealthCheck health_checks = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // Informational warning which replaces the list of backend services when the
  // list is empty.
  optional Warning warning = 2;
}

message HealthStatus {
  // Metadata defined as annotations for network endpoint.
  map<string, string> annotations = 1;

  // URL of the forwarding rule associated with the health status of the
  // instance.
  optional string forwarding_rule = 2;

  // A forwarding rule IP address assigned to this instance.
  optional string forwarding_rule_ip = 3;

  // Health state of the instance.
  // HEALTHY:
  // UNHEALTHY:
  optional string health_state = 4;

  // URL of the instance resource.
  optional string instance = 5;

  // For target pool based Network Load Balancing, it indicates the forwarding
  // rule's IP address assigned to this instance. For other types of load
  // balancing, the field indicates VM internal ip.
  optional string ip_address = 6;

  // The named port of the instance group, not necessarily the port that is
  // health-checked.
  optional int32 port = 7;

  optional string weight = 8;

  // INVALID_WEIGHT: The response to a Health Check probe had the HTTP response
  // header field X-Load-Balancing-Endpoint-Weight, but its content was invalid
  // (i.e., not a non-negative single-precision floating-point number in decimal
  // string representation).
  // MISSING_WEIGHT: The response to a Health Check probe did not have the HTTP
  // response header field X-Load-Balancing-Endpoint-Weight.
  // UNAVAILABLE_WEIGHT: This is the value when the accompanied health status is
  // either TIMEOUT (i.e.,the Health Check probe was not able to get a response
  // in time) or UNKNOWN. For the latter, it should be typically because there
  // has not been sufficient time to parse and report the weight for a new
  // backend (which is with 0.0.0.0 ip address). However, it can be also due to
  // an outage case for which the health status is explicitly reset to UNKNOWN.
  // WEIGHT_NONE: This is the default value when WeightReportMode is DISABLE,
  // and is also the initial value when WeightReportMode has just updated to
  // ENABLE or DRY_RUN and there has not been sufficient time to parse and
  // report the backend weight.
  optional string weight_error = 9;
}

message HealthStatusForNetworkEndpoint {
  // URL of the backend service associated with the health state of the network
  // endpoint.
  optional BackendServiceReference backend_service = 1;

  // URL of the forwarding rule associated with the health state of the network
  // endpoint.
  optional ForwardingRuleReference forwarding_rule = 2;

  // URL of the health check associated with the health state of the network
  // endpoint.
  optional HealthCheckReference health_check = 3;

  // URL of the health check service associated with the health state of the
  // network endpoint.
  optional HealthCheckServiceReference health_check_service = 4;

  // Health state of the network endpoint determined based on the health checks
  // configured.
  // DRAINING:
  // HEALTHY:
  // UNHEALTHY:
  // UNKNOWN:
  optional string health_state = 5;
}

// Provides links to documentation or for performing an out of band action. For
// example, if a quota check failed with an error indicating the calling project
// hasn't enabled the accessed service, this can contain a URL pointing directly
// to the right place in the developer console to flip the bit.
message Help {
  // URL(s) pointing to additional information on handling the current error.
  repeated HelpLink links = 1;
}

// Describes a URL link.
message HelpLink {
  // Describes what the link offers.
  optional string description = 1;

  // The URL of the link.
  optional string url = 2;
}

// UrlMaps A host-matching rule for a URL. If matched, will use the named
// PathMatcher to select the BackendService.
message HostRule {
  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 1;

  // The list of host patterns to match. They must be valid hostnames with
  // optional port numbers in the format host:port. * matches any string of
  // ([a-z0-9-.]*). In that case, * must be the first character, and if followed
  // by anything, the immediate following character must be either - or .. *
  // based matching is not supported when the URL map is bound to a target gRPC
  // proxy that has the validateForProxyless field set to true.
  repeated string hosts = 2;

  // The name of the PathMatcher to use to match the path portion of the URL if
  // the hostRule matches the URL's host portion.
  optional string path_matcher = 3;
}

// Specification for how requests are aborted as part of fault injection.
message HttpFaultAbort {
  // The HTTP status code used to abort the request. The value must be from 200
  // to 599 inclusive. For gRPC protocol, the gRPC status code is mapped to HTTP
  // status code according to this mapping table. HTTP status 200 is mapped to
  // gRPC status UNKNOWN. Injecting an OK status is currently not supported by
  // Traffic Director.
  optional uint32 http_status = 1;

  // The percentage of traffic for connections, operations, or requests that is
  // aborted as part of fault injection. The value must be from 0.0 to 100.0
  // inclusive.
  optional double percentage = 2;
}

// Specifies the delay introduced by the load balancer before forwarding the
// request to the backend service as part of fault injection.
message HttpFaultDelay {
  // Specifies the value of the fixed delay interval.
  optional Duration fixed_delay = 1;

  // The percentage of traffic for connections, operations, or requests for
  // which a delay is introduced as part of fault injection. The value must be
  // from 0.0 to 100.0 inclusive.
  optional double percentage = 2;
}

// The specification for fault injection introduced into traffic to test the
// resiliency of clients to backend service failure. As part of fault injection,
// when clients send requests to a backend service, delays can be introduced by
// the load balancer on a percentage of requests before sending those request to
// the backend service. Similarly requests from clients can be aborted by the
// load balancer for a percentage of requests.
message HttpFaultInjection {
  // The specification for how client requests are aborted as part of fault
  // injection.
  optional HttpFaultAbort abort = 1;

  // The specification for how client requests are delayed as part of fault
  // injection, before being sent to a backend service.
  optional HttpFaultDelay delay = 2;
}

// The request and response header transformations that take effect before the
// request is passed along to the selected backendService.
message HttpHeaderAction {
  // Headers to add to a matching request before forwarding the request to the
  // backendService.
  repeated HttpHeaderOption request_headers_to_add = 1;

  // A list of header names for headers that need to be removed from the request
  // before forwarding the request to the backendService.
  repeated string request_headers_to_remove = 2;

  // Headers to add the response before sending the response back to the client.
  repeated HttpHeaderOption response_headers_to_add = 3;

  // A list of header names for headers that need to be removed from the
  // response before sending the response back to the client.
  repeated string response_headers_to_remove = 4;
}

// matchRule criteria for request header matches.
message HttpHeaderMatch {
  // The value should exactly match contents of exactMatch. Only one of
  // exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or
  // rangeMatch must be set.
  optional string exact_match = 1;

  // The name of the HTTP header to match. For matching against the HTTP
  // request's authority, use a headerMatch with the header name ":authority".
  // For matching a request's method, use the headerName ":method". When the URL
  // map is bound to a target gRPC proxy that has the validateForProxyless field
  // set to true, only non-binary user-specified custom metadata and the
  // `content-type` header are supported. The following transport-level headers
  // cannot be used in header matching rules: `:authority`, `:method`, `:path`,
  // `:scheme`, `user-agent`, `accept-encoding`, `content-encoding`,
  // `grpc-accept-encoding`, `grpc-encoding`, `grpc-previous-rpc-attempts`,
  // `grpc-tags-bin`, `grpc-timeout` and `grpc-trace-bin`.
  optional string header_name = 2;

  // If set to false, the headerMatch is considered a match if the preceding
  // match criteria are met. If set to true, the headerMatch is considered a
  // match if the preceding match criteria are NOT met. The default setting is
  // false.
  optional bool invert_match = 3;

  // The value of the header must start with the contents of prefixMatch. Only
  // one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or
  // rangeMatch must be set.
  optional string prefix_match = 4;

  // A header with the contents of headerName must exist. The match takes place
  // whether or not the request's header has a value. Only one of exactMatch,
  // prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be
  // set.
  optional bool present_match = 5;

  // The header value must be an integer and its value must be in the range
  // specified in rangeMatch. If the header does not contain an integer, number
  // or is empty, the match fails. For example for a range [-5, 0] - -3 will
  // match. - 0 will not match. - 0.25 will not match. - -3someString will not
  // match. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch,
  // presentMatch or rangeMatch must be set. rangeMatch is not supported for
  // load balancers that have loadBalancingScheme set to EXTERNAL.
  optional Int64RangeMatch range_match = 6;

  // The value of the header must match the regular expression specified in
  // regexMatch. For more information about regular expression syntax, see
  // Syntax. For matching against a port specified in the HTTP request, use a
  // headerMatch with headerName set to PORT and a regular expression that
  // satisfies the RFC2616 Host header's port specifier. Only one of exactMatch,
  // prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be
  // set. Regular expressions can only be used when the loadBalancingScheme is
  // set to INTERNAL_SELF_MANAGED.
  optional string regex_match = 7;

  // The value of the header must end with the contents of suffixMatch. Only one
  // of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or
  // rangeMatch must be set.
  optional string suffix_match = 8;
}

// Specification determining how headers are added to requests or responses.
message HttpHeaderOption {
  // The name of the header.
  optional string header_name = 1;

  // The value of the header to add.
  optional string header_value = 2;

  // If false, headerValue is appended to any values that already exist for the
  // header. If true, headerValue is set for the header, discarding any values
  // that were set for that header. The default value is false.
  optional bool replace = 3;
}

// Represents a legacy HTTP Health Check resource. Legacy HTTP health checks are
// now only required by target pool-based network load balancers. For all other
// load balancers, including backend service-based network load balancers, and
// for managed instance group auto-healing, you must use modern (non-legacy)
// health checks. For more information, see Health checks overview .
message HttpHealthCheck {
  // How often (in seconds) to send a health check. The default value is 5
  // seconds.
  optional int32 check_interval_sec = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 2;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 3;

  // A so-far unhealthy instance will be marked healthy after this many
  // consecutive successes. The default value is 2.
  optional int32 healthy_threshold = 4;

  // The value of the host header in the HTTP health check request. If left
  // empty (default value), the public IP on behalf of which this health check
  // is performed will be used.
  optional string host = 5;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 6;

  // [Output Only] Type of the resource. Always compute#httpHealthCheck for HTTP
  // health checks.
  optional string kind = 7;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 8;

  // The TCP port number for the HTTP health check request. The default value is
  // 80.
  optional int32 port = 9;

  // The request path of the HTTP health check request. The default value is /.
  // This field does not support query parameters.
  optional string request_path = 10;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 11;

  // How long (in seconds) to wait before claiming failure. The default value is
  // 5 seconds. It is invalid for timeoutSec to have greater value than
  // checkIntervalSec.
  optional int32 timeout_sec = 12;

  // A so-far healthy instance will be marked unhealthy after this many
  // consecutive failures. The default value is 2.
  optional int32 unhealthy_threshold = 13;
}

// Contains a list of HttpHealthCheck resources.
message HttpHealthCheckList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of HttpHealthCheck resources.
  repeated HttpHealthCheck items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// HttpRouteRuleMatch criteria for a request's query parameter.
message HttpQueryParameterMatch {
  // The queryParameterMatch matches if the value of the parameter exactly
  // matches the contents of exactMatch. Only one of presentMatch, exactMatch,
  // or regexMatch must be set.
  optional string exact_match = 1;

  // The name of the query parameter to match. The query parameter must exist in
  // the request, in the absence of which the request match fails.
  optional string name = 2;

  // Specifies that the queryParameterMatch matches if the request contains the
  // query parameter, irrespective of whether the parameter has a value or not.
  // Only one of presentMatch, exactMatch, or regexMatch must be set.
  optional bool present_match = 3;

  // The queryParameterMatch matches if the value of the parameter matches the
  // regular expression specified by regexMatch. For more information about
  // regular expression syntax, see Syntax. Only one of presentMatch,
  // exactMatch, or regexMatch must be set. Regular expressions can only be used
  // when the loadBalancingScheme is set to INTERNAL_SELF_MANAGED.
  optional string regex_match = 4;
}

// Specifies settings for an HTTP redirect.
message HttpRedirectAction {
  // The host that is used in the redirect response instead of the one that was
  // supplied in the request. The value must be from 1 to 255 characters.
  optional string host_redirect = 1;

  // If set to true, the URL scheme in the redirected request is set to HTTPS.
  // If set to false, the URL scheme of the redirected request remains the same
  // as that of the request. This must only be set for URL maps used in
  // TargetHttpProxys. Setting this true for TargetHttpsProxy is not permitted.
  // The default is set to false.
  optional bool https_redirect = 2;

  // The path that is used in the redirect response instead of the one that was
  // supplied in the request. pathRedirect cannot be supplied together with
  // prefixRedirect. Supply one alone or neither. If neither is supplied, the
  // path of the original request is used for the redirect. The value must be
  // from 1 to 1024 characters.
  optional string path_redirect = 3;

  // The prefix that replaces the prefixMatch specified in the
  // HttpRouteRuleMatch, retaining the remaining portion of the URL before
  // redirecting the request. prefixRedirect cannot be supplied together with
  // pathRedirect. Supply one alone or neither. If neither is supplied, the path
  // of the original request is used for the redirect. The value must be from 1
  // to 1024 characters.
  optional string prefix_redirect = 4;

  // The HTTP Status code to use for this RedirectAction. Supported values are:
  // - MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to
  // 301. - FOUND, which corresponds to 302. - SEE_OTHER which corresponds to
  // 303. - TEMPORARY_REDIRECT, which corresponds to 307. In this case, the
  // request method is retained. - PERMANENT_REDIRECT, which corresponds to 308.
  // In this case, the request method is retained.
  // FOUND: Http Status Code 302 - Found.
  // MOVED_PERMANENTLY_DEFAULT: Http Status Code 301 - Moved Permanently.
  // PERMANENT_REDIRECT: Http Status Code 308 - Permanent Redirect maintaining
  // HTTP method.
  // SEE_OTHER: Http Status Code 303 - See Other.
  // TEMPORARY_REDIRECT: Http Status Code 307 - Temporary Redirect maintaining
  // HTTP method.
  optional string redirect_response_code = 5;

  // If set to true, any accompanying query portion of the original URL is
  // removed before redirecting the request. If set to false, the query portion
  // of the original URL is retained. The default is set to false.
  optional bool strip_query = 6;
}

// The retry policy associates with HttpRouteRule
message HttpRetryPolicy {
  // Specifies the allowed number retries. This number must be > 0. If not
  // specified, defaults to 1.
  optional uint32 num_retries = 1;

  // Specifies a non-zero timeout per retry attempt. If not specified, will use
  // the timeout set in the HttpRouteAction field. If timeout in the
  // HttpRouteAction field is not set, this field uses the largest timeout among
  // all backend services associated with the route. Not supported when the URL
  // map is bound to a target gRPC proxy that has the validateForProxyless field
  // set to true.
  optional Duration per_try_timeout = 2;

  // Specifies one or more conditions when this retry policy applies. Valid
  // values are: - 5xx: retry is attempted if the instance or endpoint responds
  // with any 5xx response code, or if the instance or endpoint does not respond
  // at all. For example, disconnects, reset, read timeout, connection failure,
  // and refused streams. - gateway-error: Similar to 5xx, but only applies to
  // response codes 502, 503 or 504. - connect-failure: a retry is attempted on
  // failures connecting to the instance or endpoint. For example, connection
  // timeouts. - retriable-4xx: a retry is attempted if the instance or endpoint
  // responds with a 4xx response code. The only error that you can retry is
  // error code 409. - refused-stream: a retry is attempted if the instance or
  // endpoint resets the stream with a REFUSED_STREAM error code. This reset
  // type indicates that it is safe to retry. - cancelled: a retry is attempted
  // if the gRPC status code in the response header is set to cancelled. -
  // deadline-exceeded: a retry is attempted if the gRPC status code in the
  // response header is set to deadline-exceeded. - internal: a retry is
  // attempted if the gRPC status code in the response header is set to
  // internal. - resource-exhausted: a retry is attempted if the gRPC status
  // code in the response header is set to resource-exhausted. - unavailable: a
  // retry is attempted if the gRPC status code in the response header is set to
  // unavailable. Only the following codes are supported when the URL map is
  // bound to target gRPC proxy that has validateForProxyless field set to true.
  // - cancelled - deadline-exceeded - internal - resource-exhausted -
  // unavailable
  repeated string retry_conditions = 3;
}

message HttpRouteAction {
  // The specification for allowing client-side cross-origin requests. For more
  // information about the W3C recommendation for cross-origin resource sharing
  // (CORS), see Fetch API Living Standard. Not supported when the URL map is
  // bound to a target gRPC proxy.
  optional CorsPolicy cors_policy = 1;

  // The specification for fault injection introduced into traffic to test the
  // resiliency of clients to backend service failure. As part of fault
  // injection, when clients send requests to a backend service, delays can be
  // introduced by a load balancer on a percentage of requests before sending
  // those requests to the backend service. Similarly requests from clients can
  // be aborted by the load balancer for a percentage of requests. timeout and
  // retry_policy is ignored by clients that are configured with a
  // fault_injection_policy if: 1. The traffic is generated by fault injection
  // AND 2. The fault injection is not a delay fault injection. Fault injection
  // is not supported with the global external HTTP(S) load balancer (classic).
  // To see which load balancers support fault injection, see Load balancing:
  // Routing and traffic management features.
  optional HttpFaultInjection fault_injection_policy = 2;

  // Specifies the maximum duration (timeout) for streams on the selected route.
  // Unlike the timeout field where the timeout duration starts from the time
  // the request has been fully processed (known as *end-of-stream*), the
  // duration in this field is computed from the beginning of the stream until
  // the response has been processed, including all retries. A stream that does
  // not complete in this duration is closed. If not specified, this field uses
  // the maximum maxStreamDuration value among all backend services associated
  // with the route. This field is only allowed if the Url map is used with
  // backend services with loadBalancingScheme set to INTERNAL_SELF_MANAGED.
  optional Duration max_stream_duration = 3;

  // Specifies the policy on how requests intended for the route's backends are
  // shadowed to a separate mirrored backend service. The load balancer does not
  // wait for responses from the shadow service. Before sending traffic to the
  // shadow service, the host / authority header is suffixed with -shadow. Not
  // supported when the URL map is bound to a target gRPC proxy that has the
  // validateForProxyless field set to true.
  optional RequestMirrorPolicy request_mirror_policy = 4;

  // Specifies the retry policy associated with this route.
  optional HttpRetryPolicy retry_policy = 5;

  // Specifies the timeout for the selected route. Timeout is computed from the
  // time the request has been fully processed (known as *end-of-stream*) up
  // until the response has been processed. Timeout includes all retries. If not
  // specified, this field uses the largest timeout among all backend services
  // associated with the route. Not supported when the URL map is bound to a
  // target gRPC proxy that has validateForProxyless field set to true.
  optional Duration timeout = 6;

  // The spec to modify the URL of the request, before forwarding the request to
  // the matched service. urlRewrite is the only action supported in UrlMaps for
  // external HTTP(S) load balancers. Not supported when the URL map is bound to
  // a target gRPC proxy that has the validateForProxyless field set to true.
  optional UrlRewrite url_rewrite = 7;

  // A list of weighted backend services to send traffic to when a route match
  // occurs. The weights determine the fraction of traffic that flows to their
  // corresponding backend service. If all traffic needs to go to a single
  // backend service, there must be one weightedBackendService with weight set
  // to a non-zero number. After a backend service is identified and before
  // forwarding the request to the backend service, advanced routing actions
  // such as URL rewrites and header transformations are applied depending on
  // additional settings specified in this HttpRouteAction.
  repeated WeightedBackendService weighted_backend_services = 8;
}

// The HttpRouteRule setting specifies how to match an HTTP request and the
// corresponding routing action that load balancing proxies perform.
message HttpRouteRule {
  // The short description conveying the intent of this routeRule. The
  // description can have a maximum length of 1024 characters.
  optional string description = 1;

  // Specifies changes to request and response headers that need to take effect
  // for the selected backendService. The headerAction value specified here is
  // applied before the matching pathMatchers[].headerAction and after
  // pathMatchers[].routeRules[].routeAction.weightedBackendService.backendServiceWeightAction[].headerAction
  // HeaderAction is not supported for load balancers that have their
  // loadBalancingScheme set to EXTERNAL. Not supported when the URL map is
  // bound to a target gRPC proxy that has validateForProxyless field set to
  // true.
  optional HttpHeaderAction header_action = 2;

  // The list of criteria for matching attributes of a request to this
  // routeRule. This list has OR semantics: the request matches this routeRule
  // when any of the matchRules are satisfied. However predicates within a given
  // matchRule have AND semantics. All predicates within a matchRule must match
  // for the request to match the rule.
  repeated HttpRouteRuleMatch match_rules = 3;

  // For routeRules within a given pathMatcher, priority determines the order in
  // which a load balancer interprets routeRules. RouteRules are evaluated in
  // order of priority, from the lowest to highest number. The priority of a
  // rule decreases as its number increases (1, 2, 3, N+1). The first rule that
  // matches the request is applied. You cannot configure two or more routeRules
  // with the same priority. Priority for each rule must be set to a number from
  // 0 to 2147483647 inclusive. Priority numbers can have gaps, which enable you
  // to add or remove rules in the future without affecting the rest of the
  // rules. For example, 1, 2, 3, 4, 5, 9, 12, 16 is a valid series of priority
  // numbers to which you could add rules numbered from 6 to 8, 10 to 11, and 13
  // to 15 in the future without any impact on existing rules.
  optional int32 priority = 4;

  // In response to a matching matchRule, the load balancer performs advanced
  // routing actions, such as URL rewrites and header transformations, before
  // forwarding the request to the selected backend. If routeAction specifies
  // any weightedBackendServices, service must not be set. Conversely if service
  // is set, routeAction cannot contain any weightedBackendServices. Only one of
  // urlRedirect, service or routeAction.weightedBackendService must be set. URL
  // maps for Classic external HTTP(S) load balancers only support the
  // urlRewrite action within a route rule's routeAction.
  optional HttpRouteAction route_action = 5;

  // The full or partial URL of the backend service resource to which traffic is
  // directed if this rule is matched. If routeAction is also specified,
  // advanced routing actions, such as URL rewrites, take effect before sending
  // the request to the backend. However, if service is specified, routeAction
  // cannot contain any weightedBackendServices. Conversely, if routeAction
  // specifies any weightedBackendServices, service must not be specified. Only
  // one of urlRedirect, service or routeAction.weightedBackendService must be
  // set.
  optional string service = 6;

  // When this rule is matched, the request is redirected to a URL specified by
  // urlRedirect. If urlRedirect is specified, service or routeAction must not
  // be set. Not supported when the URL map is bound to a target gRPC proxy.
  optional HttpRedirectAction url_redirect = 7;
}

// HttpRouteRuleMatch specifies a set of criteria for matching requests to an
// HttpRouteRule. All specified criteria must be satisfied for a match to occur.
message HttpRouteRuleMatch {
  // For satisfying the matchRule condition, the path of the request must
  // exactly match the value specified in fullPathMatch after removing any query
  // parameters and anchor that may be part of the original URL. fullPathMatch
  // must be from 1 to 1024 characters. Only one of prefixMatch, fullPathMatch
  // or regexMatch must be specified.
  optional string full_path_match = 1;

  // Specifies a list of header match criteria, all of which must match
  // corresponding headers in the request.
  repeated HttpHeaderMatch header_matches = 2;

  // Specifies that prefixMatch and fullPathMatch matches are case sensitive.
  // The default value is false. ignoreCase must not be used with regexMatch.
  // Not supported when the URL map is bound to a target gRPC proxy.
  optional bool ignore_case = 3;

  // Opaque filter criteria used by the load balancer to restrict routing
  // configuration to a limited set of xDS compliant clients. In their xDS
  // requests to the load balancer, xDS clients present node metadata. When
  // there is a match, the relevant routing configuration is made available to
  // those proxies. For each metadataFilter in this list, if its
  // filterMatchCriteria is set to MATCH_ANY, at least one of the filterLabels
  // must match the corresponding label provided in the metadata. If its
  // filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must
  // match with corresponding labels provided in the metadata. If multiple
  // metadata filters are specified, all of them need to be satisfied in order
  // to be considered a match. metadataFilters specified here is applied after
  // those specified in ForwardingRule that refers to the UrlMap this
  // HttpRouteRuleMatch belongs to. metadataFilters only applies to load
  // balancers that have loadBalancingScheme set to INTERNAL_SELF_MANAGED. Not
  // supported when the URL map is bound to a target gRPC proxy that has
  // validateForProxyless field set to true.
  repeated MetadataFilter metadata_filters = 4;

  // For satisfying the matchRule condition, the request's path must begin with
  // the specified prefixMatch. prefixMatch must begin with a /. The value must
  // be from 1 to 1024 characters. Only one of prefixMatch, fullPathMatch or
  // regexMatch must be specified.
  optional string prefix_match = 5;

  // Specifies a list of query parameter match criteria, all of which must match
  // corresponding query parameters in the request. Not supported when the URL
  // map is bound to a target gRPC proxy.
  repeated HttpQueryParameterMatch query_parameter_matches = 6;

  // For satisfying the matchRule condition, the path of the request must
  // satisfy the regular expression specified in regexMatch after removing any
  // query parameters and anchor supplied with the original URL. For more
  // information about regular expression syntax, see Syntax. Only one of
  // prefixMatch, fullPathMatch or regexMatch must be specified. Regular
  // expressions can only be used when the loadBalancingScheme is set to
  // INTERNAL_SELF_MANAGED.
  optional string regex_match = 7;
}

// Represents a legacy HTTPS Health Check resource. Legacy HTTPS health checks
// have been deprecated. If you are using a target pool-based network load
// balancer, you must use a legacy HTTP (not HTTPS) health check. For all other
// load balancers, including backend service-based network load balancers, and
// for managed instance group auto-healing, you must use modern (non-legacy)
// health checks. For more information, see Health checks overview .
message HttpsHealthCheck {
  // How often (in seconds) to send a health check. The default value is 5
  // seconds.
  optional int32 check_interval_sec = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 2;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 3;

  // A so-far unhealthy instance will be marked healthy after this many
  // consecutive successes. The default value is 2.
  optional int32 healthy_threshold = 4;

  // The value of the host header in the HTTPS health check request. If left
  // empty (default value), the public IP on behalf of which this health check
  // is performed will be used.
  optional string host = 5;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 6;

  // Type of the resource.
  optional string kind = 7;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 8;

  // The TCP port number for the HTTPS health check request. The default value
  // is 443.
  optional int32 port = 9;

  // The request path of the HTTPS health check request. The default value is
  // "/".
  optional string request_path = 10;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 11;

  // How long (in seconds) to wait before claiming failure. The default value is
  // 5 seconds. It is invalid for timeoutSec to have a greater value than
  // checkIntervalSec.
  optional int32 timeout_sec = 12;

  // A so-far healthy instance will be marked unhealthy after this many
  // consecutive failures. The default value is 2.
  optional int32 unhealthy_threshold = 13;
}

// Contains a list of HttpsHealthCheck resources.
message HttpsHealthCheckList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of HttpsHealthCheck resources.
  repeated HttpsHealthCheck items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// Represents an Image resource. You can use images to create boot disks for
// your VM instances. For more information, read Images.
message Image {
  // The architecture of the image. Valid values are ARM64 or X86_64.
  // ARCHITECTURE_UNSPECIFIED: Default value indicating Architecture is not set.
  // ARM64: Machines with architecture ARM64
  // X86_64: Machines with architecture X86_64
  optional string architecture = 1;

  // Size of the image tar.gz archive stored in Google Cloud Storage (in bytes).
  optional string archive_size_bytes = 2;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 3;

  // The deprecation status associated with this image.
  optional DeprecationStatus deprecated = 4;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 5;

  // Size of the image when restored onto a persistent disk (in GB).
  optional string disk_size_gb = 6;

  // The name of the image family to which this image belongs. The image family
  // name can be from a publicly managed image family provided by Compute
  // Engine, or from a custom image family you create. For example,
  // centos-stream-9 is a publicly available image family. For more information,
  // see Image family best practices. When creating disks, you can specify an
  // image family instead of a specific image name. The image family always
  // returns its latest image that is not deprecated. The name of the image
  // family must comply with RFC1035.
  optional string family = 7;

  // A list of features to enable on the guest operating system. Applicable only
  // for bootable images. To see a list of available options, see the
  // guestOSfeatures[].type parameter.
  repeated GuestOsFeature guest_os_features = 8;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 9;

  // Encrypts the image using a customer-supplied encryption key. After you
  // encrypt an image with a customer-supplied key, you must provide the same
  // key if you use the image later (e.g. to create a disk from the image).
  // Customer-supplied encryption keys do not protect access to metadata of the
  // disk. If you do not provide an encryption key when creating the image, then
  // the disk will be encrypted using an automatically generated key and you do
  // not need to provide a key to use the image later.
  optional CustomerEncryptionKey image_encryption_key = 10;

  // [Output Only] Type of the resource. Always compute#image for images.
  optional string kind = 11;

  // A fingerprint for the labels being applied to this image, which is
  // essentially a hash of the labels used for optimistic locking. The
  // fingerprint is initially generated by Compute Engine and changes after
  // every request to modify or update labels. You must always provide an
  // up-to-date fingerprint hash in order to update or change labels, otherwise
  // the request will fail with error 412 conditionNotMet. To see the latest
  // fingerprint, make a get() request to retrieve an image.
  optional string label_fingerprint = 12;

  // Labels to apply to this image. These can be later modified by the setLabels
  // method.
  map<string, string> labels = 13;

  // Integer license codes indicating which licenses are attached to this image.
  repeated string license_codes = 14;

  // Any applicable license URI.
  repeated string licenses = 15;

  // Name of the resource; provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 16;

  message RawDisk {
    // The format used to encode and transmit the block device, which should be
    // TAR. This is just a container and transmission format and not a runtime
    // format. Provided by the client when the disk image is created.
    // TAR:
    optional string container_type = 1;

    // [Deprecated] This field is deprecated. An optional SHA1 checksum of the
    // disk image before unpackaging provided by the client when the disk image
    // is created.
    optional string sha1_checksum = 2;

    // The full Google Cloud Storage URL where the raw disk image archive is
    // stored. The following are valid formats for the URL: -
    // https://storage.googleapis.com/bucket_name/image_archive_name -
    // https://storage.googleapis.com/bucket_name/folder_name/
    // image_archive_name In order to create an image, you must provide the full
    // or partial URL of one of the following: - The rawDisk.source URL - The
    // sourceDisk URL - The sourceImage URL - The sourceSnapshot URL
    optional string source = 3;
  }

  // The parameters of the raw disk image.
  optional RawDisk raw_disk = 17;

  // [Output Only] Reserved for future use.
  optional bool satisfies_pzs = 18;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 19;

  // Set the secure boot keys of shielded instance.
  optional InitialStateConfig shielded_instance_initial_state = 20;

  // URL of the source disk used to create this image. For example, the
  // following are valid values: -
  // https://www.googleapis.com/compute/v1/projects/project/zones/zone
  // /disks/disk - projects/project/zones/zone/disks/disk -
  // zones/zone/disks/disk In order to create an image, you must provide the
  // full or partial URL of one of the following: - The rawDisk.source URL - The
  // sourceDisk URL - The sourceImage URL - The sourceSnapshot URL
  optional string source_disk = 21;

  // The customer-supplied encryption key of the source disk. Required if the
  // source disk is protected by a customer-supplied encryption key.
  optional CustomerEncryptionKey source_disk_encryption_key = 22;

  // [Output Only] The ID value of the disk used to create this image. This
  // value may be used to determine whether the image was taken from the current
  // or a previous instance of a given disk name.
  optional string source_disk_id = 23;

  // URL of the source image used to create this image. The following are valid
  // formats for the URL: -
  // https://www.googleapis.com/compute/v1/projects/project_id/global/
  // images/image_name - projects/project_id/global/images/image_name In order
  // to create an image, you must provide the full or partial URL of one of the
  // following: - The rawDisk.source URL - The sourceDisk URL - The sourceImage
  // URL - The sourceSnapshot URL
  optional string source_image = 24;

  // The customer-supplied encryption key of the source image. Required if the
  // source image is protected by a customer-supplied encryption key.
  optional CustomerEncryptionKey source_image_encryption_key = 25;

  // [Output Only] The ID value of the image used to create this image. This
  // value may be used to determine whether the image was taken from the current
  // or a previous instance of a given image name.
  optional string source_image_id = 26;

  // URL of the source snapshot used to create this image. The following are
  // valid formats for the URL: -
  // https://www.googleapis.com/compute/v1/projects/project_id/global/
  // snapshots/snapshot_name -
  // projects/project_id/global/snapshots/snapshot_name In order to create an
  // image, you must provide the full or partial URL of one of the following: -
  // The rawDisk.source URL - The sourceDisk URL - The sourceImage URL - The
  // sourceSnapshot URL
  optional string source_snapshot = 27;

  // The customer-supplied encryption key of the source snapshot. Required if
  // the source snapshot is protected by a customer-supplied encryption key.
  optional CustomerEncryptionKey source_snapshot_encryption_key = 28;

  // [Output Only] The ID value of the snapshot used to create this image. This
  // value may be used to determine whether the snapshot was taken from the
  // current or a previous instance of a given snapshot name.
  optional string source_snapshot_id = 29;

  // The type of the image used to create this disk. The default and only valid
  // value is RAW.
  // RAW:
  optional string source_type = 30;

  // [Output Only] The status of the image. An image can be used to create other
  // resources, such as instances, only after the image has been successfully
  // created and the status is set to READY. Possible values are FAILED,
  // PENDING, or READY.
  // DELETING: Image is deleting.
  // FAILED: Image creation failed due to an error.
  // PENDING: Image hasn't been created as yet.
  // READY: Image has been successfully created.
  optional string status = 31;

  // Cloud Storage bucket storage location of the image (regional or
  // multi-regional).
  repeated string storage_locations = 32;
}

message ImageFamilyView {
  // The latest image that is part of the specified image family in the
  // requested location, and that is not deprecated.
  optional Image image = 1;
}

// Contains a list of images.
message ImageList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of Image resources.
  repeated Image items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// Initial State for shielded instance, these are public keys which are safe to
// store in public
message InitialStateConfig {
  // The Key Database (db).
  repeated FileContentBuffer dbs = 1;

  // The forbidden key database (dbx).
  repeated FileContentBuffer dbxs = 2;

  // The Key Exchange Key (KEK).
  repeated FileContentBuffer keks = 3;

  // The Platform Key (PK).
  optional FileContentBuffer pk = 4;
}

// Represents an Instance resource. An instance is a virtual machine that is
// hosted on Google Cloud Platform. For more information, read Virtual Machine
// Instances.
message Instance {
  // Controls for advanced machine-related behavior features.
  optional AdvancedMachineFeatures advanced_machine_features = 1;

  // Allows this instance to send and receive packets with non-matching
  // destination or source IPs. This is required if you plan to use this
  // instance to forward routes. For more information, see Enabling IP
  // Forwarding .
  optional bool can_ip_forward = 2;

  optional ConfidentialInstanceConfig confidential_instance_config = 3;

  // [Output Only] The CPU platform used by this instance.
  optional string cpu_platform = 4;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 5;

  // Whether the resource should be protected against deletion.
  optional bool deletion_protection = 6;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 7;

  // Array of disks associated with this instance. Persistent disks must be
  // created before you can assign them.
  repeated AttachedDisk disks = 8;

  // Enables display device for the instance.
  optional DisplayDevice display_device = 9;

  // Specifies a fingerprint for this resource, which is essentially a hash of
  // the instance's contents and used for optimistic locking. The fingerprint is
  // initially generated by Compute Engine and changes after every request to
  // modify or update the instance. You must always provide an up-to-date
  // fingerprint hash in order to update the instance. To see the latest
  // fingerprint, make get() request to the instance.
  optional string fingerprint = 10;

  // A list of the type and count of accelerator cards attached to the instance.
  repeated AcceleratorConfig guest_accelerators = 11;

  // Specifies the hostname of the instance. The specified hostname must be
  // RFC1035 compliant. If hostname is not specified, the default hostname is
  // [INSTANCE_NAME].c.[PROJECT_ID].internal when using the global DNS, and
  // [INSTANCE_NAME].[ZONE].c.[PROJECT_ID].internal when using zonal DNS.
  optional string hostname = 12;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 13;

  // KeyRevocationActionType of the instance. Supported options are "STOP" and
  // "NONE". The default value is "NONE" if it is not specified.
  // KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED: Default value. This value is
  // unused.
  // NONE: Indicates user chose no operation.
  // STOP: Indicates user chose to opt for VM shutdown on key revocation.
  optional string key_revocation_action_type = 14;

  // [Output Only] Type of the resource. Always compute#instance for instances.
  optional string kind = 15;

  // A fingerprint for this request, which is essentially a hash of the label's
  // contents and used for optimistic locking. The fingerprint is initially
  // generated by Compute Engine and changes after every request to modify or
  // update labels. You must always provide an up-to-date fingerprint hash in
  // order to update or change labels. To see the latest fingerprint, make get()
  // request to the instance.
  optional string label_fingerprint = 16;

  // Labels to apply to this instance. These can be later modified by the
  // setLabels method.
  map<string, string> labels = 17;

  // [Output Only] Last start timestamp in RFC3339 text format.
  optional string last_start_timestamp = 18;

  // [Output Only] Last stop timestamp in RFC3339 text format.
  optional string last_stop_timestamp = 19;

  // [Output Only] Last suspended timestamp in RFC3339 text format.
  optional string last_suspended_timestamp = 20;

  // Full or partial URL of the machine type resource to use for this instance,
  // in the format: zones/zone/machineTypes/machine-type. This is provided by
  // the client when the instance is created. For example, the following is a
  // valid partial url to a predefined machine type:
  // zones/us-central1-f/machineTypes/n1-standard-1 To create a custom machine
  // type, provide a URL to a machine type in the following format, where CPUS
  // is 1 or an even number up to 32 (2, 4, 6, ... 24, etc), and MEMORY is the
  // total memory for this instance. Memory must be a multiple of 256 MB and
  // must be supplied in MB (e.g. 5 GB of memory is 5120 MB):
  // zones/zone/machineTypes/custom-CPUS-MEMORY For example:
  // zones/us-central1-f/machineTypes/custom-4-5120 For a full list of
  // restrictions, read the Specifications for custom machine types.
  optional string machine_type = 21;

  // The metadata key/value pairs assigned to this instance. This includes
  // custom metadata and predefined keys.
  optional Metadata metadata = 22;

  // Specifies a minimum CPU platform for the VM instance. Applicable values are
  // the friendly names of CPU platforms, such as minCpuPlatform: "Intel
  // Haswell" or minCpuPlatform: "Intel Sandy Bridge".
  optional string min_cpu_platform = 23;

  // The name of the resource, provided by the client when initially creating
  // the resource. The resource name must be 1-63 characters long, and comply
  // with RFC1035. Specifically, the name must be 1-63 characters long and match
  // the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
  // character must be a lowercase letter, and all following characters must be
  // a dash, lowercase letter, or digit, except the last character, which cannot
  // be a dash.
  optional string name = 24;

  // An array of network configurations for this instance. These specify how
  // interfaces are configured to interact with other network services, such as
  // connecting to the internet. Multiple interfaces are supported per instance.
  repeated NetworkInterface network_interfaces = 25;

  optional NetworkPerformanceConfig network_performance_config = 26;

  // Input only. [Input Only] Additional params passed with the request, but not
  // persisted as part of resource payload.
  optional InstanceParams params = 27;

  // The private IPv6 google access type for the VM. If not specified, use
  // INHERIT_FROM_SUBNETWORK as default.
  // ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE: Bidirectional private IPv6 access
  // to/from Google services. If specified, the subnetwork who is attached to
  // the instance's default network interface will be assigned an internal IPv6
  // prefix if it doesn't have before.
  // ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE: Outbound private IPv6 access from VMs
  // in this subnet to Google services. If specified, the subnetwork who is
  // attached to the instance's default network interface will be assigned an
  // internal IPv6 prefix if it doesn't have before.
  // INHERIT_FROM_SUBNETWORK: Each network interface inherits
  // PrivateIpv6GoogleAccess from its subnetwork.
  optional string private_ipv6_google_access = 28;

  // Specifies the reservations that this instance can consume from.
  optional ReservationAffinity reservation_affinity = 29;

  // Resource policies applied to this instance.
  repeated string resource_policies = 30;

  // [Output Only] Specifies values set for instance attributes as compared to
  // the values requested by user in the corresponding input only field.
  optional ResourceStatus resource_status = 31;

  // [Output Only] Reserved for future use.
  optional bool satisfies_pzs = 32;

  // Sets the scheduling options for this instance.
  optional Scheduling scheduling = 33;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 34;

  // A list of service accounts, with their specified scopes, authorized for
  // this instance. Only one service account per VM instance is supported.
  // Service accounts generate access tokens that can be accessed through the
  // metadata server and used to authenticate applications on the instance. See
  // Service Accounts for more information.
  repeated ServiceAccount service_accounts = 35;

  optional ShieldedInstanceConfig shielded_instance_config = 36;

  optional ShieldedInstanceIntegrityPolicy shielded_instance_integrity_policy =
      37;

  // Source machine image
  optional string source_machine_image = 38;

  // Source machine image encryption key when creating an instance from a
  // machine image.
  optional CustomerEncryptionKey source_machine_image_encryption_key = 39;

  // [Output Only] Whether a VM has been restricted for start because Compute
  // Engine has detected suspicious activity.
  optional bool start_restricted = 40;

  // [Output Only] The status of the instance. One of the following values:
  // PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, REPAIRING,
  // and TERMINATED. For more information about the status of the instance, see
  // Instance life cycle.
  // DEPROVISIONING: The Nanny is halted and we are performing tear down tasks
  // like network deprogramming, releasing quota, IP, tearing down disks etc.
  // PROVISIONING: Resources are being allocated for the instance.
  // REPAIRING: The instance is in repair.
  // RUNNING: The instance is running.
  // STAGING: All required resources have been allocated and the instance is
  // being started.
  // STOPPED: The instance has stopped successfully.
  // STOPPING: The instance is currently stopping (either being deleted or
  // killed).
  // SUSPENDED: The instance has suspended.
  // SUSPENDING: The instance is suspending.
  // TERMINATED: The instance has stopped (either by explicit action or
  // underlying failure).
  optional string status = 41;

  // [Output Only] An optional, human-readable explanation of the status.
  optional string status_message = 42;

  // Tags to apply to this instance. Tags are used to identify valid sources or
  // targets for network firewalls and are specified by the client during
  // instance creation. The tags can be later modified by the setTags method.
  // Each tag within the list must comply with RFC1035. Multiple tags can be
  // specified via the 'tags.items' field.
  optional Tags tags = 43;

  // [Output Only] URL of the zone where the instance resides. You must specify
  // this field as part of the HTTP request URL. It is not settable as a field
  // in the request body.
  optional string zone = 44;
}

message InstanceAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // An object that contains a list of instances scoped by zone.
  map<string, InstancesScopedList> items = 2;

  // [Output Only] Type of resource. Always compute#instanceAggregatedList for
  // aggregated lists of Instance resources.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

message InstanceConsumptionData {
  // Resources consumed by the instance.
  optional InstanceConsumptionInfo consumption_info = 1;

  // Server-defined URL for the instance.
  optional string instance = 2;
}

message InstanceConsumptionInfo {
  // The number of virtual CPUs that are available to the instance.
  optional int32 guest_cpus = 1;

  // The amount of local SSD storage available to the instance, defined in GiB.
  optional int32 local_ssd_gb = 2;

  // The amount of physical memory available to the instance, defined in MiB.
  optional int32 memory_mb = 3;

  // The minimal guaranteed number of virtual CPUs that are reserved.
  optional int32 min_node_cpus = 4;
}

// Represents an Instance Group resource. Instance Groups can be used to
// configure a target for load balancing. Instance groups can either be managed
// or unmanaged. To create managed instance groups, use the instanceGroupManager
// or regionInstanceGroupManager resource instead. Use zonal unmanaged instance
// groups if you need to apply load balancing to groups of heterogeneous
// instances or if you need to manage the instances yourself. You cannot create
// regional unmanaged instance groups. For more information, read Instance
// groups.
message InstanceGroup {
  // [Output Only] The creation timestamp for this instance group in RFC3339
  // text format.
  optional string creation_timestamp = 1;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 2;

  // [Output Only] The fingerprint of the named ports. The system uses this
  // fingerprint to detect conflicts when multiple users change the named ports
  // concurrently.
  optional string fingerprint = 3;

  // [Output Only] A unique identifier for this instance group, generated by the
  // server.
  optional string id = 4;

  // [Output Only] The resource type, which is always compute#instanceGroup for
  // instance groups.
  optional string kind = 5;

  // The name of the instance group. The name must be 1-63 characters long, and
  // comply with RFC1035.
  optional string name = 6;

  //  Assigns a name to a port number. For example: {name: "http", port: 80}
  // This allows the system to reference ports by the assigned name instead of a
  // port number. Named ports can also contain multiple ports. For example:
  // [{name: "app1", port: 8080}, {name: "app1", port: 8081}, {name: "app2",
  // port: 8082}] Named ports apply to all instances in this instance group.
  repeated NamedPort named_ports = 7;

  // [Output Only] The URL of the network to which all instances in the instance
  // group belong. If your instance has multiple network interfaces, then the
  // network and subnetwork fields only refer to the network and subnet used by
  // your primary interface (nic0).
  optional string network = 8;

  // [Output Only] The URL of the region where the instance group is located
  // (for regional resources).
  optional string region = 9;

  // [Output Only] The URL for this instance group. The server generates this
  // URL.
  optional string self_link = 10;

  // [Output Only] The total number of instances in the instance group.
  optional int32 size = 11;

  // [Output Only] The URL of the subnetwork to which all instances in the
  // instance group belong. If your instance has multiple network interfaces,
  // then the network and subnetwork fields only refer to the network and subnet
  // used by your primary interface (nic0).
  optional string subnetwork = 12;

  // [Output Only] The URL of the zone where the instance group is located (for
  // zonal resources).
  optional string zone = 13;
}

message InstanceGroupAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of InstanceGroupsScopedList resources.
  map<string, InstanceGroupsScopedList> items = 2;

  // [Output Only] The resource type, which is always
  // compute#instanceGroupAggregatedList for aggregated lists of instance
  // groups.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// A list of InstanceGroup resources.
message InstanceGroupList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of InstanceGroup resources.
  repeated InstanceGroup items = 2;

  // [Output Only] The resource type, which is always compute#instanceGroupList
  // for instance group lists.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// Represents a Managed Instance Group resource. An instance group is a
// collection of VM instances that you can manage as a single entity. For more
// information, read Instance groups. For zonal Managed Instance Group, use the
// instanceGroupManagers resource. For regional Managed Instance Group, use the
// regionInstanceGroupManagers resource.
message InstanceGroupManager {
  // The autohealing policy for this managed instance group. You can specify
  // only one value.
  repeated InstanceGroupManagerAutoHealingPolicy auto_healing_policies = 1;

  // The base instance name to use for instances in this group. The value must
  // be 1-58 characters long. Instances are named by appending a hyphen and a
  // random four-character string to the base instance name. The base instance
  // name must comply with RFC1035.
  optional string base_instance_name = 2;

  // [Output Only] The creation timestamp for this managed instance group in
  // RFC3339 text format.
  optional string creation_timestamp = 3;

  // [Output Only] The list of instance actions and the number of instances in
  // this managed instance group that are scheduled for each of those actions.
  optional InstanceGroupManagerActionsSummary current_actions = 4;

  // An optional description of this resource.
  optional string description = 5;

  // Policy specifying the intended distribution of managed instances across
  // zones in a regional managed instance group.
  optional DistributionPolicy distribution_policy = 6;

  // Fingerprint of this resource. This field may be used in optimistic locking.
  // It will be ignored when inserting an InstanceGroupManager. An up-to-date
  // fingerprint must be provided in order to update the InstanceGroupManager,
  // otherwise the request will fail with error 412 conditionNotMet. To see the
  // latest fingerprint, make a get() request to retrieve an
  // InstanceGroupManager.
  optional string fingerprint = 7;

  // [Output Only] A unique identifier for this resource type. The server
  // generates this identifier.
  optional string id = 8;

  // [Output Only] The URL of the Instance Group resource.
  optional string instance_group = 9;

  // The URL of the instance template that is specified for this managed
  // instance group. The group uses this template to create all new instances in
  // the managed instance group. The templates for existing instances in the
  // group do not change unless you run recreateInstances, run
  // applyUpdatesToInstances, or set the group's updatePolicy.type to PROACTIVE.
  optional string instance_template = 10;

  // [Output Only] The resource type, which is always
  // compute#instanceGroupManager for managed instance groups.
  optional string kind = 11;

  // Pagination behavior of the listManagedInstances API method for this managed
  // instance group.
  // PAGELESS: (Default) Pagination is disabled for the group's
  // listManagedInstances API method. maxResults and pageToken query parameters
  // are ignored and all instances are returned in a single response.
  // PAGINATED: Pagination is enabled for the group's listManagedInstances API
  // method. maxResults and pageToken query parameters are respected.
  optional string list_managed_instances_results = 12;

  // The name of the managed instance group. The name must be 1-63 characters
  // long, and comply with RFC1035.
  optional string name = 13;

  // Named ports configured for the Instance Groups complementary to this
  // Instance Group Manager.
  repeated NamedPort named_ports = 14;

  // [Output Only] The URL of the region where the managed instance group
  // resides (for regional resources).
  optional string region = 15;

  // [Output Only] The URL for this managed instance group. The server defines
  // this URL.
  optional string self_link = 16;

  // Stateful configuration for this Instanced Group Manager
  optional StatefulPolicy stateful_policy = 17;

  // [Output Only] The status of this managed instance group.
  optional InstanceGroupManagerStatus status = 18;

  // The URLs for all TargetPool resources to which instances in the
  // instanceGroup field are added. The target pools automatically apply to all
  // of the instances in the managed instance group.
  repeated string target_pools = 19;

  // The target number of running instances for this managed instance group. You
  // can reduce this number by using the instanceGroupManager deleteInstances or
  // abandonInstances methods. Resizing the group also changes this number.
  optional int32 target_size = 20;

  // The update policy for this managed instance group.
  optional InstanceGroupManagerUpdatePolicy update_policy = 21;

  // Specifies the instance templates used by this managed instance group to
  // create instances. Each version is defined by an instanceTemplate and a
  // name. Every version can appear at most once per instance group. This field
  // overrides the top-level instanceTemplate field. Read more about the
  // relationships between these fields. Exactly one version must leave the
  // targetSize field unset. That version will be applied to all remaining
  // instances. For more information, read about canary updates.
  repeated InstanceGroupManagerVersion versions = 22;

  // [Output Only] The URL of a zone where the managed instance group is located
  // (for zonal resources).
  optional string zone = 23;
}

message InstanceGroupManagerActionsSummary {
  // [Output Only] The total number of instances in the managed instance group
  // that are scheduled to be abandoned. Abandoning an instance removes it from
  // the managed instance group without deleting it.
  optional int32 abandoning = 1;

  // [Output Only] The number of instances in the managed instance group that
  // are scheduled to be created or are currently being created. If the group
  // fails to create any of these instances, it tries again until it creates the
  // instance successfully. If you have disabled creation retries, this field
  // will not be populated; instead, the creatingWithoutRetries field will be
  // populated.
  optional int32 creating = 2;

  // [Output Only] The number of instances that the managed instance group will
  // attempt to create. The group attempts to create each instance only once. If
  // the group fails to create any of these instances, it decreases the group's
  // targetSize value accordingly.
  optional int32 creating_without_retries = 3;

  // [Output Only] The number of instances in the managed instance group that
  // are scheduled to be deleted or are currently being deleted.
  optional int32 deleting = 4;

  // [Output Only] The number of instances in the managed instance group that
  // are running and have no scheduled actions.
  optional int32 none = 5;

  // [Output Only] The number of instances in the managed instance group that
  // are scheduled to be recreated or are currently being being recreated.
  // Recreating an instance deletes the existing root persistent disk and
  // creates a new disk from the image that is defined in the instance template.
  optional int32 recreating = 6;

  // [Output Only] The number of instances in the managed instance group that
  // are being reconfigured with properties that do not require a restart or a
  // recreate action. For example, setting or removing target pools for the
  // instance.
  optional int32 refreshing = 7;

  // [Output Only] The number of instances in the managed instance group that
  // are scheduled to be restarted or are currently being restarted.
  optional int32 restarting = 8;

  // [Output Only] The number of instances in the managed instance group that
  // are scheduled to be resumed or are currently being resumed.
  optional int32 resuming = 9;

  // [Output Only] The number of instances in the managed instance group that
  // are scheduled to be started or are currently being started.
  optional int32 starting = 10;

  // [Output Only] The number of instances in the managed instance group that
  // are scheduled to be stopped or are currently being stopped.
  optional int32 stopping = 11;

  // [Output Only] The number of instances in the managed instance group that
  // are scheduled to be suspended or are currently being suspended.
  optional int32 suspending = 12;

  // [Output Only] The number of instances in the managed instance group that
  // are being verified. See the managedInstances[].currentAction property in
  // the listManagedInstances method documentation.
  optional int32 verifying = 13;
}

message InstanceGroupManagerAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of InstanceGroupManagersScopedList resources.
  map<string, InstanceGroupManagersScopedList> items = 2;

  // [Output Only] The resource type, which is always
  // compute#instanceGroupManagerAggregatedList for an aggregated list of
  // managed instance groups.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

message InstanceGroupManagerAutoHealingPolicy {
  // The URL for the health check that signals autohealing.
  optional string health_check = 1;

  // The number of seconds that the managed instance group waits before it
  // applies autohealing policies to new instances or recently recreated
  // instances. This initial delay allows instances to initialize and run their
  // startup scripts before the instance group determines that they are
  // UNHEALTHY. This prevents the managed instance group from recreating its
  // instances prematurely. This value must be from range [0, 3600].
  optional int32 initial_delay_sec = 2;
}

// [Output Only] A list of managed instance groups.
message InstanceGroupManagerList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of InstanceGroupManager resources.
  repeated InstanceGroupManager items = 2;

  // [Output Only] The resource type, which is always
  // compute#instanceGroupManagerList for a list of managed instance groups.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message InstanceGroupManagerStatus {
  // [Output Only] The URL of the Autoscaler that targets this instance group
  // manager.
  optional string autoscaler = 1;

  // [Output Only] A bit indicating whether the managed instance group is in a
  // stable state. A stable state means that: none of the instances in the
  // managed instance group is currently undergoing any type of change (for
  // example, creation, restart, or deletion); no future changes are scheduled
  // for instances in the managed instance group; and the managed instance group
  // itself is not being modified.
  optional bool is_stable = 2;

  // [Output Only] Stateful status of the given Instance Group Manager.
  optional InstanceGroupManagerStatusStateful stateful = 3;

  // [Output Only] A status of consistency of Instances' versions with their
  // target version specified by version field on Instance Group Manager.
  optional InstanceGroupManagerStatusVersionTarget version_target = 4;
}

message InstanceGroupManagerStatusStateful {
  // [Output Only] A bit indicating whether the managed instance group has
  // stateful configuration, that is, if you have configured any items in a
  // stateful policy or in per-instance configs. The group might report that it
  // has no stateful configuration even when there is still some preserved state
  // on a managed instance, for example, if you have deleted all PICs but not
  // yet applied those deletions.
  optional bool has_stateful_config = 1;

  // [Output Only] Status of per-instance configurations on the instance.
  optional InstanceGroupManagerStatusStatefulPerInstanceConfigs
      per_instance_configs = 2;
}

message InstanceGroupManagerStatusStatefulPerInstanceConfigs {
  // A bit indicating if all of the group's per-instance configurations (listed
  // in the output of a listPerInstanceConfigs API call) have status EFFECTIVE
  // or there are no per-instance-configs.
  optional bool all_effective = 1;
}

message InstanceGroupManagerStatusVersionTarget {
  // [Output Only] A bit indicating whether version target has been reached in
  // this managed instance group, i.e. all instances are in their target
  // version. Instances' target version are specified by version field on
  // Instance Group Manager.
  optional bool is_reached = 1;
}

message InstanceGroupManagerUpdatePolicy {
  // The instance redistribution policy for regional managed instance groups.
  // Valid values are: - PROACTIVE (default): The group attempts to maintain an
  // even distribution of VM instances across zones in the region. - NONE: For
  // non-autoscaled groups, proactive redistribution is disabled.
  // NONE: No action is being proactively performed in order to bring this IGM
  // to its target instance distribution.
  // PROACTIVE: This IGM will actively converge to its target instance
  // distribution.
  optional string instance_redistribution_type = 1;

  // The maximum number of instances that can be created above the specified
  // targetSize during the update process. This value can be either a fixed
  // number or, if the group has 10 or more instances, a percentage. If you set
  // a percentage, the number of instances is rounded if necessary. The default
  // value for maxSurge is a fixed value equal to the number of zones in which
  // the managed instance group operates. At least one of either maxSurge or
  // maxUnavailable must be greater than 0. Learn more about maxSurge.
  optional FixedOrPercent max_surge = 2;

  // The maximum number of instances that can be unavailable during the update
  // process. An instance is considered available if all of the following
  // conditions are satisfied: - The instance's status is RUNNING. - If there is
  // a health check on the instance group, the instance's health check status
  // must be HEALTHY at least once. If there is no health check on the group,
  // then the instance only needs to have a status of RUNNING to be considered
  // available. This value can be either a fixed number or, if the group has 10
  // or more instances, a percentage. If you set a percentage, the number of
  // instances is rounded if necessary. The default value for maxUnavailable is
  // a fixed value equal to the number of zones in which the managed instance
  // group operates. At least one of either maxSurge or maxUnavailable must be
  // greater than 0. Learn more about maxUnavailable.
  optional FixedOrPercent max_unavailable = 3;

  // Minimal action to be taken on an instance. Use this option to minimize
  // disruption as much as possible or to apply a more disruptive action than is
  // necessary. - To limit disruption as much as possible, set the minimal
  // action to REFRESH. If your update requires a more disruptive action,
  // Compute Engine performs the necessary action to execute the update. - To
  // apply a more disruptive action than is strictly necessary, set the minimal
  // action to RESTART or REPLACE. For example, Compute Engine does not need to
  // restart a VM to change its metadata. But if your application reads instance
  // metadata only when a VM is restarted, you can set the minimal action to
  // RESTART in order to pick up metadata changes.
  // NONE: Do not perform any action.
  // REFRESH: Updates applied in runtime, instances will not be disrupted.
  // REPLACE: Old instances will be deleted. New instances will be created from
  // the target template.
  // RESTART: Every instance will be restarted.
  optional string minimal_action = 4;

  // Most disruptive action that is allowed to be taken on an instance. You can
  // specify either NONE to forbid any actions, REFRESH to allow actions that do
  // not need instance restart, RESTART to allow actions that can be applied
  // without instance replacing or REPLACE to allow all possible actions. If the
  // Updater determines that the minimal update action needed is more disruptive
  // than most disruptive allowed action you specify it will not perform the
  // update at all.
  // NONE: Do not perform any action.
  // REFRESH: Updates applied in runtime, instances will not be disrupted.
  // REPLACE: Old instances will be deleted. New instances will be created from
  // the target template.
  // RESTART: Every instance will be restarted.
  optional string most_disruptive_allowed_action = 5;

  // What action should be used to replace instances. See minimal_action.REPLACE
  // RECREATE: Instances will be recreated (with the same name)
  // SUBSTITUTE: Default option: instances will be deleted and created (with a
  // new name)
  optional string replacement_method = 6;

  // The type of update process. You can specify either PROACTIVE so that the
  // instance group manager proactively executes actions in order to bring
  // instances to their target versions or OPPORTUNISTIC so that no action is
  // proactively executed but the update will be performed as part of other
  // actions (for example, resizes or recreateInstances calls).
  // OPPORTUNISTIC: No action is being proactively performed in order to bring
  // this IGM to its target version distribution (regardless of whether this
  // distribution is expressed using instanceTemplate or versions field).
  // PROACTIVE: This IGM will actively converge to its target version
  // distribution (regardless of whether this distribution is expressed using
  // instanceTemplate or versions field).
  optional string type = 7;
}

message InstanceGroupManagerVersion {
  // The URL of the instance template that is specified for this managed
  // instance group. The group uses this template to create new instances in the
  // managed instance group until the `targetSize` for this version is reached.
  // The templates for existing instances in the group do not change unless you
  // run recreateInstances, run applyUpdatesToInstances, or set the group's
  // updatePolicy.type to PROACTIVE; in those cases, existing instances are
  // updated until the `targetSize` for this version is reached.
  optional string instance_template = 1;

  // Name of the version. Unique among all versions in the scope of this managed
  // instance group.
  optional string name = 2;

  // Specifies the intended number of instances to be created from the
  // instanceTemplate. The final number of instances created from the template
  // will be equal to: - If expressed as a fixed number, the minimum of either
  // targetSize.fixed or instanceGroupManager.targetSize is used. - if expressed
  // as a percent, the targetSize would be (targetSize.percent/100 *
  // InstanceGroupManager.targetSize) If there is a remainder, the number is
  // rounded. If unset, this version will update any remaining instances not
  // updated by another version. Read Starting a canary update for more
  // information.
  optional FixedOrPercent target_size = 3;
}

message InstanceGroupManagersAbandonInstancesRequest {
  // The URLs of one or more instances to abandon. This can be a full URL or a
  // partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
  repeated string instances = 1;
}

// InstanceGroupManagers.applyUpdatesToInstances
message InstanceGroupManagersApplyUpdatesRequest {
  // Flag to update all instances instead of specified list of “instances”.
  // If the flag is set to true then the instances may not be specified in the
  // request.
  optional bool all_instances = 1;

  // The list of URLs of one or more instances for which you want to apply
  // updates. Each URL can be a full URL or a partial URL, such as
  // zones/[ZONE]/instances/[INSTANCE_NAME].
  repeated string instances = 2;

  // The minimal action that you want to perform on each instance during the
  // update: - REPLACE: At minimum, delete the instance and create it again. -
  // RESTART: Stop the instance and start it again. - REFRESH: Do not stop the
  // instance. - NONE: Do not disrupt the instance at all. By default, the
  // minimum action is NONE. If your update requires a more disruptive action
  // than you set with this flag, the necessary action is performed to execute
  // the update.
  // NONE: Do not perform any action.
  // REFRESH: Updates applied in runtime, instances will not be disrupted.
  // REPLACE: Old instances will be deleted. New instances will be created from
  // the target template.
  // RESTART: Every instance will be restarted.
  optional string minimal_action = 3;

  // The most disruptive action that you want to perform on each instance during
  // the update: - REPLACE: Delete the instance and create it again. - RESTART:
  // Stop the instance and start it again. - REFRESH: Do not stop the instance.
  // - NONE: Do not disrupt the instance at all. By default, the most disruptive
  // allowed action is REPLACE. If your update requires a more disruptive action
  // than you set with this flag, the update request will fail.
  // NONE: Do not perform any action.
  // REFRESH: Updates applied in runtime, instances will not be disrupted.
  // REPLACE: Old instances will be deleted. New instances will be created from
  // the target template.
  // RESTART: Every instance will be restarted.
  optional string most_disruptive_allowed_action = 4;
}

// InstanceGroupManagers.createInstances
message InstanceGroupManagersCreateInstancesRequest {
  // [Required] List of specifications of per-instance configs.
  repeated PerInstanceConfig instances = 1;
}

message InstanceGroupManagersDeleteInstancesRequest {
  // The URLs of one or more instances to delete. This can be a full URL or a
  // partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
  repeated string instances = 1;

  // Specifies whether the request should proceed despite the inclusion of
  // instances that are not members of the group or that are already in the
  // process of being deleted or abandoned. If this field is set to `false` and
  // such an instance is specified in the request, the operation fails. The
  // operation always fails if the request contains a malformed instance URL or
  // a reference to an instance that exists in a zone or region other than the
  // group's zone or region.
  optional bool skip_instances_on_validation_error = 2;
}

// InstanceGroupManagers.deletePerInstanceConfigs
message InstanceGroupManagersDeletePerInstanceConfigsReq {
  // The list of instance names for which we want to delete per-instance configs
  // on this managed instance group.
  repeated string names = 1;
}

message InstanceGroupManagersListErrorsResponse {
  // [Output Only] The list of errors of the managed instance group.
  repeated InstanceManagedByIgmError items = 1;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 2;
}

message InstanceGroupManagersListManagedInstancesResponse {
  // [Output Only] The list of instances in the managed instance group.
  repeated ManagedInstance managed_instances = 1;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 2;
}

message InstanceGroupManagersListPerInstanceConfigsResp {
  // [Output Only] The list of PerInstanceConfig.
  repeated PerInstanceConfig items = 1;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 2;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 3;
}

// InstanceGroupManagers.patchPerInstanceConfigs
message InstanceGroupManagersPatchPerInstanceConfigsReq {
  // The list of per-instance configurations to insert or patch on this managed
  // instance group.
  repeated PerInstanceConfig per_instance_configs = 1;
}

message InstanceGroupManagersRecreateInstancesRequest {
  // The URLs of one or more instances to recreate. This can be a full URL or a
  // partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
  repeated string instances = 1;
}

message InstanceGroupManagersScopedList {
  // [Output Only] The list of managed instance groups that are contained in the
  // specified project and zone.
  repeated InstanceGroupManager instance_group_managers = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] The warning that replaces the list of managed instance groups
  // when the list is empty.
  optional Warning warning = 2;
}

message InstanceGroupManagersSetInstanceTemplateRequest {
  // The URL of the instance template that is specified for this managed
  // instance group. The group uses this template to create all new instances in
  // the managed instance group. The templates for existing instances in the
  // group do not change unless you run recreateInstances, run
  // applyUpdatesToInstances, or set the group's updatePolicy.type to PROACTIVE.
  optional string instance_template = 1;
}

message InstanceGroupManagersSetTargetPoolsRequest {
  // The fingerprint of the target pools information. Use this optional property
  // to prevent conflicts when multiple users change the target pools settings
  // concurrently. Obtain the fingerprint with the instanceGroupManagers.get
  // method. Then, include the fingerprint in your request to ensure that you do
  // not overwrite changes that were applied from another concurrent request.
  optional string fingerprint = 1;

  // The list of target pool URLs that instances in this managed instance group
  // belong to. The managed instance group applies these target pools to all of
  // the instances in the group. Existing instances and new instances in the
  // group all receive these target pool settings.
  repeated string target_pools = 2;
}

// InstanceGroupManagers.updatePerInstanceConfigs
message InstanceGroupManagersUpdatePerInstanceConfigsReq {
  // The list of per-instance configurations to insert or patch on this managed
  // instance group.
  repeated PerInstanceConfig per_instance_configs = 1;
}

message InstanceGroupsAddInstancesRequest {
  // The list of instances to add to the instance group.
  repeated InstanceReference instances = 1;
}

message InstanceGroupsListInstances {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of InstanceWithNamedPorts resources.
  repeated InstanceWithNamedPorts items = 2;

  // [Output Only] The resource type, which is always
  // compute#instanceGroupsListInstances for the list of instances in the
  // specified instance group.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message InstanceGroupsListInstancesRequest {
  // A filter for the state of the instances in the instance group. Valid
  // options are ALL or RUNNING. If you do not specify this parameter the list
  // includes all instances regardless of their state.
  // ALL: Includes all instances in the generated list regardless of their
  // state.
  // RUNNING: Includes instances in the generated list only if they have a
  // RUNNING state.
  optional string instance_state = 1;
}

message InstanceGroupsRemoveInstancesRequest {
  // The list of instances to remove from the instance group.
  repeated InstanceReference instances = 1;
}

message InstanceGroupsScopedList {
  // [Output Only] The list of instance groups that are contained in this scope.
  repeated InstanceGroup instance_groups = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] An informational warning that replaces the list of instance
  // groups when the list is empty.
  optional Warning warning = 2;
}

message InstanceGroupsSetNamedPortsRequest {
  // The fingerprint of the named ports information for this instance group. Use
  // this optional property to prevent conflicts when multiple users change the
  // named ports settings concurrently. Obtain the fingerprint with the
  // instanceGroups.get method. Then, include the fingerprint in your request to
  // ensure that you do not overwrite changes that were applied from another
  // concurrent request. A request with an incorrect fingerprint will fail with
  // error 412 conditionNotMet.
  optional string fingerprint = 1;

  // The list of named ports to set for this instance group.
  repeated NamedPort named_ports = 2;
}

// Contains a list of instances.
message InstanceList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of Instance resources.
  repeated Instance items = 2;

  // [Output Only] Type of resource. Always compute#instanceList for lists of
  // Instance resources.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// Contains a list of instance referrers.
message InstanceListReferrers {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of Reference resources.
  repeated Reference items = 2;

  // [Output Only] Type of resource. Always compute#instanceListReferrers for
  // lists of Instance referrers.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message InstanceManagedByIgmError {
  // [Output Only] Contents of the error.
  optional InstanceManagedByIgmErrorManagedInstanceError error = 1;

  // [Output Only] Details of the instance action that triggered this error. May
  // be null, if the error was not caused by an action on an instance. This
  // field is optional.
  optional InstanceManagedByIgmErrorInstanceActionDetails
      instance_action_details = 2;

  // [Output Only] The time that this error occurred. This value is in RFC3339
  // text format.
  optional string timestamp = 3;
}

message InstanceManagedByIgmErrorInstanceActionDetails {
  // [Output Only] Action that managed instance group was executing on the
  // instance when the error occurred. Possible values:
  // ABANDONING: The managed instance group is abandoning this instance. The
  // instance will be removed from the instance group and from any target pools
  // that are associated with this group.
  // CREATING: The managed instance group is creating this instance. If the
  // group fails to create this instance, it will try again until it is
  // successful.
  // CREATING_WITHOUT_RETRIES: The managed instance group is attempting to
  // create this instance only once. If the group fails to create this instance,
  // it does not try again and the group's targetSize value is decreased.
  // DELETING: The managed instance group is permanently deleting this instance.
  // NONE: The managed instance group has not scheduled any actions for this
  // instance.
  // RECREATING: The managed instance group is recreating this instance.
  // REFRESHING: The managed instance group is applying configuration changes to
  // the instance without stopping it. For example, the group can update the
  // target pool list for an instance without stopping that instance.
  // RESTARTING: The managed instance group is restarting this instance.
  // RESUMING: The managed instance group is resuming this instance.
  // STARTING: The managed instance group is starting this instance.
  // STOPPING: The managed instance group is stopping this instance.
  // SUSPENDING: The managed instance group is suspending this instance.
  // VERIFYING: The managed instance group is verifying this already created
  // instance. Verification happens every time the instance is (re)created or
  // restarted and consists of: 1. Waiting until health check specified as part
  // of this managed instance group's autohealing policy reports HEALTHY. Note:
  // Applies only if autohealing policy has a health check specified 2. Waiting
  // for addition verification steps performed as post-instance creation
  // (subject to future extensions).
  optional string action = 1;

  // [Output Only] The URL of the instance. The URL can be set even if the
  // instance has not yet been created.
  optional string instance = 2;

  // [Output Only] Version this instance was created from, or was being created
  // from, but the creation failed. Corresponds to one of the versions that were
  // set on the Instance Group Manager resource at the time this instance was
  // being created.
  optional ManagedInstanceVersion version = 3;
}

message InstanceManagedByIgmErrorManagedInstanceError {
  // [Output Only] Error code.
  optional string code = 1;

  // [Output Only] Error message.
  optional string message = 2;
}

message InstanceMoveRequest {
  // The URL of the destination zone to move the instance. This can be a full or
  // partial URL. For example, the following are all valid URLs to a zone: -
  // https://www.googleapis.com/compute/v1/projects/project/zones/zone -
  // projects/project/zones/zone - zones/zone
  optional string destination_zone = 1;

  // The URL of the target instance to move. This can be a full or partial URL.
  // For example, the following are all valid URLs to an instance: -
  // https://www.googleapis.com/compute/v1/projects/project/zones/zone
  // /instances/instance - projects/project/zones/zone/instances/instance -
  // zones/zone/instances/instance
  optional string target_instance = 2;
}

// Additional instance params.
message InstanceParams {
  // Resource manager tags to be bound to the instance. Tag keys and values have
  // the same definition as resource manager tags. Keys must be in the format
  // `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The
  // field is ignored (both PUT & PATCH) when empty.
  map<string, string> resource_manager_tags = 1;
}

message InstanceProperties {
  // Controls for advanced machine-related behavior features. Note that for
  // MachineImage, this is not supported yet.
  optional AdvancedMachineFeatures advanced_machine_features = 1;

  // Enables instances created based on these properties to send packets with
  // source IP addresses other than their own and receive packets with
  // destination IP addresses other than their own. If these instances will be
  // used as an IP gateway or it will be set as the next-hop in a Route
  // resource, specify true. If unsure, leave this set to false. See the Enable
  // IP forwarding documentation for more information.
  optional bool can_ip_forward = 2;

  // Specifies the Confidential Instance options. Note that for MachineImage,
  // this is not supported yet.
  optional ConfidentialInstanceConfig confidential_instance_config = 3;

  // An optional text description for the instances that are created from these
  // properties.
  optional string description = 4;

  // An array of disks that are associated with the instances that are created
  // from these properties.
  repeated AttachedDisk disks = 5;

  // A list of guest accelerator cards' type and count to use for instances
  // created from these properties.
  repeated AcceleratorConfig guest_accelerators = 6;

  // KeyRevocationActionType of the instance. Supported options are "STOP" and
  // "NONE". The default value is "NONE" if it is not specified.
  // KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED: Default value. This value is
  // unused.
  // NONE: Indicates user chose no operation.
  // STOP: Indicates user chose to opt for VM shutdown on key revocation.
  optional string key_revocation_action_type = 7;

  // Labels to apply to instances that are created from these properties.
  map<string, string> labels = 8;

  // The machine type to use for instances that are created from these
  // properties.
  optional string machine_type = 9;

  // The metadata key/value pairs to assign to instances that are created from
  // these properties. These pairs can consist of custom metadata or predefined
  // keys. See Project and instance metadata for more information.
  optional Metadata metadata = 10;

  // Minimum cpu/platform to be used by instances. The instance may be scheduled
  // on the specified or newer cpu/platform. Applicable values are the friendly
  // names of CPU platforms, such as minCpuPlatform: "Intel Haswell" or
  // minCpuPlatform: "Intel Sandy Bridge". For more information, read Specifying
  // a Minimum CPU Platform.
  optional string min_cpu_platform = 11;

  // An array of network access configurations for this interface.
  repeated NetworkInterface network_interfaces = 12;

  // Note that for MachineImage, this is not supported yet.
  optional NetworkPerformanceConfig network_performance_config = 13;

  // The private IPv6 google access type for VMs. If not specified, use
  // INHERIT_FROM_SUBNETWORK as default. Note that for MachineImage, this is not
  // supported yet.
  // ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE: Bidirectional private IPv6 access
  // to/from Google services. If specified, the subnetwork who is attached to
  // the instance's default network interface will be assigned an internal IPv6
  // prefix if it doesn't have before.
  // ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE: Outbound private IPv6 access from VMs
  // in this subnet to Google services. If specified, the subnetwork who is
  // attached to the instance's default network interface will be assigned an
  // internal IPv6 prefix if it doesn't have before.
  // INHERIT_FROM_SUBNETWORK: Each network interface inherits
  // PrivateIpv6GoogleAccess from its subnetwork.
  optional string private_ipv6_google_access = 14;

  // Specifies the reservations that instances can consume from. Note that for
  // MachineImage, this is not supported yet.
  optional ReservationAffinity reservation_affinity = 15;

  // Resource manager tags to be bound to the instance. Tag keys and values have
  // the same definition as resource manager tags. Keys must be in the format
  // `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The
  // field is ignored (both PUT & PATCH) when empty.
  map<string, string> resource_manager_tags = 16;

  // Resource policies (names, not URLs) applied to instances created from these
  // properties. Note that for MachineImage, this is not supported yet.
  repeated string resource_policies = 17;

  // Specifies the scheduling options for the instances that are created from
  // these properties.
  optional Scheduling scheduling = 18;

  // A list of service accounts with specified scopes. Access tokens for these
  // service accounts are available to the instances that are created from these
  // properties. Use metadata queries to obtain the access tokens for these
  // instances.
  repeated ServiceAccount service_accounts = 19;

  // Note that for MachineImage, this is not supported yet.
  optional ShieldedInstanceConfig shielded_instance_config = 20;

  // A list of tags to apply to the instances that are created from these
  // properties. The tags identify valid sources or targets for network
  // firewalls. The setTags method can modify this list of tags. Each tag within
  // the list must comply with RFC1035.
  optional Tags tags = 21;
}

message InstanceReference {
  // The URL for a specific instance. @required
  // compute.instancegroups.addInstances/removeInstances
  optional string instance = 1;
}

// Represents an Instance Template resource. You can use instance templates to
// create VM instances and managed instance groups. For more information, read
// Instance Templates.
message InstanceTemplate {
  // [Output Only] The creation timestamp for this instance template in RFC3339
  // text format.
  optional string creation_timestamp = 1;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 2;

  // [Output Only] A unique identifier for this instance template. The server
  // defines this identifier.
  optional string id = 3;

  // [Output Only] The resource type, which is always compute#instanceTemplate
  // for instance templates.
  optional string kind = 4;

  // Name of the resource; provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 5;

  // The instance properties for this instance template.
  optional InstanceProperties properties = 6;

  // [Output Only] URL of the region where the instance template resides. Only
  // applicable for regional resources.
  optional string region = 7;

  // [Output Only] The URL for this instance template. The server defines this
  // URL.
  optional string self_link = 8;

  // The source instance used to create the template. You can provide this as a
  // partial or full URL to the resource. For example, the following are valid
  // values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone
  // /instances/instance - projects/project/zones/zone/instances/instance
  optional string source_instance = 9;

  // The source instance params to use to create this instance template.
  optional SourceInstanceParams source_instance_params = 10;
}

// Contains a list of InstanceTemplatesScopedList.
message InstanceTemplateAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of InstanceTemplatesScopedList resources.
  map<string, InstanceTemplatesScopedList> items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// A list of instance templates.
message InstanceTemplateList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of InstanceTemplate resources.
  repeated InstanceTemplate items = 2;

  // [Output Only] The resource type, which is always
  // compute#instanceTemplatesListResponse for instance template lists.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message InstanceTemplatesScopedList {
  // [Output Only] A list of instance templates that are contained within the
  // specified project and zone.
  repeated InstanceTemplate instance_templates = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] An informational warning that replaces the list of instance
  // templates when the list is empty.
  optional Warning warning = 2;
}

message InstanceWithNamedPorts {
  // [Output Only] The URL of the instance.
  optional string instance = 1;

  // [Output Only] The named ports that belong to this instance group.
  repeated NamedPort named_ports = 2;

  // [Output Only] The status of the instance.
  // DEPROVISIONING: The Nanny is halted and we are performing tear down tasks
  // like network deprogramming, releasing quota, IP, tearing down disks etc.
  // PROVISIONING: Resources are being allocated for the instance.
  // REPAIRING: The instance is in repair.
  // RUNNING: The instance is running.
  // STAGING: All required resources have been allocated and the instance is
  // being started.
  // STOPPED: The instance has stopped successfully.
  // STOPPING: The instance is currently stopping (either being deleted or
  // killed).
  // SUSPENDED: The instance has suspended.
  // SUSPENDING: The instance is suspending.
  // TERMINATED: The instance has stopped (either by explicit action or
  // underlying failure).
  optional string status = 3;
}

message InstancesAddResourcePoliciesRequest {
  // Resource policies to be added to this instance.
  repeated string resource_policies = 1;
}

message InstancesGetEffectiveFirewallsResponse {
  // Effective firewalls from firewall policies.
  repeated InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy
      firewall_policys = 1;

  // Effective firewalls on the instance.
  repeated Firewall firewalls = 2;
}

message InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy {
  // [Output Only] Deprecated, please use short name instead. The display name
  // of the firewall policy.
  optional string display_name = 1;

  // [Output Only] The name of the firewall policy.
  optional string name = 2;

  // The rules that apply to the network.
  repeated FirewallPolicyRule rules = 3;

  // [Output Only] The short name of the firewall policy.
  optional string short_name = 4;

  // [Output Only] The type of the firewall policy. Can be one of HIERARCHY,
  // NETWORK, NETWORK_REGIONAL.
  // HIERARCHY:
  // NETWORK:
  // NETWORK_REGIONAL:
  // UNSPECIFIED:
  optional string type = 5;
}

message InstancesRemoveResourcePoliciesRequest {
  // Resource policies to be removed from this instance.
  repeated string resource_policies = 1;
}

message InstancesScopedList {
  // [Output Only] A list of instances contained in this scope.
  repeated Instance instances = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning which replaces the list of instances
  // when the list is empty.
  optional Warning warning = 2;
}

message InstancesSetLabelsRequest {
  // Fingerprint of the previous set of labels for this resource, used to
  // prevent conflicts. Provide the latest fingerprint value when making a
  // request to add or change labels.
  optional string label_fingerprint = 1;

  map<string, string> labels = 2;
}

message InstancesSetMachineResourcesRequest {
  // A list of the type and count of accelerator cards attached to the instance.
  repeated AcceleratorConfig guest_accelerators = 1;
}

message InstancesSetMachineTypeRequest {
  // Full or partial URL of the machine type resource. See Machine Types for a
  // full list of machine types. For example:
  // zones/us-central1-f/machineTypes/n1-standard-1
  optional string machine_type = 1;
}

message InstancesSetMinCpuPlatformRequest {
  // Minimum cpu/platform this instance should be started at.
  optional string min_cpu_platform = 1;
}

message InstancesSetNameRequest {
  // The current name of this resource, used to prevent conflicts. Provide the
  // latest name when making a request to change name.
  optional string current_name = 1;

  // The name to be applied to the instance. Needs to be RFC 1035 compliant.
  optional string name = 2;
}

message InstancesSetServiceAccountRequest {
  // Email address of the service account.
  optional string email = 1;

  // The list of scopes to be made available for this service account.
  repeated string scopes = 2;
}

message InstancesStartWithEncryptionKeyRequest {
  // Array of disks associated with this instance that are protected with a
  // customer-supplied encryption key. In order to start the instance, the disk
  // url and its corresponding key must be provided. If the disk is not
  // protected with a customer-supplied encryption key it should not be
  // specified.
  repeated CustomerEncryptionKeyProtectedDisk disks = 1;
}

// HttpRouteRuleMatch criteria for field values that must stay within the
// specified integer range.
message Int64RangeMatch {
  // The end of the range (exclusive) in signed long integer format.
  optional string range_end = 1;

  // The start of the range (inclusive) in signed long integer format.
  optional string range_start = 2;
}

// Represents an Interconnect resource. An Interconnect resource is a dedicated
// connection between the GCP network and your on-premises network. For more
// information, read the Dedicated Interconnect Overview.
message Interconnect {
  // Administrative status of the interconnect. When this is set to true, the
  // Interconnect is functional and can carry traffic. When set to false, no
  // packets can be carried over the interconnect and no BGP routes are
  // exchanged over it. By default, the status is set to true.
  optional bool admin_enabled = 1;

  // [Output Only] A list of CircuitInfo objects, that describe the individual
  // circuits in this LAG.
  repeated InterconnectCircuitInfo circuit_infos = 2;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 3;

  // Customer name, to put in the Letter of Authorization as the party
  // authorized to request a crossconnect.
  optional string customer_name = 4;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 5;

  // [Output Only] A list of outages expected for this Interconnect.
  repeated InterconnectOutageNotification expected_outages = 6;

  // [Output Only] IP address configured on the Google side of the Interconnect
  // link. This can be used only for ping tests.
  optional string google_ip_address = 7;

  // [Output Only] Google reference ID to be used when raising support tickets
  // with Google or otherwise to debug backend connectivity issues.
  optional string google_reference_id = 8;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 9;

  // [Output Only] A list of the URLs of all InterconnectAttachments configured
  // to use this Interconnect.
  repeated string interconnect_attachments = 10;

  // Type of interconnect, which can take one of the following values: -
  // PARTNER: A partner-managed interconnection shared between customers though
  // a partner. - DEDICATED: A dedicated physical interconnection with the
  // customer. Note that a value IT_PRIVATE has been deprecated in favor of
  // DEDICATED.
  // DEDICATED: A dedicated physical interconnection with the customer.
  // IT_PRIVATE: [Deprecated] A private, physical interconnection with the
  // customer.
  // PARTNER: A partner-managed interconnection shared between customers via
  // partner.
  optional string interconnect_type = 11;

  // [Output Only] Type of the resource. Always compute#interconnect for
  // interconnects.
  optional string kind = 12;

  // Type of link requested, which can take one of the following values: -
  // LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics -
  // LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics. Note that this
  // field indicates the speed of each of the links in the bundle, not the speed
  // of the entire bundle.
  // LINK_TYPE_ETHERNET_100G_LR: 100G Ethernet, LR Optics.
  // LINK_TYPE_ETHERNET_10G_LR: 10G Ethernet, LR Optics. [(rate_bps) =
  // 10000000000];
  optional string link_type = 13;

  // URL of the InterconnectLocation object that represents where this
  // connection is to be provisioned.
  optional string location = 14;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 15;

  // Email address to contact the customer NOC for operations and maintenance
  // notifications regarding this Interconnect. If specified, this will be used
  // for notifications in addition to all other forms described, such as Cloud
  // Monitoring logs alerting and Cloud Notifications. This field is required
  // for users who sign up for Cloud Interconnect using workforce identity
  // federation.
  optional string noc_contact_email = 16;

  // [Output Only] The current status of this Interconnect's functionality,
  // which can take one of the following values: - OS_ACTIVE: A valid
  // Interconnect, which is turned up and is ready to use. Attachments may be
  // provisioned on this Interconnect. - OS_UNPROVISIONED: An Interconnect that
  // has not completed turnup. No attachments may be provisioned on this
  // Interconnect. - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing
  // internal maintenance. No attachments may be provisioned or updated on this
  // Interconnect.
  // OS_ACTIVE: The interconnect is valid, turned up, and ready to use.
  // Attachments may be provisioned on this interconnect.
  // OS_UNPROVISIONED: The interconnect has not completed turnup. No attachments
  // may be provisioned on this interconnect.
  optional string operational_status = 17;

  // [Output Only] IP address configured on the customer side of the
  // Interconnect link. The customer should configure this IP address during
  // turnup when prompted by Google NOC. This can be used only for ping tests.
  optional string peer_ip_address = 18;

  // [Output Only] Number of links actually provisioned in this interconnect.
  optional int32 provisioned_link_count = 19;

  // Target number of physical links in the link bundle, as requested by the
  // customer.
  optional int32 requested_link_count = 20;

  // [Output Only] Reserved for future use.
  optional bool satisfies_pzs = 21;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 22;

  // [Output Only] The current state of Interconnect functionality, which can
  // take one of the following values: - ACTIVE: The Interconnect is valid,
  // turned up and ready to use. Attachments may be provisioned on this
  // Interconnect. - UNPROVISIONED: The Interconnect has not completed turnup.
  // No attachments may be provisioned on this Interconnect. -
  // UNDER_MAINTENANCE: The Interconnect is undergoing internal maintenance. No
  // attachments may be provisioned or updated on this Interconnect.
  // ACTIVE: The interconnect is valid, turned up, and ready to use. Attachments
  // may be provisioned on this interconnect.
  // UNPROVISIONED: The interconnect has not completed turnup. No attachments
  // may be provisioned on this interconnect.
  optional string state = 23;
}

// Represents an Interconnect Attachment (VLAN) resource. You can use
// Interconnect attachments (VLANS) to connect your Virtual Private Cloud
// networks to your on-premises networks through an Interconnect. For more
// information, read Creating VLAN Attachments.
message InterconnectAttachment {
  // Determines whether this Attachment will carry packets. Not present for
  // PARTNER_PROVIDER.
  optional bool admin_enabled = 1;

  // Provisioned bandwidth capacity for the interconnect attachment. For
  // attachments of type DEDICATED, the user can set the bandwidth. For
  // attachments of type PARTNER, the Google Partner that is operating the
  // interconnect must set the bandwidth. Output only for PARTNER type, mutable
  // for PARTNER_PROVIDER and DEDICATED, and can take one of the following
  // values: - BPS_50M: 50 Mbit/s - BPS_100M: 100 Mbit/s - BPS_200M: 200 Mbit/s
  // - BPS_300M: 300 Mbit/s - BPS_400M: 400 Mbit/s - BPS_500M: 500 Mbit/s -
  // BPS_1G: 1 Gbit/s - BPS_2G: 2 Gbit/s - BPS_5G: 5 Gbit/s - BPS_10G: 10 Gbit/s
  // - BPS_20G: 20 Gbit/s - BPS_50G: 50 Gbit/s
  // BPS_100M: 100 Mbit/s
  // BPS_10G: 10 Gbit/s
  // BPS_1G: 1 Gbit/s
  // BPS_200M: 200 Mbit/s
  // BPS_20G: 20 Gbit/s
  // BPS_2G: 2 Gbit/s
  // BPS_300M: 300 Mbit/s
  // BPS_400M: 400 Mbit/s
  // BPS_500M: 500 Mbit/s
  // BPS_50G: 50 Gbit/s
  // BPS_50M: 50 Mbit/s
  // BPS_5G: 5 Gbit/s
  optional string bandwidth = 2;

  // This field is not available.
  repeated string candidate_ipv6_subnets = 3;

  // Up to 16 candidate prefixes that can be used to restrict the allocation of
  // cloudRouterIpAddress and customerRouterIpAddress for this attachment. All
  // prefixes must be within link-local address space (169.254.0.0/16) and must
  // be /29 or shorter (/28, /27, etc). Google will attempt to select an unused
  // /29 from the supplied candidate prefix(es). The request will fail if all
  // possible /29s are in use on Google's edge. If not supplied, Google will
  // randomly select an unused /29 from all of link-local space.
  repeated string candidate_subnets = 4;

  // [Output Only] IPv4 address + prefix length to be configured on Cloud Router
  // Interface for this interconnect attachment.
  optional string cloud_router_ip_address = 5;

  // [Output Only] IPv6 address + prefix length to be configured on Cloud Router
  // Interface for this interconnect attachment.
  optional string cloud_router_ipv6_address = 6;

  // This field is not available.
  optional string cloud_router_ipv6_interface_id = 7;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 8;

  // [Output Only] IPv4 address + prefix length to be configured on the customer
  // router subinterface for this interconnect attachment.
  optional string customer_router_ip_address = 9;

  // [Output Only] IPv6 address + prefix length to be configured on the customer
  // router subinterface for this interconnect attachment.
  optional string customer_router_ipv6_address = 10;

  // This field is not available.
  optional string customer_router_ipv6_interface_id = 11;

  // [Output Only] Dataplane version for this InterconnectAttachment. This field
  // is only present for Dataplane version 2 and higher. Absence of this field
  // in the API output indicates that the Dataplane is version 1.
  optional int32 dataplane_version = 12;

  // An optional description of this resource.
  optional string description = 13;

  // Desired availability domain for the attachment. Only available for type
  // PARTNER, at creation time, and can take one of the following values: -
  // AVAILABILITY_DOMAIN_ANY - AVAILABILITY_DOMAIN_1 - AVAILABILITY_DOMAIN_2 For
  // improved reliability, customers should configure a pair of attachments, one
  // per availability domain. The selected availability domain will be provided
  // to the Partner via the pairing key, so that the provisioned circuit will
  // lie in the specified domain. If not specified, the value will default to
  // AVAILABILITY_DOMAIN_ANY.
  // AVAILABILITY_DOMAIN_1:
  // AVAILABILITY_DOMAIN_2:
  // AVAILABILITY_DOMAIN_ANY:
  optional string edge_availability_domain = 14;

  // Indicates the user-supplied encryption option of this VLAN attachment
  // (interconnectAttachment). Can only be specified at attachment creation for
  // PARTNER or DEDICATED attachments. Possible values are: - NONE - This is the
  // default value, which means that the VLAN attachment carries unencrypted
  // traffic. VMs are able to send traffic to, or receive traffic from, such a
  // VLAN attachment. - IPSEC - The VLAN attachment carries only encrypted
  // traffic that is encrypted by an IPsec device, such as an HA VPN gateway or
  // third-party IPsec VPN. VMs cannot directly send traffic to, or receive
  // traffic from, such a VLAN attachment. To use *HA VPN over Cloud
  // Interconnect*, the VLAN attachment must be created with this option.
  // IPSEC: The interconnect attachment will carry only encrypted traffic that
  // is encrypted by an IPsec device such as HA VPN gateway; VMs cannot directly
  // send traffic to or receive traffic from such an interconnect attachment. To
  // use HA VPN over Cloud Interconnect, the interconnect attachment must be
  // created with this option.
  // NONE: This is the default value, which means the Interconnect Attachment
  // will carry unencrypted traffic. VMs will be able to send traffic to or
  // receive traffic from such interconnect attachment.
  optional string encryption = 15;

  // [Output Only] Google reference ID, to be used when raising support tickets
  // with Google or otherwise to debug backend connectivity issues. [Deprecated]
  // This field is not used.
  optional string google_reference_id = 16;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 17;

  // URL of the underlying Interconnect object that this attachment's traffic
  // will traverse through.
  optional string interconnect = 18;

  // A list of URLs of addresses that have been reserved for the VLAN
  // attachment. Used only for the VLAN attachment that has the encryption
  // option as IPSEC. The addresses must be regional internal IP address ranges.
  // When creating an HA VPN gateway over the VLAN attachment, if the attachment
  // is configured to use a regional internal IP address, then the VPN gateway's
  // IP address is allocated from the IP address range specified here. For
  // example, if the HA VPN gateway's interface 0 is paired to this VLAN
  // attachment, then a regional internal IP address for the VPN gateway
  // interface 0 will be allocated from the IP address specified for this VLAN
  // attachment. If this field is not specified when creating the VLAN
  // attachment, then later on when creating an HA VPN gateway on this VLAN
  // attachment, the HA VPN gateway's IP address is allocated from the regional
  // external IP address pool. Not currently available publicly.
  repeated string ipsec_internal_addresses = 19;

  // [Output Only] Type of the resource. Always compute#interconnectAttachment
  // for interconnect attachments.
  optional string kind = 20;

  // Maximum Transmission Unit (MTU), in bytes, of packets passing through this
  // interconnect attachment. Only 1440 and 1500 are allowed. If not specified,
  // the value will default to 1440.
  optional int32 mtu = 21;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 22;

  // [Output Only] The current status of whether or not this interconnect
  // attachment is functional, which can take one of the following values: -
  // OS_ACTIVE: The attachment has been turned up and is ready to use. -
  // OS_UNPROVISIONED: The attachment is not ready to use yet, because turnup is
  // not complete.
  // OS_ACTIVE: Indicates that attachment has been turned up and is ready to
  // use.
  // OS_UNPROVISIONED: Indicates that attachment is not ready to use yet,
  // because turnup is not complete.
  optional string operational_status = 23;

  // [Output only for type PARTNER. Input only for PARTNER_PROVIDER. Not present
  // for DEDICATED]. The opaque identifier of an PARTNER attachment used to
  // initiate provisioning with a selected partner. Of the form
  // "XXXXX/region/domain"
  optional string pairing_key = 24;

  // Optional BGP ASN for the router supplied by a Layer 3 Partner if they
  // configured BGP on behalf of the customer. Output only for PARTNER type,
  // input only for PARTNER_PROVIDER, not available for DEDICATED.
  optional string partner_asn = 25;

  // Informational metadata about Partner attachments from Partners to display
  // to customers. Output only for for PARTNER type, mutable for
  // PARTNER_PROVIDER, not available for DEDICATED.
  optional InterconnectAttachmentPartnerMetadata partner_metadata = 26;

  // [Output Only] Information specific to an InterconnectAttachment. This
  // property is populated if the interconnect that this is attached to is of
  // type DEDICATED.
  optional InterconnectAttachmentPrivateInfo private_interconnect_info = 27;

  // [Output Only] URL of the region where the regional interconnect attachment
  // resides. You must specify this field as part of the HTTP request URL. It is
  // not settable as a field in the request body.
  optional string region = 28;

  // URL of the Cloud Router to be used for dynamic routing. This router must be
  // in the same region as this InterconnectAttachment. The
  // InterconnectAttachment will automatically connect the Interconnect to the
  // network & region within which the Cloud Router is configured.
  optional string router = 29;

  // [Output Only] Reserved for future use.
  optional bool satisfies_pzs = 30;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 31;

  // The stack type for this interconnect attachment to identify whether the
  // IPv6 feature is enabled or not. If not specified, IPV4_ONLY will be used.
  // This field can be both set at interconnect attachments creation and update
  // interconnect attachment operations.
  // IPV4_IPV6: The interconnect attachment can have both IPv4 and IPv6
  // addresses.
  // IPV4_ONLY: The interconnect attachment will only be assigned IPv4
  // addresses.
  optional string stack_type = 32;

  // [Output Only] The current state of this attachment's functionality. Enum
  // values ACTIVE and UNPROVISIONED are shared by DEDICATED/PRIVATE, PARTNER,
  // and PARTNER_PROVIDER interconnect attachments, while enum values
  // PENDING_PARTNER, PARTNER_REQUEST_RECEIVED, and PENDING_CUSTOMER are used
  // for only PARTNER and PARTNER_PROVIDER interconnect attachments. This state
  // can take one of the following values: - ACTIVE: The attachment has been
  // turned up and is ready to use. - UNPROVISIONED: The attachment is not ready
  // to use yet, because turnup is not complete. - PENDING_PARTNER: A
  // newly-created PARTNER attachment that has not yet been configured on the
  // Partner side. - PARTNER_REQUEST_RECEIVED: A PARTNER attachment is in the
  // process of provisioning after a PARTNER_PROVIDER attachment was created
  // that references it. - PENDING_CUSTOMER: A PARTNER or PARTNER_PROVIDER
  // attachment that is waiting for a customer to activate it. - DEFUNCT: The
  // attachment was deleted externally and is no longer functional. This could
  // be because the associated Interconnect was removed, or because the other
  // side of a Partner attachment was deleted.
  // ACTIVE: Indicates that attachment has been turned up and is ready to use.
  // DEFUNCT: The attachment was deleted externally and is no longer functional.
  // This could be because the associated Interconnect was wiped out, or because
  // the other side of a Partner attachment was deleted.
  // PARTNER_REQUEST_RECEIVED: A PARTNER attachment is in the process of
  // provisioning after a PARTNER_PROVIDER attachment was created that
  // references it.
  // PENDING_CUSTOMER: PARTNER or PARTNER_PROVIDER attachment that is waiting
  // for the customer to activate.
  // PENDING_PARTNER: A newly created PARTNER attachment that has not yet been
  // configured on the Partner side.
  // STATE_UNSPECIFIED:
  // UNPROVISIONED: Indicates that attachment is not ready to use yet, because
  // turnup is not complete.
  optional string state = 33;

  // The type of interconnect attachment this is, which can take one of the
  // following values: - DEDICATED: an attachment to a Dedicated Interconnect. -
  // PARTNER: an attachment to a Partner Interconnect, created by the customer.
  // - PARTNER_PROVIDER: an attachment to a Partner Interconnect, created by the
  // partner.
  // DEDICATED: Attachment to a dedicated interconnect.
  // PARTNER: Attachment to a partner interconnect, created by the customer.
  // PARTNER_PROVIDER: Attachment to a partner interconnect, created by the
  // partner.
  optional string type = 34;

  // The IEEE 802.1Q VLAN tag for this attachment, in the range 2-4093. Only
  // specified at creation time.
  optional int32 vlan_tag8021q = 35;
}

message InterconnectAttachmentAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of InterconnectAttachmentsScopedList resources.
  map<string, InterconnectAttachmentsScopedList> items = 2;

  // [Output Only] Type of resource. Always
  // compute#interconnectAttachmentAggregatedList for aggregated lists of
  // interconnect attachments.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Response to the list request, and contains a list of interconnect
// attachments.
message InterconnectAttachmentList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of InterconnectAttachment resources.
  repeated InterconnectAttachment items = 2;

  // [Output Only] Type of resource. Always compute#interconnectAttachmentList
  // for lists of interconnect attachments.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// Informational metadata about Partner attachments from Partners to display to
// customers. These fields are propagated from PARTNER_PROVIDER attachments to
// their corresponding PARTNER attachments.
message InterconnectAttachmentPartnerMetadata {
  // Plain text name of the Interconnect this attachment is connected to, as
  // displayed in the Partner's portal. For instance "Chicago 1". This value may
  // be validated to match approved Partner values.
  optional string interconnect_name = 1;

  // Plain text name of the Partner providing this attachment. This value may be
  // validated to match approved Partner values.
  optional string partner_name = 2;

  // URL of the Partner's portal for this Attachment. Partners may customise
  // this to be a deep link to the specific resource on the Partner portal. This
  // value may be validated to match approved Partner values.
  optional string portal_url = 3;
}

// Information for an interconnect attachment when this belongs to an
// interconnect of type DEDICATED.
message InterconnectAttachmentPrivateInfo {
  // [Output Only] 802.1q encapsulation tag to be used for traffic between
  // Google and the customer, going to and from this network and region.
  optional uint32 tag8021q = 1;
}

message InterconnectAttachmentsScopedList {
  // A list of interconnect attachments contained in this scope.
  repeated InterconnectAttachment interconnect_attachments = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // Informational warning which replaces the list of addresses when the list is
  // empty.
  optional Warning warning = 2;
}

// Describes a single physical circuit between the Customer and Google.
// CircuitInfo objects are created by Google, so all fields are output only.
message InterconnectCircuitInfo {
  // Customer-side demarc ID for this circuit.
  optional string customer_demarc_id = 1;

  // Google-assigned unique ID for this circuit. Assigned at circuit turn-up.
  optional string google_circuit_id = 2;

  // Google-side demarc ID for this circuit. Assigned at circuit turn-up and
  // provided by Google to the customer in the LOA.
  optional string google_demarc_id = 3;
}

// Diagnostics information about interconnect, contains detailed and current
// technical information about Google's side of the connection.
message InterconnectDiagnostics {
  // A list of InterconnectDiagnostics.ARPEntry objects, describing individual
  // neighbors currently seen by the Google router in the ARP cache for the
  // Interconnect. This will be empty when the Interconnect is not bundled.
  repeated InterconnectDiagnosticsARPEntry arp_caches = 1;

  // The aggregation type of the bundle interface.
  // BUNDLE_AGGREGATION_TYPE_LACP: LACP is enabled.
  // BUNDLE_AGGREGATION_TYPE_STATIC: LACP is disabled.
  optional string bundle_aggregation_type = 2;

  // The operational status of the bundle interface.
  // BUNDLE_OPERATIONAL_STATUS_DOWN: If bundleAggregationType is LACP: LACP is
  // not established and/or all links in the bundle have DOWN operational
  // status. If bundleAggregationType is STATIC: one or more links in the bundle
  // has DOWN operational status.
  // BUNDLE_OPERATIONAL_STATUS_UP: If bundleAggregationType is LACP: LACP is
  // established and at least one link in the bundle has UP operational status.
  // If bundleAggregationType is STATIC: all links in the bundle (typically just
  // one) have UP operational status.
  optional string bundle_operational_status = 3;

  // A list of InterconnectDiagnostics.LinkStatus objects, describing the status
  // for each link on the Interconnect.
  repeated InterconnectDiagnosticsLinkStatus links = 4;

  // The MAC address of the Interconnect's bundle interface.
  optional string mac_address = 5;
}

// Describing the ARP neighbor entries seen on this link
message InterconnectDiagnosticsARPEntry {
  // The IP address of this ARP neighbor.
  optional string ip_address = 1;

  // The MAC address of this ARP neighbor.
  optional string mac_address = 2;
}

message InterconnectDiagnosticsLinkLACPStatus {
  // System ID of the port on Google's side of the LACP exchange.
  optional string google_system_id = 1;

  // System ID of the port on the neighbor's side of the LACP exchange.
  optional string neighbor_system_id = 2;

  // The state of a LACP link, which can take one of the following values: -
  // ACTIVE: The link is configured and active within the bundle. - DETACHED:
  // The link is not configured within the bundle. This means that the rest of
  // the object should be empty.
  // ACTIVE: The link is configured and active within the bundle.
  // DETACHED: The link is not configured within the bundle, this means the rest
  // of the object should be empty.
  optional string state = 3;
}

message InterconnectDiagnosticsLinkOpticalPower {
  // The status of the current value when compared to the warning and alarm
  // levels for the receiving or transmitting transceiver. Possible states
  // include: - OK: The value has not crossed a warning threshold. -
  // LOW_WARNING: The value has crossed below the low warning threshold. -
  // HIGH_WARNING: The value has crossed above the high warning threshold. -
  // LOW_ALARM: The value has crossed below the low alarm threshold. -
  // HIGH_ALARM: The value has crossed above the high alarm threshold.
  // HIGH_ALARM: The value has crossed above the high alarm threshold.
  // HIGH_WARNING: The value of the current optical power has crossed above the
  // high warning threshold.
  // LOW_ALARM: The value of the current optical power has crossed below the low
  // alarm threshold.
  // LOW_WARNING: The value of the current optical power has crossed below the
  // low warning threshold.
  // OK: The value of the current optical power has not crossed a warning
  // threshold.
  optional string state = 1;

  // Value of the current receiving or transmitting optical power, read in dBm.
  // Take a known good optical value, give it a 10% margin and trigger warnings
  // relative to that value. In general, a -7dBm warning and a -11dBm alarm are
  // good optical value estimates for most links.
  optional float value = 2;
}

message InterconnectDiagnosticsLinkStatus {
  // A list of InterconnectDiagnostics.ARPEntry objects, describing the ARP
  // neighbor entries seen on this link. This will be empty if the link is
  // bundled
  repeated InterconnectDiagnosticsARPEntry arp_caches = 1;

  // The unique ID for this link assigned during turn up by Google.
  optional string circuit_id = 2;

  // The Demarc address assigned by Google and provided in the LoA.
  optional string google_demarc = 3;

  optional InterconnectDiagnosticsLinkLACPStatus lacp_status = 4;

  // The operational status of the link.
  // LINK_OPERATIONAL_STATUS_DOWN: The interface is unable to communicate with
  // the remote end.
  // LINK_OPERATIONAL_STATUS_UP: The interface has low level communication with
  // the remote end.
  optional string operational_status = 5;

  // An InterconnectDiagnostics.LinkOpticalPower object, describing the current
  // value and status of the received light level.
  optional InterconnectDiagnosticsLinkOpticalPower receiving_optical_power = 6;

  // An InterconnectDiagnostics.LinkOpticalPower object, describing the current
  // value and status of the transmitted light level.
  optional InterconnectDiagnosticsLinkOpticalPower transmitting_optical_power =
      7;
}

// Response to the list request, and contains a list of interconnects.
message InterconnectList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of Interconnect resources.
  repeated Interconnect items = 2;

  // [Output Only] Type of resource. Always compute#interconnectList for lists
  // of interconnects.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// Represents an Interconnect Attachment (VLAN) Location resource. You can use
// this resource to find location details about an Interconnect attachment
// (VLAN). For more information about interconnect attachments, read Creating
// VLAN Attachments.
message InterconnectLocation {
  // [Output Only] The postal address of the Point of Presence, each line in the
  // address is separated by a newline character.
  optional string address = 1;

  // [Output Only] Availability zone for this InterconnectLocation. Within a
  // metropolitan area (metro), maintenance will not be simultaneously scheduled
  // in more than one availability zone. Example: "zone1" or "zone2".
  optional string availability_zone = 2;

  // [Output Only] Metropolitan area designator that indicates which city an
  // interconnect is located. For example: "Chicago, IL", "Amsterdam,
  // Netherlands".
  optional string city = 3;

  // [Output Only] Continent for this location, which can take one of the
  // following values: - AFRICA - ASIA_PAC - EUROPE - NORTH_AMERICA -
  // SOUTH_AMERICA
  // AFRICA:
  // ASIA_PAC:
  // C_AFRICA:
  // C_ASIA_PAC:
  // C_EUROPE:
  // C_NORTH_AMERICA:
  // C_SOUTH_AMERICA:
  // EUROPE:
  // NORTH_AMERICA:
  // SOUTH_AMERICA:
  optional string continent = 4;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 5;

  // [Output Only] An optional description of the resource.
  optional string description = 6;

  // [Output Only] The name of the provider for this facility (e.g., EQUINIX).
  optional string facility_provider = 7;

  // [Output Only] A provider-assigned Identifier for this facility (e.g.,
  // Ashburn-DC1).
  optional string facility_provider_facility_id = 8;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 9;

  // [Output Only] Type of the resource. Always compute#interconnectLocation for
  // interconnect locations.
  optional string kind = 10;

  // [Output Only] Name of the resource.
  optional string name = 11;

  // [Output Only] The peeringdb identifier for this facility (corresponding
  // with a netfac type in peeringdb).
  optional string peeringdb_facility_id = 12;

  // [Output Only] A list of InterconnectLocation.RegionInfo objects, that
  // describe parameters pertaining to the relation between this
  // InterconnectLocation and various Google Cloud regions.
  repeated InterconnectLocationRegionInfo region_infos = 13;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 14;

  // [Output Only] The status of this InterconnectLocation, which can take one
  // of the following values: - CLOSED: The InterconnectLocation is closed and
  // is unavailable for provisioning new Interconnects. - AVAILABLE: The
  // InterconnectLocation is available for provisioning new Interconnects.
  // AVAILABLE: The InterconnectLocation is available for provisioning new
  // Interconnects.
  // CLOSED: The InterconnectLocation is closed for provisioning new
  // Interconnects.
  optional string status = 15;

  // [Output Only] Reserved for future use.
  optional bool supports_pzs = 16;
}

// Response to the list request, and contains a list of interconnect locations.
message InterconnectLocationList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of InterconnectLocation resources.
  repeated InterconnectLocation items = 2;

  // [Output Only] Type of resource. Always compute#interconnectLocationList for
  // lists of interconnect locations.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// Information about any potential InterconnectAttachments between an
// Interconnect at a specific InterconnectLocation, and a specific Cloud Region.
message InterconnectLocationRegionInfo {
  // Expected round-trip time in milliseconds, from this InterconnectLocation to
  // a VM in this region.
  optional string expected_rtt_ms = 1;

  // Identifies the network presence of this location.
  // GLOBAL: This region is not in any common network presence with this
  // InterconnectLocation.
  // LOCAL_REGION: This region shares the same regional network presence as this
  // InterconnectLocation.
  // LP_GLOBAL: [Deprecated] This region is not in any common network presence
  // with this InterconnectLocation.
  // LP_LOCAL_REGION: [Deprecated] This region shares the same regional network
  // presence as this InterconnectLocation.
  optional string location_presence = 2;

  // URL for the region of this location.
  optional string region = 3;
}

// Description of a planned outage on this Interconnect.
message InterconnectOutageNotification {
  // If issue_type is IT_PARTIAL_OUTAGE, a list of the Google-side circuit IDs
  // that will be affected.
  repeated string affected_circuits = 1;

  // A description about the purpose of the outage.
  optional string description = 2;

  // Scheduled end time for the outage (milliseconds since Unix epoch).
  optional string end_time = 3;

  // Form this outage is expected to take, which can take one of the following
  // values: - OUTAGE: The Interconnect may be completely out of service for
  // some or all of the specified window. - PARTIAL_OUTAGE: Some circuits
  // comprising the Interconnect as a whole should remain up, but with reduced
  // bandwidth. Note that the versions of this enum prefixed with "IT_" have
  // been deprecated in favor of the unprefixed values.
  // IT_OUTAGE: [Deprecated] The Interconnect may be completely out of service
  // for some or all of the specified window.
  // IT_PARTIAL_OUTAGE: [Deprecated] Some circuits comprising the Interconnect
  // will be out of service during the expected window. The interconnect as a
  // whole should remain up, albeit with reduced bandwidth.
  // OUTAGE: The Interconnect may be completely out of service for some or all
  // of the specified window.
  // PARTIAL_OUTAGE: Some circuits comprising the Interconnect will be out of
  // service during the expected window. The interconnect as a whole should
  // remain up, albeit with reduced bandwidth.
  optional string issue_type = 4;

  // Unique identifier for this outage notification.
  optional string name = 5;

  // The party that generated this notification, which can take the following
  // value: - GOOGLE: this notification as generated by Google. Note that the
  // value of NSRC_GOOGLE has been deprecated in favor of GOOGLE.
  // GOOGLE: This notification was generated by Google.
  // NSRC_GOOGLE: [Deprecated] This notification was generated by Google.
  optional string source = 6;

  // Scheduled start time for the outage (milliseconds since Unix epoch).
  optional string start_time = 7;

  // State of this notification, which can take one of the following values: -
  // ACTIVE: This outage notification is active. The event could be in the past,
  // present, or future. See start_time and end_time for scheduling. -
  // CANCELLED: The outage associated with this notification was cancelled
  // before the outage was due to start. - COMPLETED: The outage associated with
  // this notification is complete. Note that the versions of this enum prefixed
  // with "NS_" have been deprecated in favor of the unprefixed values.
  // ACTIVE: This outage notification is active. The event could be in the
  // future, present, or past. See start_time and end_time for scheduling.
  // CANCELLED: The outage associated with this notification was cancelled
  // before the outage was due to start.
  // COMPLETED: The outage associated with this notification is complete.
  // NS_ACTIVE: [Deprecated] This outage notification is active. The event could
  // be in the future, present, or past. See start_time and end_time for
  // scheduling.
  // NS_CANCELED: [Deprecated] The outage associated with this notification was
  // canceled before the outage was due to start.
  optional string state = 8;
}

// Response for the InterconnectsGetDiagnosticsRequest.
message InterconnectsGetDiagnosticsResponse {
  optional InterconnectDiagnostics result = 1;
}

// Represents a License resource. A License represents billing and aggregate
// usage data for public and marketplace images. *Caution* This resource is
// intended for use only by third-party partners who are creating Cloud
// Marketplace images.
message License {
  // [Output Only] Deprecated. This field no longer reflects whether a license
  // charges a usage fee.
  optional bool charges_use_fee = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 2;

  // An optional textual description of the resource; provided by the client
  // when the resource is created.
  optional string description = 3;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 4;

  // [Output Only] Type of resource. Always compute#license for licenses.
  optional string kind = 5;

  // [Output Only] The unique code used to attach this license to images,
  // snapshots, and disks.
  optional string license_code = 6;

  // Name of the resource. The name must be 1-63 characters long and comply with
  // RFC1035.
  optional string name = 7;

  optional LicenseResourceRequirements resource_requirements = 8;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 9;

  // If false, licenses will not be copied from the source resource when
  // creating an image from a disk, disk from snapshot, or snapshot from disk.
  optional bool transferable = 10;
}

// Represents a License Code resource. A License Code is a unique identifier
// used to represent a license resource. *Caution* This resource is intended for
// use only by third-party partners who are creating Cloud Marketplace images.
message LicenseCode {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1;

  // [Output Only] Description of this License Code.
  optional string description = 2;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 3;

  // [Output Only] Type of resource. Always compute#licenseCode for licenses.
  optional string kind = 4;

  // [Output Only] URL and description aliases of Licenses with the same License
  // Code.
  repeated LicenseCodeLicenseAlias license_alias = 5;

  // [Output Only] Name of the resource. The name is 1-20 characters long and
  // must be a valid 64 bit integer.
  optional string name = 6;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 7;

  // [Output Only] Current state of this License Code.
  // DISABLED: Machines are not allowed to attach boot disks with this License
  // Code. Requests to create new resources with this license will be rejected.
  // ENABLED: Use is allowed for anyone with USE_READ_ONLY access to this
  // License Code.
  // RESTRICTED: Use of this license is limited to a project whitelist.
  // STATE_UNSPECIFIED:
  // TERMINATED: Reserved state.
  optional string state = 8;

  // [Output Only] If true, the license will remain attached when creating
  // images or snapshots from disks. Otherwise, the license is not transferred.
  optional bool transferable = 9;
}

message LicenseCodeLicenseAlias {
  // [Output Only] Description of this License Code.
  optional string description = 1;

  // [Output Only] URL of license corresponding to this License Code.
  optional string self_link = 2;
}

// Commitment for a particular license resource.
message LicenseResourceCommitment {
  // The number of licenses purchased.
  optional string amount = 1;

  // Specifies the core range of the instance for which this license applies.
  optional string cores_per_license = 2;

  // Any applicable license URI.
  optional string license = 3;
}

message LicenseResourceRequirements {
  // Minimum number of guest cpus required to use the Instance. Enforced at
  // Instance creation and Instance start.
  optional int32 min_guest_cpu_count = 1;

  // Minimum memory required to use the Instance. Enforced at Instance creation
  // and Instance start.
  optional int32 min_memory_mb = 2;
}

message LicensesListResponse {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of License resources.
  repeated License items = 2;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 3;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 4;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 5;
}

message LocalDisk {
  // Specifies the number of such disks.
  optional int32 disk_count = 1;

  // Specifies the size of the disk in base-2 GB.
  optional int32 disk_size_gb = 2;

  // Specifies the desired disk type on the node. This disk type must be a local
  // storage type (e.g.: local-ssd). Note that for nodeTemplates, this should be
  // the name of the disk type and not its URL.
  optional string disk_type = 3;
}

// Provides a localized error message that is safe to return to the user which
// can be attached to an RPC error.
message LocalizedMessage {
  // The locale used following the specification defined at
  // https://www.rfc-editor.org/rfc/bcp/bcp47.txt. Examples are: "en-US",
  // "fr-CH", "es-MX"
  optional string locale = 1;

  // The localized error message in the above locale.
  optional string message = 2;
}

// Configuration for location policy among multiple possible locations (e.g.
// preferences for zone selection among zones in a single region).
message LocationPolicy {
  // Location configurations mapped by location name. Currently only zone names
  // are supported and must be represented as valid internal URLs, such as
  // zones/us-central1-a.
  map<string, LocationPolicyLocation> locations = 1;

  // Strategy for distributing VMs across zones in a region.
  // ANY: GCE picks zones for creating VM instances to fulfill the requested
  // number of VMs within present resource constraints and to maximize
  // utilization of unused zonal reservations. Recommended for batch workloads
  // that do not require high availability.
  // ANY_SINGLE_ZONE: GCE always selects a single zone for all the VMs,
  // optimizing for resource quotas, available reservations and general
  // capacity. Recommended for batch workloads that cannot tollerate
  // distribution over multiple zones. This the default shape in Bulk Insert and
  // Capacity Advisor APIs.
  // BALANCED: GCE prioritizes acquisition of resources, scheduling VMs in zones
  // where resources are available while distributing VMs as evenly as possible
  // across allowed zones to minimize the impact of zonal failure. Recommended
  // for highly available serving workloads.
  optional string target_shape = 2;
}

message LocationPolicyLocation {
  // Constraints that the caller requires on the result distribution in this
  // zone.
  optional LocationPolicyLocationConstraints constraints = 1;

  // Preference for a given location. Set to either ALLOW or DENY.
  // ALLOW: Location is allowed for use.
  // DENY: Location is prohibited.
  // PREFERENCE_UNSPECIFIED: Default value, unused.
  optional string preference = 2;
}

// Per-zone constraints on location policy for this zone.
message LocationPolicyLocationConstraints {
  // Maximum number of items that are allowed to be placed in this zone. The
  // value must be non-negative.
  optional int32 max_count = 1;
}

// This is deprecated and has no effect. Do not use.
message LogConfig {
  // This is deprecated and has no effect. Do not use.
  optional LogConfigCloudAuditOptions cloud_audit = 1;

  // This is deprecated and has no effect. Do not use.
  optional LogConfigCounterOptions counter = 2;

  // This is deprecated and has no effect. Do not use.
  optional LogConfigDataAccessOptions data_access = 3;
}

// This is deprecated and has no effect. Do not use.
message LogConfigCloudAuditOptions {
  // This is deprecated and has no effect. Do not use.
  optional AuthorizationLoggingOptions authorization_logging_options = 1;

  // This is deprecated and has no effect. Do not use.
  // ADMIN_ACTIVITY: This is deprecated and has no effect. Do not use.
  // DATA_ACCESS: This is deprecated and has no effect. Do not use.
  // UNSPECIFIED_LOG_NAME: This is deprecated and has no effect. Do not use.
  optional string log_name = 2;
}

// This is deprecated and has no effect. Do not use.
message LogConfigCounterOptions {
  // This is deprecated and has no effect. Do not use.
  repeated LogConfigCounterOptionsCustomField custom_fields = 1;

  // This is deprecated and has no effect. Do not use.
  optional string field = 2;

  // This is deprecated and has no effect. Do not use.
  optional string metric = 3;
}

// This is deprecated and has no effect. Do not use.
message LogConfigCounterOptionsCustomField {
  // This is deprecated and has no effect. Do not use.
  optional string name = 1;

  // This is deprecated and has no effect. Do not use.
  optional string value = 2;
}

// This is deprecated and has no effect. Do not use.
message LogConfigDataAccessOptions {
  // This is deprecated and has no effect. Do not use.
  // LOG_FAIL_CLOSED: This is deprecated and has no effect. Do not use.
  // LOG_MODE_UNSPECIFIED: This is deprecated and has no effect. Do not use.
  optional string log_mode = 1;
}

// Represents a machine image resource. A machine image is a Compute Engine
// resource that stores all the configuration, metadata, permissions, and data
// from one or more disks required to create a Virtual machine (VM) instance.
// For more information, see Machine images.
message MachineImage {
  // [Output Only] The creation timestamp for this machine image in RFC3339 text
  // format.
  optional string creation_timestamp = 1;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 2;

  // [Input Only] Whether to attempt an application consistent machine image by
  // informing the OS to prepare for the snapshot process.
  optional bool guest_flush = 3;

  // [Output Only] A unique identifier for this machine image. The server
  // defines this identifier.
  optional string id = 4;

  // [Output Only] Properties of source instance
  optional InstanceProperties instance_properties = 5;

  // [Output Only] The resource type, which is always compute#machineImage for
  // machine image.
  optional string kind = 6;

  // Encrypts the machine image using a customer-supplied encryption key. After
  // you encrypt a machine image using a customer-supplied key, you must provide
  // the same key if you use the machine image later. For example, you must
  // provide the encryption key when you create an instance from the encrypted
  // machine image in a future request. Customer-supplied encryption keys do not
  // protect access to metadata of the machine image. If you do not provide an
  // encryption key when creating the machine image, then the machine image will
  // be encrypted using an automatically generated key and you do not need to
  // provide a key to use the machine image later.
  optional CustomerEncryptionKey machine_image_encryption_key = 7;

  // Name of the resource; provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 8;

  // [Output Only] Reserved for future use.
  optional bool satisfies_pzs = 9;

  // An array of Machine Image specific properties for disks attached to the
  // source instance
  repeated SavedDisk saved_disks = 10;

  // [Output Only] The URL for this machine image. The server defines this URL.
  optional string self_link = 11;

  // [Input Only] The customer-supplied encryption key of the disks attached to
  // the source instance. Required if the source disk is protected by a
  // customer-supplied encryption key.
  repeated SourceDiskEncryptionKey source_disk_encryption_keys = 12;

  // The source instance used to create the machine image. You can provide this
  // as a partial or full URL to the resource. For example, the following are
  // valid values: -
  // https://www.googleapis.com/compute/v1/projects/project/zones/zone
  // /instances/instance - projects/project/zones/zone/instances/instance
  optional string source_instance = 13;

  // [Output Only] DEPRECATED: Please use instance_properties instead for source
  // instance related properties. New properties will not be added to this
  // field.
  optional SourceInstanceProperties source_instance_properties = 14;

  // [Output Only] The status of the machine image. One of the following values:
  // INVALID, CREATING, READY, DELETING, and UPLOADING.
  // CREATING:
  // DELETING:
  // INVALID:
  // READY:
  // UPLOADING:
  optional string status = 15;

  // The regional or multi-regional Cloud Storage bucket location where the
  // machine image is stored.
  repeated string storage_locations = 16;

  // [Output Only] Total size of the storage used by the machine image.
  optional string total_storage_bytes = 17;
}

// A list of machine images.
message MachineImageList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of MachineImage resources.
  repeated MachineImage items = 2;

  // [Output Only] The resource type, which is always
  // compute#machineImagesListResponse for machine image lists.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// Represents a Machine Type resource. You can use specific machine types for
// your VM instances based on performance and pricing requirements. For more
// information, read Machine Types.
message MachineType {
  message AcceleratorsItem {
    // Number of accelerator cards exposed to the guest.
    optional int32 guest_accelerator_count = 1;

    // The accelerator type resource name, not a full URL, e.g.
    // 'nvidia-tesla-k80'.
    optional string guest_accelerator_type = 2;
  }

  // [Output Only] A list of accelerator configurations assigned to this machine
  // type.
  repeated AcceleratorsItem accelerators = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 2;

  // [Output Only] The deprecation status associated with this machine type.
  // Only applicable if the machine type is unavailable.
  optional DeprecationStatus deprecated = 3;

  // [Output Only] An optional textual description of the resource.
  optional string description = 4;

  // [Output Only] The number of virtual CPUs that are available to the
  // instance.
  optional int32 guest_cpus = 5;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 6;

  // [Deprecated] This property is deprecated and will never be populated with
  // any relevant values.
  optional int32 image_space_gb = 7;

  // [Output Only] Whether this machine type has a shared CPU. See Shared-core
  // machine types for more information.
  optional bool is_shared_cpu = 8;

  // [Output Only] The type of the resource. Always compute#machineType for
  // machine types.
  optional string kind = 9;

  // [Output Only] Maximum persistent disks allowed.
  optional int32 maximum_persistent_disks = 10;

  // [Output Only] Maximum total persistent disks size (GB) allowed.
  optional string maximum_persistent_disks_size_gb = 11;

  // [Output Only] The amount of physical memory available to the instance,
  // defined in MB.
  optional int32 memory_mb = 12;

  // [Output Only] Name of the resource.
  optional string name = 13;

  message ScratchDisksItem {
    // Size of the scratch disk, defined in GB.
    optional int32 disk_gb = 1;
  }

  // [Output Only] A list of extended scratch disks assigned to the instance.
  repeated ScratchDisksItem scratch_disks = 14;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 15;

  // [Output Only] The name of the zone where the machine type resides, such as
  // us-central1-a.
  optional string zone = 16;
}

message MachineTypeAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of MachineTypesScopedList resources.
  map<string, MachineTypesScopedList> items = 2;

  // [Output Only] Type of resource. Always compute#machineTypeAggregatedList
  // for aggregated lists of machine types.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Contains a list of machine types.
message MachineTypeList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of MachineType resources.
  repeated MachineType items = 2;

  // [Output Only] Type of resource. Always compute#machineTypeList for lists of
  // machine types.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message MachineTypesScopedList {
  // [Output Only] A list of machine types contained in this scope.
  repeated MachineType machine_types = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] An informational warning that appears when the machine types
  // list is empty.
  optional Warning warning = 2;
}

// A Managed Instance resource.
message ManagedInstance {
  // [Output Only] The current action that the managed instance group has
  // scheduled for the instance. Possible values: - NONE The instance is
  // running, and the managed instance group does not have any scheduled actions
  // for this instance. - CREATING The managed instance group is creating this
  // instance. If the group fails to create this instance, it will try again
  // until it is successful. - CREATING_WITHOUT_RETRIES The managed instance
  // group is attempting to create this instance only once. If the group fails
  // to create this instance, it does not try again and the group's targetSize
  // value is decreased instead. - RECREATING The managed instance group is
  // recreating this instance. - DELETING The managed instance group is
  // permanently deleting this instance. - ABANDONING The managed instance group
  // is abandoning this instance. The instance will be removed from the instance
  // group and from any target pools that are associated with this group. -
  // RESTARTING The managed instance group is restarting the instance. -
  // REFRESHING The managed instance group is applying configuration changes to
  // the instance without stopping it. For example, the group can update the
  // target pool list for an instance without stopping that instance. -
  // VERIFYING The managed instance group has created the instance and it is in
  // the process of being verified.
  // ABANDONING: The managed instance group is abandoning this instance. The
  // instance will be removed from the instance group and from any target pools
  // that are associated with this group.
  // CREATING: The managed instance group is creating this instance. If the
  // group fails to create this instance, it will try again until it is
  // successful.
  // CREATING_WITHOUT_RETRIES: The managed instance group is attempting to
  // create this instance only once. If the group fails to create this instance,
  // it does not try again and the group's targetSize value is decreased.
  // DELETING: The managed instance group is permanently deleting this instance.
  // NONE: The managed instance group has not scheduled any actions for this
  // instance.
  // RECREATING: The managed instance group is recreating this instance.
  // REFRESHING: The managed instance group is applying configuration changes to
  // the instance without stopping it. For example, the group can update the
  // target pool list for an instance without stopping that instance.
  // RESTARTING: The managed instance group is restarting this instance.
  // RESUMING: The managed instance group is resuming this instance.
  // STARTING: The managed instance group is starting this instance.
  // STOPPING: The managed instance group is stopping this instance.
  // SUSPENDING: The managed instance group is suspending this instance.
  // VERIFYING: The managed instance group is verifying this already created
  // instance. Verification happens every time the instance is (re)created or
  // restarted and consists of: 1. Waiting until health check specified as part
  // of this managed instance group's autohealing policy reports HEALTHY. Note:
  // Applies only if autohealing policy has a health check specified 2. Waiting
  // for addition verification steps performed as post-instance creation
  // (subject to future extensions).
  optional string current_action = 1;

  // [Output only] The unique identifier for this resource. This field is empty
  // when instance does not exist.
  optional string id = 2;

  // [Output Only] The URL of the instance. The URL can exist even if the
  // instance has not yet been created.
  optional string instance = 3;

  // [Output Only] Health state of the instance per health-check.
  repeated ManagedInstanceInstanceHealth instance_health = 4;

  // [Output Only] The status of the instance. This field is empty when the
  // instance does not exist.
  // DEPROVISIONING: The Nanny is halted and we are performing tear down tasks
  // like network deprogramming, releasing quota, IP, tearing down disks etc.
  // PROVISIONING: Resources are being allocated for the instance.
  // REPAIRING: The instance is in repair.
  // RUNNING: The instance is running.
  // STAGING: All required resources have been allocated and the instance is
  // being started.
  // STOPPED: The instance has stopped successfully.
  // STOPPING: The instance is currently stopping (either being deleted or
  // killed).
  // SUSPENDED: The instance has suspended.
  // SUSPENDING: The instance is suspending.
  // TERMINATED: The instance has stopped (either by explicit action or
  // underlying failure).
  optional string instance_status = 5;

  // [Output Only] Information about the last attempt to create or delete the
  // instance.
  optional ManagedInstanceLastAttempt last_attempt = 6;

  // [Output Only] Preserved state applied from per-instance config for this
  // instance.
  optional PreservedState preserved_state_from_config = 7;

  // [Output Only] Preserved state generated based on stateful policy for this
  // instance.
  optional PreservedState preserved_state_from_policy = 8;

  // [Output Only] Intended version of this instance.
  optional ManagedInstanceVersion version = 9;
}

message ManagedInstanceInstanceHealth {
  // [Output Only] The current detailed instance health state.
  // DRAINING: The instance is being drained. The existing connections to the
  // instance have time to complete, but the new ones are being refused.
  // HEALTHY: The instance is reachable i.e. a connection to the application
  // health checking endpoint can be established, and conforms to the
  // requirements defined by the health check.
  // TIMEOUT: The instance is unreachable i.e. a connection to the application
  // health checking endpoint cannot be established, or the server does not
  // respond within the specified timeout.
  // UNHEALTHY: The instance is reachable, but does not conform to the
  // requirements defined by the health check.
  // UNKNOWN: The health checking system is aware of the instance but its health
  // is not known at the moment.
  optional string detailed_health_state = 1;

  // [Output Only] The URL for the health check that verifies whether the
  // instance is healthy.
  optional string health_check = 2;
}

message ManagedInstanceLastAttempt {
  message Errors {
    message ErrorsItem {
      // [Output Only] The error type identifier for this error.
      optional string code = 1;

      message ErrorDetailsItem {
        optional ErrorInfo error_info = 1;

        optional Help help = 2;

        optional LocalizedMessage localized_message = 3;

        optional QuotaExceededInfo quota_info = 4;
      }

      // [Output Only] An optional list of messages that contain the error
      // details. There is a set of defined message types to use for providing
      // details.The syntax depends on the error code. For example,
      // QuotaExceededInfo will have details when the error code is
      // QUOTA_EXCEEDED.
      repeated ErrorDetailsItem error_details = 2;

      // [Output Only] Indicates the field in the request that caused the error.
      // This property is optional.
      optional string location = 3;

      // [Output Only] An optional, human-readable error message.
      optional string message = 4;
    }

    // [Output Only] The array of errors encountered while processing this
    // operation.
    repeated ErrorsItem errors = 1;
  }

  // [Output Only] Encountered errors during the last attempt to create or
  // delete the instance.
  optional Errors errors = 1;
}

message ManagedInstanceVersion {
  // [Output Only] The intended template of the instance. This field is empty
  // when current_action is one of { DELETING, ABANDONING }.
  optional string instance_template = 1;

  // [Output Only] Name of the version.
  optional string name = 2;
}

// A metadata key/value entry.
message Metadata {
  // Specifies a fingerprint for this request, which is essentially a hash of
  // the metadata's contents and used for optimistic locking. The fingerprint is
  // initially generated by Compute Engine and changes after every request to
  // modify or update metadata. You must always provide an up-to-date
  // fingerprint hash in order to update or change metadata, otherwise the
  // request will fail with error 412 conditionNotMet. To see the latest
  // fingerprint, make a get() request to retrieve the resource.
  optional string fingerprint = 1;

  message ItemsItem {
    // Key for the metadata entry. Keys must conform to the following regexp:
    // [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected
    // as part of a URL in the metadata server. Additionally, to avoid
    // ambiguity, keys must not conflict with any other metadata keys for the
    // project.
    optional string key = 1;

    // Value for the metadata entry. These are free-form strings, and only have
    // meaning as interpreted by the image running in the instance. The only
    // restriction placed on values is that their size must be less than or
    // equal to 262144 bytes (256 KiB).
    optional string value = 2;
  }

  // Array of key/value pairs. The total size of all keys and values must be
  // less than 512 KB.
  repeated ItemsItem items = 2;

  // [Output Only] Type of the resource. Always compute#metadata for metadata.
  optional string kind = 3;
}

// Opaque filter criteria used by load balancers to restrict routing
// configuration to a limited set of load balancing proxies. Proxies and
// sidecars involved in load balancing would typically present metadata to the
// load balancers that need to match criteria specified here. If a match takes
// place, the relevant configuration is made available to those proxies. For
// each metadataFilter in this list, if its filterMatchCriteria is set to
// MATCH_ANY, at least one of the filterLabels must match the corresponding
// label provided in the metadata. If its filterMatchCriteria is set to
// MATCH_ALL, then all of its filterLabels must match with corresponding labels
// provided in the metadata. An example for using metadataFilters would be: if
// load balancing involves Envoys, they receive routing configuration when
// values in metadataFilters match values supplied in of their XDS requests to
// loadbalancers.
message MetadataFilter {
  // The list of label value pairs that must match labels in the provided
  // metadata based on filterMatchCriteria This list must not be empty and can
  // have at the most 64 entries.
  repeated MetadataFilterLabelMatch filter_labels = 1;

  // Specifies how individual filter label matches within the list of
  // filterLabels and contributes toward the overall metadataFilter match.
  // Supported values are: - MATCH_ANY: at least one of the filterLabels must
  // have a matching label in the provided metadata. - MATCH_ALL: all
  // filterLabels must have matching labels in the provided metadata.
  // MATCH_ALL: Specifies that all filterLabels must match for the
  // metadataFilter to be considered a match.
  // MATCH_ANY: Specifies that any filterLabel must match for the metadataFilter
  // to be considered a match.
  // NOT_SET: Indicates that the match criteria was not set. A metadataFilter
  // must never be created with this value.
  optional string filter_match_criteria = 2;
}

// MetadataFilter label name value pairs that are expected to match
// corresponding labels presented as metadata to the load balancer.
message MetadataFilterLabelMatch {
  // Name of metadata label. The name can have a maximum length of 1024
  // characters and must be at least 1 character long.
  optional string name = 1;

  // The value of the label must match the specified value. value can have a
  // maximum length of 1024 characters.
  optional string value = 2;
}

// The named port. For example: <"http", 80>.
message NamedPort {
  // The name for this named port. The name must be 1-63 characters long, and
  // comply with RFC1035.
  optional string name = 1;

  // The port number, which can be a value between 1 and 65535.
  optional int32 port = 2;
}

// Represents a VPC Network resource. Networks connect resources to each other
// and to the internet. For more information, read Virtual Private Cloud (VPC)
// Network.
message Network {
  // Deprecated in favor of subnet mode networks. The range of internal
  // addresses that are legal on this network. This range is a CIDR
  // specification, for example: 192.168.0.0/16. Provided by the client when the
  // network is created.
  optional string i_pv4_range = 1;

  // Must be set to create a VPC network. If not set, a legacy network is
  // created. When set to true, the VPC network is created in auto mode. When
  // set to false, the VPC network is created in custom mode. An auto mode VPC
  // network starts with one subnet per region. Each subnet has a predetermined
  // range as described in Auto mode VPC network IP ranges. For custom mode VPC
  // networks, you can add subnets using the subnetworks insert method.
  optional bool auto_create_subnetworks = 2;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 3;

  // An optional description of this resource. Provide this field when you
  // create the resource.
  optional string description = 4;

  // Enable ULA internal ipv6 on this network. Enabling this feature will assign
  // a /48 from google defined ULA prefix fd20::/20. .
  optional bool enable_ula_internal_ipv6 = 5;

  // [Output Only] URL of the firewall policy the network is associated with.
  optional string firewall_policy = 6;

  // [Output Only] The gateway address for default routing out of the network,
  // selected by GCP.
  optional string gateway_i_pv4 = 7;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 8;

  // When enabling ula internal ipv6, caller optionally can specify the /48
  // range they want from the google defined ULA prefix fd20::/20. The input
  // must be a valid /48 ULA IPv6 address and must be within the fd20::/20.
  // Operation will fail if the speficied /48 is already in used by another
  // resource. If the field is not speficied, then a /48 range will be randomly
  // allocated from fd20::/20 and returned via this field. .
  optional string internal_ipv6_range = 9;

  // [Output Only] Type of the resource. Always compute#network for networks.
  optional string kind = 10;

  // Maximum Transmission Unit in bytes. The minimum value for this field is
  // 1300 and the maximum value is 8896. The suggested value is 1500, which is
  // the default MTU used on the Internet, or 8896 if you want to use Jumbo
  // frames. If unspecified, the value defaults to 1460.
  optional int32 mtu = 11;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a
  // lowercase letter, and all following characters (except for the last
  // character) must be a dash, lowercase letter, or digit. The last character
  // must be a lowercase letter or digit.
  optional string name = 12;

  // The network firewall policy enforcement order. Can be either
  // AFTER_CLASSIC_FIREWALL or BEFORE_CLASSIC_FIREWALL. Defaults to
  // AFTER_CLASSIC_FIREWALL if the field is not specified.
  // AFTER_CLASSIC_FIREWALL:
  // BEFORE_CLASSIC_FIREWALL:
  optional string network_firewall_policy_enforcement_order = 13;

  // [Output Only] A list of network peerings for the resource.
  repeated NetworkPeering peerings = 14;

  // The network-level routing configuration for this network. Used by Cloud
  // Router to determine what type of network-wide routing behavior to enforce.
  optional NetworkRoutingConfig routing_config = 15;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 16;

  // [Output Only] Server-defined URL for this resource with the resource id.
  optional string self_link_with_id = 17;

  // [Output Only] Server-defined fully-qualified URLs for all subnetworks in
  // this VPC network.
  repeated string subnetworks = 18;
}

// NetworkAttachments A network attachment resource ...
message NetworkAttachment {
  // [Output Only] An array of connections for all the producers connected to
  // this network attachment.
  repeated NetworkAttachmentConnectedEndpoint connection_endpoints = 1;

  // ACCEPT_AUTOMATIC:
  // ACCEPT_MANUAL:
  // INVALID:
  optional string connection_preference = 2;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 3;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 4;

  // [Output Only] Fingerprint of this resource. A hash of the contents stored
  // in this object. This field is used in optimistic locking. An up-to-date
  // fingerprint must be provided in order to patch.
  optional string fingerprint = 5;

  // [Output Only] The unique identifier for the resource type. The server
  // generates this identifier.
  optional string id = 6;

  // [Output Only] Type of the resource.
  optional string kind = 7;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 8;

  // [Output Only] The URL of the network which the Network Attachment belongs
  // to.
  optional string network = 9;

  // Projects that are allowed to connect to this network attachment. The
  // project can be specified using its id or number.
  repeated string producer_accept_lists = 10;

  // Projects that are not allowed to connect to this network attachment. The
  // project can be specified using its id or number.
  repeated string producer_reject_lists = 11;

  // [Output Only] URL of the region where the network attachment resides. This
  // field applies only to the region resource. You must specify this field as
  // part of the HTTP request URL. It is not settable as a field in the request
  // body.
  optional string region = 12;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 13;

  // [Output Only] Server-defined URL for this resource's resource id.
  optional string self_link_with_id = 14;

  // An array of URLs where each entry is the URL of a subnet provided by the
  // service consumer to use for endpoints in the producers that connect to this
  // network attachment.
  repeated string subnetworks = 15;
}

// Contains a list of NetworkAttachmentsScopedList.
message NetworkAttachmentAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of NetworkAttachmentsScopedList resources.
  map<string, NetworkAttachmentsScopedList> items = 2;

  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// [Output Only] A connection connected to this network attachment.
message NetworkAttachmentConnectedEndpoint {
  // The IP address assigned to the producer instance network interface. This
  // value will be a range in case of Serverless.
  optional string ip_address = 1;

  // The project id or number of the interface to which the IP was assigned.
  optional string project_id_or_num = 2;

  // Alias IP ranges from the same subnetwork
  repeated string secondary_ip_cidr_ranges = 3;

  // The status of a connected endpoint to this network attachment.
  // ACCEPTED: The consumer allows traffic from the producer to reach its VPC.
  // CLOSED: The consumer network attachment no longer exists.
  // NEEDS_ATTENTION: The consumer needs to take further action before traffic
  // can be served.
  // PENDING: The consumer neither allows nor prohibits traffic from the
  // producer to reach its VPC.
  // REJECTED: The consumer prohibits traffic from the producer to reach its
  // VPC.
  // STATUS_UNSPECIFIED:
  optional string status = 4;

  // The subnetwork used to assign the IP to the producer instance network
  // interface.
  optional string subnetwork = 5;
}

message NetworkAttachmentList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of NetworkAttachment resources.
  repeated NetworkAttachment items = 2;

  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message NetworkAttachmentsScopedList {
  // A list of NetworkAttachments contained in this scope.
  repeated NetworkAttachment network_attachments = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // Informational warning which replaces the list of network attachments when
  // the list is empty.
  optional Warning warning = 2;
}

// Represents a Google Cloud Armor network edge security service resource.
message NetworkEdgeSecurityService {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 2;

  // Fingerprint of this resource. A hash of the contents stored in this object.
  // This field is used in optimistic locking. This field will be ignored when
  // inserting a NetworkEdgeSecurityService. An up-to-date fingerprint must be
  // provided in order to update the NetworkEdgeSecurityService, otherwise the
  // request will fail with error 412 conditionNotMet. To see the latest
  // fingerprint, make a get() request to retrieve a NetworkEdgeSecurityService.
  optional string fingerprint = 3;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 4;

  // [Output only] Type of the resource. Always
  // compute#networkEdgeSecurityService for NetworkEdgeSecurityServices
  optional string kind = 5;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 6;

  // [Output Only] URL of the region where the resource resides. You must
  // specify this field as part of the HTTP request URL. It is not settable as a
  // field in the request body.
  optional string region = 7;

  // The resource URL for the network edge security service associated with this
  // network edge security service.
  optional string security_policy = 8;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 9;

  // [Output Only] Server-defined URL for this resource with the resource id.
  optional string self_link_with_id = 10;
}

message NetworkEdgeSecurityServiceAggregatedList {
  optional string etag = 1;

  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 2;

  // A list of NetworkEdgeSecurityServicesScopedList resources.
  map<string, NetworkEdgeSecurityServicesScopedList> items = 3;

  // [Output Only] Type of resource. Always
  // compute#networkEdgeSecurityServiceAggregatedList for lists of Network Edge
  // Security Services.
  optional string kind = 4;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 5;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 6;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 7;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 8;
}

message NetworkEdgeSecurityServicesScopedList {
  // A list of NetworkEdgeSecurityServices contained in this scope.
  repeated NetworkEdgeSecurityService network_edge_security_services = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // Informational warning which replaces the list of security policies when the
  // list is empty.
  optional Warning warning = 2;
}

// The network endpoint.
message NetworkEndpoint {
  // Metadata defined as annotations on the network endpoint.
  map<string, string> annotations = 1;

  // Optional fully qualified domain name of network endpoint. This can only be
  // specified when NetworkEndpointGroup.network_endpoint_type is
  // NON_GCP_FQDN_PORT.
  optional string fqdn = 2;

  // The name for a specific VM instance that the IP address belongs to. This is
  // required for network endpoints of type GCE_VM_IP_PORT. The instance must be
  // in the same zone of network endpoint group. The name must be 1-63
  // characters long, and comply with RFC1035.
  optional string instance = 3;

  // Optional IPv4 address of network endpoint. The IP address must belong to a
  // VM in Compute Engine (either the primary IP or as part of an aliased IP
  // range). If the IP address is not specified, then the primary IP address for
  // the VM instance in the network that the network endpoint group belongs to
  // will be used.
  optional string ip_address = 4;

  // Optional port number of network endpoint. If not specified, the defaultPort
  // for the network endpoint group will be used.
  optional int32 port = 5;
}

// Represents a collection of network endpoints. A network endpoint group (NEG)
// defines how a set of endpoints should be reached, whether they are reachable,
// and where they are located. For more information about using NEGs, see
// Setting up external HTTP(S) Load Balancing with internet NEGs, Setting up
// zonal NEGs, or Setting up external HTTP(S) Load Balancing with serverless
// NEGs.
message NetworkEndpointGroup {
  // Metadata defined as annotations on the network endpoint group.
  map<string, string> annotations = 1;

  // Only valid when networkEndpointType is "SERVERLESS". Only one of cloudRun,
  // appEngine or cloudFunction may be set.
  optional NetworkEndpointGroupAppEngine app_engine = 2;

  // Only valid when networkEndpointType is "SERVERLESS". Only one of cloudRun,
  // appEngine or cloudFunction may be set.
  optional NetworkEndpointGroupCloudFunction cloud_function = 3;

  // Only valid when networkEndpointType is "SERVERLESS". Only one of cloudRun,
  // appEngine or cloudFunction may be set.
  optional NetworkEndpointGroupCloudRun cloud_run = 4;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 5;

  // The default port used if the port number is not specified in the network
  // endpoint.
  optional int32 default_port = 6;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 7;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 8;

  // [Output Only] Type of the resource. Always compute#networkEndpointGroup for
  // network endpoint group.
  optional string kind = 9;

  // Name of the resource; provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 10;

  // The URL of the network to which all network endpoints in the NEG belong.
  // Uses "default" project network if unspecified.
  optional string network = 11;

  // Type of network endpoints in this network endpoint group. Can be one of
  // GCE_VM_IP, GCE_VM_IP_PORT, NON_GCP_PRIVATE_IP_PORT, INTERNET_FQDN_PORT,
  // INTERNET_IP_PORT, SERVERLESS, PRIVATE_SERVICE_CONNECT.
  // GCE_VM_IP: The network endpoint is represented by an IP address.
  // GCE_VM_IP_PORT: The network endpoint is represented by IP address and port
  // pair.
  // INTERNET_FQDN_PORT: The network endpoint is represented by fully qualified
  // domain name and port.
  // INTERNET_IP_PORT: The network endpoint is represented by an internet IP
  // address and port.
  // NON_GCP_PRIVATE_IP_PORT: The network endpoint is represented by an IP
  // address and port. The endpoint belongs to a VM or pod running in a
  // customer's on-premises.
  // PRIVATE_SERVICE_CONNECT: The network endpoint is either public Google APIs
  // or services exposed by other GCP Project with a Service Attachment. The
  // connection is set up by private service connect
  // SERVERLESS: The network endpoint is handled by specified serverless
  // infrastructure.
  optional string network_endpoint_type = 12;

  optional NetworkEndpointGroupPscData psc_data = 13;

  // The target service url used to set up private service connection to a
  // Google API or a PSC Producer Service Attachment. An example value is:
  // "asia-northeast3-cloudkms.googleapis.com"
  optional string psc_target_service = 14;

  // [Output Only] The URL of the region where the network endpoint group is
  // located.
  optional string region = 15;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 16;

  // [Output only] Number of network endpoints in the network endpoint group.
  optional int32 size = 17;

  // Optional URL of the subnetwork to which all network endpoints in the NEG
  // belong.
  optional string subnetwork = 18;

  // [Output Only] The URL of the zone where the network endpoint group is
  // located.
  optional string zone = 19;
}

message NetworkEndpointGroupAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of NetworkEndpointGroupsScopedList resources.
  map<string, NetworkEndpointGroupsScopedList> items = 2;

  // [Output Only] The resource type, which is always
  // compute#networkEndpointGroupAggregatedList for aggregated lists of network
  // endpoint groups.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Configuration for an App Engine network endpoint group (NEG). The service is
// optional, may be provided explicitly or in the URL mask. The version is
// optional and can only be provided explicitly or in the URL mask when service
// is present. Note: App Engine service must be in the same project and located
// in the same region as the Serverless NEG.
message NetworkEndpointGroupAppEngine {
  // Optional serving service. The service name is case-sensitive and must be
  // 1-63 characters long. Example value: "default", "my-service".
  optional string service = 1;

  // A template to parse service and version fields from a request URL. URL mask
  // allows for routing to multiple App Engine services without having to create
  // multiple Network Endpoint Groups and backend services. For example, the
  // request URLs "foo1-dot-appname.appspot.com/v1" and
  // "foo1-dot-appname.appspot.com/v2" can be backed by the same Serverless NEG
  // with URL mask "<service>-dot-appname.appspot.com/<version>". The URL mask
  // will parse them to { service = "foo1", version = "v1" } and { service =
  // "foo1", version = "v2" } respectively.
  optional string url_mask = 2;

  // Optional serving version. The version name is case-sensitive and must be
  // 1-100 characters long. Example value: "v1", "v2".
  optional string version = 3;
}

// Configuration for a Cloud Function network endpoint group (NEG). The function
// must be provided explicitly or in the URL mask. Note: Cloud Function must be
// in the same project and located in the same region as the Serverless NEG.
message NetworkEndpointGroupCloudFunction {
  // A user-defined name of the Cloud Function. The function name is
  // case-sensitive and must be 1-63 characters long. Example value: "func1".
  optional string function = 1;

  // A template to parse function field from a request URL. URL mask allows for
  // routing to multiple Cloud Functions without having to create multiple
  // Network Endpoint Groups and backend services. For example, request URLs "
  // mydomain.com/function1" and "mydomain.com/function2" can be backed by the
  // same Serverless NEG with URL mask "/<function>". The URL mask will parse
  // them to { function = "function1" } and { function = "function2" }
  // respectively.
  optional string url_mask = 2;
}

// Configuration for a Cloud Run network endpoint group (NEG). The service must
// be provided explicitly or in the URL mask. The tag is optional, may be
// provided explicitly or in the URL mask. Note: Cloud Run service must be in
// the same project and located in the same region as the Serverless NEG.
message NetworkEndpointGroupCloudRun {
  // Cloud Run service is the main resource of Cloud Run. The service must be
  // 1-63 characters long, and comply with RFC1035. Example value:
  // "run-service".
  optional string service = 1;

  // Optional Cloud Run tag represents the "named-revision" to provide
  // additional fine-grained traffic routing information. The tag must be 1-63
  // characters long, and comply with RFC1035. Example value: "revision-0010".
  optional string tag = 2;

  // A template to parse <service> and <tag> fields from a request URL. URL mask
  // allows for routing to multiple Run services without having to create
  // multiple network endpoint groups and backend services. For example, request
  // URLs "foo1.domain.com/bar1" and "foo1.domain.com/bar2" can be backed by the
  // same Serverless Network Endpoint Group (NEG) with URL mask
  // "<tag>.domain.com/<service>". The URL mask will parse them to {
  // service="bar1", tag="foo1" } and { service="bar2", tag="foo2" }
  // respectively.
  optional string url_mask = 3;
}

message NetworkEndpointGroupList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of NetworkEndpointGroup resources.
  repeated NetworkEndpointGroup items = 2;

  // [Output Only] The resource type, which is always
  // compute#networkEndpointGroupList for network endpoint group lists.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// All data that is specifically relevant to only network endpoint groups of
// type PRIVATE_SERVICE_CONNECT.
message NetworkEndpointGroupPscData {
  // [Output Only] Address allocated from given subnetwork for PSC. This IP
  // address acts as a VIP for a PSC NEG, allowing it to act as an endpoint in
  // L7 PSC-XLB.
  optional string consumer_psc_address = 1;

  // [Output Only] The PSC connection id of the PSC Network Endpoint Group
  // Consumer.
  optional string psc_connection_id = 2;

  // [Output Only] The connection status of the PSC Forwarding Rule.
  // ACCEPTED: The connection has been accepted by the producer.
  // CLOSED: The connection has been closed by the producer and will not serve
  // traffic going forward.
  // NEEDS_ATTENTION: The connection has been accepted by the producer, but the
  // producer needs to take further action before the forwarding rule can serve
  // traffic.
  // PENDING: The connection is pending acceptance by the producer.
  // REJECTED: The connection has been rejected by the producer.
  // STATUS_UNSPECIFIED:
  optional string psc_connection_status = 3;
}

message NetworkEndpointGroupsAttachEndpointsRequest {
  // The list of network endpoints to be attached.
  repeated NetworkEndpoint network_endpoints = 1;
}

message NetworkEndpointGroupsDetachEndpointsRequest {
  // The list of network endpoints to be detached.
  repeated NetworkEndpoint network_endpoints = 1;
}

message NetworkEndpointGroupsListEndpointsRequest {
  // Optional query parameter for showing the health status of each network
  // endpoint. Valid options are SKIP or SHOW. If you don't specify this
  // parameter, the health status of network endpoints will not be provided.
  // SHOW: Show the health status for each network endpoint. Impacts latency of
  // the call.
  // SKIP: Health status for network endpoints will not be provided.
  optional string health_status = 1;
}

message NetworkEndpointGroupsListNetworkEndpoints {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of NetworkEndpointWithHealthStatus resources.
  repeated NetworkEndpointWithHealthStatus items = 2;

  // [Output Only] The resource type, which is always
  // compute#networkEndpointGroupsListNetworkEndpoints for the list of network
  // endpoints in the specified network endpoint group.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 5;
}

message NetworkEndpointGroupsScopedList {
  // [Output Only] The list of network endpoint groups that are contained in
  // this scope.
  repeated NetworkEndpointGroup network_endpoint_groups = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] An informational warning that replaces the list of network
  // endpoint groups when the list is empty.
  optional Warning warning = 2;
}

message NetworkEndpointWithHealthStatus {
  // [Output only] The health status of network endpoint;
  repeated HealthStatusForNetworkEndpoint healths = 1;

  // [Output only] The network endpoint;
  optional NetworkEndpoint network_endpoint = 2;
}

// A network interface resource attached to an instance.
message NetworkInterface {
  // An array of configurations for this interface. Currently, only one access
  // config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs
  // specified, then this instance will have no external internet access.
  repeated AccessConfig access_configs = 1;

  // An array of alias IP ranges for this network interface. You can only
  // specify this field for network interfaces in VPC networks.
  repeated AliasIpRange alias_ip_ranges = 2;

  // Fingerprint hash of contents stored in this network interface. This field
  // will be ignored when inserting an Instance or adding a NetworkInterface. An
  // up-to-date fingerprint must be provided in order to update the
  // NetworkInterface. The request will fail with error 400 Bad Request if the
  // fingerprint is not provided, or 412 Precondition Failed if the fingerprint
  // is out of date.
  optional string fingerprint = 3;

  // The prefix length of the primary internal IPv6 range.
  optional int32 internal_ipv6_prefix_length = 4;

  // An array of IPv6 access configurations for this interface. Currently, only
  // one IPv6 access config, DIRECT_IPV6, is supported. If there is no
  // ipv6AccessConfig specified, then this instance will have no external IPv6
  // Internet access.
  repeated AccessConfig ipv6_access_configs = 5;

  // [Output Only] One of EXTERNAL, INTERNAL to indicate whether the IP can be
  // accessed from the Internet. This field is always inherited from its
  // subnetwork. Valid only if stackType is IPV4_IPV6.
  // EXTERNAL: This network interface can have external IPv6.
  // INTERNAL: This network interface can have internal IPv6.
  optional string ipv6_access_type = 6;

  // An IPv6 internal network address for this network interface. To use a
  // static internal IP address, it must be unused and in the same region as the
  // instance's zone. If not specified, Google Cloud will automatically assign
  // an internal IPv6 address from the instance's subnetwork.
  optional string ipv6_address = 7;

  // [Output Only] Type of the resource. Always compute#networkInterface for
  // network interfaces.
  optional string kind = 8;

  // [Output Only] The name of the network interface, which is generated by the
  // server. For a VM, the network interface uses the nicN naming format. Where
  // N is a value between 0 and 7. The default interface value is nic0.
  optional string name = 9;

  // URL of the VPC network resource for this instance. When creating an
  // instance, if neither the network nor the subnetwork is specified, the
  // default network global/networks/default is used. If the selected project
  // doesn't have the default network, you must specify a network or subnet. If
  // the network is not specified but the subnetwork is specified, the network
  // is inferred. If you specify this property, you can specify the network as a
  // full or partial URL. For example, the following are all valid URLs: -
  // https://www.googleapis.com/compute/v1/projects/project/global/networks/
  // network - projects/project/global/networks/network -
  // global/networks/default
  optional string network = 10;

  // The URL of the network attachment that this interface should connect to in
  // the following format:
  // projects/{project_number}/regions/{region_name}/networkAttachments/{network_attachment_name}.
  optional string network_attachment = 11;

  // An IPv4 internal IP address to assign to the instance for this network
  // interface. If not specified by the user, an unused internal IP is assigned
  // by the system.
  optional string network_ip = 12;

  // The type of vNIC to be used on this interface. This may be gVNIC or
  // VirtioNet.
  // GVNIC: GVNIC
  // UNSPECIFIED_NIC_TYPE: No type specified.
  // VIRTIO_NET: VIRTIO
  optional string nic_type = 13;

  // The networking queue count that's specified by users for the network
  // interface. Both Rx and Tx queues will be set to this number. It'll be empty
  // if not specified by the users.
  optional int32 queue_count = 14;

  // The stack type for this network interface to identify whether the IPv6
  // feature is enabled or not. If not specified, IPV4_ONLY will be used. This
  // field can be both set at instance creation and update network interface
  // operations.
  // IPV4_IPV6: The network interface can have both IPv4 and IPv6 addresses.
  // IPV4_ONLY: The network interface will be assigned IPv4 address.
  optional string stack_type = 15;

  // The URL of the Subnetwork resource for this instance. If the network
  // resource is in legacy mode, do not specify this field. If the network is in
  // auto subnet mode, specifying the subnetwork is optional. If the network is
  // in custom subnet mode, specifying the subnetwork is required. If you
  // specify this field, you can specify the subnetwork as a full or partial
  // URL. For example, the following are all valid URLs: -
  // https://www.googleapis.com/compute/v1/projects/project/regions/region
  // /subnetworks/subnetwork - regions/region/subnetworks/subnetwork
  optional string subnetwork = 16;
}

// Contains a list of networks.
message NetworkList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of Network resources.
  repeated Network items = 2;

  // [Output Only] Type of resource. Always compute#networkList for lists of
  // networks.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// A network peering attached to a network resource. The message includes the
// peering name, peer network, peering state, and a flag indicating whether
// Google Compute Engine should automatically create routes for the peering.
message NetworkPeering {
  // This field will be deprecated soon. Use the exchange_subnet_routes field
  // instead. Indicates whether full mesh connectivity is created and managed
  // automatically between peered networks. Currently this field should always
  // be true since Google Compute Engine will automatically create and manage
  // subnetwork routes between two networks when peering state is ACTIVE.
  optional bool auto_create_routes = 1;

  // Indicates whether full mesh connectivity is created and managed
  // automatically between peered networks. Currently this field should always
  // be true since Google Compute Engine will automatically create and manage
  // subnetwork routes between two networks when peering state is ACTIVE.
  optional bool exchange_subnet_routes = 2;

  // Whether to export the custom routes to peer network. The default value is
  // false.
  optional bool export_custom_routes = 3;

  // Whether subnet routes with public IP range are exported. The default value
  // is true, all subnet routes are exported. IPv4 special-use ranges are always
  // exported to peers and are not controlled by this field.
  optional bool export_subnet_routes_with_public_ip = 4;

  // Whether to import the custom routes from peer network. The default value is
  // false.
  optional bool import_custom_routes = 5;

  // Whether subnet routes with public IP range are imported. The default value
  // is false. IPv4 special-use ranges are always imported from peers and are
  // not controlled by this field.
  optional bool import_subnet_routes_with_public_ip = 6;

  // Name of this peering. Provided by the client when the peering is created.
  // The name must comply with RFC1035. Specifically, the name must be 1-63
  // characters long and match regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`.
  // The first character must be a lowercase letter, and all the following
  // characters must be a dash, lowercase letter, or digit, except the last
  // character, which cannot be a dash.
  optional string name = 7;

  // The URL of the peer network. It can be either full URL or partial URL. The
  // peer network may belong to a different project. If the partial URL does not
  // contain project, it is assumed that the peer network is in the same project
  // as the current network.
  optional string network = 8;

  // Maximum Transmission Unit in bytes.
  optional int32 peer_mtu = 9;

  // Which IP version(s) of traffic and routes are allowed to be imported or
  // exported between peer networks. The default value is IPV4_ONLY.
  // IPV4_IPV6: This Peering will allow IPv4 traffic and routes to be exchanged.
  // Additionally if the matching peering is IPV4_IPV6, IPv6 traffic and routes
  // will be exchanged as well.
  // IPV4_ONLY: This Peering will only allow IPv4 traffic and routes to be
  // exchanged, even if the matching peering is IPV4_IPV6.
  optional string stack_type = 10;

  // [Output Only] State for the peering, either `ACTIVE` or `INACTIVE`. The
  // peering is `ACTIVE` when there's a matching configuration in the peer
  // network.
  // ACTIVE: Matching configuration exists on the peer.
  // INACTIVE: There is no matching configuration on the peer, including the
  // case when peer does not exist.
  optional string state = 11;

  // [Output Only] Details about the current state of the peering.
  optional string state_details = 12;
}

message NetworkPerformanceConfig {
  // DEFAULT:
  // TIER_1:
  optional string total_egress_bandwidth_tier = 1;
}

// A routing configuration attached to a network resource. The message includes
// the list of routers associated with the network, and a flag indicating the
// type of routing behavior to enforce network-wide.
message NetworkRoutingConfig {
  // The network-wide routing mode to use. If set to REGIONAL, this network's
  // Cloud Routers will only advertise routes with subnets of this network in
  // the same region as the router. If set to GLOBAL, this network's Cloud
  // Routers will advertise routes with all subnets of this network, across
  // regions.
  // GLOBAL:
  // REGIONAL:
  optional string routing_mode = 1;
}

message NetworksAddPeeringRequest {
  // This field will be deprecated soon. Use exchange_subnet_routes in
  // network_peering instead. Indicates whether full mesh connectivity is
  // created and managed automatically between peered networks. Currently this
  // field should always be true since Google Compute Engine will automatically
  // create and manage subnetwork routes between two networks when peering state
  // is ACTIVE.
  optional bool auto_create_routes = 1;

  // Name of the peering, which should conform to RFC1035.
  optional string name = 2;

  // Network peering parameters. In order to specify route policies for peering
  // using import and export custom routes, you must specify all peering related
  // parameters (name, peer network, exchange_subnet_routes) in the
  // network_peering field. The corresponding fields in
  // NetworksAddPeeringRequest will be deprecated soon.
  optional NetworkPeering network_peering = 3;

  // URL of the peer network. It can be either full URL or partial URL. The peer
  // network may belong to a different project. If the partial URL does not
  // contain project, it is assumed that the peer network is in the same project
  // as the current network.
  optional string peer_network = 4;
}

message NetworksGetEffectiveFirewallsResponse {
  // Effective firewalls from firewall policy.
  repeated NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy
      firewall_policys = 1;

  // Effective firewalls on the network.
  repeated Firewall firewalls = 2;
}

message NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy {
  // [Output Only] Deprecated, please use short name instead. The display name
  // of the firewall policy.
  optional string display_name = 1;

  // [Output Only] The name of the firewall policy.
  optional string name = 2;

  // The rules that apply to the network.
  repeated FirewallPolicyRule rules = 3;

  // [Output Only] The short name of the firewall policy.
  optional string short_name = 4;

  // [Output Only] The type of the firewall policy.
  // HIERARCHY:
  // NETWORK:
  // UNSPECIFIED:
  optional string type = 5;
}

message NetworksRemovePeeringRequest {
  // Name of the peering, which should conform to RFC1035.
  optional string name = 1;
}

message NetworksUpdatePeeringRequest {
  optional NetworkPeering network_peering = 1;
}

// Represents a sole-tenant Node Group resource. A sole-tenant node is a
// physical server that is dedicated to hosting VM instances only for your
// specific project. Use sole-tenant nodes to keep your instances physically
// separated from instances in other projects, or to group your instances
// together on the same host hardware. For more information, read Sole-tenant
// nodes.
message NodeGroup {
  // Specifies how autoscaling should behave.
  optional NodeGroupAutoscalingPolicy autoscaling_policy = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 2;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 3;

  optional string fingerprint = 4;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 5;

  // [Output Only] The type of the resource. Always compute#nodeGroup for node
  // group.
  optional string kind = 6;

  // An opaque location hint used to place the Node close to other resources.
  // This field is for use by internal tools that use the public API. The
  // location hint here on the NodeGroup overrides any location_hint present in
  // the NodeTemplate.
  optional string location_hint = 7;

  // Specifies how to handle instances when a node in the group undergoes
  // maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or
  // MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT. For more
  // information, see Maintenance policies.
  // DEFAULT: Allow the node and corresponding instances to retain default
  // maintenance behavior.
  // MAINTENANCE_POLICY_UNSPECIFIED:
  // MIGRATE_WITHIN_NODE_GROUP: When maintenance must be done on a node, the
  // instances on that node will be moved to other nodes in the group. Instances
  // with onHostMaintenance = MIGRATE will live migrate to their destinations
  // while instances with onHostMaintenance = TERMINATE will terminate and then
  // restart on their destination nodes if automaticRestart = true.
  // RESTART_IN_PLACE: Instances in this group will restart on the same node
  // when maintenance has completed. Instances must have onHostMaintenance =
  // TERMINATE, and they will only restart if automaticRestart = true.
  optional string maintenance_policy = 8;

  optional NodeGroupMaintenanceWindow maintenance_window = 9;

  // The name of the resource, provided by the client when initially creating
  // the resource. The resource name must be 1-63 characters long, and comply
  // with RFC1035. Specifically, the name must be 1-63 characters long and match
  // the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
  // character must be a lowercase letter, and all following characters must be
  // a dash, lowercase letter, or digit, except the last character, which cannot
  // be a dash.
  optional string name = 10;

  // URL of the node template to create the node group from.
  optional string node_template = 11;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 12;

  // Share-settings for the node group
  optional ShareSettings share_settings = 13;

  // [Output Only] The total number of nodes in the node group.
  optional int32 size = 14;

  // CREATING:
  // DELETING:
  // INVALID:
  // READY:
  optional string status = 15;

  // [Output Only] The name of the zone where the node group resides, such as
  // us-central1-a.
  optional string zone = 16;
}

message NodeGroupAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of NodeGroupsScopedList resources.
  map<string, NodeGroupsScopedList> items = 2;

  // [Output Only] Type of resource.Always compute#nodeGroupAggregatedList for
  // aggregated lists of node groups.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

message NodeGroupAutoscalingPolicy {
  // The maximum number of nodes that the group should have. Must be set if
  // autoscaling is enabled. Maximum value allowed is 100.
  optional int32 max_nodes = 1;

  // The minimum number of nodes that the group should have.
  optional int32 min_nodes = 2;

  // The autoscaling mode. Set to one of: ON, OFF, or ONLY_SCALE_OUT. For more
  // information, see Autoscaler modes.
  // MODE_UNSPECIFIED:
  // OFF: Autoscaling is disabled.
  // ON: Autocaling is fully enabled.
  // ONLY_SCALE_OUT: Autoscaling will only scale out and will not remove nodes.
  optional string mode = 3;
}

// Contains a list of nodeGroups.
message NodeGroupList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of NodeGroup resources.
  repeated NodeGroup items = 2;

  // [Output Only] Type of resource.Always compute#nodeGroupList for lists of
  // node groups.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// Time window specified for daily maintenance operations. GCE's internal
// maintenance will be performed within this window.
message NodeGroupMaintenanceWindow {
  // [Output only] A predetermined duration for the window, automatically chosen
  // to be the smallest possible in the given scenario.
  optional Duration maintenance_duration = 1;

  // Start time of the window. This must be in UTC format that resolves to one
  // of 00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example, both 13:00-5
  // and 08:00 are valid.
  optional string start_time = 2;
}

message NodeGroupNode {
  // Accelerators for this node.
  repeated AcceleratorConfig accelerators = 1;

  // Node resources that are reserved by all instances.
  optional InstanceConsumptionInfo consumed_resources = 2;

  // CPU overcommit.
  // CPU_OVERCOMMIT_TYPE_UNSPECIFIED:
  // ENABLED:
  // NONE:
  optional string cpu_overcommit_type = 3;

  // Local disk configurations.
  repeated LocalDisk disks = 4;

  // Instance data that shows consumed resources on the node.
  repeated InstanceConsumptionData instance_consumption_data = 5;

  // Instances scheduled on this node.
  repeated string instances = 6;

  // The name of the node.
  optional string name = 7;

  // The type of this node.
  optional string node_type = 8;

  // [Output Only] Reserved for future use.
  optional bool satisfies_pzs = 9;

  // Binding properties for the physical server.
  optional ServerBinding server_binding = 10;

  // Server ID associated with this node.
  optional string server_id = 11;

  // CREATING:
  // DELETING:
  // INVALID:
  // READY:
  // REPAIRING:
  optional string status = 12;

  // Total amount of available resources on the node.
  optional InstanceConsumptionInfo total_resources = 13;
}

message NodeGroupsAddNodesRequest {
  // Count of additional nodes to be added to the node group.
  optional int32 additional_node_count = 1;
}

message NodeGroupsDeleteNodesRequest {
  // Names of the nodes to delete.
  repeated string nodes = 1;
}

message NodeGroupsListNodes {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of Node resources.
  repeated NodeGroupNode items = 2;

  // [Output Only] The resource type, which is always
  // compute.nodeGroupsListNodes for the list of nodes in the specified node
  // group.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message NodeGroupsScopedList {
  // [Output Only] A list of node groups contained in this scope.
  repeated NodeGroup node_groups = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] An informational warning that appears when the nodeGroup list
  // is empty.
  optional Warning warning = 2;
}

message NodeGroupsSetNodeTemplateRequest {
  // Full or partial URL of the node template resource to be updated for this
  // node group.
  optional string node_template = 1;
}

// Represent a sole-tenant Node Template resource. You can use a template to
// define properties for nodes in a node group. For more information, read
// Creating node groups and instances.
message NodeTemplate {
  repeated AcceleratorConfig accelerators = 1;

  // CPU overcommit.
  // CPU_OVERCOMMIT_TYPE_UNSPECIFIED:
  // ENABLED:
  // NONE:
  optional string cpu_overcommit_type = 2;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 3;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 4;

  repeated LocalDisk disks = 5;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 6;

  // [Output Only] The type of the resource. Always compute#nodeTemplate for
  // node templates.
  optional string kind = 7;

  // The name of the resource, provided by the client when initially creating
  // the resource. The resource name must be 1-63 characters long, and comply
  // with RFC1035. Specifically, the name must be 1-63 characters long and match
  // the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
  // character must be a lowercase letter, and all following characters must be
  // a dash, lowercase letter, or digit, except the last character, which cannot
  // be a dash.
  optional string name = 8;

  // Labels to use for node affinity, which will be used in instance scheduling.
  map<string, string> node_affinity_labels = 9;

  // The node type to use for nodes group that are created from this template.
  optional string node_type = 10;

  // Do not use. Instead, use the node_type property.
  optional NodeTemplateNodeTypeFlexibility node_type_flexibility = 11;

  // [Output Only] The name of the region where the node template resides, such
  // as us-central1.
  optional string region = 12;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 13;

  // Sets the binding properties for the physical server. Valid values include:
  // - *[Default]* RESTART_NODE_ON_ANY_SERVER: Restarts VMs on any available
  // physical server - RESTART_NODE_ON_MINIMAL_SERVER: Restarts VMs on the same
  // physical server whenever possible See Sole-tenant node options for more
  // information.
  optional ServerBinding server_binding = 14;

  // [Output Only] The status of the node template. One of the following values:
  // CREATING, READY, and DELETING.
  // CREATING: Resources are being allocated.
  // DELETING: The node template is currently being deleted.
  // INVALID: Invalid status.
  // READY: The node template is ready.
  optional string status = 15;

  // [Output Only] An optional, human-readable explanation of the status.
  optional string status_message = 16;
}

message NodeTemplateAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of NodeTemplatesScopedList resources.
  map<string, NodeTemplatesScopedList> items = 2;

  // [Output Only] Type of resource.Always compute#nodeTemplateAggregatedList
  // for aggregated lists of node templates.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Contains a list of node templates.
message NodeTemplateList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of NodeTemplate resources.
  repeated NodeTemplate items = 2;

  // [Output Only] Type of resource.Always compute#nodeTemplateList for lists of
  // node templates.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message NodeTemplateNodeTypeFlexibility {
  optional string cpus = 1;

  optional string local_ssd = 2;

  optional string memory = 3;
}

message NodeTemplatesScopedList {
  // [Output Only] A list of node templates contained in this scope.
  repeated NodeTemplate node_templates = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] An informational warning that appears when the node templates
  // list is empty.
  optional Warning warning = 2;
}

// Represent a sole-tenant Node Type resource. Each node within a node group
// must have a node type. A node type specifies the total amount of cores and
// memory for that node. Currently, the only available node type is
// n1-node-96-624 node type that has 96 vCPUs and 624 GB of memory, available in
// multiple zones. For more information read Node types.
message NodeType {
  // [Output Only] The CPU platform used by this node type.
  optional string cpu_platform = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 2;

  // [Output Only] The deprecation status associated with this node type.
  optional DeprecationStatus deprecated = 3;

  // [Output Only] An optional textual description of the resource.
  optional string description = 4;

  // [Output Only] The number of virtual CPUs that are available to the node
  // type.
  optional int32 guest_cpus = 5;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 6;

  // [Output Only] The type of the resource. Always compute#nodeType for node
  // types.
  optional string kind = 7;

  // [Output Only] Local SSD available to the node type, defined in GB.
  optional int32 local_ssd_gb = 8;

  // [Output Only] The amount of physical memory available to the node type,
  // defined in MB.
  optional int32 memory_mb = 9;

  // [Output Only] Name of the resource.
  optional string name = 10;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 11;

  // [Output Only] The name of the zone where the node type resides, such as
  // us-central1-a.
  optional string zone = 12;
}

message NodeTypeAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of NodeTypesScopedList resources.
  map<string, NodeTypesScopedList> items = 2;

  // [Output Only] Type of resource.Always compute#nodeTypeAggregatedList for
  // aggregated lists of node types.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Contains a list of node types.
message NodeTypeList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of NodeType resources.
  repeated NodeType items = 2;

  // [Output Only] Type of resource.Always compute#nodeTypeList for lists of
  // node types.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message NodeTypesScopedList {
  // [Output Only] A list of node types contained in this scope.
  repeated NodeType node_types = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] An informational warning that appears when the node types
  // list is empty.
  optional Warning warning = 2;
}

// Represents a notification endpoint. A notification endpoint resource defines
// an endpoint to receive notifications when there are status changes detected
// by the associated health check service. For more information, see Health
// checks overview.
message NotificationEndpoint {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 2;

  // Settings of the gRPC notification endpoint including the endpoint URL and
  // the retry duration.
  optional NotificationEndpointGrpcSettings grpc_settings = 3;

  // [Output Only] A unique identifier for this resource type. The server
  // generates this identifier.
  optional string id = 4;

  // [Output Only] Type of the resource. Always compute#notificationEndpoint for
  // notification endpoints.
  optional string kind = 5;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 6;

  // [Output Only] URL of the region where the notification endpoint resides.
  // This field applies only to the regional resource. You must specify this
  // field as part of the HTTP request URL. It is not settable as a field in the
  // request body.
  optional string region = 7;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 8;
}

// Represents a gRPC setting that describes one gRPC notification endpoint and
// the retry duration attempting to send notification to this endpoint.
message NotificationEndpointGrpcSettings {
  // Optional. If specified, this field is used to set the authority header by
  // the sender of notifications. See
  // https://tools.ietf.org/html/rfc7540#section-8.1.2.3
  optional string authority = 1;

  // Endpoint to which gRPC notifications are sent. This must be a valid gRPCLB
  // DNS name.
  optional string endpoint = 2;

  // Optional. If specified, this field is used to populate the "name" field in
  // gRPC requests.
  optional string payload_name = 3;

  // Optional. This field is used to configure how often to send a full update
  // of all non-healthy backends. If unspecified, full updates are not sent. If
  // specified, must be in the range between 600 seconds to 3600 seconds. Nanos
  // are disallowed. Can only be set for regional notification endpoints.
  optional Duration resend_interval = 4;

  // How much time (in seconds) is spent attempting notification retries until a
  // successful response is received. Default is 30s. Limit is 20m (1200s). Must
  // be a positive number.
  optional uint32 retry_duration_sec = 5;
}

message NotificationEndpointList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of NotificationEndpoint resources.
  repeated NotificationEndpoint items = 2;

  // [Output Only] Type of the resource. Always compute#notificationEndpoint for
  // notification endpoints.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// Represents an Operation resource. Google Compute Engine has three Operation
// resources: * [Global](/compute/docs/reference/rest/v1/globalOperations) *
// [Regional](/compute/docs/reference/rest/v1/regionOperations) *
// [Zonal](/compute/docs/reference/rest/v1/zoneOperations) You can use an
// operation resource to manage asynchronous API requests. For more information,
// read Handling API responses. Operations can be global, regional or zonal. -
// For global operations, use the `globalOperations` resource. - For regional
// operations, use the `regionOperations` resource. - For zonal operations, use
// the `zonalOperations` resource. For more information, read Global, Regional,
// and Zonal Resources.
message Operation {
  // [Output Only] The value of `requestId` if you provided it in the request.
  // Not present otherwise.
  optional string client_operation_id = 1;

  // [Deprecated] This field is deprecated.
  optional string creation_timestamp = 2;

  // [Output Only] A textual description of the operation, which is set when the
  // operation is created.
  optional string description = 3;

  // [Output Only] The time that this operation was completed. This value is in
  // RFC3339 text format.
  optional string end_time = 4;

  message Error {
    message ErrorsItem {
      // [Output Only] The error type identifier for this error.
      optional string code = 1;

      message ErrorDetailsItem {
        optional ErrorInfo error_info = 1;

        optional Help help = 2;

        optional LocalizedMessage localized_message = 3;

        optional QuotaExceededInfo quota_info = 4;
      }

      // [Output Only] An optional list of messages that contain the error
      // details. There is a set of defined message types to use for providing
      // details.The syntax depends on the error code. For example,
      // QuotaExceededInfo will have details when the error code is
      // QUOTA_EXCEEDED.
      repeated ErrorDetailsItem error_details = 2;

      // [Output Only] Indicates the field in the request that caused the error.
      // This property is optional.
      optional string location = 3;

      // [Output Only] An optional, human-readable error message.
      optional string message = 4;
    }

    // [Output Only] The array of errors encountered while processing this
    // operation.
    repeated ErrorsItem errors = 1;
  }

  // [Output Only] If errors are generated during processing of the operation,
  // this field will be populated.
  optional Error error = 5;

  // [Output Only] If the operation fails, this field contains the HTTP error
  // message that was returned, such as `NOT FOUND`.
  optional string http_error_message = 6;

  // [Output Only] If the operation fails, this field contains the HTTP error
  // status code that was returned. For example, a `404` means the resource was
  // not found.
  optional int32 http_error_status_code = 7;

  // [Output Only] The unique identifier for the operation. This identifier is
  // defined by the server.
  optional string id = 8;

  // [Output Only] The time that this operation was requested. This value is in
  // RFC3339 text format.
  optional string insert_time = 9;

  // [Output Only] Type of the resource. Always `compute#operation` for
  // Operation resources.
  optional string kind = 10;

  // [Output Only] Name of the operation.
  optional string name = 11;

  // [Output Only] An ID that represents a group of operations, such as when a
  // group of operations results from a `bulkInsert` API request.
  optional string operation_group_id = 12;

  // [Output Only] The type of operation, such as `insert`, `update`, or
  // `delete`, and so on.
  optional string operation_type = 13;

  // [Output Only] An optional progress indicator that ranges from 0 to 100.
  // There is no requirement that this be linear or support any granularity of
  // operations. This should not be used to guess when the operation will be
  // complete. This number should monotonically increase as the operation
  // progresses.
  optional int32 progress = 14;

  // [Output Only] The URL of the region where the operation resides. Only
  // applicable when performing regional operations.
  optional string region = 15;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 16;

  // [Output Only] The time that this operation was started by the server. This
  // value is in RFC3339 text format.
  optional string start_time = 17;

  // [Output Only] The status of the operation, which can be one of the
  // following: `PENDING`, `RUNNING`, or `DONE`.
  // DONE:
  // PENDING:
  // RUNNING:
  optional string status = 18;

  // [Output Only] An optional textual description of the current status of the
  // operation.
  optional string status_message = 19;

  // [Output Only] The unique target ID, which identifies a specific incarnation
  // of the target resource.
  optional string target_id = 20;

  // [Output Only] The URL of the resource that the operation modifies. For
  // operations related to creating a snapshot, this points to the persistent
  // disk that the snapshot was created from.
  optional string target_link = 21;

  // [Output Only] User who requested the operation, for example:
  // `user@example.com`.
  optional string user = 22;

  message WarningsItem {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] If warning messages are generated during processing of the
  // operation, this field will be populated.
  repeated WarningsItem warnings = 23;

  // [Output Only] The URL of the zone where the operation resides. Only
  // applicable when performing per-zone operations.
  optional string zone = 24;
}

message OperationAggregatedList {
  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 1;

  // [Output Only] A map of scoped operation lists.
  map<string, OperationsScopedList> items = 2;

  // [Output Only] Type of resource. Always `compute#operationAggregatedList`
  // for aggregated lists of operations.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than `maxResults`, use
  // the `nextPageToken` as a value for the query parameter `pageToken` in the
  // next list request. Subsequent list requests will have their own
  // `nextPageToken` to continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Contains a list of Operation resources.
message OperationList {
  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 1;

  // [Output Only] A list of Operation resources.
  repeated Operation items = 2;

  // [Output Only] Type of resource. Always `compute#operations` for Operations
  // resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than `maxResults`, use
  // the `nextPageToken` as a value for the query parameter `pageToken` in the
  // next list request. Subsequent list requests will have their own
  // `nextPageToken` to continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message OperationsScopedList {
  // [Output Only] A list of operations contained in this scope.
  repeated Operation operations = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning which replaces the list of operations
  // when the list is empty.
  optional Warning warning = 2;
}

// Settings controlling the eviction of unhealthy hosts from the load balancing
// pool for the backend service.
message OutlierDetection {
  // The base time that a host is ejected for. The real ejection time is equal
  // to the base ejection time multiplied by the number of times the host has
  // been ejected. Defaults to 30000ms or 30s.
  optional Duration base_ejection_time = 1;

  // Number of errors before a host is ejected from the connection pool. When
  // the backend host is accessed over HTTP, a 5xx return code qualifies as an
  // error. Defaults to 5. Not supported when the backend service is referenced
  // by a URL map that is bound to target gRPC proxy that has
  // validateForProxyless field set to true.
  optional int32 consecutive_errors = 2;

  // The number of consecutive gateway failures (502, 503, 504 status or
  // connection errors that are mapped to one of those status codes) before a
  // consecutive gateway failure ejection occurs. Defaults to 3. Not supported
  // when the backend service is referenced by a URL map that is bound to target
  // gRPC proxy that has validateForProxyless field set to true.
  optional int32 consecutive_gateway_failure = 3;

  // The percentage chance that a host will be actually ejected when an outlier
  // status is detected through consecutive 5xx. This setting can be used to
  // disable ejection or to ramp it up slowly. Defaults to 0. Not supported when
  // the backend service is referenced by a URL map that is bound to target gRPC
  // proxy that has validateForProxyless field set to true.
  optional int32 enforcing_consecutive_errors = 4;

  // The percentage chance that a host will be actually ejected when an outlier
  // status is detected through consecutive gateway failures. This setting can
  // be used to disable ejection or to ramp it up slowly. Defaults to 100. Not
  // supported when the backend service is referenced by a URL map that is bound
  // to target gRPC proxy that has validateForProxyless field set to true.
  optional int32 enforcing_consecutive_gateway_failure = 5;

  // The percentage chance that a host will be actually ejected when an outlier
  // status is detected through success rate statistics. This setting can be
  // used to disable ejection or to ramp it up slowly. Defaults to 100.
  optional int32 enforcing_success_rate = 6;

  // Time interval between ejection analysis sweeps. This can result in both new
  // ejections as well as hosts being returned to service. Defaults to 1 second.
  optional Duration interval = 7;

  // Maximum percentage of hosts in the load balancing pool for the backend
  // service that can be ejected. Defaults to 50%.
  optional int32 max_ejection_percent = 8;

  // The number of hosts in a cluster that must have enough request volume to
  // detect success rate outliers. If the number of hosts is less than this
  // setting, outlier detection via success rate statistics is not performed for
  // any host in the cluster. Defaults to 5.
  optional int32 success_rate_minimum_hosts = 9;

  // The minimum number of total requests that must be collected in one interval
  // (as defined by the interval duration above) to include this host in success
  // rate based outlier detection. If the volume is lower than this setting,
  // outlier detection via success rate statistics is not performed for that
  // host. Defaults to 100.
  optional int32 success_rate_request_volume = 10;

  // This factor is used to determine the ejection threshold for success rate
  // outlier ejection. The ejection threshold is the difference between the mean
  // success rate, and the product of this factor and the standard deviation of
  // the mean success rate: mean - (stdev * success_rate_stdev_factor). This
  // factor is divided by a thousand to get a double. That is, if the desired
  // factor is 1.9, the runtime value should be 1900. Defaults to 1900.
  optional int32 success_rate_stdev_factor = 11;
}

// Next free: 7
message PacketIntervals {
  // Average observed inter-packet interval in milliseconds.
  optional string avg_ms = 1;

  // From how long ago in the past these intervals were observed.
  // DURATION_UNSPECIFIED:
  // HOUR:
  // MAX: From BfdSession object creation time.
  // MINUTE:
  optional string duration = 2;

  // Maximum observed inter-packet interval in milliseconds.
  optional string max_ms = 3;

  // Minimum observed inter-packet interval in milliseconds.
  optional string min_ms = 4;

  // Number of inter-packet intervals from which these statistics were derived.
  optional string num_intervals = 5;

  // The type of packets for which inter-packet intervals were computed.
  // LOOPBACK: Only applies to Echo packets. This shows the intervals between
  // sending and receiving the same packet.
  // RECEIVE: Intervals between received packets.
  // TRANSMIT: Intervals between transmitted packets.
  // TYPE_UNSPECIFIED:
  optional string type = 6;
}

// Represents a Packet Mirroring resource. Packet Mirroring clones the traffic
// of specified instances in your Virtual Private Cloud (VPC) network and
// forwards it to a collector destination, such as an instance group of an
// internal TCP/UDP load balancer, for analysis or examination. For more
// information about setting up Packet Mirroring, see Using Packet Mirroring.
message PacketMirroring {
  // The Forwarding Rule resource of type loadBalancingScheme=INTERNAL that will
  // be used as collector for mirrored traffic. The specified forwarding rule
  // must have isMirroringCollector set to true.
  optional PacketMirroringForwardingRuleInfo collector_ilb = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 2;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 3;

  // Indicates whether or not this packet mirroring takes effect. If set to
  // FALSE, this packet mirroring policy will not be enforced on the network.
  // The default is TRUE.
  // FALSE:
  // TRUE:
  optional string enable = 4;

  // Filter for mirrored traffic. If unspecified, all traffic is mirrored.
  optional PacketMirroringFilter filter = 5;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 6;

  // [Output Only] Type of the resource. Always compute#packetMirroring for
  // packet mirrorings.
  optional string kind = 7;

  // PacketMirroring mirroredResourceInfos. MirroredResourceInfo specifies a set
  // of mirrored VM instances, subnetworks and/or tags for which traffic from/to
  // all VM instances will be mirrored.
  optional PacketMirroringMirroredResourceInfo mirrored_resources = 8;

  // Name of the resource; provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 9;

  // Specifies the mirrored VPC network. Only packets in this network will be
  // mirrored. All mirrored VMs should have a NIC in the given network. All
  // mirrored subnetworks should belong to the given network.
  optional PacketMirroringNetworkInfo network = 10;

  // The priority of applying this configuration. Priority is used to break ties
  // in cases where there is more than one matching rule. In the case of two
  // rules that apply for a given Instance, the one with the lowest-numbered
  // priority value wins. Default value is 1000. Valid range is 0 through 65535.
  optional uint32 priority = 11;

  // [Output Only] URI of the region where the packetMirroring resides.
  optional string region = 12;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 13;
}

// Contains a list of packetMirrorings.
message PacketMirroringAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of PacketMirroring resources.
  map<string, PacketMirroringsScopedList> items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

message PacketMirroringFilter {
  // Protocols that apply as filter on mirrored traffic. If no protocols are
  // specified, all traffic that matches the specified CIDR ranges is mirrored.
  // If neither cidrRanges nor IPProtocols is specified, all traffic is
  // mirrored.
  repeated string ip_protocols = 1;

  // IP CIDR ranges that apply as filter on the source (ingress) or destination
  // (egress) IP in the IP header. Only IPv4 is supported. If no ranges are
  // specified, all traffic that matches the specified IPProtocols is mirrored.
  // If neither cidrRanges nor IPProtocols is specified, all traffic is
  // mirrored.
  repeated string cidr_ranges = 2;

  // Direction of traffic to mirror, either INGRESS, EGRESS, or BOTH. The
  // default is BOTH.
  // BOTH: Default, both directions are mirrored.
  // EGRESS: Only egress traffic is mirrored.
  // INGRESS: Only ingress traffic is mirrored.
  optional string direction = 3;
}

message PacketMirroringForwardingRuleInfo {
  // [Output Only] Unique identifier for the forwarding rule; defined by the
  // server.
  optional string canonical_url = 1;

  // Resource URL to the forwarding rule representing the ILB configured as
  // destination of the mirrored traffic.
  optional string url = 2;
}

// Contains a list of PacketMirroring resources.
message PacketMirroringList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of PacketMirroring resources.
  repeated PacketMirroring items = 2;

  // [Output Only] Type of resource. Always compute#packetMirroring for
  // packetMirrorings.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message PacketMirroringMirroredResourceInfo {
  // A set of virtual machine instances that are being mirrored. They must live
  // in zones contained in the same region as this packetMirroring. Note that
  // this config will apply only to those network interfaces of the Instances
  // that belong to the network specified in this packetMirroring. You may
  // specify a maximum of 50 Instances.
  repeated PacketMirroringMirroredResourceInfoInstanceInfo instances = 1;

  // A set of subnetworks for which traffic from/to all VM instances will be
  // mirrored. They must live in the same region as this packetMirroring. You
  // may specify a maximum of 5 subnetworks.
  repeated PacketMirroringMirroredResourceInfoSubnetInfo subnetworks = 2;

  // A set of mirrored tags. Traffic from/to all VM instances that have one or
  // more of these tags will be mirrored.
  repeated string tags = 3;
}

message PacketMirroringMirroredResourceInfoInstanceInfo {
  // [Output Only] Unique identifier for the instance; defined by the server.
  optional string canonical_url = 1;

  // Resource URL to the virtual machine instance which is being mirrored.
  optional string url = 2;
}

message PacketMirroringMirroredResourceInfoSubnetInfo {
  // [Output Only] Unique identifier for the subnetwork; defined by the server.
  optional string canonical_url = 1;

  // Resource URL to the subnetwork for which traffic from/to all VM instances
  // will be mirrored.
  optional string url = 2;
}

message PacketMirroringNetworkInfo {
  // [Output Only] Unique identifier for the network; defined by the server.
  optional string canonical_url = 1;

  // URL of the network resource.
  optional string url = 2;
}

message PacketMirroringsScopedList {
  // A list of packetMirrorings contained in this scope.
  repeated PacketMirroring packet_mirrorings = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // Informational warning which replaces the list of packetMirrorings when the
  // list is empty.
  optional Warning warning = 2;
}

// A matcher for the path portion of the URL. The BackendService from the
// longest-matched rule will serve the URL. If no rule was matched, the default
// service is used.
message PathMatcher {
  // defaultRouteAction takes effect when none of the pathRules or routeRules
  // match. The load balancer performs advanced routing actions, such as URL
  // rewrites and header transformations, before forwarding the request to the
  // selected backend. If defaultRouteAction specifies any
  // weightedBackendServices, defaultService must not be set. Conversely if
  // defaultService is set, defaultRouteAction cannot contain any
  // weightedBackendServices. Only one of defaultRouteAction or
  // defaultUrlRedirect must be set. URL maps for Classic external HTTP(S) load
  // balancers only support the urlRewrite action within a path matcher's
  // defaultRouteAction.
  optional HttpRouteAction default_route_action = 1;

  // The full or partial URL to the BackendService resource. This URL is used if
  // none of the pathRules or routeRules defined by this PathMatcher are
  // matched. For example, the following are all valid URLs to a BackendService
  // resource: - https://www.googleapis.com/compute/v1/projects/project
  // /global/backendServices/backendService -
  // compute/v1/projects/project/global/backendServices/backendService -
  // global/backendServices/backendService If defaultRouteAction is also
  // specified, advanced routing actions, such as URL rewrites, take effect
  // before sending the request to the backend. However, if defaultService is
  // specified, defaultRouteAction cannot contain any weightedBackendServices.
  // Conversely, if defaultRouteAction specifies any weightedBackendServices,
  // defaultService must not be specified. Only one of defaultService,
  // defaultUrlRedirect , or defaultRouteAction.weightedBackendService must be
  // set. Authorization requires one or more of the following Google IAM
  // permissions on the specified resource default_service: -
  // compute.backendBuckets.use - compute.backendServices.use
  optional string default_service = 2;

  // When none of the specified pathRules or routeRules match, the request is
  // redirected to a URL specified by defaultUrlRedirect. If defaultUrlRedirect
  // is specified, defaultService or defaultRouteAction must not be set. Not
  // supported when the URL map is bound to a target gRPC proxy.
  optional HttpRedirectAction default_url_redirect = 3;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 4;

  // Specifies changes to request and response headers that need to take effect
  // for the selected backend service. HeaderAction specified here are applied
  // after the matching HttpRouteRule HeaderAction and before the HeaderAction
  // in the UrlMap HeaderAction is not supported for load balancers that have
  // their loadBalancingScheme set to EXTERNAL. Not supported when the URL map
  // is bound to a target gRPC proxy that has validateForProxyless field set to
  // true.
  optional HttpHeaderAction header_action = 5;

  // The name to which this PathMatcher is referred by the HostRule.
  optional string name = 6;

  // The list of path rules. Use this list instead of routeRules when routing
  // based on simple path matching is all that's required. The order by which
  // path rules are specified does not matter. Matches are always done on the
  // longest-path-first basis. For example: a pathRule with a path /a/b/c/* will
  // match before /a/b/* irrespective of the order in which those paths appear
  // in this list. Within a given pathMatcher, only one of pathRules or
  // routeRules must be set.
  repeated PathRule path_rules = 7;

  // The list of HTTP route rules. Use this list instead of pathRules when
  // advanced route matching and routing actions are desired. routeRules are
  // evaluated in order of priority, from the lowest to highest number. Within a
  // given pathMatcher, you can set only one of pathRules or routeRules.
  repeated HttpRouteRule route_rules = 8;
}

// A path-matching rule for a URL. If matched, will use the specified
// BackendService to handle the traffic arriving at this URL.
message PathRule {
  // The list of path patterns to match. Each must start with / and the only
  // place a * is allowed is at the end following a /. The string fed to the
  // path matcher does not include any text after the first ? or #, and those
  // chars are not allowed here.
  repeated string paths = 1;

  // In response to a matching path, the load balancer performs advanced routing
  // actions, such as URL rewrites and header transformations, before forwarding
  // the request to the selected backend. If routeAction specifies any
  // weightedBackendServices, service must not be set. Conversely if service is
  // set, routeAction cannot contain any weightedBackendServices. Only one of
  // routeAction or urlRedirect must be set. URL maps for Classic external
  // HTTP(S) load balancers only support the urlRewrite action within a path
  // rule's routeAction.
  optional HttpRouteAction route_action = 2;

  // The full or partial URL of the backend service resource to which traffic is
  // directed if this rule is matched. If routeAction is also specified,
  // advanced routing actions, such as URL rewrites, take effect before sending
  // the request to the backend. However, if service is specified, routeAction
  // cannot contain any weightedBackendServices. Conversely, if routeAction
  // specifies any weightedBackendServices, service must not be specified. Only
  // one of urlRedirect, service or routeAction.weightedBackendService must be
  // set.
  optional string service = 3;

  // When a path pattern is matched, the request is redirected to a URL
  // specified by urlRedirect. If urlRedirect is specified, service or
  // routeAction must not be set. Not supported when the URL map is bound to a
  // target gRPC proxy.
  optional HttpRedirectAction url_redirect = 4;
}

message PerInstanceConfig {
  // Fingerprint of this per-instance config. This field can be used in
  // optimistic locking. It is ignored when inserting a per-instance config. An
  // up-to-date fingerprint must be provided in order to update an existing
  // per-instance configuration or the field needs to be unset.
  optional string fingerprint = 1;

  // The name of a per-instance configuration and its corresponding instance.
  // Serves as a merge key during UpdatePerInstanceConfigs operations, that is,
  // if a per-instance configuration with the same name exists then it will be
  // updated, otherwise a new one will be created for the VM instance with the
  // same name. An attempt to create a per-instance configconfiguration for a VM
  // instance that either doesn't exist or is not part of the group will result
  // in an error.
  optional string name = 2;

  // The intended preserved state for the given instance. Does not contain
  // preserved state generated from a stateful policy.
  optional PreservedState preserved_state = 3;

  // The status of applying this per-instance configuration on the corresponding
  // managed instance.
  // APPLYING: The per-instance configuration is being applied to the instance,
  // but is not yet effective, possibly waiting for the instance to, for
  // example, REFRESH.
  // DELETING: The per-instance configuration deletion is being applied on the
  // instance, possibly waiting for the instance to, for example, REFRESH.
  // EFFECTIVE: The per-instance configuration is effective on the instance,
  // meaning that all disks, ips and metadata specified in this configuration
  // are attached or set on the instance.
  // NONE: *[Default]* The default status, when no per-instance configuration
  // exists.
  // UNAPPLIED: The per-instance configuration is set on an instance but not
  // been applied yet.
  // UNAPPLIED_DELETION: The per-instance configuration has been deleted, but
  // the deletion is not yet applied.
  optional string status = 4;
}

// An Identity and Access Management (IAM) policy, which specifies access
// controls for Google Cloud resources. A `Policy` is a collection of
// `bindings`. A `binding` binds one or more `members`, or principals, to a
// single `role`. Principals can be user accounts, service accounts, Google
// groups, and domains (such as G Suite). A `role` is a named list of
// permissions; each `role` can be an IAM predefined role or a user-created
// custom role. For some types of Google Cloud resources, a `binding` can also
// specify a `condition`, which is a logical expression that allows access to a
// resource only if the expression evaluates to `true`. A condition can add
// constraints based on attributes of the request, the resource, or both. To
// learn which resources support conditions in their IAM policies, see the [IAM
// documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
// **JSON example:** { "bindings": [ { "role":
// "roles/resourcemanager.organizationAdmin", "members": [
// "user:mike@example.com", "group:admins@example.com", "domain:google.com",
// "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role":
// "roles/resourcemanager.organizationViewer", "members": [
// "user:eve@example.com" ], "condition": { "title": "expirable access",
// "description": "Does not grant access after Sep 2020", "expression":
// "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
// "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
// user:mike@example.com - group:admins@example.com - domain:google.com -
// serviceAccount:my-project-id@appspot.gserviceaccount.com role:
// roles/resourcemanager.organizationAdmin - members: - user:eve@example.com
// role: roles/resourcemanager.organizationViewer condition: title: expirable
// access description: Does not grant access after Sep 2020 expression:
// request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA=
// version: 3 For a description of IAM and its features, see the [IAM
// documentation](https://cloud.google.com/iam/docs/).
message Policy {
  // Specifies cloud audit logging configuration for this policy.
  repeated AuditConfig audit_configs = 1;

  // Associates a list of `members`, or principals, with a `role`. Optionally,
  // may specify a `condition` that determines how and when the `bindings` are
  // applied. Each of the `bindings` must contain at least one principal. The
  // `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of
  // these principals can be Google groups. Each occurrence of a principal
  // counts towards these limits. For example, if the `bindings` grant 50
  // different roles to `user:alice@example.com`, and not to any other
  // principal, then you can add another 1,450 principals to the `bindings` in
  // the `Policy`.
  repeated Binding bindings = 2;

  // `etag` is used for optimistic concurrency control as a way to help prevent
  // simultaneous updates of a policy from overwriting each other. It is
  // strongly suggested that systems make use of the `etag` in the
  // read-modify-write cycle to perform policy updates in order to avoid race
  // conditions: An `etag` is returned in the response to `getIamPolicy`, and
  // systems are expected to put that etag in the request to `setIamPolicy` to
  // ensure that their change will be applied to the same version of the policy.
  // **Important:** If you use IAM Conditions, you must include the `etag` field
  // whenever you call `setIamPolicy`. If you omit this field, then IAM allows
  // you to overwrite a version `3` policy with a version `1` policy, and all of
  // the conditions in the version `3` policy are lost.
  optional string etag = 3;

  // This is deprecated and has no effect. Do not use.
  repeated Rule rules = 4;

  // Specifies the format of the policy. Valid values are `0`, `1`, and `3`.
  // Requests that specify an invalid value are rejected. Any operation that
  // affects conditional role bindings must specify version `3`. This
  // requirement applies to the following operations: * Getting a policy that
  // includes a conditional role binding * Adding a conditional role binding to
  // a policy * Changing a conditional role binding in a policy * Removing any
  // role binding, with or without a condition, from a policy that includes
  // conditions **Important:** If you use IAM Conditions, you must include the
  // `etag` field whenever you call `setIamPolicy`. If you omit this field, then
  // IAM allows you to overwrite a version `3` policy with a version `1` policy,
  // and all of the conditions in the version `3` policy are lost. If a policy
  // does not include any conditions, operations on that policy may specify any
  // valid version or leave the field unset. To learn which resources support
  // conditions in their IAM policies, see the [IAM
  // documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
  optional int32 version = 5;
}

message PreconfiguredWafSet {
  // List of entities that are currently supported for WAF rules.
  repeated WafExpressionSet expression_sets = 1;
}

// Preserved state for a given instance.
message PreservedState {
  // Preserved disks defined for this instance. This map is keyed with the
  // device names of the disks.
  map<string, PreservedStatePreservedDisk> disks = 1;

  // Preserved metadata defined for this instance.
  map<string, string> metadata = 2;
}

message PreservedStatePreservedDisk {
  // These stateful disks will never be deleted during autohealing, update,
  // instance recreate operations. This flag is used to configure if the disk
  // should be deleted after it is no longer used by the group, e.g. when the
  // given instance or the whole MIG is deleted. Note: disks attached in
  // READ_ONLY mode cannot be auto-deleted.
  // NEVER:
  // ON_PERMANENT_INSTANCE_DELETION:
  optional string auto_delete = 1;

  // The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If
  // not specified, the default is to attach the disk in READ_WRITE mode.
  // READ_ONLY: Attaches this disk in read-only mode. Multiple VM instances can
  // use a disk in READ_ONLY mode at a time.
  // READ_WRITE: *[Default]* Attaches this disk in READ_WRITE mode. Only one VM
  // instance at a time can be attached to a disk in READ_WRITE mode.
  optional string mode = 2;

  // The URL of the disk resource that is stateful and should be attached to the
  // VM instance.
  optional string source = 3;
}

// Represents a Project resource. A project is used to organize resources in a
// Google Cloud Platform environment. For more information, read about the
// Resource Hierarchy.
message Project {
  // Metadata key/value pairs available to all instances contained in this
  // project. See Custom metadata for more information.
  optional Metadata common_instance_metadata = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 2;

  // This signifies the default network tier used for configuring resources of
  // the project and can only take the following values: PREMIUM, STANDARD.
  // Initially the default network tier is PREMIUM.
  // FIXED_STANDARD: Public internet quality with fixed bandwidth.
  // PREMIUM: High quality, Google-grade network tier, support for all
  // networking products.
  // STANDARD: Public internet quality, only limited support for other
  // networking products.
  // STANDARD_OVERRIDES_FIXED_STANDARD: (Output only) Temporary tier for
  // FIXED_STANDARD when fixed standard tier is expired or not configured.
  optional string default_network_tier = 3;

  // [Output Only] Default service account used by VMs running in this project.
  optional string default_service_account = 4;

  // An optional textual description of the resource.
  optional string description = 5;

  // Restricted features enabled for use on this project.
  repeated string enabled_features = 6;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server. This is *not* the project ID, and is just a unique
  // ID used by Compute Engine to identify resources.
  optional string id = 7;

  // [Output Only] Type of the resource. Always compute#project for projects.
  optional string kind = 8;

  // The project ID. For example: my-example-project. Use the project ID to make
  // requests to Compute Engine.
  optional string name = 9;

  // [Output Only] Quotas assigned to this project.
  repeated Quota quotas = 10;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 11;

  // The naming prefix for daily usage reports and the Google Cloud Storage
  // bucket where they are stored.
  optional UsageExportLocation usage_export_location = 12;

  // [Output Only] Default internal DNS setting used by VMs running in this
  // project.
  // GLOBAL_DEFAULT:
  // UNSPECIFIED_VM_DNS_SETTING:
  // ZONAL_DEFAULT:
  // ZONAL_ONLY:
  optional string vm_dns_setting = 13;

  // [Output Only] The role this project has in a shared VPC configuration.
  // Currently, only projects with the host role, which is specified by the
  // value HOST, are differentiated.
  // HOST:
  // UNSPECIFIED_XPN_PROJECT_STATUS:
  optional string xpn_project_status = 14;
}

message ProjectsDisableXpnResourceRequest {
  // Service resource (a.k.a service project) ID.
  optional XpnResourceId xpn_resource = 1;
}

message ProjectsEnableXpnResourceRequest {
  // Service resource (a.k.a service project) ID.
  optional XpnResourceId xpn_resource = 1;
}

message ProjectsGetXpnResources {
  // [Output Only] Type of resource. Always compute#projectsGetXpnResources for
  // lists of service resources (a.k.a service projects)
  optional string kind = 1;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 2;

  // Service resources (a.k.a service projects) attached to this project as
  // their shared VPC host.
  repeated XpnResourceId resources = 3;
}

message ProjectsListXpnHostsRequest {
  // Optional organization ID managed by Cloud Resource Manager, for which to
  // list shared VPC host projects. If not specified, the organization will be
  // inferred from the project.
  optional string organization = 1;
}

message ProjectsSetDefaultNetworkTierRequest {
  // Default network tier to be set.
  // FIXED_STANDARD: Public internet quality with fixed bandwidth.
  // PREMIUM: High quality, Google-grade network tier, support for all
  // networking products.
  // STANDARD: Public internet quality, only limited support for other
  // networking products.
  // STANDARD_OVERRIDES_FIXED_STANDARD: (Output only) Temporary tier for
  // FIXED_STANDARD when fixed standard tier is expired or not configured.
  optional string network_tier = 1;
}

// A public advertised prefix represents an aggregated IP prefix or netblock
// which customers bring to cloud. The IP prefix is a single unit of route
// advertisement and is announced globally to the internet.
message PublicAdvertisedPrefix {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 2;

  // The IPv4 address to be used for reverse DNS verification.
  optional string dns_verification_ip = 3;

  // Fingerprint of this resource. A hash of the contents stored in this object.
  // This field is used in optimistic locking. This field will be ignored when
  // inserting a new PublicAdvertisedPrefix. An up-to-date fingerprint must be
  // provided in order to update the PublicAdvertisedPrefix, otherwise the
  // request will fail with error 412 conditionNotMet. To see the latest
  // fingerprint, make a get() request to retrieve a PublicAdvertisedPrefix.
  optional string fingerprint = 4;

  // [Output Only] The unique identifier for the resource type. The server
  // generates this identifier.
  optional string id = 5;

  // The IPv4 address range, in CIDR format, represented by this public
  // advertised prefix.
  optional string ip_cidr_range = 6;

  // [Output Only] Type of the resource. Always compute#publicAdvertisedPrefix
  // for public advertised prefixes.
  optional string kind = 7;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 8;

  // [Output Only] The list of public delegated prefixes that exist for this
  // public advertised prefix.
  repeated PublicAdvertisedPrefixPublicDelegatedPrefix
      public_delegated_prefixs = 9;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 10;

  // [Output Only] The shared secret to be used for reverse DNS verification.
  optional string shared_secret = 11;

  // The status of the public advertised prefix. Possible values include: -
  // `INITIAL`: RPKI validation is complete. - `PTR_CONFIGURED`: User has
  // configured the PTR. - `VALIDATED`: Reverse DNS lookup is successful. -
  // `REVERSE_DNS_LOOKUP_FAILED`: Reverse DNS lookup failed. -
  // `PREFIX_CONFIGURATION_IN_PROGRESS`: The prefix is being configured. -
  // `PREFIX_CONFIGURATION_COMPLETE`: The prefix is fully configured. -
  // `PREFIX_REMOVAL_IN_PROGRESS`: The prefix is being removed.
  // INITIAL: RPKI validation is complete.
  // PREFIX_CONFIGURATION_COMPLETE: The prefix is fully configured.
  // PREFIX_CONFIGURATION_IN_PROGRESS: The prefix is being configured.
  // PREFIX_REMOVAL_IN_PROGRESS: The prefix is being removed.
  // PTR_CONFIGURED: User has configured the PTR.
  // REVERSE_DNS_LOOKUP_FAILED: Reverse DNS lookup failed.
  // VALIDATED: Reverse DNS lookup is successful.
  optional string status = 12;
}

message PublicAdvertisedPrefixList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of PublicAdvertisedPrefix resources.
  repeated PublicAdvertisedPrefix items = 2;

  // [Output Only] Type of the resource. Always compute#publicAdvertisedPrefix
  // for public advertised prefixes.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// Represents a CIDR range which can be used to assign addresses.
message PublicAdvertisedPrefixPublicDelegatedPrefix {
  // The IP address range of the public delegated prefix
  optional string ip_range = 1;

  // The name of the public delegated prefix
  optional string name = 2;

  // The project number of the public delegated prefix
  optional string project = 3;

  // The region of the public delegated prefix if it is regional. If absent, the
  // prefix is global.
  optional string region = 4;

  // The status of the public delegated prefix. Possible values are:
  // INITIALIZING: The public delegated prefix is being initialized and
  // addresses cannot be created yet. ANNOUNCED: The public delegated prefix is
  // active.
  optional string status = 5;
}

// A PublicDelegatedPrefix resource represents an IP block within a
// PublicAdvertisedPrefix that is configured within a single cloud scope (global
// or region). IPs in the block can be allocated to resources within that scope.
// Public delegated prefixes may be further broken up into smaller IP blocks in
// the same scope as the parent block.
message PublicDelegatedPrefix {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 2;

  // Fingerprint of this resource. A hash of the contents stored in this object.
  // This field is used in optimistic locking. This field will be ignored when
  // inserting a new PublicDelegatedPrefix. An up-to-date fingerprint must be
  // provided in order to update the PublicDelegatedPrefix, otherwise the
  // request will fail with error 412 conditionNotMet. To see the latest
  // fingerprint, make a get() request to retrieve a PublicDelegatedPrefix.
  optional string fingerprint = 3;

  // [Output Only] The unique identifier for the resource type. The server
  // generates this identifier.
  optional string id = 4;

  // The IPv4 address range, in CIDR format, represented by this public
  // delegated prefix.
  optional string ip_cidr_range = 5;

  // If true, the prefix will be live migrated.
  optional bool is_live_migration = 6;

  // [Output Only] Type of the resource. Always compute#publicDelegatedPrefix
  // for public delegated prefixes.
  optional string kind = 7;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 8;

  // The URL of parent prefix. Either PublicAdvertisedPrefix or
  // PublicDelegatedPrefix.
  optional string parent_prefix = 9;

  // The list of sub public delegated prefixes that exist for this public
  // delegated prefix.
  repeated PublicDelegatedPrefixPublicDelegatedSubPrefix
      public_delegated_sub_prefixs = 10;

  // [Output Only] URL of the region where the public delegated prefix resides.
  // This field applies only to the region resource. You must specify this field
  // as part of the HTTP request URL. It is not settable as a field in the
  // request body.
  optional string region = 11;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 12;

  // [Output Only] The status of the public delegated prefix, which can be one
  // of following values: - `INITIALIZING` The public delegated prefix is being
  // initialized and addresses cannot be created yet. - `READY_TO_ANNOUNCE` The
  // public delegated prefix is a live migration prefix and is active. -
  // `ANNOUNCED` The public delegated prefix is active. - `DELETING` The public
  // delegated prefix is being deprovsioned.
  // ANNOUNCED: The public delegated prefix is active.
  // DELETING: The public delegated prefix is being deprovsioned.
  // INITIALIZING: The public delegated prefix is being initialized and
  // addresses cannot be created yet.
  // READY_TO_ANNOUNCE: The public delegated prefix is currently withdrawn but
  // ready to be announced.
  optional string status = 13;
}

message PublicDelegatedPrefixAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of PublicDelegatedPrefixesScopedList resources.
  map<string, PublicDelegatedPrefixesScopedList> items = 2;

  // [Output Only] Type of the resource. Always
  // compute#publicDelegatedPrefixAggregatedList for aggregated lists of public
  // delegated prefixes.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

message PublicDelegatedPrefixList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of PublicDelegatedPrefix resources.
  repeated PublicDelegatedPrefix items = 2;

  // [Output Only] Type of the resource. Always
  // compute#publicDelegatedPrefixList for public delegated prefixes.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// Represents a sub PublicDelegatedPrefix.
message PublicDelegatedPrefixPublicDelegatedSubPrefix {
  // Name of the project scoping this PublicDelegatedSubPrefix.
  optional string delegatee_project = 1;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 2;

  // The IPv4 address range, in CIDR format, represented by this sub public
  // delegated prefix.
  optional string ip_cidr_range = 3;

  // Whether the sub prefix is delegated to create Address resources in the
  // delegatee project.
  optional bool is_address = 4;

  // The name of the sub public delegated prefix.
  optional string name = 5;

  // [Output Only] The region of the sub public delegated prefix if it is
  // regional. If absent, the sub prefix is global.
  optional string region = 6;

  // [Output Only] The status of the sub public delegated prefix.
  // ACTIVE:
  // INACTIVE:
  optional string status = 7;
}

message PublicDelegatedPrefixesScopedList {
  // [Output Only] A list of PublicDelegatedPrefixes contained in this scope.
  repeated PublicDelegatedPrefix public_delegated_prefixes = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning which replaces the list of public
  // delegated prefixes when the list is empty.
  optional Warning warning = 2;
}

// A quotas entry.
message Quota {
  // [Output Only] Quota limit for this metric.
  optional double limit = 1;

  // [Output Only] Name of the quota metric.
  // A2_CPUS:
  // AFFINITY_GROUPS:
  // AUTOSCALERS:
  // BACKEND_BUCKETS:
  // BACKEND_SERVICES:
  // C2D_CPUS:
  // C2_CPUS:
  // C3_CPUS:
  // COMMITMENTS:
  // COMMITTED_A2_CPUS:
  // COMMITTED_C2D_CPUS:
  // COMMITTED_C2_CPUS:
  // COMMITTED_C3_CPUS:
  // COMMITTED_CPUS:
  // COMMITTED_E2_CPUS:
  // COMMITTED_LICENSES:
  // COMMITTED_LOCAL_SSD_TOTAL_GB:
  // COMMITTED_M3_CPUS:
  // COMMITTED_MEMORY_OPTIMIZED_CPUS:
  // COMMITTED_N2A_CPUS:
  // COMMITTED_N2D_CPUS:
  // COMMITTED_N2_CPUS:
  // COMMITTED_NVIDIA_A100_80GB_GPUS:
  // COMMITTED_NVIDIA_A100_GPUS:
  // COMMITTED_NVIDIA_K80_GPUS:
  // COMMITTED_NVIDIA_P100_GPUS:
  // COMMITTED_NVIDIA_P4_GPUS:
  // COMMITTED_NVIDIA_T4_GPUS:
  // COMMITTED_NVIDIA_V100_GPUS:
  // COMMITTED_T2A_CPUS:
  // COMMITTED_T2D_CPUS:
  // CPUS: Guest CPUs
  // CPUS_ALL_REGIONS:
  // DISKS_TOTAL_GB:
  // E2_CPUS:
  // EXTERNAL_MANAGED_FORWARDING_RULES:
  // EXTERNAL_NETWORK_LB_FORWARDING_RULES:
  // EXTERNAL_PROTOCOL_FORWARDING_RULES:
  // EXTERNAL_VPN_GATEWAYS:
  // FIREWALLS:
  // FORWARDING_RULES:
  // GLOBAL_EXTERNAL_MANAGED_BACKEND_SERVICES:
  // GLOBAL_EXTERNAL_MANAGED_FORWARDING_RULES:
  // GLOBAL_EXTERNAL_PROXY_LB_BACKEND_SERVICES:
  // GLOBAL_INTERNAL_ADDRESSES:
  // GLOBAL_INTERNAL_MANAGED_BACKEND_SERVICES:
  // GLOBAL_INTERNAL_TRAFFIC_DIRECTOR_BACKEND_SERVICES:
  // GPUS_ALL_REGIONS:
  // HEALTH_CHECKS:
  // IMAGES:
  // INSTANCES:
  // INSTANCE_GROUPS:
  // INSTANCE_GROUP_MANAGERS:
  // INSTANCE_TEMPLATES:
  // INTERCONNECTS:
  // INTERCONNECT_ATTACHMENTS_PER_REGION:
  // INTERCONNECT_ATTACHMENTS_TOTAL_MBPS:
  // INTERCONNECT_TOTAL_GBPS:
  // INTERNAL_ADDRESSES:
  // INTERNAL_TRAFFIC_DIRECTOR_FORWARDING_RULES:
  // IN_PLACE_SNAPSHOTS:
  // IN_USE_ADDRESSES:
  // IN_USE_BACKUP_SCHEDULES:
  // IN_USE_SNAPSHOT_SCHEDULES:
  // LOCAL_SSD_TOTAL_GB:
  // M1_CPUS:
  // M2_CPUS:
  // M3_CPUS:
  // MACHINE_IMAGES:
  // N2A_CPUS:
  // N2D_CPUS:
  // N2_CPUS:
  // NETWORKS:
  // NETWORK_ATTACHMENTS:
  // NETWORK_ENDPOINT_GROUPS:
  // NETWORK_FIREWALL_POLICIES:
  // NODE_GROUPS:
  // NODE_TEMPLATES:
  // NVIDIA_A100_80GB_GPUS:
  // NVIDIA_A100_GPUS:
  // NVIDIA_K80_GPUS:
  // NVIDIA_P100_GPUS:
  // NVIDIA_P100_VWS_GPUS:
  // NVIDIA_P4_GPUS:
  // NVIDIA_P4_VWS_GPUS:
  // NVIDIA_T4_GPUS:
  // NVIDIA_T4_VWS_GPUS:
  // NVIDIA_V100_GPUS:
  // PACKET_MIRRORINGS:
  // PD_EXTREME_TOTAL_PROVISIONED_IOPS:
  // PREEMPTIBLE_CPUS:
  // PREEMPTIBLE_LOCAL_SSD_GB:
  // PREEMPTIBLE_NVIDIA_A100_80GB_GPUS:
  // PREEMPTIBLE_NVIDIA_A100_GPUS:
  // PREEMPTIBLE_NVIDIA_K80_GPUS:
  // PREEMPTIBLE_NVIDIA_P100_GPUS:
  // PREEMPTIBLE_NVIDIA_P100_VWS_GPUS:
  // PREEMPTIBLE_NVIDIA_P4_GPUS:
  // PREEMPTIBLE_NVIDIA_P4_VWS_GPUS:
  // PREEMPTIBLE_NVIDIA_T4_GPUS:
  // PREEMPTIBLE_NVIDIA_T4_VWS_GPUS:
  // PREEMPTIBLE_NVIDIA_V100_GPUS:
  // PSC_ILB_CONSUMER_FORWARDING_RULES_PER_PRODUCER_NETWORK:
  // PSC_INTERNAL_LB_FORWARDING_RULES:
  // PUBLIC_ADVERTISED_PREFIXES:
  // PUBLIC_DELEGATED_PREFIXES:
  // REGIONAL_AUTOSCALERS:
  // REGIONAL_EXTERNAL_MANAGED_BACKEND_SERVICES:
  // REGIONAL_EXTERNAL_NETWORK_LB_BACKEND_SERVICES:
  // REGIONAL_INSTANCE_GROUP_MANAGERS:
  // REGIONAL_INTERNAL_LB_BACKEND_SERVICES:
  // REGIONAL_INTERNAL_MANAGED_BACKEND_SERVICES:
  // RESERVATIONS:
  // RESOURCE_POLICIES:
  // ROUTERS:
  // ROUTES:
  // SECURITY_POLICIES:
  // SECURITY_POLICIES_PER_REGION:
  // SECURITY_POLICY_CEVAL_RULES:
  // SECURITY_POLICY_RULES:
  // SECURITY_POLICY_RULES_PER_REGION:
  // SERVICE_ATTACHMENTS:
  // SNAPSHOTS: The total number of snapshots allowed for a single project.
  // SSD_TOTAL_GB:
  // SSL_CERTIFICATES:
  // STATIC_ADDRESSES:
  // STATIC_BYOIP_ADDRESSES:
  // STATIC_EXTERNAL_IPV6_ADDRESS_RANGES:
  // SUBNETWORKS:
  // T2A_CPUS:
  // T2D_CPUS:
  // TARGET_HTTPS_PROXIES:
  // TARGET_HTTP_PROXIES:
  // TARGET_INSTANCES:
  // TARGET_POOLS:
  // TARGET_SSL_PROXIES:
  // TARGET_TCP_PROXIES:
  // TARGET_VPN_GATEWAYS:
  // URL_MAPS:
  // VPN_GATEWAYS:
  // VPN_TUNNELS:
  // XPN_SERVICE_PROJECTS:
  optional string metric = 2;

  // [Output Only] Owning resource. This is the resource on which this quota is
  // applied.
  optional string owner = 3;

  // [Output Only] Current usage of this metric.
  optional double usage = 4;
}

// Additional details for quota exceeded error for resource quota.
message QuotaExceededInfo {
  // The map holding related quota dimensions.
  map<string, string> dimensions = 1;

  // Current effective quota limit. The limit's unit depends on the quota type
  // or metric.
  optional double limit = 2;

  // The name of the quota limit.
  optional string limit_name = 3;

  // The Compute Engine quota metric name.
  optional string metric_name = 4;
}

// Represents a reference to a resource.
message Reference {
  // [Output Only] Type of the resource. Always compute#reference for
  // references.
  optional string kind = 1;

  // A description of the reference type with no implied semantics. Possible
  // values include: 1. MEMBER_OF
  optional string reference_type = 2;

  // URL of the resource which refers to the target.
  optional string referrer = 3;

  // URL of the resource to which this reference points.
  optional string target = 4;
}

// Represents a Region resource. A region is a geographical area where a
// resource is located. For more information, read Regions and Zones.
message Region {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1;

  // [Output Only] The deprecation status associated with this region.
  optional DeprecationStatus deprecated = 2;

  // [Output Only] Textual description of the resource.
  optional string description = 3;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 4;

  // [Output Only] Type of the resource. Always compute#region for regions.
  optional string kind = 5;

  // [Output Only] Name of the resource.
  optional string name = 6;

  // [Output Only] Quotas assigned to this region.
  repeated Quota quotas = 7;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 8;

  // [Output Only] Status of the region, either UP or DOWN.
  // DOWN:
  // UP:
  optional string status = 9;

  // [Output Only] Reserved for future use.
  optional bool supports_pzs = 10;

  // [Output Only] A list of zones available in this region, in the form of
  // resource URLs.
  repeated string zones = 11;
}

// Contains a list of autoscalers.
message RegionAutoscalerList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of Autoscaler resources.
  repeated Autoscaler items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message RegionDiskTypeList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of DiskType resources.
  repeated DiskType items = 2;

  // [Output Only] Type of resource. Always compute#regionDiskTypeList for
  // region disk types.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message RegionDisksAddResourcePoliciesRequest {
  // Resource policies to be added to this disk.
  repeated string resource_policies = 1;
}

message RegionDisksRemoveResourcePoliciesRequest {
  // Resource policies to be removed from this disk.
  repeated string resource_policies = 1;
}

message RegionDisksResizeRequest {
  // The new size of the regional persistent disk, which is specified in GB.
  optional string size_gb = 1;
}

// Contains a list of InstanceGroup resources.
message RegionInstanceGroupList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of InstanceGroup resources.
  repeated InstanceGroup items = 2;

  // The resource type.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// RegionInstanceGroupManagers.deletePerInstanceConfigs
message RegionInstanceGroupManagerDeleteInstanceConfigReq {
  // The list of instance names for which we want to delete per-instance configs
  // on this managed instance group.
  repeated string names = 1;
}

// Contains a list of managed instance groups.
message RegionInstanceGroupManagerList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of InstanceGroupManager resources.
  repeated InstanceGroupManager items = 2;

  // [Output Only] The resource type, which is always
  // compute#instanceGroupManagerList for a list of managed instance groups that
  // exist in th regional scope.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// RegionInstanceGroupManagers.patchPerInstanceConfigs
message RegionInstanceGroupManagerPatchInstanceConfigReq {
  // The list of per-instance configurations to insert or patch on this managed
  // instance group.
  repeated PerInstanceConfig per_instance_configs = 1;
}

// RegionInstanceGroupManagers.updatePerInstanceConfigs
message RegionInstanceGroupManagerUpdateInstanceConfigReq {
  // The list of per-instance configurations to insert or patch on this managed
  // instance group.
  repeated PerInstanceConfig per_instance_configs = 1;
}

message RegionInstanceGroupManagersAbandonInstancesRequest {
  // The URLs of one or more instances to abandon. This can be a full URL or a
  // partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
  repeated string instances = 1;
}

// RegionInstanceGroupManagers.applyUpdatesToInstances
message RegionInstanceGroupManagersApplyUpdatesRequest {
  // Flag to update all instances instead of specified list of “instances”.
  // If the flag is set to true then the instances may not be specified in the
  // request.
  optional bool all_instances = 1;

  // The list of URLs of one or more instances for which you want to apply
  // updates. Each URL can be a full URL or a partial URL, such as
  // zones/[ZONE]/instances/[INSTANCE_NAME].
  repeated string instances = 2;

  // The minimal action that you want to perform on each instance during the
  // update: - REPLACE: At minimum, delete the instance and create it again. -
  // RESTART: Stop the instance and start it again. - REFRESH: Do not stop the
  // instance. - NONE: Do not disrupt the instance at all. By default, the
  // minimum action is NONE. If your update requires a more disruptive action
  // than you set with this flag, the necessary action is performed to execute
  // the update.
  // NONE: Do not perform any action.
  // REFRESH: Updates applied in runtime, instances will not be disrupted.
  // REPLACE: Old instances will be deleted. New instances will be created from
  // the target template.
  // RESTART: Every instance will be restarted.
  optional string minimal_action = 3;

  // The most disruptive action that you want to perform on each instance during
  // the update: - REPLACE: Delete the instance and create it again. - RESTART:
  // Stop the instance and start it again. - REFRESH: Do not stop the instance.
  // - NONE: Do not disrupt the instance at all. By default, the most disruptive
  // allowed action is REPLACE. If your update requires a more disruptive action
  // than you set with this flag, the update request will fail.
  // NONE: Do not perform any action.
  // REFRESH: Updates applied in runtime, instances will not be disrupted.
  // REPLACE: Old instances will be deleted. New instances will be created from
  // the target template.
  // RESTART: Every instance will be restarted.
  optional string most_disruptive_allowed_action = 4;
}

// RegionInstanceGroupManagers.createInstances
message RegionInstanceGroupManagersCreateInstancesRequest {
  // [Required] List of specifications of per-instance configs.
  repeated PerInstanceConfig instances = 1;
}

message RegionInstanceGroupManagersDeleteInstancesRequest {
  // The URLs of one or more instances to delete. This can be a full URL or a
  // partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
  repeated string instances = 1;

  // Specifies whether the request should proceed despite the inclusion of
  // instances that are not members of the group or that are already in the
  // process of being deleted or abandoned. If this field is set to `false` and
  // such an instance is specified in the request, the operation fails. The
  // operation always fails if the request contains a malformed instance URL or
  // a reference to an instance that exists in a zone or region other than the
  // group's zone or region.
  optional bool skip_instances_on_validation_error = 2;
}

message RegionInstanceGroupManagersListErrorsResponse {
  // [Output Only] The list of errors of the managed instance group.
  repeated InstanceManagedByIgmError items = 1;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 2;
}

message RegionInstanceGroupManagersListInstanceConfigsResp {
  // [Output Only] The list of PerInstanceConfig.
  repeated PerInstanceConfig items = 1;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 2;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 3;
}

message RegionInstanceGroupManagersListInstancesResponse {
  // A list of managed instances.
  repeated ManagedInstance managed_instances = 1;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 2;
}

message RegionInstanceGroupManagersRecreateRequest {
  // The URLs of one or more instances to recreate. This can be a full URL or a
  // partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
  repeated string instances = 1;
}

message RegionInstanceGroupManagersSetTargetPoolsRequest {
  // Fingerprint of the target pools information, which is a hash of the
  // contents. This field is used for optimistic locking when you update the
  // target pool entries. This field is optional.
  optional string fingerprint = 1;

  // The URL of all TargetPool resources to which instances in the instanceGroup
  // field are added. The target pools automatically apply to all of the
  // instances in the managed instance group.
  repeated string target_pools = 2;
}

message RegionInstanceGroupManagersSetTemplateRequest {
  // URL of the InstanceTemplate resource from which all new instances will be
  // created.
  optional string instance_template = 1;
}

message RegionInstanceGroupsListInstances {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of InstanceWithNamedPorts resources.
  repeated InstanceWithNamedPorts items = 2;

  // The resource type.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message RegionInstanceGroupsListInstancesRequest {
  // Instances in which state should be returned. Valid options are: 'ALL',
  // 'RUNNING'. By default, it lists all instances.
  // ALL: Matches any status of the instances, running, non-running and others.
  // RUNNING: Instance is in RUNNING state if it is running.
  optional string instance_state = 1;

  // Name of port user is interested in. It is optional. If it is set, only
  // information about this ports will be returned. If it is not set, all the
  // named ports will be returned. Always lists all instances.
  optional string port_name = 2;
}

message RegionInstanceGroupsSetNamedPortsRequest {
  // The fingerprint of the named ports information for this instance group. Use
  // this optional property to prevent conflicts when multiple users change the
  // named ports settings concurrently. Obtain the fingerprint with the
  // instanceGroups.get method. Then, include the fingerprint in your request to
  // ensure that you do not overwrite changes that were applied from another
  // concurrent request.
  optional string fingerprint = 1;

  // The list of named ports to set for this instance group.
  repeated NamedPort named_ports = 2;
}

// Contains a list of region resources.
message RegionList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of Region resources.
  repeated Region items = 2;

  // [Output Only] Type of resource. Always compute#regionList for lists of
  // regions.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponse {
  // Effective firewalls from firewall policy.
  repeated
      RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy
          firewall_policys = 1;

  // Effective firewalls on the network.
  repeated Firewall firewalls = 2;
}

message
RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy {
  // [Output Only] The display name of the firewall policy.
  optional string display_name = 1;

  // [Output Only] The name of the firewall policy.
  optional string name = 2;

  // The rules that apply to the network.
  repeated FirewallPolicyRule rules = 3;

  // [Output Only] The type of the firewall policy. Can be one of HIERARCHY,
  // NETWORK, NETWORK_REGIONAL.
  // HIERARCHY:
  // NETWORK:
  // NETWORK_REGIONAL:
  // UNSPECIFIED:
  optional string type = 4;
}

message RegionSetLabelsRequest {
  // The fingerprint of the previous set of labels for this resource, used to
  // detect conflicts. The fingerprint is initially generated by Compute Engine
  // and changes after every request to modify or update labels. You must always
  // provide an up-to-date fingerprint hash in order to update or change labels.
  // Make a get() request to the resource to get the latest fingerprint.
  optional string label_fingerprint = 1;

  // The labels to set for this resource.
  map<string, string> labels = 2;
}

message RegionSetPolicyRequest {
  // Flatten Policy to create a backwacd compatible wire-format. Deprecated. Use
  // 'policy' to specify bindings.
  repeated Binding bindings = 1;

  // Flatten Policy to create a backward compatible wire-format. Deprecated. Use
  // 'policy' to specify the etag.
  optional string etag = 2;

  // REQUIRED: The complete policy to be applied to the 'resource'. The size of
  // the policy is limited to a few 10s of KB. An empty policy is in general a
  // valid policy but certain services (like Projects) might reject them.
  optional Policy policy = 3;
}

message RegionTargetHttpsProxiesSetSslCertificatesRequest {
  // New set of SslCertificate resources to associate with this TargetHttpsProxy
  // resource.
  repeated string ssl_certificates = 1;
}

message RegionUrlMapsValidateRequest {
  // Content of the UrlMap to be validated.
  optional UrlMap resource = 1;
}

// A policy that specifies how requests intended for the route's backends are
// shadowed to a separate mirrored backend service. The load balancer doesn't
// wait for responses from the shadow service. Before sending traffic to the
// shadow service, the host or authority header is suffixed with -shadow.
message RequestMirrorPolicy {
  // The full or partial URL to the BackendService resource being mirrored to.
  // The backend service configured for a mirroring policy must reference
  // backends that are of the same type as the original backend service matched
  // in the URL map. Serverless NEG backends are not currently supported as a
  // mirrored backend service.
  optional string backend_service = 1;
}

// Represents a reservation resource. A reservation ensures that capacity is
// held in a specific zone even if the reserved VMs are not running. For more
// information, read Reserving zonal resources.
message Reservation {
  // [Output Only] Full or partial URL to a parent commitment. This field
  // displays for reservations that are tied to a commitment.
  optional string commitment = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 2;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 3;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 4;

  // [Output Only] Type of the resource. Always compute#reservations for
  // reservations.
  optional string kind = 5;

  // The name of the resource, provided by the client when initially creating
  // the resource. The resource name must be 1-63 characters long, and comply
  // with RFC1035. Specifically, the name must be 1-63 characters long and match
  // the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
  // character must be a lowercase letter, and all following characters must be
  // a dash, lowercase letter, or digit, except the last character, which cannot
  // be a dash.
  optional string name = 6;

  // Resource policies to be added to this reservation. The key is defined by
  // user, and the value is resource policy url. This is to define placement
  // policy with reservation.
  map<string, string> resource_policies = 7;

  // [Output Only] Status information for Reservation resource.
  optional AllocationResourceStatus resource_status = 8;

  // [Output Only] Reserved for future use.
  optional bool satisfies_pzs = 9;

  // [Output Only] Server-defined fully-qualified URL for this resource.
  optional string self_link = 10;

  // Specify share-settings to create a shared reservation. This property is
  // optional. For more information about the syntax and options for this field
  // and its subfields, see the guide for creating a shared reservation.
  optional ShareSettings share_settings = 11;

  // Reservation for instances with specific machine shapes.
  optional AllocationSpecificSKUReservation specific_reservation = 12;

  // Indicates whether the reservation can be consumed by VMs with affinity for
  // "any" reservation. If the field is set, then only VMs that target the
  // reservation by name can consume from this reservation.
  optional bool specific_reservation_required = 13;

  // [Output Only] The status of the reservation.
  // CREATING: Resources are being allocated for the reservation.
  // DELETING: Reservation is currently being deleted.
  // INVALID:
  // READY: Reservation has allocated all its resources.
  // UPDATING: Reservation is currently being resized.
  optional string status = 14;

  // Zone in which the reservation resides. A zone must be provided if the
  // reservation is created within a commitment.
  optional string zone = 15;
}

// Specifies the reservations that this instance can consume from.
message ReservationAffinity {
  // Specifies the type of reservation from which this instance can consume
  // resources: ANY_RESERVATION (default), SPECIFIC_RESERVATION, or
  // NO_RESERVATION. See Consuming reserved instances for examples.
  // ANY_RESERVATION: Consume any allocation available.
  // NO_RESERVATION: Do not consume from any allocated capacity.
  // SPECIFIC_RESERVATION: Must consume from a specific reservation. Must
  // specify key value fields for specifying the reservations.
  // UNSPECIFIED:
  optional string consume_reservation_type = 1;

  // Corresponds to the label key of a reservation resource. To target a
  // SPECIFIC_RESERVATION by name, specify googleapis.com/reservation-name as
  // the key and specify the name of your reservation as its value.
  optional string key = 2;

  // Corresponds to the label values of a reservation resource. This can be
  // either a name to a reservation in the same project or
  // "projects/different-project/reservations/some-reservation-name" to target a
  // shared reservation in the same zone but in a different project.
  repeated string values = 3;
}

// Contains a list of reservations.
message ReservationAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of Allocation resources.
  map<string, ReservationsScopedList> items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

message ReservationList {
  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 1;

  // [Output Only] A list of Allocation resources.
  repeated Reservation items = 2;

  // [Output Only] Type of resource.Always compute#reservationsList for listsof
  // reservations
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message ReservationsResizeRequest {
  // Number of allocated resources can be resized with minimum = 1 and maximum =
  // 1000.
  optional string specific_sku_count = 1;
}

message ReservationsScopedList {
  // A list of reservations contained in this scope.
  repeated Reservation reservations = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // Informational warning which replaces the list of reservations when the list
  // is empty.
  optional Warning warning = 2;
}

// Commitment for a particular resource (a Commitment is composed of one or more
// of these).
message ResourceCommitment {
  // Name of the accelerator type resource. Applicable only when the type is
  // ACCELERATOR.
  optional string accelerator_type = 1;

  // The amount of the resource purchased (in a type-dependent unit, such as
  // bytes). For vCPUs, this can just be an integer. For memory, this must be
  // provided in MB. Memory must be a multiple of 256 MB, with up to 6.5GB of
  // memory per every vCPU.
  optional string amount = 2;

  // Type of resource for which this commitment applies. Possible values are
  // VCPU, MEMORY, LOCAL_SSD, and ACCELERATOR.
  // ACCELERATOR:
  // LOCAL_SSD:
  // MEMORY:
  // UNSPECIFIED:
  // VCPU:
  optional string type = 3;
}

message ResourceGroupReference {
  // A URI referencing one of the instance groups or network endpoint groups
  // listed in the backend service.
  optional string group = 1;
}

message ResourcePoliciesScopedList {
  // A list of resourcePolicies contained in this scope.
  repeated ResourcePolicy resource_policies = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // Informational warning which replaces the list of resourcePolicies when the
  // list is empty.
  optional Warning warning = 2;
}

// Represents a Resource Policy resource. You can use resource policies to
// schedule actions for some Compute Engine resources. For example, you can use
// them to schedule persistent disk snapshots.
message ResourcePolicy {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1;

  optional string description = 2;

  // Resource policy for instances for placement configuration.
  optional ResourcePolicyGroupPlacementPolicy group_placement_policy = 3;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 4;

  // Resource policy for scheduling instance operations.
  optional ResourcePolicyInstanceSchedulePolicy instance_schedule_policy = 5;

  // [Output Only] Type of the resource. Always compute#resource_policies for
  // resource policies.
  optional string kind = 6;

  // The name of the resource, provided by the client when initially creating
  // the resource. The resource name must be 1-63 characters long, and comply
  // with RFC1035. Specifically, the name must be 1-63 characters long and match
  // the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
  // character must be a lowercase letter, and all following characters must be
  // a dash, lowercase letter, or digit, except the last character, which cannot
  // be a dash.
  optional string name = 7;

  optional string region = 8;

  // [Output Only] The system status of the resource policy.
  optional ResourcePolicyResourceStatus resource_status = 9;

  // [Output Only] Server-defined fully-qualified URL for this resource.
  optional string self_link = 10;

  // Resource policy for persistent disks for creating snapshots.
  optional ResourcePolicySnapshotSchedulePolicy snapshot_schedule_policy = 11;

  // [Output Only] The status of resource policy creation.
  // CREATING: Resource policy is being created.
  // DELETING: Resource policy is being deleted.
  // EXPIRED: Resource policy is expired and will not run again.
  // INVALID:
  // READY: Resource policy is ready to be used.
  optional string status = 12;
}

// Contains a list of resourcePolicies.
message ResourcePolicyAggregatedList {
  optional string etag = 1;

  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 2;

  // A list of ResourcePolicy resources.
  map<string, ResourcePoliciesScopedList> items = 3;

  // Type of resource.
  optional string kind = 4;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 5;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 6;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 7;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 8;
}

// Time window specified for daily operations.
message ResourcePolicyDailyCycle {
  // Defines a schedule with units measured in days. The value determines how
  // many days pass between the start of each cycle.
  optional int32 days_in_cycle = 1;

  // [Output only] A predetermined duration for the window, automatically chosen
  // to be the smallest possible in the given scenario.
  optional string duration = 2;

  // Start time of the window. This must be in UTC format that resolves to one
  // of 00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example, both 13:00-5
  // and 08:00 are valid.
  optional string start_time = 3;
}

// A GroupPlacementPolicy specifies resource placement configuration. It
// specifies the failure bucket separation as well as network locality
message ResourcePolicyGroupPlacementPolicy {
  // The number of availability domains to spread instances across. If two
  // instances are in different availability domain, they are not in the same
  // low latency network.
  optional int32 availability_domain_count = 1;

  // Specifies network collocation
  // COLLOCATED:
  // UNSPECIFIED_COLLOCATION:
  optional string collocation = 2;

  // Number of VMs in this placement group. Google does not recommend that you
  // use this field unless you use a compact policy and you want your policy to
  // work only if it contains this exact number of VMs.
  optional int32 vm_count = 3;
}

// Time window specified for hourly operations.
message ResourcePolicyHourlyCycle {
  // [Output only] Duration of the time window, automatically chosen to be
  // smallest possible in the given scenario.
  optional string duration = 1;

  // Defines a schedule with units measured in hours. The value determines how
  // many hours pass between the start of each cycle.
  optional int32 hours_in_cycle = 2;

  // Time within the window to start the operations. It must be in format
  // "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
  optional string start_time = 3;
}

// An InstanceSchedulePolicy specifies when and how frequent certain operations
// are performed on the instance.
message ResourcePolicyInstanceSchedulePolicy {
  // The expiration time of the schedule. The timestamp is an RFC3339 string.
  optional string expiration_time = 1;

  // The start time of the schedule. The timestamp is an RFC3339 string.
  optional string start_time = 2;

  // Specifies the time zone to be used in interpreting Schedule.schedule. The
  // value of this field must be a time zone name from the tz database:
  // https://wikipedia.org/wiki/Tz_database.
  optional string time_zone = 3;

  // Specifies the schedule for starting instances.
  optional ResourcePolicyInstanceSchedulePolicySchedule vm_start_schedule = 4;

  // Specifies the schedule for stopping instances.
  optional ResourcePolicyInstanceSchedulePolicySchedule vm_stop_schedule = 5;
}

// Schedule for an instance operation.
message ResourcePolicyInstanceSchedulePolicySchedule {
  // Specifies the frequency for the operation, using the unix-cron format.
  optional string schedule = 1;
}

message ResourcePolicyList {
  optional string etag = 1;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 2;

  // [Output Only] A list of ResourcePolicy resources.
  repeated ResourcePolicy items = 3;

  // [Output Only] Type of resource.Always compute#resourcePoliciesList for
  // listsof resourcePolicies
  optional string kind = 4;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 5;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Contains output only fields. Use this sub-message for all output fields set
// on ResourcePolicy. The internal structure of this "status" field should mimic
// the structure of ResourcePolicy proto specification.
message ResourcePolicyResourceStatus {
  // [Output Only] Specifies a set of output values reffering to the
  // instance_schedule_policy system status. This field should have the same
  // name as corresponding policy field.
  optional ResourcePolicyResourceStatusInstanceSchedulePolicyStatus
      instance_schedule_policy = 1;
}

message ResourcePolicyResourceStatusInstanceSchedulePolicyStatus {
  // [Output Only] The last time the schedule successfully ran. The timestamp is
  // an RFC3339 string.
  optional string last_run_start_time = 1;

  // [Output Only] The next time the schedule is planned to run. The actual time
  // might be slightly different. The timestamp is an RFC3339 string.
  optional string next_run_start_time = 2;
}

// A snapshot schedule policy specifies when and how frequently snapshots are to
// be created for the target disk. Also specifies how many and how long these
// scheduled snapshots should be retained.
message ResourcePolicySnapshotSchedulePolicy {
  // Retention policy applied to snapshots created by this resource policy.
  optional ResourcePolicySnapshotSchedulePolicyRetentionPolicy
      retention_policy = 1;

  // A Vm Maintenance Policy specifies what kind of infrastructure maintenance
  // we are allowed to perform on this VM and when. Schedule that is applied to
  // disks covered by this policy.
  optional ResourcePolicySnapshotSchedulePolicySchedule schedule = 2;

  // Properties with which snapshots are created such as labels, encryption
  // keys.
  optional ResourcePolicySnapshotSchedulePolicySnapshotProperties
      snapshot_properties = 3;
}

// Policy for retention of scheduled snapshots.
message ResourcePolicySnapshotSchedulePolicyRetentionPolicy {
  // Maximum age of the snapshot that is allowed to be kept.
  optional int32 max_retention_days = 1;

  // Specifies the behavior to apply to scheduled snapshots when the source disk
  // is deleted.
  // APPLY_RETENTION_POLICY:
  // KEEP_AUTO_SNAPSHOTS:
  // UNSPECIFIED_ON_SOURCE_DISK_DELETE:
  optional string on_source_disk_delete = 2;
}

// A schedule for disks where the schedueled operations are performed.
message ResourcePolicySnapshotSchedulePolicySchedule {
  optional ResourcePolicyDailyCycle daily_schedule = 1;

  optional ResourcePolicyHourlyCycle hourly_schedule = 2;

  optional ResourcePolicyWeeklyCycle weekly_schedule = 3;
}

// Specified snapshot properties for scheduled snapshots created by this policy.
message ResourcePolicySnapshotSchedulePolicySnapshotProperties {
  // Chain name that the snapshot is created in.
  optional string chain_name = 1;

  // Indication to perform a 'guest aware' snapshot.
  optional bool guest_flush = 2;

  // Labels to apply to scheduled snapshots. These can be later modified by the
  // setLabels method. Label values may be empty.
  map<string, string> labels = 3;

  // Cloud Storage bucket storage location of the auto snapshot (regional or
  // multi-regional).
  repeated string storage_locations = 4;
}

// Time window specified for weekly operations.
message ResourcePolicyWeeklyCycle {
  // Up to 7 intervals/windows, one for each day of the week.
  repeated ResourcePolicyWeeklyCycleDayOfWeek day_of_weeks = 1;
}

message ResourcePolicyWeeklyCycleDayOfWeek {
  // Defines a schedule that runs on specific days of the week. Specify one or
  // more days. The following options are available: MONDAY, TUESDAY, WEDNESDAY,
  // THURSDAY, FRIDAY, SATURDAY, SUNDAY.
  // FRIDAY:
  // INVALID:
  // MONDAY:
  // SATURDAY:
  // SUNDAY:
  // THURSDAY:
  // TUESDAY:
  // WEDNESDAY:
  optional string day = 1;

  // [Output only] Duration of the time window, automatically chosen to be
  // smallest possible in the given scenario.
  optional string duration = 2;

  // Time within the window to start the operations. It must be in format
  // "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
  optional string start_time = 3;
}

// Contains output only fields. Use this sub-message for actual values set on
// Instance attributes as compared to the value requested by the user (intent)
// in their instance CRUD calls.
message ResourceStatus {
  // [Output Only] An opaque ID of the host on which the VM is running.
  optional string physical_host = 1;
}

// Represents a Route resource. A route defines a path from VM instances in the
// VPC network to a specific destination. This destination can be inside or
// outside the VPC network. For more information, read the Routes overview.
message Route {
  // [Output Only] AS path.
  repeated RouteAsPath as_paths = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 2;

  // An optional description of this resource. Provide this field when you
  // create the resource.
  optional string description = 3;

  // The destination range of outgoing packets that this route applies to. Both
  // IPv4 and IPv6 are supported.
  optional string dest_range = 4;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 5;

  // [Output Only] Type of this resource. Always compute#routes for Route
  // resources.
  optional string kind = 6;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a
  // lowercase letter, and all following characters (except for the last
  // character) must be a dash, lowercase letter, or digit. The last character
  // must be a lowercase letter or digit.
  optional string name = 7;

  // Fully-qualified URL of the network that this route applies to.
  optional string network = 8;

  // The URL to a gateway that should handle matching packets. You can only
  // specify the internet gateway using a full or partial valid URL: projects/
  // project/global/gateways/default-internet-gateway
  optional string next_hop_gateway = 9;

  // The URL to a forwarding rule of type loadBalancingScheme=INTERNAL that
  // should handle matching packets or the IP address of the forwarding Rule.
  // For example, the following are all valid URLs: - 10.128.0.56 -
  // https://www.googleapis.com/compute/v1/projects/project/regions/region
  // /forwardingRules/forwardingRule -
  // regions/region/forwardingRules/forwardingRule
  optional string next_hop_ilb = 10;

  // The URL to an instance that should handle matching packets. You can specify
  // this as a full or partial URL. For example:
  // https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/
  optional string next_hop_instance = 11;

  // The network IP address of an instance that should handle matching packets.
  // Only IPv4 is supported.
  optional string next_hop_ip = 12;

  // The URL of the local network if it should handle matching packets.
  optional string next_hop_network = 13;

  // [Output Only] The network peering name that should handle matching packets,
  // which should conform to RFC1035.
  optional string next_hop_peering = 14;

  // The URL to a VpnTunnel that should handle matching packets.
  optional string next_hop_vpn_tunnel = 15;

  // The priority of this route. Priority is used to break ties in cases where
  // there is more than one matching route of equal prefix length. In cases
  // where multiple routes have equal prefix length, the one with the
  // lowest-numbered priority value wins. The default value is `1000`. The
  // priority value must be from `0` to `65535`, inclusive.
  optional uint32 priority = 16;

  // [Output only] The status of the route.
  // ACTIVE: This route is processed and active.
  // DROPPED: The route is dropped due to the VPC exceeding the dynamic route
  // limit. For dynamic route limit, please refer to the Learned route example
  // INACTIVE: This route is processed but inactive due to failure from the
  // backend. The backend may have rejected the route
  // PENDING: This route is being processed internally. The status will change
  // once processed.
  optional string route_status = 17;

  // [Output Only] The type of this route, which can be one of the following
  // values: - 'TRANSIT' for a transit route that this router learned from
  // another Cloud Router and will readvertise to one of its BGP peers -
  // 'SUBNET' for a route from a subnet of the VPC - 'BGP' for a route learned
  // from a BGP peer of this router - 'STATIC' for a static route
  // BGP:
  // STATIC:
  // SUBNET:
  // TRANSIT:
  optional string route_type = 18;

  // [Output Only] Server-defined fully-qualified URL for this resource.
  optional string self_link = 19;

  // A list of instance tags to which this route applies.
  repeated string tags = 20;

  message WarningsItem {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] If potential misconfigurations are detected for this route,
  // this field will be populated with warning messages.
  repeated WarningsItem warnings = 21;
}

message RouteAsPath {
  // [Output Only] The AS numbers of the AS Path.
  repeated uint32 as_lists = 1;

  // [Output Only] The type of the AS Path, which can be one of the following
  // values: - 'AS_SET': unordered set of autonomous systems that the route in
  // has traversed - 'AS_SEQUENCE': ordered set of autonomous systems that the
  // route has traversed - 'AS_CONFED_SEQUENCE': ordered set of Member
  // Autonomous Systems in the local confederation that the route has traversed
  // - 'AS_CONFED_SET': unordered set of Member Autonomous Systems in the local
  // confederation that the route has traversed
  // AS_CONFED_SEQUENCE:
  // AS_CONFED_SET:
  // AS_SEQUENCE:
  // AS_SET:
  optional string path_segment_type = 2;
}

// Contains a list of Route resources.
message RouteList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of Route resources.
  repeated Route items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// Represents a Cloud Router resource. For more information about Cloud Router,
// read the Cloud Router overview.
message Router {
  // BGP information specific to this router.
  optional RouterBgp bgp = 1;

  // BGP information that must be configured into the routing stack to establish
  // BGP peering. This information must specify the peer ASN and either the
  // interface name, IP address, or peer IP address. Please refer to RFC4273.
  repeated RouterBgpPeer bgp_peers = 2;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 3;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 4;

  // Indicates if a router is dedicated for use with encrypted VLAN attachments
  // (interconnectAttachments).
  optional bool encrypted_interconnect_router = 5;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 6;

  // Router interfaces. Each interface requires either one linked resource, (for
  // example, linkedVpnTunnel), or IP address and IP address range (for example,
  // ipRange), or both.
  repeated RouterInterface interfaces = 7;

  // [Output Only] Type of resource. Always compute#router for routers.
  optional string kind = 8;

  // Keys used for MD5 authentication.
  repeated RouterMd5AuthenticationKey md5_authentication_keys = 9;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 10;

  // A list of NAT services created in this router.
  repeated RouterNat nats = 11;

  // URI of the network to which this router belongs.
  optional string network = 12;

  // [Output Only] URI of the region where the router resides. You must specify
  // this field as part of the HTTP request URL. It is not settable as a field
  // in the request body.
  optional string region = 13;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 14;
}

// Description-tagged IP ranges for the router to advertise.
message RouterAdvertisedIpRange {
  // User-specified description for the IP range.
  optional string description = 1;

  // The IP range to advertise. The value must be a CIDR-formatted string.
  optional string range = 2;
}

// Contains a list of routers.
message RouterAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of Router resources.
  map<string, RoutersScopedList> items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

message RouterBgp {
  // User-specified flag to indicate which mode to use for advertisement. The
  // options are DEFAULT or CUSTOM.
  // CUSTOM:
  // DEFAULT:
  optional string advertise_mode = 1;

  // User-specified list of prefix groups to advertise in custom mode. This
  // field can only be populated if advertise_mode is CUSTOM and is advertised
  // to all peers of the router. These groups will be advertised in addition to
  // any specified prefixes. Leave this field blank to advertise no custom
  // groups.
  repeated string advertised_groups = 2;

  // User-specified list of individual IP ranges to advertise in custom mode.
  // This field can only be populated if advertise_mode is CUSTOM and is
  // advertised to all peers of the router. These IP ranges will be advertised
  // in addition to any specified groups. Leave this field blank to advertise no
  // custom IP ranges.
  repeated RouterAdvertisedIpRange advertised_ip_ranges = 3;

  // Local BGP Autonomous System Number (ASN). Must be an RFC6996 private ASN,
  // either 16-bit or 32-bit. The value will be fixed for this router resource.
  // All VPN tunnels that link to this router will have the same local ASN.
  optional uint32 asn = 4;

  // The interval in seconds between BGP keepalive messages that are sent to the
  // peer. Hold time is three times the interval at which keepalive messages are
  // sent, and the hold time is the maximum number of seconds allowed to elapse
  // between successive keepalive messages that BGP receives from a peer. BGP
  // will use the smaller of either the local hold time value or the peer's hold
  // time value as the hold time for the BGP connection between the two peers.
  // If set, this value must be between 20 and 60. The default is 20.
  optional uint32 keepalive_interval = 5;
}

message RouterBgpPeer {
  // User-specified flag to indicate which mode to use for advertisement.
  // CUSTOM:
  // DEFAULT:
  optional string advertise_mode = 1;

  // User-specified list of prefix groups to advertise in custom mode, which
  // currently supports the following option: - ALL_SUBNETS: Advertises all of
  // the router's own VPC subnets. This excludes any routes learned for subnets
  // that use VPC Network Peering. Note that this field can only be populated if
  // advertise_mode is CUSTOM and overrides the list defined for the router (in
  // the "bgp" message). These groups are advertised in addition to any
  // specified prefixes. Leave this field blank to advertise no custom groups.
  repeated string advertised_groups = 2;

  // User-specified list of individual IP ranges to advertise in custom mode.
  // This field can only be populated if advertise_mode is CUSTOM and overrides
  // the list defined for the router (in the "bgp" message). These IP ranges are
  // advertised in addition to any specified groups. Leave this field blank to
  // advertise no custom IP ranges.
  repeated RouterAdvertisedIpRange advertised_ip_ranges = 3;

  // The priority of routes advertised to this BGP peer. Where there is more
  // than one matching route of maximum length, the routes with the lowest
  // priority value win.
  optional uint32 advertised_route_priority = 4;

  // BFD configuration for the BGP peering.
  optional RouterBgpPeerBfd bfd = 5;

  // The status of the BGP peer connection. If set to FALSE, any active session
  // with the peer is terminated and all associated routing information is
  // removed. If set to TRUE, the peer connection can be established with
  // routing information. The default is TRUE.
  // FALSE:
  // TRUE:
  optional string enable = 6;

  // Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by
  // default.
  optional bool enable_ipv6 = 7;

  // Name of the interface the BGP peer is associated with.
  optional string interface_name = 8;

  // IP address of the interface inside Google Cloud Platform. Only IPv4 is
  // supported.
  optional string ip_address = 9;

  // IPv6 address of the interface inside Google Cloud Platform.
  optional string ipv6_nexthop_address = 10;

  // [Output Only] The resource that configures and manages this BGP peer. -
  // MANAGED_BY_USER is the default value and can be managed by you or other
  // users - MANAGED_BY_ATTACHMENT is a BGP peer that is configured and managed
  // by Cloud Interconnect, specifically by an InterconnectAttachment of type
  // PARTNER. Google automatically creates, updates, and deletes this type of
  // BGP peer when the PARTNER InterconnectAttachment is created, updated, or
  // deleted.
  // MANAGED_BY_ATTACHMENT: The BGP peer is automatically created for PARTNER
  // type InterconnectAttachment; Google will automatically create/delete this
  // BGP peer when the PARTNER InterconnectAttachment is created/deleted, and
  // Google will update the ipAddress and peerIpAddress when the PARTNER
  // InterconnectAttachment is provisioned. This type of BGP peer cannot be
  // created or deleted, but can be modified for all fields except for name,
  // ipAddress and peerIpAddress.
  // MANAGED_BY_USER: Default value, the BGP peer is manually created and
  // managed by user.
  optional string management_type = 11;

  // Present if MD5 authentication is enabled for the peering. Must be the name
  // of one of the entries in the Router.md5_authentication_keys. The field must
  // comply with RFC1035.
  optional string md5_authentication_key_name = 12;

  // Name of this BGP peer. The name must be 1-63 characters long, and comply
  // with RFC1035. Specifically, the name must be 1-63 characters long and match
  // the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
  // character must be a lowercase letter, and all following characters must be
  // a dash, lowercase letter, or digit, except the last character, which cannot
  // be a dash.
  optional string name = 13;

  // Peer BGP Autonomous System Number (ASN). Each BGP interface may use a
  // different value.
  optional uint32 peer_asn = 14;

  // IP address of the BGP interface outside Google Cloud Platform. Only IPv4 is
  // supported.
  optional string peer_ip_address = 15;

  // IPv6 address of the BGP interface outside Google Cloud Platform.
  optional string peer_ipv6_nexthop_address = 16;

  // URI of the VM instance that is used as third-party router appliances such
  // as Next Gen Firewalls, Virtual Routers, or Router Appliances. The VM
  // instance must be located in zones contained in the same region as this
  // Cloud Router. The VM instance is the peer side of the BGP session.
  optional string router_appliance_instance = 17;
}

message RouterBgpPeerBfd {
  // The minimum interval, in milliseconds, between BFD control packets received
  // from the peer router. The actual value is negotiated between the two
  // routers and is equal to the greater of this value and the transmit interval
  // of the other router. If set, this value must be between 1000 and 30000. The
  // default is 1000.
  optional uint32 min_receive_interval = 1;

  // The minimum interval, in milliseconds, between BFD control packets
  // transmitted to the peer router. The actual value is negotiated between the
  // two routers and is equal to the greater of this value and the corresponding
  // receive interval of the other router. If set, this value must be between
  // 1000 and 30000. The default is 1000.
  optional uint32 min_transmit_interval = 2;

  // The number of consecutive BFD packets that must be missed before BFD
  // declares that a peer is unavailable. If set, the value must be a value
  // between 5 and 16. The default is 5.
  optional uint32 multiplier = 3;

  // The BFD session initialization mode for this BGP peer. If set to ACTIVE,
  // the Cloud Router will initiate the BFD session for this BGP peer. If set to
  // PASSIVE, the Cloud Router will wait for the peer router to initiate the BFD
  // session for this BGP peer. If set to DISABLED, BFD is disabled for this BGP
  // peer. The default is DISABLED.
  // ACTIVE:
  // DISABLED:
  // PASSIVE:
  optional string session_initialization_mode = 4;
}

message RouterInterface {
  // IP address and range of the interface. The IP range must be in the RFC3927
  // link-local IP address space. The value must be a CIDR-formatted string, for
  // example: 169.254.0.1/30. NOTE: Do not truncate the address as it represents
  // the IP address of the interface.
  optional string ip_range = 1;

  // URI of the linked Interconnect attachment. It must be in the same region as
  // the router. Each interface can have one linked resource, which can be a VPN
  // tunnel, an Interconnect attachment, or a virtual machine instance.
  optional string linked_interconnect_attachment = 2;

  // URI of the linked VPN tunnel, which must be in the same region as the
  // router. Each interface can have one linked resource, which can be a VPN
  // tunnel, an Interconnect attachment, or a virtual machine instance.
  optional string linked_vpn_tunnel = 3;

  // [Output Only] The resource that configures and manages this interface. -
  // MANAGED_BY_USER is the default value and can be managed directly by users.
  // - MANAGED_BY_ATTACHMENT is an interface that is configured and managed by
  // Cloud Interconnect, specifically, by an InterconnectAttachment of type
  // PARTNER. Google automatically creates, updates, and deletes this type of
  // interface when the PARTNER InterconnectAttachment is created, updated, or
  // deleted.
  // MANAGED_BY_ATTACHMENT: The interface is automatically created for PARTNER
  // type InterconnectAttachment, Google will automatically create/update/delete
  // this interface when the PARTNER InterconnectAttachment is
  // created/provisioned/deleted. This type of interface cannot be manually
  // managed by user.
  // MANAGED_BY_USER: Default value, the interface is manually created and
  // managed by user.
  optional string management_type = 4;

  // Name of this interface entry. The name must be 1-63 characters long, and
  // comply with RFC1035. Specifically, the name must be 1-63 characters long
  // and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the last
  // character, which cannot be a dash.
  optional string name = 5;

  // The regional private internal IP address that is used to establish BGP
  // sessions to a VM instance acting as a third-party Router Appliance, such as
  // a Next Gen Firewall, a Virtual Router, or an SD-WAN VM.
  optional string private_ip_address = 6;

  // Name of the interface that will be redundant with the current interface you
  // are creating. The redundantInterface must belong to the same Cloud Router
  // as the interface here. To establish the BGP session to a Router Appliance
  // VM, you must create two BGP peers. The two BGP peers must be attached to
  // two separate interfaces that are redundant with each other. The
  // redundant_interface must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the redundant_interface must be 1-63 characters long and
  // match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
  // first character must be a lowercase letter, and all following characters
  // must be a dash, lowercase letter, or digit, except the last character,
  // which cannot be a dash.
  optional string redundant_interface = 7;

  // The URI of the subnetwork resource that this interface belongs to, which
  // must be in the same region as the Cloud Router. When you establish a BGP
  // session to a VM instance using this interface, the VM instance must belong
  // to the same subnetwork as the subnetwork specified here.
  optional string subnetwork = 8;
}

// Contains a list of Router resources.
message RouterList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of Router resources.
  repeated Router items = 2;

  // [Output Only] Type of resource. Always compute#router for routers.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message RouterMd5AuthenticationKey {
  // [Input only] Value of the key. For patch and update calls, it can be
  // skipped to copy the value from the previous configuration. This is allowed
  // if the key with the same name existed before the operation. Maximum length
  // is 80 characters. Can only contain printable ASCII characters.
  optional string key = 1;

  // Name used to identify the key. Must be unique within a router. Must be
  // referenced by at least one bgpPeer. Must comply with RFC1035.
  optional string name = 2;
}

// Represents a Nat resource. It enables the VMs within the specified
// subnetworks to access Internet without external IP addresses. It specifies a
// list of subnetworks (and the ranges within) that want to use NAT. Customers
// can also provide the external IPs that would be used for NAT. GCP would
// auto-allocate ephemeral IPs if no external IPs are provided.
message RouterNat {
  // A list of URLs of the IP resources to be drained. These IPs must be valid
  // static external IPs that have been assigned to the NAT. These IPs should be
  // used for updating/patching a NAT only.
  repeated string drain_nat_ips = 1;

  // Enable Dynamic Port Allocation. If not specified, it is disabled by
  // default. If set to true, - Dynamic Port Allocation will be enabled on this
  // NAT config. - enableEndpointIndependentMapping cannot be set to true. - If
  // minPorts is set, minPortsPerVm must be set to a power of two greater than
  // or equal to 32. If minPortsPerVm is not set, a minimum of 32 ports will be
  // allocated to a VM from this NAT config.
  optional bool enable_dynamic_port_allocation = 2;

  optional bool enable_endpoint_independent_mapping = 3;

  // List of NAT-ted endpoint types supported by the Nat Gateway. If the list is
  // empty, then it will be equivalent to include ENDPOINT_TYPE_VM
  repeated string endpoint_types = 4;

  // Timeout (in seconds) for ICMP connections. Defaults to 30s if not set.
  optional int32 icmp_idle_timeout_sec = 5;

  // Configure logging on this NAT.
  optional RouterNatLogConfig log_config = 6;

  // Maximum number of ports allocated to a VM from this NAT config when Dynamic
  // Port Allocation is enabled. If Dynamic Port Allocation is not enabled, this
  // field has no effect. If Dynamic Port Allocation is enabled, and this field
  // is set, it must be set to a power of two greater than minPortsPerVm, or 64
  // if minPortsPerVm is not set. If Dynamic Port Allocation is enabled and this
  // field is not set, a maximum of 65536 ports will be allocated to a VM from
  // this NAT config.
  optional int32 max_ports_per_vm = 7;

  // Minimum number of ports allocated to a VM from this NAT config. If not set,
  // a default number of ports is allocated to a VM. This is rounded up to the
  // nearest power of 2. For example, if the value of this field is 50, at least
  // 64 ports are allocated to a VM.
  optional int32 min_ports_per_vm = 8;

  // Unique name of this Nat service. The name must be 1-63 characters long and
  // comply with RFC1035.
  optional string name = 9;

  // Specify the NatIpAllocateOption, which can take one of the following
  // values: - MANUAL_ONLY: Uses only Nat IP addresses provided by customers.
  // When there are not enough specified Nat IPs, the Nat service fails for new
  // VMs. - AUTO_ONLY: Nat IPs are allocated by Google Cloud Platform; customers
  // can't specify any Nat IPs. When choosing AUTO_ONLY, then nat_ip should be
  // empty.
  // AUTO_ONLY: Nat IPs are allocated by GCP; customers can not specify any Nat
  // IPs.
  // MANUAL_ONLY: Only use Nat IPs provided by customers. When specified Nat IPs
  // are not enough then the Nat service fails for new VMs.
  optional string nat_ip_allocate_option = 10;

  // A list of URLs of the IP resources used for this Nat service. These IP
  // addresses must be valid static external IP addresses assigned to the
  // project.
  repeated string nat_ips = 11;

  // A list of rules associated with this NAT.
  repeated RouterNatRule rules = 12;

  // Specify the Nat option, which can take one of the following values: -
  // ALL_SUBNETWORKS_ALL_IP_RANGES: All of the IP ranges in every Subnetwork are
  // allowed to Nat. - ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES: All of the primary
  // IP ranges in every Subnetwork are allowed to Nat. - LIST_OF_SUBNETWORKS: A
  // list of Subnetworks are allowed to Nat (specified in the field subnetwork
  // below) The default is SUBNETWORK_IP_RANGE_TO_NAT_OPTION_UNSPECIFIED. Note
  // that if this field contains ALL_SUBNETWORKS_ALL_IP_RANGES or
  // ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES, then there should not be any other
  // Router.Nat section in any Router for this network in this region.
  // ALL_SUBNETWORKS_ALL_IP_RANGES: All the IP ranges in every Subnetwork are
  // allowed to Nat.
  // ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES: All the primary IP ranges in every
  // Subnetwork are allowed to Nat.
  // LIST_OF_SUBNETWORKS: A list of Subnetworks are allowed to Nat (specified in
  // the field subnetwork below)
  optional string source_subnetwork_ip_ranges_to_nat = 13;

  // A list of Subnetwork resources whose traffic should be translated by NAT
  // Gateway. It is used only when LIST_OF_SUBNETWORKS is selected for the
  // SubnetworkIpRangeToNatOption above.
  repeated RouterNatSubnetworkToNat subnetworks = 14;

  // Timeout (in seconds) for TCP established connections. Defaults to 1200s if
  // not set.
  optional int32 tcp_established_idle_timeout_sec = 15;

  // Timeout (in seconds) for TCP connections that are in TIME_WAIT state.
  // Defaults to 120s if not set.
  optional int32 tcp_time_wait_timeout_sec = 16;

  // Timeout (in seconds) for TCP transitory connections. Defaults to 30s if not
  // set.
  optional int32 tcp_transitory_idle_timeout_sec = 17;

  // Timeout (in seconds) for UDP connections. Defaults to 30s if not set.
  optional int32 udp_idle_timeout_sec = 18;
}

// Configuration of logging on a NAT.
message RouterNatLogConfig {
  // Indicates whether or not to export logs. This is false by default.
  optional bool enable = 1;

  // Specify the desired filtering of logs on this NAT. If unspecified, logs are
  // exported for all connections handled by this NAT. This option can take one
  // of the following values: - ERRORS_ONLY: Export logs only for connection
  // failures. - TRANSLATIONS_ONLY: Export logs only for successful connections.
  // - ALL: Export logs for all connections, successful and unsuccessful.
  // ALL: Export logs for all (successful and unsuccessful) connections.
  // ERRORS_ONLY: Export logs for connection failures only.
  // TRANSLATIONS_ONLY: Export logs for successful connections only.
  optional string filter = 2;
}

message RouterNatRule {
  // The action to be enforced for traffic that matches this rule.
  optional RouterNatRuleAction action = 1;

  // An optional description of this rule.
  optional string description = 2;

  // CEL expression that specifies the match condition that egress traffic from
  // a VM is evaluated against. If it evaluates to true, the corresponding
  // `action` is enforced. The following examples are valid match expressions
  // for public NAT: "inIpRange(destination.ip, '1.1.0.0/16') ||
  // inIpRange(destination.ip, '2.2.0.0/16')" "destination.ip == '1.1.0.1' ||
  // destination.ip == '8.8.8.8'" The following example is a valid match
  // expression for private NAT: "nexthop.hub ==
  // 'https://networkconnectivity.googleapis.com/v1alpha1/projects/my-project/global/hub/hub-1'"
  optional string match = 3;

  // An integer uniquely identifying a rule in the list. The rule number must be
  // a positive value between 0 and 65000, and must be unique among rules within
  // a NAT.
  optional uint32 rule_number = 4;
}

message RouterNatRuleAction {
  // A list of URLs of the IP resources used for this NAT rule. These IP
  // addresses must be valid static external IP addresses assigned to the
  // project. This field is used for public NAT.
  repeated string source_nat_active_ips = 1;

  // A list of URLs of the IP resources to be drained. These IPs must be valid
  // static external IPs that have been assigned to the NAT. These IPs should be
  // used for updating/patching a NAT rule only. This field is used for public
  // NAT.
  repeated string source_nat_drain_ips = 2;
}

// Defines the IP ranges that want to use NAT for a subnetwork.
message RouterNatSubnetworkToNat {
  // URL for the subnetwork resource that will use NAT.
  optional string name = 1;

  // A list of the secondary ranges of the Subnetwork that are allowed to use
  // NAT. This can be populated only if "LIST_OF_SECONDARY_IP_RANGES" is one of
  // the values in source_ip_ranges_to_nat.
  repeated string secondary_ip_range_names = 2;

  // Specify the options for NAT ranges in the Subnetwork. All options of a
  // single value are valid except NAT_IP_RANGE_OPTION_UNSPECIFIED. The only
  // valid option with multiple values is: ["PRIMARY_IP_RANGE",
  // "LIST_OF_SECONDARY_IP_RANGES"] Default: [ALL_IP_RANGES]
  repeated string source_ip_ranges_to_nat = 3;
}

message RouterStatus {
  // Best routes for this router's network.
  repeated Route best_routes = 1;

  // Best routes learned by this router.
  repeated Route best_routes_for_router = 2;

  repeated RouterStatusBgpPeerStatus bgp_peer_status = 3;

  repeated RouterStatusNatStatus nat_status = 4;

  // URI of the network to which this router belongs.
  optional string network = 5;
}

message RouterStatusBgpPeerStatus {
  // Routes that were advertised to the remote BGP peer
  repeated Route advertised_routes = 1;

  optional BfdStatus bfd_status = 2;

  // Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by
  // default.
  optional bool enable_ipv6 = 3;

  // IP address of the local BGP interface.
  optional string ip_address = 4;

  // IPv6 address of the local BGP interface.
  optional string ipv6_nexthop_address = 5;

  // URL of the VPN tunnel that this BGP peer controls.
  optional string linked_vpn_tunnel = 6;

  // Informs whether MD5 authentication is enabled on this BGP peer.
  optional bool md5_auth_enabled = 7;

  // Name of this BGP peer. Unique within the Routers resource.
  optional string name = 8;

  // Number of routes learned from the remote BGP Peer.
  optional uint32 num_learned_routes = 9;

  // IP address of the remote BGP interface.
  optional string peer_ip_address = 10;

  // IPv6 address of the remote BGP interface.
  optional string peer_ipv6_nexthop_address = 11;

  // [Output only] URI of the VM instance that is used as third-party router
  // appliances such as Next Gen Firewalls, Virtual Routers, or Router
  // Appliances. The VM instance is the peer side of the BGP session.
  optional string router_appliance_instance = 12;

  // The state of the BGP session. For a list of possible values for this field,
  // see BGP session states.
  optional string state = 13;

  // Status of the BGP peer: {UP, DOWN}
  // DOWN:
  // UNKNOWN:
  // UP:
  optional string status = 14;

  // Indicates why particular status was returned.
  // MD5_AUTH_INTERNAL_PROBLEM: Indicates internal problems with configuration
  // of MD5 authentication. This particular reason can only be returned when
  // md5AuthEnabled is true and status is DOWN.
  // STATUS_REASON_UNSPECIFIED:
  optional string status_reason = 15;

  // Time this session has been up. Format: 14 years, 51 weeks, 6 days, 23
  // hours, 59 minutes, 59 seconds
  optional string uptime = 16;

  // Time this session has been up, in seconds. Format: 145
  optional string uptime_seconds = 17;
}

// Status of a NAT contained in this router.
message RouterStatusNatStatus {
  // A list of IPs auto-allocated for NAT. Example: ["1.1.1.1", "129.2.16.89"]
  repeated string auto_allocated_nat_ips = 1;

  // A list of IPs auto-allocated for NAT that are in drain mode. Example:
  // ["1.1.1.1", "179.12.26.133"].
  repeated string drain_auto_allocated_nat_ips = 2;

  // A list of IPs user-allocated for NAT that are in drain mode. Example:
  // ["1.1.1.1", "179.12.26.133"].
  repeated string drain_user_allocated_nat_ips = 3;

  // The number of extra IPs to allocate. This will be greater than 0 only if
  // user-specified IPs are NOT enough to allow all configured VMs to use NAT.
  // This value is meaningful only when auto-allocation of NAT IPs is *not*
  // used.
  optional int32 min_extra_nat_ips_needed = 4;

  // Unique name of this NAT.
  optional string name = 5;

  // Number of VM endpoints (i.e., Nics) that can use NAT.
  optional int32 num_vm_endpoints_with_nat_mappings = 6;

  // Status of rules in this NAT.
  repeated RouterStatusNatStatusNatRuleStatus rule_status = 7;

  // A list of fully qualified URLs of reserved IP address resources.
  repeated string user_allocated_nat_ip_resources = 8;

  // A list of IPs user-allocated for NAT. They will be raw IP strings like
  // "179.12.26.133".
  repeated string user_allocated_nat_ips = 9;
}

// Status of a NAT Rule contained in this NAT.
message RouterStatusNatStatusNatRuleStatus {
  // A list of active IPs for NAT. Example: ["1.1.1.1", "179.12.26.133"].
  repeated string active_nat_ips = 1;

  // A list of IPs for NAT that are in drain mode. Example: ["1.1.1.1",
  // "179.12.26.133"].
  repeated string drain_nat_ips = 2;

  // The number of extra IPs to allocate. This will be greater than 0 only if
  // the existing IPs in this NAT Rule are NOT enough to allow all configured
  // VMs to use NAT.
  optional int32 min_extra_ips_needed = 3;

  // Number of VM endpoints (i.e., NICs) that have NAT Mappings from this NAT
  // Rule.
  optional int32 num_vm_endpoints_with_nat_mappings = 4;

  // Rule number of the rule.
  optional int32 rule_number = 5;
}

message RouterStatusResponse {
  // Type of resource.
  optional string kind = 1;

  optional RouterStatus result = 2;
}

message RoutersPreviewResponse {
  // Preview of given router.
  optional Router resource = 1;
}

message RoutersScopedList {
  // A list of routers contained in this scope.
  repeated Router routers = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // Informational warning which replaces the list of routers when the list is
  // empty.
  optional Warning warning = 2;
}

// This is deprecated and has no effect. Do not use.
message Rule {
  // This is deprecated and has no effect. Do not use.
  // ALLOW: This is deprecated and has no effect. Do not use.
  // ALLOW_WITH_LOG: This is deprecated and has no effect. Do not use.
  // DENY: This is deprecated and has no effect. Do not use.
  // DENY_WITH_LOG: This is deprecated and has no effect. Do not use.
  // LOG: This is deprecated and has no effect. Do not use.
  // NO_ACTION: This is deprecated and has no effect. Do not use.
  optional string action = 1;

  // This is deprecated and has no effect. Do not use.
  repeated Condition conditions = 2;

  // This is deprecated and has no effect. Do not use.
  optional string description = 3;

  // This is deprecated and has no effect. Do not use.
  repeated string ins = 4;

  // This is deprecated and has no effect. Do not use.
  repeated LogConfig log_configs = 5;

  // This is deprecated and has no effect. Do not use.
  repeated string not_ins = 6;

  // This is deprecated and has no effect. Do not use.
  repeated string permissions = 7;
}

message SSLHealthCheck {
  // The TCP port number to which the health check prober sends packets. The
  // default value is 443. Valid values are 1 through 65535.
  optional int32 port = 1;

  // Not supported.
  optional string port_name = 2;

  // Specifies how a port is selected for health checking. Can be one of the
  // following values: USE_FIXED_PORT: Specifies a port number explicitly using
  // the port field in the health check. Supported by backend services for
  // pass-through load balancers and backend services for proxy load balancers.
  // Not supported by target pools. The health check supports all backends
  // supported by the backend service provided the backend can be health
  // checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT
  // network endpoint groups, and instance group backends. USE_NAMED_PORT: Not
  // supported. USE_SERVING_PORT: Provides an indirect method of specifying the
  // health check port by referring to the backend service. Only supported by
  // backend services for proxy load balancers. Not supported by target pools.
  // Not supported by backend services for pass-through load balancers. Supports
  // all backends that can be health checked; for example, GCE_VM_IP_PORT
  // network endpoint groups and instance group backends. For GCE_VM_IP_PORT
  // network endpoint group backends, the health check uses the port number
  // specified for each endpoint in the network endpoint group. For instance
  // group backends, the health check uses the port number determined by looking
  // up the backend service's named port in the instance group's list of named
  // ports.
  // USE_FIXED_PORT: The port number in the health check's port is used for
  // health checking. Applies to network endpoint group and instance group
  // backends.
  // USE_NAMED_PORT: Not supported.
  // USE_SERVING_PORT: For network endpoint group backends, the health check
  // uses the port number specified on each endpoint in the network endpoint
  // group. For instance group backends, the health check uses the port number
  // specified for the backend service's named port defined in the instance
  // group's named ports.
  optional string port_specification = 3;

  // Specifies the type of proxy header to append before sending data to the
  // backend, either NONE or PROXY_V1. The default is NONE.
  // NONE:
  // PROXY_V1:
  optional string proxy_header = 4;

  // Instructs the health check prober to send this exact ASCII string, up to
  // 1024 bytes in length, after establishing the TCP connection and SSL
  // handshake.
  optional string request = 5;

  // Creates a content-based SSL health check. In addition to establishing a TCP
  // connection and the TLS handshake, you can configure the health check to
  // pass only when the backend sends this exact response ASCII string, up to
  // 1024 bytes in length. For details, see:
  // https://cloud.google.com/load-balancing/docs/health-check-concepts#criteria-protocol-ssl-tcp
  optional string response = 6;
}

// DEPRECATED: Please use compute#savedDisk instead. An instance-attached disk
// resource.
message SavedAttachedDisk {
  // Specifies whether the disk will be auto-deleted when the instance is
  // deleted (but not when the disk is detached from the instance).
  optional bool auto_delete = 1;

  // Indicates that this is a boot disk. The virtual machine will use the first
  // partition of the disk for its root filesystem.
  optional bool boot = 2;

  // Specifies the name of the disk attached to the source instance.
  optional string device_name = 3;

  // The encryption key for the disk.
  optional CustomerEncryptionKey disk_encryption_key = 4;

  // The size of the disk in base-2 GB.
  optional string disk_size_gb = 5;

  // [Output Only] URL of the disk type resource. For example: projects/project
  // /zones/zone/diskTypes/pd-standard or pd-ssd
  optional string disk_type = 6;

  // A list of features to enable on the guest operating system. Applicable only
  // for bootable images. Read Enabling guest operating system features to see a
  // list of available options.
  repeated GuestOsFeature guest_os_features = 7;

  // Specifies zero-based index of the disk that is attached to the source
  // instance.
  optional int32 index = 8;

  // Specifies the disk interface to use for attaching this disk, which is
  // either SCSI or NVME.
  // NVME:
  // SCSI:
  optional string interface = 9;

  // [Output Only] Type of the resource. Always compute#attachedDisk for
  // attached disks.
  optional string kind = 10;

  // [Output Only] Any valid publicly visible licenses.
  repeated string licenses = 11;

  // The mode in which this disk is attached to the source instance, either
  // READ_WRITE or READ_ONLY.
  // READ_ONLY: Attaches this disk in read-only mode. Multiple virtual machines
  // can use a disk in read-only mode at a time.
  // READ_WRITE: *[Default]* Attaches this disk in read-write mode. Only one
  // virtual machine at a time can be attached to a disk in read-write mode.
  optional string mode = 12;

  // Specifies a URL of the disk attached to the source instance.
  optional string source = 13;

  // [Output Only] A size of the storage used by the disk's snapshot by this
  // machine image.
  optional string storage_bytes = 14;

  // [Output Only] An indicator whether storageBytes is in a stable state or it
  // is being adjusted as a result of shared storage reallocation. This status
  // can either be UPDATING, meaning the size of the snapshot is being updated,
  // or UP_TO_DATE, meaning the size of the snapshot is up-to-date.
  // UPDATING:
  // UP_TO_DATE:
  optional string storage_bytes_status = 15;

  // Specifies the type of the attached disk, either SCRATCH or PERSISTENT.
  // PERSISTENT:
  // SCRATCH:
  optional string type = 16;
}

// An instance-attached disk resource.
message SavedDisk {
  // [Output Only] The architecture of the attached disk.
  // ARCHITECTURE_UNSPECIFIED: Default value indicating Architecture is not set.
  // ARM64: Machines with architecture ARM64
  // X86_64: Machines with architecture X86_64
  optional string architecture = 1;

  // [Output Only] Type of the resource. Always compute#savedDisk for attached
  // disks.
  optional string kind = 2;

  // Specifies a URL of the disk attached to the source instance.
  optional string source_disk = 3;

  // [Output Only] Size of the individual disk snapshot used by this machine
  // image.
  optional string storage_bytes = 4;

  // [Output Only] An indicator whether storageBytes is in a stable state or it
  // is being adjusted as a result of shared storage reallocation. This status
  // can either be UPDATING, meaning the size of the snapshot is being updated,
  // or UP_TO_DATE, meaning the size of the snapshot is up-to-date.
  // UPDATING:
  // UP_TO_DATE:
  optional string storage_bytes_status = 5;
}

message ScalingScheduleStatus {
  // [Output Only] The last time the scaling schedule became active. Note: this
  // is a timestamp when a schedule actually became active, not when it was
  // planned to do so. The timestamp is in RFC3339 text format.
  optional string last_start_time = 1;

  // [Output Only] The next time the scaling schedule is to become active. Note:
  // this is a timestamp when a schedule is planned to run, but the actual time
  // might be slightly different. The timestamp is in RFC3339 text format.
  optional string next_start_time = 2;

  // [Output Only] The current state of a scaling schedule.
  // ACTIVE: The current autoscaling recommendation is influenced by this
  // scaling schedule.
  // DISABLED: This scaling schedule has been disabled by the user.
  // OBSOLETE: This scaling schedule will never become active again.
  // READY: The current autoscaling recommendation is not influenced by this
  // scaling schedule.
  optional string state = 3;
}

// Sets the scheduling options for an Instance.
message Scheduling {
  // Specifies whether the instance should be automatically restarted if it is
  // terminated by Compute Engine (not terminated by a user). You can only set
  // the automatic restart option for standard instances. Preemptible instances
  // cannot be automatically restarted. By default, this is set to true so an
  // instance is automatically restarted if it is terminated by Compute Engine.
  optional bool automatic_restart = 1;

  // Specifies the termination action for the instance.
  // DELETE: Delete the VM.
  // INSTANCE_TERMINATION_ACTION_UNSPECIFIED: Default value. This value is
  // unused.
  // STOP: Stop the VM without storing in-memory content. default action.
  optional string instance_termination_action = 2;

  // An opaque location hint used to place the instance close to other
  // resources. This field is for use by internal tools that use the public API.
  optional string location_hint = 3;

  // The minimum number of virtual CPUs this instance will consume when running
  // on a sole-tenant node.
  optional int32 min_node_cpus = 4;

  // A set of node affinity and anti-affinity configurations. Refer to
  // Configuring node affinity for more information. Overrides
  // reservationAffinity.
  repeated SchedulingNodeAffinity node_affinities = 5;

  // Defines the maintenance behavior for this instance. For standard instances,
  // the default behavior is MIGRATE. For preemptible instances, the default and
  // only possible behavior is TERMINATE. For more information, see Set VM host
  // maintenance policy.
  // MIGRATE: *[Default]* Allows Compute Engine to automatically migrate
  // instances out of the way of maintenance events.
  // TERMINATE: Tells Compute Engine to terminate and (optionally) restart the
  // instance away from the maintenance activity. If you would like your
  // instance to be restarted, set the automaticRestart flag to true. Your
  // instance may be restarted more than once, and it may be restarted outside
  // the window of maintenance events.
  optional string on_host_maintenance = 6;

  // Defines whether the instance is preemptible. This can only be set during
  // instance creation or while the instance is stopped and therefore, in a
  // `TERMINATED` state. See Instance Life Cycle for more information on the
  // possible instance states.
  optional bool preemptible = 7;

  // Specifies the provisioning model of the instance.
  // SPOT: Heavily discounted, no guaranteed runtime.
  // STANDARD: Standard provisioning with user controlled runtime, no discounts.
  optional string provisioning_model = 8;
}

// Node Affinity: the configuration of desired nodes onto which this Instance
// could be scheduled.
message SchedulingNodeAffinity {
  // Corresponds to the label key of Node resource.
  optional string key = 1;

  // Defines the operation of node selection. Valid operators are IN for
  // affinity and NOT_IN for anti-affinity.
  // IN: Requires Compute Engine to seek for matched nodes.
  // NOT_IN: Requires Compute Engine to avoid certain nodes.
  // OPERATOR_UNSPECIFIED:
  optional string operator = 2;

  // Corresponds to the label values of Node resource.
  repeated string values = 3;
}

// An instance's screenshot.
message Screenshot {
  // [Output Only] The Base64-encoded screenshot data.
  optional string contents = 1;

  // [Output Only] Type of the resource. Always compute#screenshot for the
  // screenshots.
  optional string kind = 2;
}

message SecurityPoliciesAggregatedList {
  optional string etag = 1;

  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 2;

  // A list of SecurityPoliciesScopedList resources.
  map<string, SecurityPoliciesScopedList> items = 3;

  // [Output Only] Type of resource. Always compute#securityPolicyAggregatedList
  // for lists of Security Policies.
  optional string kind = 4;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 5;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 6;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 7;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 8;
}

message SecurityPoliciesListPreconfiguredExpressionSetsResponse {
  optional SecurityPoliciesWafConfig preconfigured_expression_sets = 1;
}

message SecurityPoliciesScopedList {
  // A list of SecurityPolicies contained in this scope.
  repeated SecurityPolicy security_policies = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // Informational warning which replaces the list of security policies when the
  // list is empty.
  optional Warning warning = 2;
}

message SecurityPoliciesWafConfig {
  optional PreconfiguredWafSet waf_rules = 1;
}

// Represents a Google Cloud Armor security policy resource. Only external
// backend services that use load balancers can reference a security policy. For
// more information, see Google Cloud Armor security policy overview.
message SecurityPolicy {
  optional SecurityPolicyAdaptiveProtectionConfig adaptive_protection_config =
      1;

  optional SecurityPolicyAdvancedOptionsConfig advanced_options_config = 2;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 3;

  optional SecurityPolicyDdosProtectionConfig ddos_protection_config = 4;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 5;

  // Specifies a fingerprint for this resource, which is essentially a hash of
  // the metadata's contents and used for optimistic locking. The fingerprint is
  // initially generated by Compute Engine and changes after every request to
  // modify or update metadata. You must always provide an up-to-date
  // fingerprint hash in order to update or change metadata, otherwise the
  // request will fail with error 412 conditionNotMet. To see the latest
  // fingerprint, make get() request to the security policy.
  optional string fingerprint = 6;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 7;

  // [Output only] Type of the resource. Always compute#securityPolicyfor
  // security policies
  optional string kind = 8;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 9;

  optional SecurityPolicyRecaptchaOptionsConfig recaptcha_options_config = 10;

  // [Output Only] URL of the region where the regional security policy resides.
  // This field is not applicable to global security policies.
  optional string region = 11;

  // A list of rules that belong to this policy. There must always be a default
  // rule which is a rule with priority 2147483647 and match all condition (for
  // the match condition this means match "*" for srcIpRanges and for the
  // networkMatch condition every field must be either match "*" or not set). If
  // no rules are provided when creating a security policy, a default rule with
  // action "allow" will be added.
  repeated SecurityPolicyRule rules = 12;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 13;

  // The type indicates the intended use of the security policy. - CLOUD_ARMOR:
  // Cloud Armor backend security policies can be configured to filter incoming
  // HTTP requests targeting backend services. They filter requests before they
  // hit the origin servers. - CLOUD_ARMOR_EDGE: Cloud Armor edge security
  // policies can be configured to filter incoming HTTP requests targeting
  // backend services (including Cloud CDN-enabled) as well as backend buckets
  // (Cloud Storage). They filter requests before the request is served from
  // Google's cache. - CLOUD_ARMOR_INTERNAL_SERVICE: Cloud Armor internal
  // service policies can be configured to filter HTTP requests targeting
  // services managed by Traffic Director in a service mesh. They filter
  // requests before the request is served from the application. -
  // CLOUD_ARMOR_NETWORK: Cloud Armor network policies can be configured to
  // filter packets targeting network load balancing resources such as backend
  // services, target pools, target instances, and instances with external IPs.
  // They filter requests before the request is served from the application.
  // This field can be set only at resource creation time.
  // CLOUD_ARMOR:
  // CLOUD_ARMOR_EDGE:
  // CLOUD_ARMOR_NETWORK:
  optional string type = 14;
}

// Configuration options for Cloud Armor Adaptive Protection (CAAP).
message SecurityPolicyAdaptiveProtectionConfig {
  // If set to true, enables Cloud Armor Machine Learning.
  optional SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig
      layer7_ddos_defense_config = 1;
}

// Configuration options for L7 DDoS detection.
message SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig {
  // If set to true, enables CAAP for L7 DDoS detection.
  optional bool enable = 1;

  // Rule visibility can be one of the following: STANDARD - opaque rules.
  // (default) PREMIUM - transparent rules.
  // PREMIUM:
  // STANDARD:
  optional string rule_visibility = 2;
}

message SecurityPolicyAdvancedOptionsConfig {
  // Custom configuration to apply the JSON parsing. Only applicable when
  // json_parsing is set to STANDARD.
  optional SecurityPolicyAdvancedOptionsConfigJsonCustomConfig
      json_custom_config = 1;

  // DISABLED:
  // STANDARD:
  optional string json_parsing = 2;

  // NORMAL:
  // VERBOSE:
  optional string log_level = 3;
}

message SecurityPolicyAdvancedOptionsConfigJsonCustomConfig {
  // A list of custom Content-Type header values to apply the JSON parsing. As
  // per RFC 1341, a Content-Type header value has the following format:
  // Content-Type := type "/" subtype *[";" parameter] When configuring a custom
  // Content-Type header value, only the type/subtype needs to be specified, and
  // the parameters should be excluded.
  repeated string content_types = 1;
}

message SecurityPolicyDdosProtectionConfig {
  // ADVANCED:
  // STANDARD:
  optional string ddos_protection = 1;
}

message SecurityPolicyList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of SecurityPolicy resources.
  repeated SecurityPolicy items = 2;

  // [Output Only] Type of resource. Always compute#securityPolicyList for
  // listsof securityPolicies
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 5;
}

message SecurityPolicyRecaptchaOptionsConfig {
  // An optional field to supply a reCAPTCHA site key to be used for all the
  // rules using the redirect action with the type of GOOGLE_RECAPTCHA under the
  // security policy. The specified site key needs to be created from the
  // reCAPTCHA API. The user is responsible for the validity of the specified
  // site key. If not specified, a Google-managed site key is used.
  optional string redirect_site_key = 1;
}

message SecurityPolicyReference {
  optional string security_policy = 1;
}

// Represents a rule that describes one or more match conditions along with the
// action to be taken when traffic matches this condition (allow or deny).
message SecurityPolicyRule {
  // The Action to perform when the rule is matched. The following are the valid
  // actions: - allow: allow access to target. - deny(STATUS): deny access to
  // target, returns the HTTP response code specified. Valid values for `STATUS`
  // are 403, 404, and 502. - rate_based_ban: limit client traffic to the
  // configured threshold and ban the client if the traffic exceeds the
  // threshold. Configure parameters for this action in RateLimitOptions.
  // Requires rate_limit_options to be set. - redirect: redirect to a different
  // target. This can either be an internal reCAPTCHA redirect, or an external
  // URL-based redirect via a 302 response. Parameters for this action can be
  // configured via redirectOptions. - throttle: limit client traffic to the
  // configured threshold. Configure parameters for this action in
  // rateLimitOptions. Requires rate_limit_options to be set for this.
  optional string action = 1;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 2;

  // Optional, additional actions that are performed on headers.
  optional SecurityPolicyRuleHttpHeaderAction header_action = 3;

  // [Output only] Type of the resource. Always compute#securityPolicyRule for
  // security policy rules
  optional string kind = 4;

  // A match condition that incoming traffic is evaluated against. If it
  // evaluates to true, the corresponding 'action' is enforced.
  optional SecurityPolicyRuleMatcher match = 5;

  // Preconfigured WAF configuration to be applied for the rule. If the rule
  // does not evaluate preconfigured WAF rules, i.e., if
  // evaluatePreconfiguredWaf() is not used, this field will have no effect.
  optional SecurityPolicyRulePreconfiguredWafConfig preconfigured_waf_config =
      6;

  // If set to true, the specified action is not enforced.
  optional bool preview = 7;

  // An integer indicating the priority of a rule in the list. The priority must
  // be a positive value between 0 and 2147483647. Rules are evaluated from
  // highest to lowest priority where 0 is the highest priority and 2147483647
  // is the lowest priority.
  optional int32 priority = 8;

  // Must be specified if the action is "rate_based_ban" or "throttle". Cannot
  // be specified for any other actions.
  optional SecurityPolicyRuleRateLimitOptions rate_limit_options = 9;

  // Parameters defining the redirect action. Cannot be specified for any other
  // actions.
  optional SecurityPolicyRuleRedirectOptions redirect_options = 10;
}

message SecurityPolicyRuleHttpHeaderAction {
  // The list of request headers to add or overwrite if they're already present.
  repeated SecurityPolicyRuleHttpHeaderActionHttpHeaderOption
      request_headers_to_adds = 1;
}

message SecurityPolicyRuleHttpHeaderActionHttpHeaderOption {
  // The name of the header to set.
  optional string header_name = 1;

  // The value to set the named header to.
  optional string header_value = 2;
}

// Represents a match condition that incoming traffic is evaluated against.
// Exactly one field must be specified.
message SecurityPolicyRuleMatcher {
  // The configuration options available when specifying versioned_expr. This
  // field must be specified if versioned_expr is specified and cannot be
  // specified if versioned_expr is not specified.
  optional SecurityPolicyRuleMatcherConfig config = 1;

  // User defined CEVAL expression. A CEVAL expression is used to specify match
  // criteria such as origin.ip, source.region_code and contents in the request
  // header.
  optional Expr expr = 2;

  // Preconfigured versioned expression. If this field is specified, config must
  // also be specified. Available preconfigured expressions along with their
  // requirements are: SRC_IPS_V1 - must specify the corresponding src_ip_range
  // field in config.
  // SRC_IPS_V1: Matches the source IP address of a request to the IP ranges
  // supplied in config.
  optional string versioned_expr = 3;
}

message SecurityPolicyRuleMatcherConfig {
  // CIDR IP address range. Maximum number of src_ip_ranges allowed is 10.
  repeated string src_ip_ranges = 1;
}

message SecurityPolicyRulePreconfiguredWafConfig {
  // A list of exclusions to apply during preconfigured WAF evaluation.
  repeated SecurityPolicyRulePreconfiguredWafConfigExclusion exclusions = 1;
}

message SecurityPolicyRulePreconfiguredWafConfigExclusion {
  // A list of request cookie names whose value will be excluded from inspection
  // during preconfigured WAF evaluation.
  repeated SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams
      request_cookies_to_exclude = 1;

  // A list of request header names whose value will be excluded from inspection
  // during preconfigured WAF evaluation.
  repeated SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams
      request_headers_to_exclude = 2;

  // A list of request query parameter names whose value will be excluded from
  // inspection during preconfigured WAF evaluation. Note that the parameter can
  // be in the query string or in the POST body.
  repeated SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams
      request_query_params_to_exclude = 3;

  // A list of request URIs from the request line to be excluded from inspection
  // during preconfigured WAF evaluation. When specifying this field, the query
  // or fragment part should be excluded.
  repeated SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams
      request_uris_to_exclude = 4;

  // A list of target rule IDs under the WAF rule set to apply the preconfigured
  // WAF exclusion. If omitted, it refers to all the rule IDs under the WAF rule
  // set.
  repeated string target_rule_ids = 5;

  // Target WAF rule set to apply the preconfigured WAF exclusion.
  optional string target_rule_set = 6;
}

message SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams {
  // The match operator for the field.
  // CONTAINS: The operator matches if the field value contains the specified
  // value.
  // ENDS_WITH: The operator matches if the field value ends with the specified
  // value.
  // EQUALS: The operator matches if the field value equals the specified value.
  // EQUALS_ANY: The operator matches if the field value is any value.
  // STARTS_WITH: The operator matches if the field value starts with the
  // specified value.
  optional string op = 1;

  // The value of the field.
  optional string val = 2;
}

message SecurityPolicyRuleRateLimitOptions {
  // Can only be specified if the action for the rule is "rate_based_ban". If
  // specified, determines the time (in seconds) the traffic will continue to be
  // banned by the rate limit after the rate falls below the threshold.
  optional int32 ban_duration_sec = 1;

  // Can only be specified if the action for the rule is "rate_based_ban". If
  // specified, the key will be banned for the configured 'ban_duration_sec'
  // when the number of requests that exceed the 'rate_limit_threshold' also
  // exceed this 'ban_threshold'.
  optional SecurityPolicyRuleRateLimitOptionsThreshold ban_threshold = 2;

  // Action to take for requests that are under the configured rate limit
  // threshold. Valid option is "allow" only.
  optional string conform_action = 3;

  // Determines the key to enforce the rate_limit_threshold on. Possible values
  // are: - ALL: A single rate limit threshold is applied to all the requests
  // matching this rule. This is the default value if "enforceOnKey" is not
  // configured. - IP: The source IP address of the request is the key. Each IP
  // has this limit enforced separately. - HTTP_HEADER: The value of the HTTP
  // header whose name is configured under "enforceOnKeyName". The key value is
  // truncated to the first 128 bytes of the header value. If no such header is
  // present in the request, the key type defaults to ALL. - XFF_IP: The first
  // IP address (i.e. the originating client IP address) specified in the list
  // of IPs under X-Forwarded-For HTTP header. If no such header is present or
  // the value is not a valid IP, the key defaults to the source IP address of
  // the request i.e. key type IP. - HTTP_COOKIE: The value of the HTTP cookie
  // whose name is configured under "enforceOnKeyName". The key value is
  // truncated to the first 128 bytes of the cookie value. If no such cookie is
  // present in the request, the key type defaults to ALL. - HTTP_PATH: The URL
  // path of the HTTP request. The key value is truncated to the first 128
  // bytes. - SNI: Server name indication in the TLS session of the HTTPS
  // request. The key value is truncated to the first 128 bytes. The key type
  // defaults to ALL on a HTTP session. - REGION_CODE: The country/region from
  // which the request originates.
  // ALL:
  // HTTP_COOKIE:
  // HTTP_HEADER:
  // HTTP_PATH:
  // IP:
  // REGION_CODE:
  // SNI:
  // XFF_IP:
  optional string enforce_on_key = 4;

  // Rate limit key name applicable only for the following key types:
  // HTTP_HEADER -- Name of the HTTP header whose value is taken as the key
  // value. HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the
  // key value.
  optional string enforce_on_key_name = 5;

  // Action to take for requests that are above the configured rate limit
  // threshold, to either deny with a specified HTTP response code, or redirect
  // to a different endpoint. Valid options are `deny(STATUS)`, where valid
  // values for `STATUS` are 403, 404, 429, and 502, and `redirect`, where the
  // redirect parameters come from `exceedRedirectOptions` below.
  optional string exceed_action = 6;

  // Parameters defining the redirect action that is used as the exceed action.
  // Cannot be specified if the exceed action is not redirect.
  optional SecurityPolicyRuleRedirectOptions exceed_redirect_options = 7;

  // Threshold at which to begin ratelimiting.
  optional SecurityPolicyRuleRateLimitOptionsThreshold rate_limit_threshold = 8;
}

message SecurityPolicyRuleRateLimitOptionsThreshold {
  // Number of HTTP(S) requests for calculating the threshold.
  optional int32 count = 1;

  // Interval over which the threshold is computed.
  optional int32 interval_sec = 2;
}

message SecurityPolicyRuleRedirectOptions {
  // Target for the redirect action. This is required if the type is
  // EXTERNAL_302 and cannot be specified for GOOGLE_RECAPTCHA.
  optional string target = 1;

  // Type of the redirect action.
  // EXTERNAL_302:
  // GOOGLE_RECAPTCHA:
  optional string type = 2;
}

// The authentication and authorization settings for a BackendService.
message SecuritySettings {
  // Optional. A URL referring to a networksecurity.ClientTlsPolicy resource
  // that describes how clients should authenticate with this service's
  // backends. clientTlsPolicy only applies to a global BackendService with the
  // loadBalancingScheme set to INTERNAL_SELF_MANAGED. If left blank,
  // communications are not encrypted. Note: This field currently has no impact.
  optional string client_tls_policy = 1;

  // Optional. A list of Subject Alternative Names (SANs) that the client
  // verifies during a mutual TLS handshake with an server/endpoint for this
  // BackendService. When the server presents its X.509 certificate to the
  // client, the client inspects the certificate's subjectAltName field. If the
  // field contains one of the specified values, the communication continues.
  // Otherwise, it fails. This additional check enables the client to verify
  // that the server is authorized to run the requested service. Note that the
  // contents of the server certificate's subjectAltName field are configured by
  // the Public Key Infrastructure which provisions server identities. Only
  // applies to a global BackendService with loadBalancingScheme set to
  // INTERNAL_SELF_MANAGED. Only applies when BackendService has an attached
  // clientTlsPolicy with clientCertificate (mTLS mode). Note: This field
  // currently has no impact.
  repeated string subject_alt_names = 2;
}

// An instance serial console output.
message SerialPortOutput {
  // [Output Only] The contents of the console output.
  optional string contents = 1;

  // [Output Only] Type of the resource. Always compute#serialPortOutput for
  // serial port output.
  optional string kind = 2;

  // [Output Only] The position of the next byte of content, regardless of
  // whether the content exists, following the output returned in the `contents`
  // property. Use this value in the next request as the start parameter.
  optional string next = 3;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 4;

  // The starting byte position of the output that was returned. This should
  // match the start parameter sent with the request. If the serial console
  // output exceeds the size of the buffer (1 MB), older output is overwritten
  // by newer content. The output start value will indicate the byte position of
  // the output that was returned, which might be different than the `start`
  // value that was specified in the request.
  optional string start = 5;
}

message ServerBinding {
  // RESTART_NODE_ON_ANY_SERVER: Node may associate with any physical server
  // over its lifetime.
  // RESTART_NODE_ON_MINIMAL_SERVERS: Node may associate with minimal physical
  // servers over its lifetime.
  // SERVER_BINDING_TYPE_UNSPECIFIED:
  optional string type = 1;
}

// A service account.
message ServiceAccount {
  // Email address of the service account.
  optional string email = 1;

  // The list of scopes to be made available for this service account.
  repeated string scopes = 2;
}

// Represents a ServiceAttachment resource. A service attachment represents a
// service that a producer has exposed. It encapsulates the load balancer which
// fronts the service runs and a list of NAT IP ranges that the producers uses
// to represent the consumers connecting to the service. next tag = 20
message ServiceAttachment {
  // [Output Only] An array of connections for all the consumers connected to
  // this service attachment.
  repeated ServiceAttachmentConnectedEndpoint connected_endpoints = 1;

  // The connection preference of service attachment. The value can be set to
  // ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service attachment is one that always
  // accepts the connection from consumer forwarding rules.
  // ACCEPT_AUTOMATIC:
  // ACCEPT_MANUAL:
  // CONNECTION_PREFERENCE_UNSPECIFIED:
  optional string connection_preference = 2;

  // Projects that are allowed to connect to this service attachment.
  repeated ServiceAttachmentConsumerProjectLimit consumer_accept_lists = 3;

  // Projects that are not allowed to connect to this service attachment. The
  // project can be specified using its id or number.
  repeated string consumer_reject_lists = 4;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 5;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 6;

  // If specified, the domain name will be used during the integration between
  // the PSC connected endpoints and the Cloud DNS. For example, this is a valid
  // domain name: "p.mycompany.com.". Current max number of domain names
  // supported is 1.
  repeated string domain_names = 7;

  // If true, enable the proxy protocol which is for supplying client TCP/IP
  // address data in TCP connections that traverse proxies on their way to
  // destination servers.
  optional bool enable_proxy_protocol = 8;

  // Fingerprint of this resource. A hash of the contents stored in this object.
  // This field is used in optimistic locking. This field will be ignored when
  // inserting a ServiceAttachment. An up-to-date fingerprint must be provided
  // in order to patch/update the ServiceAttachment; otherwise, the request will
  // fail with error 412 conditionNotMet. To see the latest fingerprint, make a
  // get() request to retrieve the ServiceAttachment.
  optional string fingerprint = 9;

  // [Output Only] The unique identifier for the resource type. The server
  // generates this identifier.
  optional string id = 10;

  // [Output Only] Type of the resource. Always compute#serviceAttachment for
  // service attachments.
  optional string kind = 11;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 12;

  // An array of URLs where each entry is the URL of a subnet provided by the
  // service producer to use for NAT in this service attachment.
  repeated string nat_subnets = 13;

  // The URL of a forwarding rule with loadBalancingScheme INTERNAL* that is
  // serving the endpoint identified by this service attachment.
  optional string producer_forwarding_rule = 14;

  // [Output Only] An 128-bit global unique ID of the PSC service attachment.
  optional Uint128 psc_service_attachment_id = 15;

  // [Output Only] URL of the region where the service attachment resides. This
  // field applies only to the region resource. You must specify this field as
  // part of the HTTP request URL. It is not settable as a field in the request
  // body.
  optional string region = 16;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 17;

  // The URL of a service serving the endpoint identified by this service
  // attachment.
  optional string target_service = 18;
}

// Contains a list of ServiceAttachmentsScopedList.
message ServiceAttachmentAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of ServiceAttachmentsScopedList resources.
  map<string, ServiceAttachmentsScopedList> items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// [Output Only] A connection connected to this service attachment.
message ServiceAttachmentConnectedEndpoint {
  // The url of a connected endpoint.
  optional string endpoint = 1;

  // The PSC connection id of the connected endpoint.
  optional string psc_connection_id = 2;

  // The status of a connected endpoint to this service attachment.
  // ACCEPTED: The connection has been accepted by the producer.
  // CLOSED: The connection has been closed by the producer.
  // NEEDS_ATTENTION: The connection has been accepted by the producer, but the
  // producer needs to take further action before the forwarding rule can serve
  // traffic.
  // PENDING: The connection is pending acceptance by the producer.
  // REJECTED: The consumer is still connected but not using the connection.
  // STATUS_UNSPECIFIED:
  optional string status = 3;
}

message ServiceAttachmentConsumerProjectLimit {
  // The value of the limit to set.
  optional uint32 connection_limit = 1;

  // The network URL for the network to set the limit for.
  optional string network_url = 2;

  // The project id or number for the project to set the limit for.
  optional string project_id_or_num = 3;
}

message ServiceAttachmentList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of ServiceAttachment resources.
  repeated ServiceAttachment items = 2;

  // [Output Only] Type of the resource. Always compute#serviceAttachment for
  // service attachments.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message ServiceAttachmentsScopedList {
  // A list of ServiceAttachments contained in this scope.
  repeated ServiceAttachment service_attachments = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // Informational warning which replaces the list of service attachments when
  // the list is empty.
  optional Warning warning = 2;
}

// The share setting for reservations and sole tenancy node groups.
message ShareSettings {
  // A map of project id and project config. This is only valid when
  // share_type's value is SPECIFIC_PROJECTS.
  map<string, ShareSettingsProjectConfig> project_map = 1;

  // Type of sharing for this shared-reservation
  // LOCAL: Default value.
  // ORGANIZATION: Shared-reservation is open to entire Organization
  // SHARE_TYPE_UNSPECIFIED: Default value. This value is unused.
  // SPECIFIC_PROJECTS: Shared-reservation is open to specific projects
  optional string share_type = 2;
}

// Config for each project in the share settings.
message ShareSettingsProjectConfig {
  // The project ID, should be same as the key of this project config in the
  // parent map.
  optional string project_id = 1;
}

// A set of Shielded Instance options.
message ShieldedInstanceConfig {
  // Defines whether the instance has integrity monitoring enabled. Enabled by
  // default.
  optional bool enable_integrity_monitoring = 1;

  // Defines whether the instance has Secure Boot enabled. Disabled by default.
  optional bool enable_secure_boot = 2;

  // Defines whether the instance has the vTPM enabled. Enabled by default.
  optional bool enable_vtpm = 3;
}

// A Shielded Instance Identity.
message ShieldedInstanceIdentity {
  // An Endorsement Key (EK) made by the RSA 2048 algorithm issued to the
  // Shielded Instance's vTPM.
  optional ShieldedInstanceIdentityEntry encryption_key = 1;

  // [Output Only] Type of the resource. Always compute#shieldedInstanceIdentity
  // for shielded Instance identity entry.
  optional string kind = 2;

  // An Attestation Key (AK) made by the RSA 2048 algorithm issued to the
  // Shielded Instance's vTPM.
  optional ShieldedInstanceIdentityEntry signing_key = 3;
}

// A Shielded Instance Identity Entry.
message ShieldedInstanceIdentityEntry {
  // A PEM-encoded X.509 certificate. This field can be empty.
  optional string ek_cert = 1;

  // A PEM-encoded public key.
  optional string ek_pub = 2;
}

// The policy describes the baseline against which Instance boot integrity is
// measured.
message ShieldedInstanceIntegrityPolicy {
  // Updates the integrity policy baseline using the measurements from the VM
  // instance's most recent boot.
  optional bool update_auto_learn_policy = 1;
}

// Represents a customer-supplied Signing Key used by Cloud CDN Signed URLs
message SignedUrlKey {
  // Name of the key. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and match the
  // regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
  // character must be a lowercase letter, and all following characters must be
  // a dash, lowercase letter, or digit, except the last character, which cannot
  // be a dash.
  optional string key_name = 1;

  // 128-bit key value used for signing the URL. The key value must be a valid
  // RFC 4648 Section 5 base64url encoded string.
  optional string key_value = 2;
}

// Represents a Persistent Disk Snapshot resource. You can use snapshots to back
// up data on a regular interval. For more information, read Creating persistent
// disk snapshots.
message Snapshot {
  // [Output Only] The architecture of the snapshot. Valid values are ARM64 or
  // X86_64.
  // ARCHITECTURE_UNSPECIFIED: Default value indicating Architecture is not set.
  // ARM64: Machines with architecture ARM64
  // X86_64: Machines with architecture X86_64
  optional string architecture = 1;

  // [Output Only] Set to true if snapshots are automatically created by
  // applying resource policy on the target disk.
  optional bool auto_created = 2;

  // Creates the new snapshot in the snapshot chain labeled with the specified
  // name. The chain name must be 1-63 characters long and comply with RFC1035.
  // This is an uncommon option only for advanced service owners who needs to
  // create separate snapshot chains, for example, for chargeback tracking. When
  // you describe your snapshot resource, this field is visible only if it has a
  // non-empty value.
  optional string chain_name = 3;

  // [Output Only] Size in bytes of the snapshot at creation time.
  optional string creation_size_bytes = 4;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 5;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 6;

  // [Output Only] Size of the source disk, specified in GB.
  optional string disk_size_gb = 7;

  // [Output Only] Number of bytes downloaded to restore a snapshot to a disk.
  optional string download_bytes = 8;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 9;

  // [Output Only] Type of the resource. Always compute#snapshot for Snapshot
  // resources.
  optional string kind = 10;

  // A fingerprint for the labels being applied to this snapshot, which is
  // essentially a hash of the labels set used for optimistic locking. The
  // fingerprint is initially generated by Compute Engine and changes after
  // every request to modify or update labels. You must always provide an
  // up-to-date fingerprint hash in order to update or change labels, otherwise
  // the request will fail with error 412 conditionNotMet. To see the latest
  // fingerprint, make a get() request to retrieve a snapshot.
  optional string label_fingerprint = 11;

  // Labels to apply to this snapshot. These can be later modified by the
  // setLabels method. Label values may be empty.
  map<string, string> labels = 12;

  // [Output Only] Integer license codes indicating which licenses are attached
  // to this snapshot.
  repeated string license_codes = 13;

  // [Output Only] A list of public visible licenses that apply to this
  // snapshot. This can be because the original image had licenses attached
  // (such as a Windows image).
  repeated string licenses = 14;

  // An opaque location hint used to place the snapshot close to other
  // resources. This field is for use by internal tools that use the public API.
  optional string location_hint = 15;

  // Name of the resource; provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 16;

  // [Output Only] Reserved for future use.
  optional bool satisfies_pzs = 17;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 18;

  // Encrypts the snapshot using a customer-supplied encryption key. After you
  // encrypt a snapshot using a customer-supplied key, you must provide the same
  // key if you use the snapshot later. For example, you must provide the
  // encryption key when you create a disk from the encrypted snapshot in a
  // future request. Customer-supplied encryption keys do not protect access to
  // metadata of the snapshot. If you do not provide an encryption key when
  // creating the snapshot, then the snapshot will be encrypted using an
  // automatically generated key and you do not need to provide a key to use the
  // snapshot later.
  optional CustomerEncryptionKey snapshot_encryption_key = 19;

  // Indicates the type of the snapshot.
  // ARCHIVE:
  // STANDARD:
  optional string snapshot_type = 20;

  // The source disk used to create this snapshot.
  optional string source_disk = 21;

  // The customer-supplied encryption key of the source disk. Required if the
  // source disk is protected by a customer-supplied encryption key.
  optional CustomerEncryptionKey source_disk_encryption_key = 22;

  // [Output Only] The ID value of the disk used to create this snapshot. This
  // value may be used to determine whether the snapshot was taken from the
  // current or a previous instance of a given disk name.
  optional string source_disk_id = 23;

  // [Output Only] URL of the resource policy which created this scheduled
  // snapshot.
  optional string source_snapshot_schedule_policy = 24;

  // [Output Only] ID of the resource policy which created this scheduled
  // snapshot.
  optional string source_snapshot_schedule_policy_id = 25;

  // [Output Only] The status of the snapshot. This can be CREATING, DELETING,
  // FAILED, READY, or UPLOADING.
  // CREATING: Snapshot creation is in progress.
  // DELETING: Snapshot is currently being deleted.
  // FAILED: Snapshot creation failed.
  // READY: Snapshot has been created successfully.
  // UPLOADING: Snapshot is being uploaded.
  optional string status = 26;

  // [Output Only] A size of the storage used by the snapshot. As snapshots
  // share storage, this number is expected to change with snapshot
  // creation/deletion.
  optional string storage_bytes = 27;

  // [Output Only] An indicator whether storageBytes is in a stable state or it
  // is being adjusted as a result of shared storage reallocation. This status
  // can either be UPDATING, meaning the size of the snapshot is being updated,
  // or UP_TO_DATE, meaning the size of the snapshot is up-to-date.
  // UPDATING:
  // UP_TO_DATE:
  optional string storage_bytes_status = 28;

  // Cloud Storage bucket storage location of the snapshot (regional or
  // multi-regional).
  repeated string storage_locations = 29;
}

// Contains a list of Snapshot resources.
message SnapshotList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of Snapshot resources.
  repeated Snapshot items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message SourceDiskEncryptionKey {
  // The customer-supplied encryption key of the source disk. Required if the
  // source disk is protected by a customer-supplied encryption key.
  optional CustomerEncryptionKey disk_encryption_key = 1;

  // URL of the disk attached to the source instance. This can be a full or
  // valid partial URL. For example, the following are valid values: -
  // https://www.googleapis.com/compute/v1/projects/project/zones/zone
  // /disks/disk - projects/project/zones/zone/disks/disk -
  // zones/zone/disks/disk
  optional string source_disk = 2;
}

// A specification of the parameters to use when creating the instance template
// from a source instance.
message SourceInstanceParams {
  // Attached disks configuration. If not provided, defaults are applied: For
  // boot disk and any other R/W disks, the source images for each disk will be
  // used. For read-only disks, they will be attached in read-only mode. Local
  // SSD disks will be created as blank volumes.
  repeated DiskInstantiationConfig disk_configs = 1;
}

// DEPRECATED: Please use compute#instanceProperties instead. New properties
// will not be added to this field.
message SourceInstanceProperties {
  // Enables instances created based on this machine image to send packets with
  // source IP addresses other than their own and receive packets with
  // destination IP addresses other than their own. If these instances will be
  // used as an IP gateway or it will be set as the next-hop in a Route
  // resource, specify true. If unsure, leave this set to false. See the Enable
  // IP forwarding documentation for more information.
  optional bool can_ip_forward = 1;

  // Whether the instance created from this machine image should be protected
  // against deletion.
  optional bool deletion_protection = 2;

  // An optional text description for the instances that are created from this
  // machine image.
  optional string description = 3;

  // An array of disks that are associated with the instances that are created
  // from this machine image.
  repeated SavedAttachedDisk disks = 4;

  // A list of guest accelerator cards' type and count to use for instances
  // created from this machine image.
  repeated AcceleratorConfig guest_accelerators = 5;

  // KeyRevocationActionType of the instance. Supported options are "STOP" and
  // "NONE". The default value is "NONE" if it is not specified.
  // KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED: Default value. This value is
  // unused.
  // NONE: Indicates user chose no operation.
  // STOP: Indicates user chose to opt for VM shutdown on key revocation.
  optional string key_revocation_action_type = 6;

  // Labels to apply to instances that are created from this machine image.
  map<string, string> labels = 7;

  // The machine type to use for instances that are created from this machine
  // image.
  optional string machine_type = 8;

  // The metadata key/value pairs to assign to instances that are created from
  // this machine image. These pairs can consist of custom metadata or
  // predefined keys. See Project and instance metadata for more information.
  optional Metadata metadata = 9;

  // Minimum cpu/platform to be used by instances created from this machine
  // image. The instance may be scheduled on the specified or newer
  // cpu/platform. Applicable values are the friendly names of CPU platforms,
  // such as minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy
  // Bridge". For more information, read Specifying a Minimum CPU Platform.
  optional string min_cpu_platform = 10;

  // An array of network access configurations for this interface.
  repeated NetworkInterface network_interfaces = 11;

  // Specifies the scheduling options for the instances that are created from
  // this machine image.
  optional Scheduling scheduling = 12;

  // A list of service accounts with specified scopes. Access tokens for these
  // service accounts are available to the instances that are created from this
  // machine image. Use metadata queries to obtain the access tokens for these
  // instances.
  repeated ServiceAccount service_accounts = 13;

  // A list of tags to apply to the instances that are created from this machine
  // image. The tags identify valid sources or targets for network firewalls.
  // The setTags method can modify this list of tags. Each tag within the list
  // must comply with RFC1035.
  optional Tags tags = 14;
}

// Represents an SSL Certificate resource. Google Compute Engine has two SSL
// Certificate resources: *
// [Global](/compute/docs/reference/rest/v1/sslCertificates) *
// [Regional](/compute/docs/reference/rest/v1/regionSslCertificates) The
// sslCertificates are used by: - external HTTPS load balancers - SSL proxy load
// balancers The regionSslCertificates are used by internal HTTPS load
// balancers. Optionally, certificate file contents that you upload can contain
// a set of up to five PEM-encoded certificates. The API call creates an object
// (sslCertificate) that holds this data. You can use SSL keys and certificates
// to secure connections to a load balancer. For more information, read Creating
// and using SSL certificates, SSL certificates quotas and limits, and
// Troubleshooting SSL certificates.
message SslCertificate {
  // A value read into memory from a certificate file. The certificate file must
  // be in PEM format. The certificate chain must be no greater than 5 certs
  // long. The chain must include at least one intermediate cert.
  optional string certificate = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 2;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 3;

  // [Output Only] Expire time of the certificate. RFC3339
  optional string expire_time = 4;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 5;

  // [Output Only] Type of the resource. Always compute#sslCertificate for SSL
  // certificates.
  optional string kind = 6;

  // Configuration and status of a managed SSL certificate.
  optional SslCertificateManagedSslCertificate managed = 7;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 8;

  // A value read into memory from a write-only private key file. The private
  // key file must be in PEM format. For security, only insert requests include
  // this field.
  optional string private_key = 9;

  // [Output Only] URL of the region where the regional SSL Certificate resides.
  // This field is not applicable to global SSL Certificate.
  optional string region = 10;

  // [Output only] Server-defined URL for the resource.
  optional string self_link = 11;

  // Configuration and status of a self-managed SSL certificate.
  optional SslCertificateSelfManagedSslCertificate self_managed = 12;

  // [Output Only] Domains associated with the certificate via Subject
  // Alternative Name.
  repeated string subject_alternative_names = 13;

  // (Optional) Specifies the type of SSL certificate, either "SELF_MANAGED" or
  // "MANAGED". If not specified, the certificate is self-managed and the fields
  // certificate and private_key are used.
  // MANAGED: Google-managed SSLCertificate.
  // SELF_MANAGED: Certificate uploaded by user.
  // TYPE_UNSPECIFIED:
  optional string type = 14;
}

message SslCertificateAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of SslCertificatesScopedList resources.
  map<string, SslCertificatesScopedList> items = 2;

  // [Output Only] Type of resource. Always compute#sslCertificateAggregatedList
  // for lists of SSL Certificates.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Contains a list of SslCertificate resources.
message SslCertificateList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of SslCertificate resources.
  repeated SslCertificate items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// Configuration and status of a managed SSL certificate.
message SslCertificateManagedSslCertificate {
  // [Output only] Detailed statuses of the domains specified for managed
  // certificate resource.
  map<string, string> domain_status = 1;

  // The domains for which a managed SSL certificate will be generated. Each
  // Google-managed SSL certificate supports up to the [maximum number of
  // domains per Google-managed SSL
  // certificate](/load-balancing/docs/quotas#ssl_certificates).
  repeated string domains = 2;

  // [Output only] Status of the managed certificate resource.
  // ACTIVE: The certificate management is working, and a certificate has been
  // provisioned.
  // MANAGED_CERTIFICATE_STATUS_UNSPECIFIED:
  // PROVISIONING: The certificate management is working. GCP will attempt to
  // provision the first certificate.
  // PROVISIONING_FAILED: Certificate provisioning failed due to an issue with
  // the DNS or load balancing configuration. For details of which domain
  // failed, consult domain_status field.
  // PROVISIONING_FAILED_PERMANENTLY: Certificate provisioning failed due to an
  // issue with the DNS or load balancing configuration. It won't be retried. To
  // try again delete and create a new managed SslCertificate resource. For
  // details of which domain failed, consult domain_status field.
  // RENEWAL_FAILED: Renewal of the certificate has failed due to an issue with
  // the DNS or load balancing configuration. The existing cert is still
  // serving; however, it will expire shortly. To provision a renewed
  // certificate, delete and create a new managed SslCertificate resource. For
  // details on which domain failed, consult domain_status field.
  optional string status = 3;
}

// Configuration and status of a self-managed SSL certificate.
message SslCertificateSelfManagedSslCertificate {
  // A local certificate file. The certificate must be in PEM format. The
  // certificate chain must be no greater than 5 certs long. The chain must
  // include at least one intermediate cert.
  optional string certificate = 1;

  // A write-only private key in PEM format. Only insert requests will include
  // this field.
  optional string private_key = 2;
}

message SslCertificatesScopedList {
  // List of SslCertificates contained in this scope.
  repeated SslCertificate ssl_certificates = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // Informational warning which replaces the list of backend services when the
  // list is empty.
  optional Warning warning = 2;
}

message SslPoliciesAggregatedList {
  optional string etag = 1;

  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 2;

  // A list of SslPoliciesScopedList resources.
  map<string, SslPoliciesScopedList> items = 3;

  // [Output Only] Type of resource. Always compute#sslPolicyAggregatedList for
  // lists of SSL Policies.
  optional string kind = 4;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 5;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 6;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 7;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 8;
}

message SslPoliciesList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of SslPolicy resources.
  repeated SslPolicy items = 2;

  // [Output Only] Type of the resource. Always compute#sslPoliciesList for
  // lists of sslPolicies.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message SslPoliciesListAvailableFeaturesResponse {
  repeated string features = 1;
}

message SslPoliciesScopedList {
  // A list of SslPolicies contained in this scope.
  repeated SslPolicy ssl_policies = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // Informational warning which replaces the list of SSL policies when the list
  // is empty.
  optional Warning warning = 2;
}

// Represents an SSL Policy resource. Use SSL policies to control the SSL
// features, such as versions and cipher suites, offered by an HTTPS or SSL
// Proxy load balancer. For more information, read SSL Policy Concepts.
message SslPolicy {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1;

  // A list of features enabled when the selected profile is CUSTOM. The method
  // returns the set of features that can be specified in this list. This field
  // must be empty if the profile is not CUSTOM.
  repeated string custom_features = 2;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 3;

  // [Output Only] The list of features enabled in the SSL policy.
  repeated string enabled_features = 4;

  // Fingerprint of this resource. A hash of the contents stored in this object.
  // This field is used in optimistic locking. This field will be ignored when
  // inserting a SslPolicy. An up-to-date fingerprint must be provided in order
  // to update the SslPolicy, otherwise the request will fail with error 412
  // conditionNotMet. To see the latest fingerprint, make a get() request to
  // retrieve an SslPolicy.
  optional string fingerprint = 5;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 6;

  // [Output only] Type of the resource. Always compute#sslPolicyfor SSL
  // policies.
  optional string kind = 7;

  // The minimum version of SSL protocol that can be used by the clients to
  // establish a connection with the load balancer. This can be one of TLS_1_0,
  // TLS_1_1, TLS_1_2.
  // TLS_1_0: TLS 1.0
  // TLS_1_1: TLS 1.1
  // TLS_1_2: TLS 1.2
  optional string min_tls_version = 8;

  // Name of the resource. The name must be 1-63 characters long, and comply
  // with RFC1035. Specifically, the name must be 1-63 characters long and match
  // the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
  // character must be a lowercase letter, and all following characters must be
  // a dash, lowercase letter, or digit, except the last character, which cannot
  // be a dash.
  optional string name = 9;

  // Profile specifies the set of SSL features that can be used by the load
  // balancer when negotiating SSL with clients. This can be one of COMPATIBLE,
  // MODERN, RESTRICTED, or CUSTOM. If using CUSTOM, the set of SSL features to
  // enable must be specified in the customFeatures field.
  // COMPATIBLE: Compatible profile. Allows the broadset set of clients, even
  // those which support only out-of-date SSL features to negotiate with the
  // load balancer.
  // CUSTOM: Custom profile. Allow only the set of allowed SSL features
  // specified in the customFeatures field.
  // MODERN: Modern profile. Supports a wide set of SSL features, allowing
  // modern clients to negotiate SSL with the load balancer.
  // RESTRICTED: Restricted profile. Supports a reduced set of SSL features,
  // intended to meet stricter compliance requirements.
  optional string profile = 10;

  // [Output Only] URL of the region where the regional SSL policy resides. This
  // field is not applicable to global SSL policies.
  optional string region = 11;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 12;

  message WarningsItem {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] If potential misconfigurations are detected for this SSL
  // policy, this field will be populated with warning messages.
  repeated WarningsItem warnings = 13;
}

message SslPolicyReference {
  // URL of the SSL policy resource. Set this to empty string to clear any
  // existing SSL policy associated with the target proxy resource.
  optional string ssl_policy = 1;
}

message StatefulPolicy {
  optional StatefulPolicyPreservedState preserved_state = 1;
}

// Configuration of preserved resources.
message StatefulPolicyPreservedState {
  // Disks created on the instances that will be preserved on instance delete,
  // update, etc. This map is keyed with the device names of the disks.
  map<string, StatefulPolicyPreservedStateDiskDevice> disks = 1;
}

message StatefulPolicyPreservedStateDiskDevice {
  // These stateful disks will never be deleted during autohealing, update or VM
  // instance recreate operations. This flag is used to configure if the disk
  // should be deleted after it is no longer used by the group, e.g. when the
  // given instance or the whole group is deleted. Note: disks attached in
  // READ_ONLY mode cannot be auto-deleted.
  // NEVER:
  // ON_PERMANENT_INSTANCE_DELETION:
  optional string auto_delete = 1;
}

// Represents a Subnetwork resource. A subnetwork (also known as a subnet) is a
// logical partition of a Virtual Private Cloud network with one primary IP
// range and zero or more secondary IP ranges. For more information, read
// Virtual Private Cloud (VPC) Network.
message Subnetwork {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1;

  // An optional description of this resource. Provide this property when you
  // create the resource. This field can be set only at resource creation time.
  optional string description = 2;

  // Whether to enable flow logging for this subnetwork. If this field is not
  // explicitly set, it will not appear in get listings. If not set the default
  // behavior is determined by the org policy, if there is no org policy
  // specified, then it will default to disabled. This field isn't supported
  // with the purpose field set to INTERNAL_HTTPS_LOAD_BALANCER.
  optional bool enable_flow_logs = 3;

  // The external IPv6 address range that is owned by this subnetwork.
  optional string external_ipv6_prefix = 4;

  // Fingerprint of this resource. A hash of the contents stored in this object.
  // This field is used in optimistic locking. This field will be ignored when
  // inserting a Subnetwork. An up-to-date fingerprint must be provided in order
  // to update the Subnetwork, otherwise the request will fail with error 412
  // conditionNotMet. To see the latest fingerprint, make a get() request to
  // retrieve a Subnetwork.
  optional string fingerprint = 5;

  // [Output Only] The gateway address for default routes to reach destination
  // addresses outside this subnetwork.
  optional string gateway_address = 6;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 7;

  // [Output Only] The internal IPv6 address range that is assigned to this
  // subnetwork.
  optional string internal_ipv6_prefix = 8;

  // The range of internal addresses that are owned by this subnetwork. Provide
  // this property when you create the subnetwork. For example, 10.0.0.0/8 or
  // 100.64.0.0/10. Ranges must be unique and non-overlapping within a network.
  // Only IPv4 is supported. This field is set at resource creation time. The
  // range can be any range listed in the Valid ranges list. The range can be
  // expanded after creation using expandIpCidrRange.
  optional string ip_cidr_range = 9;

  // The access type of IPv6 address this subnet holds. It's immutable and can
  // only be specified during creation or the first time the subnet is updated
  // into IPV4_IPV6 dual stack.
  // EXTERNAL: VMs on this subnet will be assigned IPv6 addresses that are
  // accessible via the Internet, as well as the VPC network.
  // INTERNAL: VMs on this subnet will be assigned IPv6 addresses that are only
  // accessible over the VPC network.
  optional string ipv6_access_type = 10;

  // [Output Only] This field is for internal use.
  optional string ipv6_cidr_range = 11;

  // [Output Only] Type of the resource. Always compute#subnetwork for
  // Subnetwork resources.
  optional string kind = 12;

  // This field denotes the VPC flow logging options for this subnetwork. If
  // logging is enabled, logs are exported to Cloud Logging.
  optional SubnetworkLogConfig log_config = 13;

  // The name of the resource, provided by the client when initially creating
  // the resource. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and match the
  // regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
  // character must be a lowercase letter, and all following characters must be
  // a dash, lowercase letter, or digit, except the last character, which cannot
  // be a dash.
  optional string name = 14;

  // The URL of the network to which this subnetwork belongs, provided by the
  // client when initially creating the subnetwork. This field can be set only
  // at resource creation time.
  optional string network = 15;

  // Whether the VMs in this subnet can access Google services without assigned
  // external IP addresses. This field can be both set at resource creation time
  // and updated using setPrivateIpGoogleAccess.
  optional bool private_ip_google_access = 16;

  // This field is for internal use. This field can be both set at resource
  // creation time and updated using patch.
  // DISABLE_GOOGLE_ACCESS: Disable private IPv6 access to/from Google services.
  // ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE: Bidirectional private IPv6 access
  // to/from Google services.
  // ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE: Outbound private IPv6 access from VMs
  // in this subnet to Google services.
  optional string private_ipv6_google_access = 17;

  // The purpose of the resource. This field can be either PRIVATE_RFC_1918 or
  // INTERNAL_HTTPS_LOAD_BALANCER. A subnetwork with purpose set to
  // INTERNAL_HTTPS_LOAD_BALANCER is a user-created subnetwork that is reserved
  // for Internal HTTP(S) Load Balancing. If unspecified, the purpose defaults
  // to PRIVATE_RFC_1918. The enableFlowLogs field isn't supported with the
  // purpose field set to INTERNAL_HTTPS_LOAD_BALANCER.
  // INTERNAL_HTTPS_LOAD_BALANCER: Subnet reserved for Internal HTTP(S) Load
  // Balancing.
  // PRIVATE: Regular user created or automatically created subnet.
  // PRIVATE_RFC_1918: Regular user created or automatically created subnet.
  // PRIVATE_SERVICE_CONNECT: Subnetworks created for Private Service Connect in
  // the producer network.
  // REGIONAL_MANAGED_PROXY: Subnetwork used for Regional Internal/External
  // HTTP(S) Load Balancing.
  optional string purpose = 18;

  // URL of the region where the Subnetwork resides. This field can be set only
  // at resource creation time.
  optional string region = 19;

  // The role of subnetwork. Currently, this field is only used when purpose =
  // INTERNAL_HTTPS_LOAD_BALANCER. The value can be set to ACTIVE or BACKUP. An
  // ACTIVE subnetwork is one that is currently being used for Internal HTTP(S)
  // Load Balancing. A BACKUP subnetwork is one that is ready to be promoted to
  // ACTIVE or is currently draining. This field can be updated with a patch
  // request.
  // ACTIVE: The ACTIVE subnet that is currently used.
  // BACKUP: The BACKUP subnet that could be promoted to ACTIVE.
  optional string role = 20;

  // An array of configurations for secondary IP ranges for VM instances
  // contained in this subnetwork. The primary IP of such VM must belong to the
  // primary ipCidrRange of the subnetwork. The alias IPs may belong to either
  // primary or secondary ranges. This field can be updated with a patch
  // request.
  repeated SubnetworkSecondaryRange secondary_ip_ranges = 21;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 22;

  // The stack type for the subnet. If set to IPV4_ONLY, new VMs in the subnet
  // are assigned IPv4 addresses only. If set to IPV4_IPV6, new VMs in the
  // subnet can be assigned both IPv4 and IPv6 addresses. If not specified,
  // IPV4_ONLY is used. This field can be both set at resource creation time and
  // updated using patch.
  // IPV4_IPV6: New VMs in this subnet can have both IPv4 and IPv6 addresses.
  // IPV4_ONLY: New VMs in this subnet will only be assigned IPv4 addresses.
  optional string stack_type = 23;

  // [Output Only] The state of the subnetwork, which can be one of the
  // following values: READY: Subnetwork is created and ready to use DRAINING:
  // only applicable to subnetworks that have the purpose set to
  // INTERNAL_HTTPS_LOAD_BALANCER and indicates that connections to the load
  // balancer are being drained. A subnetwork that is draining cannot be used or
  // modified until it reaches a status of READY
  // DRAINING: Subnetwork is being drained.
  // READY: Subnetwork is ready for use.
  optional string state = 24;
}

message SubnetworkAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of SubnetworksScopedList resources.
  map<string, SubnetworksScopedList> items = 2;

  // [Output Only] Type of resource. Always compute#subnetworkAggregatedList for
  // aggregated lists of subnetworks.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Contains a list of Subnetwork resources.
message SubnetworkList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of Subnetwork resources.
  repeated Subnetwork items = 2;

  // [Output Only] Type of resource. Always compute#subnetworkList for lists of
  // subnetworks.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// The available logging options for this subnetwork.
message SubnetworkLogConfig {
  // Can only be specified if VPC flow logging for this subnetwork is enabled.
  // Toggles the aggregation interval for collecting flow logs. Increasing the
  // interval time will reduce the amount of generated flow logs for long
  // lasting connections. Default is an interval of 5 seconds per connection.
  // INTERVAL_10_MIN:
  // INTERVAL_15_MIN:
  // INTERVAL_1_MIN:
  // INTERVAL_30_SEC:
  // INTERVAL_5_MIN:
  // INTERVAL_5_SEC:
  optional string aggregation_interval = 1;

  // Whether to enable flow logging for this subnetwork. If this field is not
  // explicitly set, it will not appear in get listings. If not set the default
  // behavior is determined by the org policy, if there is no org policy
  // specified, then it will default to disabled.
  optional bool enable = 2;

  // Can only be specified if VPC flow logs for this subnetwork is enabled. The
  // filter expression is used to define which VPC flow logs should be exported
  // to Cloud Logging.
  optional string filter_expr = 3;

  // Can only be specified if VPC flow logging for this subnetwork is enabled.
  // The value of the field must be in [0, 1]. Set the sampling rate of VPC flow
  // logs within the subnetwork where 1.0 means all collected logs are reported
  // and 0.0 means no logs are reported. Default is 0.5 unless otherwise
  // specified by the org policy, which means half of all collected logs are
  // reported.
  optional float flow_sampling = 4;

  // Can only be specified if VPC flow logs for this subnetwork is enabled.
  // Configures whether all, none or a subset of metadata fields should be added
  // to the reported VPC flow logs. Default is EXCLUDE_ALL_METADATA.
  // CUSTOM_METADATA:
  // EXCLUDE_ALL_METADATA:
  // INCLUDE_ALL_METADATA:
  optional string metadata = 5;

  // Can only be specified if VPC flow logs for this subnetwork is enabled and
  // "metadata" was set to CUSTOM_METADATA.
  repeated string metadata_fields = 6;
}

// Represents a secondary IP range of a subnetwork.
message SubnetworkSecondaryRange {
  // The range of IP addresses belonging to this subnetwork secondary range.
  // Provide this property when you create the subnetwork. Ranges must be unique
  // and non-overlapping with all primary and secondary IP ranges within a
  // network. Only IPv4 is supported. The range can be any range listed in the
  // Valid ranges list.
  optional string ip_cidr_range = 1;

  // The name associated with this subnetwork secondary range, used when adding
  // an alias IP range to a VM instance. The name must be 1-63 characters long,
  // and comply with RFC1035. The name must be unique within the subnetwork.
  optional string range_name = 2;
}

message SubnetworksExpandIpCidrRangeRequest {
  // The IP (in CIDR format or netmask) of internal addresses that are legal on
  // this Subnetwork. This range should be disjoint from other subnetworks
  // within this network. This range can only be larger than (i.e. a superset
  // of) the range previously defined before the update.
  optional string ip_cidr_range = 1;
}

message SubnetworksScopedList {
  // A list of subnetworks contained in this scope.
  repeated Subnetwork subnetworks = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // An informational warning that appears when the list of addresses is empty.
  optional Warning warning = 2;
}

message SubnetworksSetPrivateIpGoogleAccessRequest {
  optional bool private_ip_google_access = 1;
}

// Subsetting configuration for this BackendService. Currently this is
// applicable only for Internal TCP/UDP load balancing, Internal HTTP(S) load
// balancing and Traffic Director.
message Subsetting {
  // CONSISTENT_HASH_SUBSETTING: Subsetting based on consistent hashing. For
  // Traffic Director, the number of backends per backend group (the subset
  // size) is based on the `subset_size` parameter. For Internal HTTP(S) load
  // balancing, the number of backends per backend group (the subset size) is
  // dynamically adjusted in two cases: - As the number of proxy instances
  // participating in Internal HTTP(S) load balancing increases, the subset size
  // decreases. - When the total number of backends in a network exceeds the
  // capacity of a single proxy instance, subset sizes are reduced automatically
  // for each service that has backend subsetting enabled.
  // NONE: No Subsetting. Clients may open connections and send traffic to all
  // backends of this backend service. This can lead to performance issues if
  // there is substantial imbalance in the count of clients and backends.
  optional string policy = 1;
}

message TCPHealthCheck {
  // The TCP port number to which the health check prober sends packets. The
  // default value is 80. Valid values are 1 through 65535.
  optional int32 port = 1;

  // Not supported.
  optional string port_name = 2;

  // Specifies how a port is selected for health checking. Can be one of the
  // following values: USE_FIXED_PORT: Specifies a port number explicitly using
  // the port field in the health check. Supported by backend services for
  // pass-through load balancers and backend services for proxy load balancers.
  // Not supported by target pools. The health check supports all backends
  // supported by the backend service provided the backend can be health
  // checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT
  // network endpoint groups, and instance group backends. USE_NAMED_PORT: Not
  // supported. USE_SERVING_PORT: Provides an indirect method of specifying the
  // health check port by referring to the backend service. Only supported by
  // backend services for proxy load balancers. Not supported by target pools.
  // Not supported by backend services for pass-through load balancers. Supports
  // all backends that can be health checked; for example, GCE_VM_IP_PORT
  // network endpoint groups and instance group backends. For GCE_VM_IP_PORT
  // network endpoint group backends, the health check uses the port number
  // specified for each endpoint in the network endpoint group. For instance
  // group backends, the health check uses the port number determined by looking
  // up the backend service's named port in the instance group's list of named
  // ports.
  // USE_FIXED_PORT: The port number in the health check's port is used for
  // health checking. Applies to network endpoint group and instance group
  // backends.
  // USE_NAMED_PORT: Not supported.
  // USE_SERVING_PORT: For network endpoint group backends, the health check
  // uses the port number specified on each endpoint in the network endpoint
  // group. For instance group backends, the health check uses the port number
  // specified for the backend service's named port defined in the instance
  // group's named ports.
  optional string port_specification = 3;

  // Specifies the type of proxy header to append before sending data to the
  // backend, either NONE or PROXY_V1. The default is NONE.
  // NONE:
  // PROXY_V1:
  optional string proxy_header = 4;

  // Instructs the health check prober to send this exact ASCII string, up to
  // 1024 bytes in length, after establishing the TCP connection.
  optional string request = 5;

  // Creates a content-based TCP health check. In addition to establishing a TCP
  // connection, you can configure the health check to pass only when the
  // backend sends this exact response ASCII string, up to 1024 bytes in length.
  // For details, see:
  // https://cloud.google.com/load-balancing/docs/health-check-concepts#criteria-protocol-ssl-tcp
  optional string response = 6;
}

// A set of instance tags.
message Tags {
  // Specifies a fingerprint for this request, which is essentially a hash of
  // the tags' contents and used for optimistic locking. The fingerprint is
  // initially generated by Compute Engine and changes after every request to
  // modify or update tags. You must always provide an up-to-date fingerprint
  // hash in order to update or change tags. To see the latest fingerprint, make
  // get() request to the instance.
  optional string fingerprint = 1;

  // An array of tags. Each tag must be 1-63 characters long, and comply with
  // RFC1035.
  repeated string items = 2;
}

// Represents a Target gRPC Proxy resource. A target gRPC proxy is a component
// of load balancers intended for load balancing gRPC traffic. Only global
// forwarding rules with load balancing scheme INTERNAL_SELF_MANAGED can
// reference a target gRPC proxy. The target gRPC Proxy references a URL map
// that specifies how traffic is routed to gRPC backend services.
message TargetGrpcProxy {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 2;

  // Fingerprint of this resource. A hash of the contents stored in this object.
  // This field is used in optimistic locking. This field will be ignored when
  // inserting a TargetGrpcProxy. An up-to-date fingerprint must be provided in
  // order to patch/update the TargetGrpcProxy; otherwise, the request will fail
  // with error 412 conditionNotMet. To see the latest fingerprint, make a get()
  // request to retrieve the TargetGrpcProxy.
  optional string fingerprint = 3;

  // [Output Only] The unique identifier for the resource type. The server
  // generates this identifier.
  optional string id = 4;

  // [Output Only] Type of the resource. Always compute#targetGrpcProxy for
  // target grpc proxies.
  optional string kind = 5;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 6;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 7;

  // [Output Only] Server-defined URL with id for the resource.
  optional string self_link_with_id = 8;

  // URL to the UrlMap resource that defines the mapping from URL to the
  // BackendService. The protocol field in the BackendService must be set to
  // GRPC.
  optional string url_map = 9;

  // If true, indicates that the BackendServices referenced by the urlMap may be
  // accessed by gRPC applications without using a sidecar proxy. This will
  // enable configuration checks on urlMap and its referenced BackendServices to
  // not allow unsupported features. A gRPC application must use "xds:///"
  // scheme in the target URI of the service it is connecting to. If false,
  // indicates that the BackendServices referenced by the urlMap will be
  // accessed by gRPC applications via a sidecar proxy. In this case, a gRPC
  // application must not use "xds:///" scheme in the target URI of the service
  // it is connecting to
  optional bool validate_for_proxyless = 10;
}

message TargetGrpcProxyList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of TargetGrpcProxy resources.
  repeated TargetGrpcProxy items = 2;

  // [Output Only] Type of the resource. Always compute#targetGrpcProxy for
  // target grpc proxies.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message TargetHttpProxiesScopedList {
  // A list of TargetHttpProxies contained in this scope.
  repeated TargetHttpProxy target_http_proxies = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // Informational warning which replaces the list of backend services when the
  // list is empty.
  optional Warning warning = 2;
}

// Represents a Target HTTP Proxy resource. Google Compute Engine has two Target
// HTTP Proxy resources: *
// [Global](/compute/docs/reference/rest/v1/targetHttpProxies) *
// [Regional](/compute/docs/reference/rest/v1/regionTargetHttpProxies) A target
// HTTP proxy is a component of GCP HTTP load balancers. * targetHttpProxies are
// used by external HTTP load balancers and Traffic Director. *
// regionTargetHttpProxies are used by internal HTTP load balancers. Forwarding
// rules reference a target HTTP proxy, and the target proxy then references a
// URL map. For more information, read Using Target Proxies and Forwarding rule
// concepts.
message TargetHttpProxy {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 2;

  // Fingerprint of this resource. A hash of the contents stored in this object.
  // This field is used in optimistic locking. This field will be ignored when
  // inserting a TargetHttpProxy. An up-to-date fingerprint must be provided in
  // order to patch/update the TargetHttpProxy; otherwise, the request will fail
  // with error 412 conditionNotMet. To see the latest fingerprint, make a get()
  // request to retrieve the TargetHttpProxy.
  optional string fingerprint = 3;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 4;

  // [Output Only] Type of resource. Always compute#targetHttpProxy for target
  // HTTP proxies.
  optional string kind = 5;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 6;

  // This field only applies when the forwarding rule that references this
  // target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED. When
  // this field is set to true, Envoy proxies set up inbound traffic
  // interception and bind to the IP address and port specified in the
  // forwarding rule. This is generally useful when using Traffic Director to
  // configure Envoy as a gateway or middle proxy (in other words, not a sidecar
  // proxy). The Envoy proxy listens for inbound requests and handles requests
  // when it receives them. The default is false.
  optional bool proxy_bind = 7;

  // [Output Only] URL of the region where the regional Target HTTP Proxy
  // resides. This field is not applicable to global Target HTTP Proxies.
  optional string region = 8;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 9;

  // URL to the UrlMap resource that defines the mapping from URL to the
  // BackendService.
  optional string url_map = 10;
}

message TargetHttpProxyAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of TargetHttpProxiesScopedList resources.
  map<string, TargetHttpProxiesScopedList> items = 2;

  // [Output Only] Type of resource. Always
  // compute#targetHttpProxyAggregatedList for lists of Target HTTP Proxies.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;
}

// A list of TargetHttpProxy resources.
message TargetHttpProxyList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of TargetHttpProxy resources.
  repeated TargetHttpProxy items = 2;

  // Type of resource. Always compute#targetHttpProxyList for lists of target
  // HTTP proxies.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message TargetHttpsProxiesScopedList {
  // A list of TargetHttpsProxies contained in this scope.
  repeated TargetHttpsProxy target_https_proxies = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // Informational warning which replaces the list of backend services when the
  // list is empty.
  optional Warning warning = 2;
}

message TargetHttpsProxiesSetCertificateMapRequest {
  // URL of the Certificate Map to associate with this TargetHttpsProxy.
  optional string certificate_map = 1;
}

message TargetHttpsProxiesSetQuicOverrideRequest {
  // QUIC policy for the TargetHttpsProxy resource.
  // DISABLE: The load balancer will not attempt to negotiate QUIC with clients.
  // ENABLE: The load balancer will attempt to negotiate QUIC with clients.
  // NONE: No overrides to the default QUIC policy. This option is implicit if
  // no QUIC override has been specified in the request.
  optional string quic_override = 1;
}

message TargetHttpsProxiesSetSslCertificatesRequest {
  // New set of SslCertificate resources to associate with this TargetHttpsProxy
  // resource. At least one SSL certificate must be specified. Currently, you
  // may specify up to 15 SSL certificates.
  repeated string ssl_certificates = 1;
}

// Represents a Target HTTPS Proxy resource. Google Compute Engine has two
// Target HTTPS Proxy resources: *
// [Global](/compute/docs/reference/rest/v1/targetHttpsProxies) *
// [Regional](/compute/docs/reference/rest/v1/regionTargetHttpsProxies) A target
// HTTPS proxy is a component of GCP HTTPS load balancers. * targetHttpsProxies
// are used by external HTTPS load balancers. * regionTargetHttpsProxies are
// used by internal HTTPS load balancers. Forwarding rules reference a target
// HTTPS proxy, and the target proxy then references a URL map. For more
// information, read Using Target Proxies and Forwarding rule concepts.
message TargetHttpsProxy {
  // Optional. A URL referring to a networksecurity.AuthorizationPolicy resource
  // that describes how the proxy should authorize inbound traffic. If left
  // blank, access will not be restricted by an authorization policy. Refer to
  // the AuthorizationPolicy resource for additional details.
  // authorizationPolicy only applies to a global TargetHttpsProxy attached to
  // globalForwardingRules with the loadBalancingScheme set to
  // INTERNAL_SELF_MANAGED. Note: This field currently has no impact.
  optional string authorization_policy = 1;

  // URL of a certificate map that identifies a certificate map associated with
  // the given target proxy. This field can only be set for global target
  // proxies. If set, sslCertificates will be ignored.
  optional string certificate_map = 2;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 3;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 4;

  // Fingerprint of this resource. A hash of the contents stored in this object.
  // This field is used in optimistic locking. This field will be ignored when
  // inserting a TargetHttpsProxy. An up-to-date fingerprint must be provided in
  // order to patch the TargetHttpsProxy; otherwise, the request will fail with
  // error 412 conditionNotMet. To see the latest fingerprint, make a get()
  // request to retrieve the TargetHttpsProxy.
  optional string fingerprint = 5;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 6;

  // [Output Only] Type of resource. Always compute#targetHttpsProxy for target
  // HTTPS proxies.
  optional string kind = 7;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 8;

  // This field only applies when the forwarding rule that references this
  // target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED. When
  // this field is set to true, Envoy proxies set up inbound traffic
  // interception and bind to the IP address and port specified in the
  // forwarding rule. This is generally useful when using Traffic Director to
  // configure Envoy as a gateway or middle proxy (in other words, not a sidecar
  // proxy). The Envoy proxy listens for inbound requests and handles requests
  // when it receives them. The default is false.
  optional bool proxy_bind = 9;

  // Specifies the QUIC override policy for this TargetHttpsProxy resource. This
  // setting determines whether the load balancer attempts to negotiate QUIC
  // with clients. You can specify NONE, ENABLE, or DISABLE. - When
  // quic-override is set to NONE, Google manages whether QUIC is used. - When
  // quic-override is set to ENABLE, the load balancer uses QUIC when possible.
  // - When quic-override is set to DISABLE, the load balancer doesn't use QUIC.
  // - If the quic-override flag is not specified, NONE is implied.
  // DISABLE: The load balancer will not attempt to negotiate QUIC with clients.
  // ENABLE: The load balancer will attempt to negotiate QUIC with clients.
  // NONE: No overrides to the default QUIC policy. This option is implicit if
  // no QUIC override has been specified in the request.
  optional string quic_override = 10;

  // [Output Only] URL of the region where the regional TargetHttpsProxy
  // resides. This field is not applicable to global TargetHttpsProxies.
  optional string region = 11;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 12;

  // Optional. A URL referring to a networksecurity.ServerTlsPolicy resource
  // that describes how the proxy should authenticate inbound traffic.
  // serverTlsPolicy only applies to a global TargetHttpsProxy attached to
  // globalForwardingRules with the loadBalancingScheme set to
  // INTERNAL_SELF_MANAGED. If left blank, communications are not encrypted.
  // Note: This field currently has no impact.
  optional string server_tls_policy = 13;

  // URLs to SslCertificate resources that are used to authenticate connections
  // between users and the load balancer. At least one SSL certificate must be
  // specified. Currently, you may specify up to 15 SSL certificates.
  // sslCertificates do not apply when the load balancing scheme is set to
  // INTERNAL_SELF_MANAGED.
  repeated string ssl_certificates = 14;

  // URL of SslPolicy resource that will be associated with the TargetHttpsProxy
  // resource. If not set, the TargetHttpsProxy resource has no SSL policy
  // configured.
  optional string ssl_policy = 15;

  // A fully-qualified or valid partial URL to the UrlMap resource that defines
  // the mapping from URL to the BackendService. For example, the following are
  // all valid URLs for specifying a URL map: -
  // https://www.googleapis.compute/v1/projects/project/global/urlMaps/ url-map
  // - projects/project/global/urlMaps/url-map - global/urlMaps/url-map
  optional string url_map = 16;
}

message TargetHttpsProxyAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of TargetHttpsProxiesScopedList resources.
  map<string, TargetHttpsProxiesScopedList> items = 2;

  // [Output Only] Type of resource. Always
  // compute#targetHttpsProxyAggregatedList for lists of Target HTTP Proxies.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Contains a list of TargetHttpsProxy resources.
message TargetHttpsProxyList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of TargetHttpsProxy resources.
  repeated TargetHttpsProxy items = 2;

  // Type of resource. Always compute#targetHttpsProxyList for lists of target
  // HTTPS proxies.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// Represents a Target Instance resource. You can use a target instance to
// handle traffic for one or more forwarding rules, which is ideal for
// forwarding protocol traffic that is managed by a single source. For example,
// ESP, AH, TCP, or UDP. For more information, read Target instances.
message TargetInstance {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 2;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 3;

  // A URL to the virtual machine instance that handles traffic for this target
  // instance. When creating a target instance, you can provide the
  // fully-qualified URL or a valid partial URL to the desired virtual machine.
  // For example, the following are all valid URLs: -
  // https://www.googleapis.com/compute/v1/projects/project/zones/zone
  // /instances/instance - projects/project/zones/zone/instances/instance -
  // zones/zone/instances/instance
  optional string instance = 4;

  // [Output Only] The type of the resource. Always compute#targetInstance for
  // target instances.
  optional string kind = 5;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 6;

  // Must have a value of NO_NAT. Protocol forwarding delivers packets while
  // preserving the destination IP address of the forwarding rule referencing
  // the target instance.
  // NO_NAT: No NAT performed.
  optional string nat_policy = 7;

  // The URL of the network this target instance uses to forward traffic. If not
  // specified, the traffic will be forwarded to the network that the default
  // network interface belongs to.
  optional string network = 8;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 9;

  // [Output Only] URL of the zone where the target instance resides. You must
  // specify this field as part of the HTTP request URL. It is not settable as a
  // field in the request body.
  optional string zone = 10;
}

message TargetInstanceAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of TargetInstance resources.
  map<string, TargetInstancesScopedList> items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Contains a list of TargetInstance resources.
message TargetInstanceList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of TargetInstance resources.
  repeated TargetInstance items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message TargetInstancesScopedList {
  // A list of target instances contained in this scope.
  repeated TargetInstance target_instances = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // Informational warning which replaces the list of addresses when the list is
  // empty.
  optional Warning warning = 2;
}

// Represents a Target Pool resource. Target pools are used for network TCP/UDP
// load balancing. A target pool references member instances, an associated
// legacy HttpHealthCheck resource, and, optionally, a backup target pool. For
// more information, read Using target pools.
message TargetPool {
  // The server-defined URL for the resource. This field is applicable only when
  // the containing target pool is serving a forwarding rule as the primary
  // pool, and its failoverRatio field is properly set to a value between [0,
  // 1]. backupPool and failoverRatio together define the fallback behavior of
  // the primary target pool: if the ratio of the healthy instances in the
  // primary pool is at or below failoverRatio, traffic arriving at the
  // load-balanced IP will be directed to the backup pool. In case where
  // failoverRatio and backupPool are not set, or all the instances in the
  // backup pool are unhealthy, the traffic will be directed back to the primary
  // pool in the "force" mode, where traffic will be spread to the healthy
  // instances with the best effort, or to all instances when no instance is
  // healthy.
  optional string backup_pool = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 2;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 3;

  // This field is applicable only when the containing target pool is serving a
  // forwarding rule as the primary pool (i.e., not as a backup pool to some
  // other target pool). The value of the field must be in [0, 1]. If set,
  // backupPool must also be set. They together define the fallback behavior of
  // the primary target pool: if the ratio of the healthy instances in the
  // primary pool is at or below this number, traffic arriving at the
  // load-balanced IP will be directed to the backup pool. In case where
  // failoverRatio is not set or all the instances in the backup pool are
  // unhealthy, the traffic will be directed back to the primary pool in the
  // "force" mode, where traffic will be spread to the healthy instances with
  // the best effort, or to all instances when no instance is healthy.
  optional float failover_ratio = 4;

  // The URL of the HttpHealthCheck resource. A member instance in this pool is
  // considered healthy if and only if the health checks pass. Only legacy
  // HttpHealthChecks are supported. Only one health check may be specified.
  repeated string health_checks = 5;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 6;

  // A list of resource URLs to the virtual machine instances serving this pool.
  // They must live in zones contained in the same region as this pool.
  repeated string instances = 7;

  // [Output Only] Type of the resource. Always compute#targetPool for target
  // pools.
  optional string kind = 8;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 9;

  // [Output Only] URL of the region where the target pool resides.
  optional string region = 10;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 11;

  // Session affinity option, must be one of the following values: NONE:
  // Connections from the same client IP may go to any instance in the pool.
  // CLIENT_IP: Connections from the same client IP will go to the same instance
  // in the pool while that instance remains healthy. CLIENT_IP_PROTO:
  // Connections from the same client IP with the same IP protocol will go to
  // the same instance in the pool while that instance remains healthy.
  // CLIENT_IP: 2-tuple hash on packet's source and destination IP addresses.
  // Connections from the same source IP address to the same destination IP
  // address will be served by the same backend VM while that VM remains
  // healthy.
  // CLIENT_IP_NO_DESTINATION: 1-tuple hash only on packet's source IP address.
  // Connections from the same source IP address will be served by the same
  // backend VM while that VM remains healthy. This option can only be used for
  // Internal TCP/UDP Load Balancing.
  // CLIENT_IP_PORT_PROTO: 5-tuple hash on packet's source and destination IP
  // addresses, IP protocol, and source and destination ports. Connections for
  // the same IP protocol from the same source IP address and port to the same
  // destination IP address and port will be served by the same backend VM while
  // that VM remains healthy. This option cannot be used for HTTP(S) load
  // balancing.
  // CLIENT_IP_PROTO: 3-tuple hash on packet's source and destination IP
  // addresses, and IP protocol. Connections for the same IP protocol from the
  // same source IP address to the same destination IP address will be served by
  // the same backend VM while that VM remains healthy. This option cannot be
  // used for HTTP(S) load balancing.
  // GENERATED_COOKIE: Hash based on a cookie generated by the L7 loadbalancer.
  // Only valid for HTTP(S) load balancing.
  // HEADER_FIELD: The hash is based on a user specified header field.
  // HTTP_COOKIE: The hash is based on a user provided cookie.
  // NONE: No session affinity. Connections from the same client IP may go to
  // any instance in the pool.
  optional string session_affinity = 12;
}

message TargetPoolAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of TargetPool resources.
  map<string, TargetPoolsScopedList> items = 2;

  // [Output Only] Type of resource. Always compute#targetPoolAggregatedList for
  // aggregated lists of target pools.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

message TargetPoolInstanceHealth {
  repeated HealthStatus health_status = 1;

  // [Output Only] Type of resource. Always compute#targetPoolInstanceHealth
  // when checking the health of an instance.
  optional string kind = 2;
}

// Contains a list of TargetPool resources.
message TargetPoolList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of TargetPool resources.
  repeated TargetPool items = 2;

  // [Output Only] Type of resource. Always compute#targetPoolList for lists of
  // target pools.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message TargetPoolsAddHealthCheckRequest {
  // The HttpHealthCheck to add to the target pool.
  repeated HealthCheckReference health_checks = 1;
}

message TargetPoolsAddInstanceRequest {
  // A full or partial URL to an instance to add to this target pool. This can
  // be a full or partial URL. For example, the following are valid URLs: -
  // https://www.googleapis.com/compute/v1/projects/project-id/zones/zone
  // /instances/instance-name -
  // projects/project-id/zones/zone/instances/instance-name -
  // zones/zone/instances/instance-name
  repeated InstanceReference instances = 1;
}

message TargetPoolsRemoveHealthCheckRequest {
  // Health check URL to be removed. This can be a full or valid partial URL.
  // For example, the following are valid URLs: -
  // https://www.googleapis.com/compute/beta/projects/project
  // /global/httpHealthChecks/health-check -
  // projects/project/global/httpHealthChecks/health-check -
  // global/httpHealthChecks/health-check
  repeated HealthCheckReference health_checks = 1;
}

message TargetPoolsRemoveInstanceRequest {
  // URLs of the instances to be removed from target pool.
  repeated InstanceReference instances = 1;
}

message TargetPoolsScopedList {
  // A list of target pools contained in this scope.
  repeated TargetPool target_pools = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // Informational warning which replaces the list of addresses when the list is
  // empty.
  optional Warning warning = 2;
}

message TargetReference {
  optional string target = 1;
}

message TargetSslProxiesSetBackendServiceRequest {
  // The URL of the new BackendService resource for the targetSslProxy.
  optional string service = 1;
}

message TargetSslProxiesSetCertificateMapRequest {
  // URL of the Certificate Map to associate with this TargetSslProxy.
  optional string certificate_map = 1;
}

message TargetSslProxiesSetProxyHeaderRequest {
  // The new type of proxy header to append before sending data to the backend.
  // NONE or PROXY_V1 are allowed.
  // NONE:
  // PROXY_V1:
  optional string proxy_header = 1;
}

message TargetSslProxiesSetSslCertificatesRequest {
  // New set of URLs to SslCertificate resources to associate with this
  // TargetSslProxy. At least one SSL certificate must be specified. Currently,
  // you may specify up to 15 SSL certificates.
  repeated string ssl_certificates = 1;
}

// Represents a Target SSL Proxy resource. A target SSL proxy is a component of
// a SSL Proxy load balancer. Global forwarding rules reference a target SSL
// proxy, and the target proxy then references an external backend service. For
// more information, read Using Target Proxies.
message TargetSslProxy {
  // URL of a certificate map that identifies a certificate map associated with
  // the given target proxy. This field can only be set for global target
  // proxies. If set, sslCertificates will be ignored.
  optional string certificate_map = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 2;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 3;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 4;

  // [Output Only] Type of the resource. Always compute#targetSslProxy for
  // target SSL proxies.
  optional string kind = 5;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 6;

  // Specifies the type of proxy header to append before sending data to the
  // backend, either NONE or PROXY_V1. The default is NONE.
  // NONE:
  // PROXY_V1:
  optional string proxy_header = 7;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 8;

  // URL to the BackendService resource.
  optional string service = 9;

  // URLs to SslCertificate resources that are used to authenticate connections
  // to Backends. At least one SSL certificate must be specified. Currently, you
  // may specify up to 15 SSL certificates. sslCertificates do not apply when
  // the load balancing scheme is set to INTERNAL_SELF_MANAGED.
  repeated string ssl_certificates = 10;

  // URL of SslPolicy resource that will be associated with the TargetSslProxy
  // resource. If not set, the TargetSslProxy resource will not have any SSL
  // policy configured.
  optional string ssl_policy = 11;
}

// Contains a list of TargetSslProxy resources.
message TargetSslProxyList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of TargetSslProxy resources.
  repeated TargetSslProxy items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message TargetTcpProxiesScopedList {
  // A list of TargetTcpProxies contained in this scope.
  repeated TargetTcpProxy target_tcp_proxies = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // Informational warning which replaces the list of backend services when the
  // list is empty.
  optional Warning warning = 2;
}

message TargetTcpProxiesSetBackendServiceRequest {
  // The URL of the new BackendService resource for the targetTcpProxy.
  optional string service = 1;
}

message TargetTcpProxiesSetProxyHeaderRequest {
  // The new type of proxy header to append before sending data to the backend.
  // NONE or PROXY_V1 are allowed.
  // NONE:
  // PROXY_V1:
  optional string proxy_header = 1;
}

// Represents a Target TCP Proxy resource. A target TCP proxy is a component of
// a TCP Proxy load balancer. Global forwarding rules reference target TCP
// proxy, and the target proxy then references an external backend service. For
// more information, read TCP Proxy Load Balancing overview.
message TargetTcpProxy {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 2;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 3;

  // [Output Only] Type of the resource. Always compute#targetTcpProxy for
  // target TCP proxies.
  optional string kind = 4;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 5;

  // This field only applies when the forwarding rule that references this
  // target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED. When
  // this field is set to true, Envoy proxies set up inbound traffic
  // interception and bind to the IP address and port specified in the
  // forwarding rule. This is generally useful when using Traffic Director to
  // configure Envoy as a gateway or middle proxy (in other words, not a sidecar
  // proxy). The Envoy proxy listens for inbound requests and handles requests
  // when it receives them. The default is false.
  optional bool proxy_bind = 6;

  // Specifies the type of proxy header to append before sending data to the
  // backend, either NONE or PROXY_V1. The default is NONE.
  // NONE:
  // PROXY_V1:
  optional string proxy_header = 7;

  // [Output Only] URL of the region where the regional TCP proxy resides. This
  // field is not applicable to global TCP proxy.
  optional string region = 8;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 9;

  // URL to the BackendService resource.
  optional string service = 10;
}

message TargetTcpProxyAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of TargetTcpProxiesScopedList resources.
  map<string, TargetTcpProxiesScopedList> items = 2;

  // [Output Only] Type of resource. Always compute#targetTcpProxyAggregatedList
  // for lists of Target TCP Proxies.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Contains a list of TargetTcpProxy resources.
message TargetTcpProxyList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of TargetTcpProxy resources.
  repeated TargetTcpProxy items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// Represents a Target VPN Gateway resource. The target VPN gateway resource
// represents a Classic Cloud VPN gateway. For more information, read the the
// Cloud VPN Overview.
message TargetVpnGateway {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 2;

  // [Output Only] A list of URLs to the ForwardingRule resources.
  // ForwardingRules are created using compute.forwardingRules.insert and
  // associated with a VPN gateway.
  repeated string forwarding_rules = 3;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 4;

  // [Output Only] Type of resource. Always compute#targetVpnGateway for target
  // VPN gateways.
  optional string kind = 5;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 6;

  // URL of the network to which this VPN gateway is attached. Provided by the
  // client when the VPN gateway is created.
  optional string network = 7;

  // [Output Only] URL of the region where the target VPN gateway resides. You
  // must specify this field as part of the HTTP request URL. It is not settable
  // as a field in the request body.
  optional string region = 8;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 9;

  // [Output Only] The status of the VPN gateway, which can be one of the
  // following: CREATING, READY, FAILED, or DELETING.
  // CREATING:
  // DELETING:
  // FAILED:
  // READY:
  optional string status = 10;

  // [Output Only] A list of URLs to VpnTunnel resources. VpnTunnels are created
  // using the compute.vpntunnels.insert method and associated with a VPN
  // gateway.
  repeated string tunnels = 11;
}

message TargetVpnGatewayAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of TargetVpnGateway resources.
  map<string, TargetVpnGatewaysScopedList> items = 2;

  // [Output Only] Type of resource. Always compute#targetVpnGateway for target
  // VPN gateways.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Contains a list of TargetVpnGateway resources.
message TargetVpnGatewayList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of TargetVpnGateway resources.
  repeated TargetVpnGateway items = 2;

  // [Output Only] Type of resource. Always compute#targetVpnGateway for target
  // VPN gateways.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message TargetVpnGatewaysScopedList {
  // [Output Only] A list of target VPN gateways contained in this scope.
  repeated TargetVpnGateway target_vpn_gateways = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning which replaces the list of addresses
  // when the list is empty.
  optional Warning warning = 2;
}

message TestFailure {
  // The actual output URL evaluated by a load balancer containing the scheme,
  // host, path and query parameters.
  optional string actual_output_url = 1;

  // Actual HTTP status code for rule with `urlRedirect` calculated by load
  // balancer
  optional int32 actual_redirect_response_code = 2;

  // BackendService or BackendBucket returned by load balancer.
  optional string actual_service = 3;

  // The expected output URL evaluated by a load balancer containing the scheme,
  // host, path and query parameters.
  optional string expected_output_url = 4;

  // Expected HTTP status code for rule with `urlRedirect` calculated by load
  // balancer
  optional int32 expected_redirect_response_code = 5;

  // Expected BackendService or BackendBucket resource the given URL should be
  // mapped to.
  optional string expected_service = 6;

  // HTTP headers of the request.
  repeated UrlMapTestHeader headers = 7;

  // Host portion of the URL.
  optional string host = 8;

  // Path portion including query parameters in the URL.
  optional string path = 9;
}

message TestPermissionsRequest {
  // The set of permissions to check for the 'resource'. Permissions with
  // wildcards (such as '*' or 'storage.*') are not allowed.
  repeated string permissions = 1;
}

message TestPermissionsResponse {
  // A subset of `TestPermissionsRequest.permissions` that the caller is
  // allowed.
  repeated string permissions = 1;
}

message Uint128 {
  optional string high = 1;

  optional string low = 2;
}

// Represents a URL Map resource. Compute Engine has two URL Map resources: *
// [Global](/compute/docs/reference/rest/v1/urlMaps) *
// [Regional](/compute/docs/reference/rest/v1/regionUrlMaps) A URL map resource
// is a component of certain types of cloud load balancers and Traffic Director:
// * urlMaps are used by external HTTP(S) load balancers and Traffic Director. *
// regionUrlMaps are used by internal HTTP(S) load balancers. For a list of
// supported URL map features by the load balancer type, see the Load balancing
// features: Routing and traffic management table. For a list of supported URL
// map features for Traffic Director, see the Traffic Director features: Routing
// and traffic management table. This resource defines mappings from hostnames
// and URL paths to either a backend service or a backend bucket. To use the
// global urlMaps resource, the backend service must have a loadBalancingScheme
// of either EXTERNAL or INTERNAL_SELF_MANAGED. To use the regionUrlMaps
// resource, the backend service must have a loadBalancingScheme of
// INTERNAL_MANAGED. For more information, read URL Map Concepts.
message UrlMap {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1;

  // defaultRouteAction takes effect when none of the hostRules match. The load
  // balancer performs advanced routing actions, such as URL rewrites and header
  // transformations, before forwarding the request to the selected backend. If
  // defaultRouteAction specifies any weightedBackendServices, defaultService
  // must not be set. Conversely if defaultService is set, defaultRouteAction
  // cannot contain any weightedBackendServices. Only one of defaultRouteAction
  // or defaultUrlRedirect must be set. URL maps for Classic external HTTP(S)
  // load balancers only support the urlRewrite action within
  // defaultRouteAction. defaultRouteAction has no effect when the URL map is
  // bound to a target gRPC proxy that has the validateForProxyless field set to
  // true.
  optional HttpRouteAction default_route_action = 2;

  // The full or partial URL of the defaultService resource to which traffic is
  // directed if none of the hostRules match. If defaultRouteAction is also
  // specified, advanced routing actions, such as URL rewrites, take effect
  // before sending the request to the backend. However, if defaultService is
  // specified, defaultRouteAction cannot contain any weightedBackendServices.
  // Conversely, if routeAction specifies any weightedBackendServices, service
  // must not be specified. Only one of defaultService, defaultUrlRedirect , or
  // defaultRouteAction.weightedBackendService must be set. defaultService has
  // no effect when the URL map is bound to a target gRPC proxy that has the
  // validateForProxyless field set to true.
  optional string default_service = 3;

  // When none of the specified hostRules match, the request is redirected to a
  // URL specified by defaultUrlRedirect. If defaultUrlRedirect is specified,
  // defaultService or defaultRouteAction must not be set. Not supported when
  // the URL map is bound to a target gRPC proxy.
  optional HttpRedirectAction default_url_redirect = 4;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 5;

  // Fingerprint of this resource. A hash of the contents stored in this object.
  // This field is used in optimistic locking. This field is ignored when
  // inserting a UrlMap. An up-to-date fingerprint must be provided in order to
  // update the UrlMap, otherwise the request will fail with error 412
  // conditionNotMet. To see the latest fingerprint, make a get() request to
  // retrieve a UrlMap.
  optional string fingerprint = 6;

  // Specifies changes to request and response headers that need to take effect
  // for the selected backendService. The headerAction specified here take
  // effect after headerAction specified under pathMatcher. headerAction is not
  // supported for load balancers that have their loadBalancingScheme set to
  // EXTERNAL. Not supported when the URL map is bound to a target gRPC proxy
  // that has validateForProxyless field set to true.
  optional HttpHeaderAction header_action = 7;

  // The list of host rules to use against the URL.
  repeated HostRule host_rules = 8;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 9;

  // [Output Only] Type of the resource. Always compute#urlMaps for url maps.
  optional string kind = 10;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 11;

  // The list of named PathMatchers to use against the URL.
  repeated PathMatcher path_matchers = 12;

  // [Output Only] URL of the region where the regional URL map resides. This
  // field is not applicable to global URL maps. You must specify this field as
  // part of the HTTP request URL. It is not settable as a field in the request
  // body.
  optional string region = 13;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 14;

  // The list of expected URL mapping tests. Request to update the UrlMap
  // succeeds only if all test cases pass. You can specify a maximum of 100
  // tests per UrlMap. Not supported when the URL map is bound to a target gRPC
  // proxy that has validateForProxyless field set to true.
  repeated UrlMapTest tests = 15;
}

// Contains a list of UrlMap resources.
message UrlMapList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of UrlMap resources.
  repeated UrlMap items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message UrlMapReference {
  optional string url_map = 1;
}

// Message for the expected URL mappings.
message UrlMapTest {
  // Description of this test case.
  optional string description = 1;

  // The expected output URL evaluated by the load balancer containing the
  // scheme, host, path and query parameters. For rules that forward requests to
  // backends, the test passes only when expectedOutputUrl matches the request
  // forwarded by the load balancer to backends. For rules with urlRewrite, the
  // test verifies that the forwarded request matches hostRewrite and
  // pathPrefixRewrite in the urlRewrite action. When service is specified,
  // expectedOutputUrl`s scheme is ignored. For rules with urlRedirect, the test
  // passes only if expectedOutputUrl matches the URL in the load balancer's
  // redirect response. If urlRedirect specifies https_redirect, the test passes
  // only if the scheme in expectedOutputUrl is also set to HTTPS. If
  // urlRedirect specifies strip_query, the test passes only if
  // expectedOutputUrl does not contain any query parameters. expectedOutputUrl
  // is optional when service is specified.
  optional string expected_output_url = 2;

  // For rules with urlRedirect, the test passes only if
  // expectedRedirectResponseCode matches the HTTP status code in load
  // balancer's redirect response. expectedRedirectResponseCode cannot be set
  // when service is set.
  optional int32 expected_redirect_response_code = 3;

  // HTTP headers for this request. If headers contains a host header, then host
  // must also match the header value.
  repeated UrlMapTestHeader headers = 4;

  // Host portion of the URL. If headers contains a host header, then host must
  // also match the header value.
  optional string host = 5;

  // Path portion of the URL.
  optional string path = 6;

  // Expected BackendService or BackendBucket resource the given URL should be
  // mapped to. The service field cannot be set if expectedRedirectResponseCode
  // is set.
  optional string service = 7;
}

// HTTP headers used in UrlMapTests.
message UrlMapTestHeader {
  // Header name.
  optional string name = 1;

  // Header value.
  optional string value = 2;
}

// Message representing the validation result for a UrlMap.
message UrlMapValidationResult {
  repeated string load_errors = 1;

  // Whether the given UrlMap can be successfully loaded. If false, 'loadErrors'
  // indicates the reasons.
  optional bool load_succeeded = 2;

  repeated TestFailure test_failures = 3;

  // If successfully loaded, this field indicates whether the test passed. If
  // false, 'testFailures's indicate the reason of failure.
  optional bool test_passed = 4;
}

message UrlMapsAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of UrlMapsScopedList resources.
  map<string, UrlMapsScopedList> items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

message UrlMapsScopedList {
  // A list of UrlMaps contained in this scope.
  repeated UrlMap url_maps = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // Informational warning which replaces the list of backend services when the
  // list is empty.
  optional Warning warning = 2;
}

message UrlMapsValidateRequest {
  // Specifies the load balancer type(s) this validation request is for. Use
  // EXTERNAL_MANAGED for HTTP/HTTPS External Global Load Balancer with Advanced
  // Traffic Management. Use EXTERNAL for Classic HTTP/HTTPS External Global
  // Load Balancer. Other load balancer types are not supported. For more
  // information, refer to Choosing a load balancer. If unspecified, the load
  // balancing scheme will be inferred from the backend service resources this
  // URL map references. If that can not be inferred (for example, this URL map
  // only references backend buckets, or this Url map is for rewrites and
  // redirects only and doesn't reference any backends), EXTERNAL will be used
  // as the default type. If specified, the scheme(s) must not conflict with the
  // load balancing scheme of the backend service resources this Url map
  // references.
  repeated string load_balancing_schemes = 1;

  // Content of the UrlMap to be validated.
  optional UrlMap resource = 2;
}

message UrlMapsValidateResponse {
  optional UrlMapValidationResult result = 1;
}

// The spec for modifying the path before sending the request to the matched
// backend service.
message UrlRewrite {
  // Before forwarding the request to the selected service, the request's host
  // header is replaced with contents of hostRewrite. The value must be from 1
  // to 255 characters.
  optional string host_rewrite = 1;

  // Before forwarding the request to the selected backend service, the matching
  // portion of the request's path is replaced by pathPrefixRewrite. The value
  // must be from 1 to 1024 characters.
  optional string path_prefix_rewrite = 2;
}

// Subnetwork which the current user has compute.subnetworks.use permission on.
message UsableSubnetwork {
  // [Output Only] The external IPv6 address range that is assigned to this
  // subnetwork.
  optional string external_ipv6_prefix = 1;

  // [Output Only] The internal IPv6 address range that is assigned to this
  // subnetwork.
  optional string internal_ipv6_prefix = 2;

  // The range of internal addresses that are owned by this subnetwork.
  optional string ip_cidr_range = 3;

  // The access type of IPv6 address this subnet holds. It's immutable and can
  // only be specified during creation or the first time the subnet is updated
  // into IPV4_IPV6 dual stack.
  // EXTERNAL: VMs on this subnet will be assigned IPv6 addresses that are
  // accessible via the Internet, as well as the VPC network.
  // INTERNAL: VMs on this subnet will be assigned IPv6 addresses that are only
  // accessible over the VPC network.
  optional string ipv6_access_type = 4;

  // Network URL.
  optional string network = 5;

  // The purpose of the resource. This field can be either PRIVATE_RFC_1918 or
  // INTERNAL_HTTPS_LOAD_BALANCER. A subnetwork with purpose set to
  // INTERNAL_HTTPS_LOAD_BALANCER is a user-created subnetwork that is reserved
  // for Internal HTTP(S) Load Balancing. If unspecified, the purpose defaults
  // to PRIVATE_RFC_1918. The enableFlowLogs field isn't supported with the
  // purpose field set to INTERNAL_HTTPS_LOAD_BALANCER.
  // INTERNAL_HTTPS_LOAD_BALANCER: Subnet reserved for Internal HTTP(S) Load
  // Balancing.
  // PRIVATE: Regular user created or automatically created subnet.
  // PRIVATE_RFC_1918: Regular user created or automatically created subnet.
  // PRIVATE_SERVICE_CONNECT: Subnetworks created for Private Service Connect in
  // the producer network.
  // REGIONAL_MANAGED_PROXY: Subnetwork used for Regional Internal/External
  // HTTP(S) Load Balancing.
  optional string purpose = 6;

  // The role of subnetwork. Currently, this field is only used when purpose =
  // INTERNAL_HTTPS_LOAD_BALANCER. The value can be set to ACTIVE or BACKUP. An
  // ACTIVE subnetwork is one that is currently being used for Internal HTTP(S)
  // Load Balancing. A BACKUP subnetwork is one that is ready to be promoted to
  // ACTIVE or is currently draining. This field can be updated with a patch
  // request.
  // ACTIVE: The ACTIVE subnet that is currently used.
  // BACKUP: The BACKUP subnet that could be promoted to ACTIVE.
  optional string role = 7;

  // Secondary IP ranges.
  repeated UsableSubnetworkSecondaryRange secondary_ip_ranges = 8;

  // The stack type for the subnet. If set to IPV4_ONLY, new VMs in the subnet
  // are assigned IPv4 addresses only. If set to IPV4_IPV6, new VMs in the
  // subnet can be assigned both IPv4 and IPv6 addresses. If not specified,
  // IPV4_ONLY is used. This field can be both set at resource creation time and
  // updated using patch.
  // IPV4_IPV6: New VMs in this subnet can have both IPv4 and IPv6 addresses.
  // IPV4_ONLY: New VMs in this subnet will only be assigned IPv4 addresses.
  optional string stack_type = 9;

  // Subnetwork URL.
  optional string subnetwork = 10;
}

// Secondary IP range of a usable subnetwork.
message UsableSubnetworkSecondaryRange {
  // The range of IP addresses belonging to this subnetwork secondary range.
  optional string ip_cidr_range = 1;

  // The name associated with this subnetwork secondary range, used when adding
  // an alias IP range to a VM instance. The name must be 1-63 characters long,
  // and comply with RFC1035. The name must be unique within the subnetwork.
  optional string range_name = 2;
}

message UsableSubnetworksAggregatedList {
  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 1;

  // [Output] A list of usable subnetwork URLs.
  repeated UsableSubnetwork items = 2;

  // [Output Only] Type of resource. Always
  // compute#usableSubnetworksAggregatedList for aggregated lists of usable
  // subnetworks.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results. In special cases listUsable may return
  // 0 subnetworks and nextPageToken which still should be used to get the next
  // page of results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// The location in Cloud Storage and naming method of the daily usage report.
// Contains bucket_name and report_name prefix.
message UsageExportLocation {
  // The name of an existing bucket in Cloud Storage where the usage report
  // object is stored. The Google Service Account is granted write access to
  // this bucket. This can either be the bucket name by itself, such as
  // example-bucket, or the bucket name with gs:// or
  // https://storage.googleapis.com/ in front of it, such as
  // gs://example-bucket.
  optional string bucket_name = 1;

  // An optional prefix for the name of the usage report object stored in
  // bucketName. If not supplied, defaults to usage_gce. The report is stored as
  // a CSV file named report_name_prefix_gce_YYYYMMDD.csv where YYYYMMDD is the
  // day of the usage according to Pacific Time. If you supply a prefix, it
  // should conform to Cloud Storage object naming conventions.
  optional string report_name_prefix = 2;
}

// Contain information of Nat mapping for a VM endpoint (i.e., NIC).
message VmEndpointNatMappings {
  // Name of the VM instance which the endpoint belongs to
  optional string instance_name = 1;

  repeated VmEndpointNatMappingsInterfaceNatMappings interface_nat_mappings = 2;
}

// Contain information of Nat mapping for an interface of this endpoint.
message VmEndpointNatMappingsInterfaceNatMappings {
  // List of all drain IP:port-range mappings assigned to this interface. These
  // ranges are inclusive, that is, both the first and the last ports can be
  // used for NAT. Example: ["2.2.2.2:12345-12355", "1.1.1.1:2234-2234"].
  repeated string drain_nat_ip_port_ranges = 1;

  // A list of all IP:port-range mappings assigned to this interface. These
  // ranges are inclusive, that is, both the first and the last ports can be
  // used for NAT. Example: ["2.2.2.2:12345-12355", "1.1.1.1:2234-2234"].
  repeated string nat_ip_port_ranges = 2;

  // Total number of drain ports across all NAT IPs allocated to this interface.
  // It equals to the aggregated port number in the field
  // drain_nat_ip_port_ranges.
  optional int32 num_total_drain_nat_ports = 3;

  // Total number of ports across all NAT IPs allocated to this interface. It
  // equals to the aggregated port number in the field nat_ip_port_ranges.
  optional int32 num_total_nat_ports = 4;

  // Information about mappings provided by rules in this NAT.
  repeated VmEndpointNatMappingsInterfaceNatMappingsNatRuleMappings
      rule_mappings = 5;

  // Alias IP range for this interface endpoint. It will be a private (RFC 1918)
  // IP range. Examples: "10.33.4.55/32", or "192.168.5.0/24".
  optional string source_alias_ip_range = 6;

  // Primary IP of the VM for this NIC.
  optional string source_virtual_ip = 7;
}

// Contains information of NAT Mappings provided by a NAT Rule.
message VmEndpointNatMappingsInterfaceNatMappingsNatRuleMappings {
  // List of all drain IP:port-range mappings assigned to this interface by this
  // rule. These ranges are inclusive, that is, both the first and the last
  // ports can be used for NAT. Example: ["2.2.2.2:12345-12355",
  // "1.1.1.1:2234-2234"].
  repeated string drain_nat_ip_port_ranges = 1;

  // A list of all IP:port-range mappings assigned to this interface by this
  // rule. These ranges are inclusive, that is, both the first and the last
  // ports can be used for NAT. Example: ["2.2.2.2:12345-12355",
  // "1.1.1.1:2234-2234"].
  repeated string nat_ip_port_ranges = 2;

  // Total number of drain ports across all NAT IPs allocated to this interface
  // by this rule. It equals the aggregated port number in the field
  // drain_nat_ip_port_ranges.
  optional int32 num_total_drain_nat_ports = 3;

  // Total number of ports across all NAT IPs allocated to this interface by
  // this rule. It equals the aggregated port number in the field
  // nat_ip_port_ranges.
  optional int32 num_total_nat_ports = 4;

  // Rule number of the NAT Rule.
  optional int32 rule_number = 5;
}

// Contains a list of VmEndpointNatMappings.
message VmEndpointNatMappingsList {
  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 1;

  // [Output Only] Type of resource. Always compute#vmEndpointNatMappingsList
  // for lists of Nat mappings of VM endpoints.
  optional string kind = 2;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 3;

  // [Output Only] A list of Nat mapping information of VM endpoints.
  repeated VmEndpointNatMappings result = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// Represents a HA VPN gateway. HA VPN is a high-availability (HA) Cloud VPN
// solution that lets you securely connect your on-premises network to your
// Google Cloud Virtual Private Cloud network through an IPsec VPN connection in
// a single region. For more information about Cloud HA VPN solutions, see Cloud
// VPN topologies .
message VpnGateway {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 2;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 3;

  // [Output Only] Type of resource. Always compute#vpnGateway for VPN gateways.
  optional string kind = 4;

  // A fingerprint for the labels being applied to this VpnGateway, which is
  // essentially a hash of the labels set used for optimistic locking. The
  // fingerprint is initially generated by Compute Engine and changes after
  // every request to modify or update labels. You must always provide an
  // up-to-date fingerprint hash in order to update or change labels, otherwise
  // the request will fail with error 412 conditionNotMet. To see the latest
  // fingerprint, make a get() request to retrieve a VpnGateway.
  optional string label_fingerprint = 5;

  // Labels for this resource. These can only be added or modified by the
  // setLabels method. Each label key/value pair must comply with RFC1035. Label
  // values may be empty.
  map<string, string> labels = 6;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 7;

  // URL of the network to which this VPN gateway is attached. Provided by the
  // client when the VPN gateway is created.
  optional string network = 8;

  // [Output Only] URL of the region where the VPN gateway resides.
  optional string region = 9;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 10;

  // The stack type for this VPN gateway to identify the IP protocols that are
  // enabled. Possible values are: IPV4_ONLY, IPV4_IPV6. If not specified,
  // IPV4_ONLY will be used.
  // IPV4_IPV6: Enable VPN gateway with both IPv4 and IPv6 protocols.
  // IPV4_ONLY: Enable VPN gateway with only IPv4 protocol.
  optional string stack_type = 11;

  // The list of VPN interfaces associated with this VPN gateway.
  repeated VpnGatewayVpnGatewayInterface vpn_interfaces = 12;
}

message VpnGatewayAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of VpnGateway resources.
  map<string, VpnGatewaysScopedList> items = 2;

  // [Output Only] Type of resource. Always compute#vpnGateway for VPN gateways.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Contains a list of VpnGateway resources.
message VpnGatewayList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of VpnGateway resources.
  repeated VpnGateway items = 2;

  // [Output Only] Type of resource. Always compute#vpnGateway for VPN gateways.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message VpnGatewayStatus {
  // List of VPN connection for this VpnGateway.
  repeated VpnGatewayStatusVpnConnection vpn_connections = 1;
}

// Describes the high availability requirement state for the VPN connection
// between this Cloud VPN gateway and a peer gateway.
message VpnGatewayStatusHighAvailabilityRequirementState {
  // Indicates the high availability requirement state for the VPN connection.
  // Valid values are CONNECTION_REDUNDANCY_MET, CONNECTION_REDUNDANCY_NOT_MET.
  // CONNECTION_REDUNDANCY_MET: VPN tunnels are configured with adequate
  // redundancy from Cloud VPN gateway to the peer VPN gateway. For both
  // GCP-to-non-GCP and GCP-to-GCP connections, the adequate redundancy is a
  // pre-requirement for users to get 99.99% availability on GCP side; please
  // note that for any connection, end-to-end 99.99% availability is subject to
  // proper configuration on the peer VPN gateway.
  // CONNECTION_REDUNDANCY_NOT_MET: VPN tunnels are not configured with adequate
  // redundancy from the Cloud VPN gateway to the peer gateway
  optional string state = 1;

  // Indicates the reason why the VPN connection does not meet the high
  // availability redundancy criteria/requirement. Valid values is
  // INCOMPLETE_TUNNELS_COVERAGE.
  // INCOMPLETE_TUNNELS_COVERAGE:
  optional string unsatisfied_reason = 2;
}

// Contains some information about a VPN tunnel.
message VpnGatewayStatusTunnel {
  // The VPN gateway interface this VPN tunnel is associated with.
  optional uint32 local_gateway_interface = 1;

  // The peer gateway interface this VPN tunnel is connected to, the peer
  // gateway could either be an external VPN gateway or GCP VPN gateway.
  optional uint32 peer_gateway_interface = 2;

  // URL reference to the VPN tunnel.
  optional string tunnel_url = 3;
}

// A VPN connection contains all VPN tunnels connected from this VpnGateway to
// the same peer gateway. The peer gateway could either be a external VPN
// gateway or GCP VPN gateway.
message VpnGatewayStatusVpnConnection {
  // URL reference to the peer external VPN gateways to which the VPN tunnels in
  // this VPN connection are connected. This field is mutually exclusive with
  // peer_gcp_gateway.
  optional string peer_external_gateway = 1;

  // URL reference to the peer side VPN gateways to which the VPN tunnels in
  // this VPN connection are connected. This field is mutually exclusive with
  // peer_gcp_gateway.
  optional string peer_gcp_gateway = 2;

  // HighAvailabilityRequirementState for the VPN connection.
  optional VpnGatewayStatusHighAvailabilityRequirementState state = 3;

  // List of VPN tunnels that are in this VPN connection.
  repeated VpnGatewayStatusTunnel tunnels = 4;
}

// A VPN gateway interface.
message VpnGatewayVpnGatewayInterface {
  // [Output Only] Numeric identifier for this VPN interface associated with the
  // VPN gateway.
  optional uint32 id = 1;

  // URL of the VLAN attachment (interconnectAttachment) resource for this VPN
  // gateway interface. When the value of this field is present, the VPN gateway
  // is used for HA VPN over Cloud Interconnect; all egress or ingress traffic
  // for this VPN gateway interface goes through the specified VLAN attachment
  // resource.
  optional string interconnect_attachment = 2;

  // [Output Only] IP address for this VPN interface associated with the VPN
  // gateway. The IP address could be either a regional external IP address or a
  // regional internal IP address. The two IP addresses for a VPN gateway must
  // be all regional external or regional internal IP addresses. There cannot be
  // a mix of regional external IP addresses and regional internal IP addresses.
  // For HA VPN over Cloud Interconnect, the IP addresses for both interfaces
  // could either be regional internal IP addresses or regional external IP
  // addresses. For regular (non HA VPN over Cloud Interconnect) HA VPN tunnels,
  // the IP address must be a regional external IP address.
  optional string ip_address = 3;
}

message VpnGatewaysGetStatusResponse {
  optional VpnGatewayStatus result = 1;
}

message VpnGatewaysScopedList {
  // [Output Only] A list of VPN gateways contained in this scope.
  repeated VpnGateway vpn_gateways = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning which replaces the list of addresses
  // when the list is empty.
  optional Warning warning = 2;
}

// Represents a Cloud VPN Tunnel resource. For more information about VPN, read
// the the Cloud VPN Overview.
message VpnTunnel {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 1;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  optional string description = 2;

  // [Output Only] Detailed status message for the VPN tunnel.
  optional string detailed_status = 3;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 4;

  // IKE protocol version to use when establishing the VPN tunnel with the peer
  // VPN gateway. Acceptable IKE versions are 1 or 2. The default version is 2.
  optional int32 ike_version = 5;

  // [Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
  optional string kind = 6;

  // Local traffic selector to use when establishing the VPN tunnel with the
  // peer VPN gateway. The value should be a CIDR formatted string, for example:
  // 192.168.0.0/16. The ranges must be disjoint. Only IPv4 is supported.
  repeated string local_traffic_selector = 7;

  // Name of the resource. Provided by the client when the resource is created.
  // The name must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
  // must be a lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot be a
  // dash.
  optional string name = 8;

  // URL of the peer side external VPN gateway to which this VPN tunnel is
  // connected. Provided by the client when the VPN tunnel is created. This
  // field is exclusive with the field peerGcpGateway.
  optional string peer_external_gateway = 9;

  // The interface ID of the external VPN gateway to which this VPN tunnel is
  // connected. Provided by the client when the VPN tunnel is created. Possible
  // values are: `0`, `1`, `2`, `3`. The number of IDs in use depends on the
  // external VPN gateway redundancy type.
  optional int32 peer_external_gateway_interface = 10;

  // URL of the peer side HA GCP VPN gateway to which this VPN tunnel is
  // connected. Provided by the client when the VPN tunnel is created. This
  // field can be used when creating highly available VPN from VPC network to
  // VPC network, the field is exclusive with the field peerExternalGateway. If
  // provided, the VPN tunnel will automatically use the same
  // vpnGatewayInterface ID in the peer GCP VPN gateway.
  optional string peer_gcp_gateway = 11;

  // IP address of the peer VPN gateway. Only IPv4 is supported.
  optional string peer_ip = 12;

  // [Output Only] URL of the region where the VPN tunnel resides. You must
  // specify this field as part of the HTTP request URL. It is not settable as a
  // field in the request body.
  optional string region = 13;

  // Remote traffic selectors to use when establishing the VPN tunnel with the
  // peer VPN gateway. The value should be a CIDR formatted string, for example:
  // 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
  repeated string remote_traffic_selector = 14;

  // URL of the router resource to be used for dynamic routing.
  optional string router = 15;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 16;

  // Shared secret used to set the secure session between the Cloud VPN gateway
  // and the peer VPN gateway.
  optional string shared_secret = 17;

  // Hash of the shared secret.
  optional string shared_secret_hash = 18;

  // [Output Only] The status of the VPN tunnel, which can be one of the
  // following: - PROVISIONING: Resource is being allocated for the VPN tunnel.
  // - WAITING_FOR_FULL_CONFIG: Waiting to receive all VPN-related configs from
  // the user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule, and Route
  // resources are needed to setup the VPN tunnel. - FIRST_HANDSHAKE: Successful
  // first handshake with the peer VPN. - ESTABLISHED: Secure session is
  // successfully established with the peer VPN. - NETWORK_ERROR: Deprecated,
  // replaced by NO_INCOMING_PACKETS - AUTHORIZATION_ERROR: Auth error (for
  // example, bad shared secret). - NEGOTIATION_FAILURE: Handshake failed. -
  // DEPROVISIONING: Resources are being deallocated for the VPN tunnel. -
  // FAILED: Tunnel creation has failed and the tunnel is not ready to be used.
  // - NO_INCOMING_PACKETS: No incoming packets from peer. - REJECTED: Tunnel
  // configuration was rejected, can be result of being denied access. -
  // ALLOCATING_RESOURCES: Cloud VPN is in the process of allocating all
  // required resources. - STOPPED: Tunnel is stopped due to its Forwarding
  // Rules being deleted for Classic VPN tunnels or the project is in frozen
  // state. - PEER_IDENTITY_MISMATCH: Peer identity does not match peer IP,
  // probably behind NAT. - TS_NARROWING_NOT_ALLOWED: Traffic selector narrowing
  // not allowed for an HA-VPN tunnel.
  // ALLOCATING_RESOURCES: Cloud VPN is in the process of allocating all
  // required resources (specifically, a borg task).
  // AUTHORIZATION_ERROR: Auth error (e.g. bad shared secret).
  // DEPROVISIONING: Resources is being deallocated for the VPN tunnel.
  // ESTABLISHED: Secure session is successfully established with peer VPN.
  // FAILED: Tunnel creation has failed and the tunnel is not ready to be used.
  // FIRST_HANDSHAKE: Successful first handshake with peer VPN.
  // NEGOTIATION_FAILURE: Handshake failed.
  // NETWORK_ERROR: Deprecated, replaced by NO_INCOMING_PACKETS
  // NO_INCOMING_PACKETS: No incoming packets from peer
  // PROVISIONING: Resource is being allocated for the VPN tunnel.
  // REJECTED: Tunnel configuration was rejected, can be result of being
  // denylisted.
  // STOPPED: Tunnel is stopped due to its Forwarding Rules being deleted.
  // WAITING_FOR_FULL_CONFIG: Waiting to receive all VPN-related configs from
  // user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule and Route
  // resources are needed to setup VPN tunnel.
  optional string status = 19;

  // URL of the Target VPN gateway with which this VPN tunnel is associated.
  // Provided by the client when the VPN tunnel is created.
  optional string target_vpn_gateway = 20;

  // URL of the VPN gateway with which this VPN tunnel is associated. Provided
  // by the client when the VPN tunnel is created. This must be used (instead of
  // target_vpn_gateway) if a High Availability VPN gateway resource is created.
  optional string vpn_gateway = 21;

  // The interface ID of the VPN gateway with which this VPN tunnel is
  // associated. Possible values are: `0`, `1`.
  optional int32 vpn_gateway_interface = 22;
}

message VpnTunnelAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of VpnTunnelsScopedList resources.
  map<string, VpnTunnelsScopedList> items = 2;

  // [Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 6;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 7;
}

// Contains a list of VpnTunnel resources.
message VpnTunnelList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of VpnTunnel resources.
  repeated VpnTunnel items = 2;

  // [Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message VpnTunnelsScopedList {
  // A list of VPN tunnels contained in this scope.
  repeated VpnTunnel vpn_tunnels = 1;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // Informational warning which replaces the list of addresses when the list is
  // empty.
  optional Warning warning = 2;
}

message WafExpressionSet {
  // A list of alternate IDs. The format should be: - E.g. XSS-stable Generic
  // suffix like "stable" is particularly useful if a policy likes to avail
  // newer set of expressions without having to change the policy. A given alias
  // name can't be used for more than one entity set.
  repeated string aliases = 1;

  // List of available expressions.
  repeated WafExpressionSetExpression expressions = 2;

  // Google specified expression set ID. The format should be: - E.g.
  // XSS-20170329 required
  optional string id = 3;
}

message WafExpressionSetExpression {
  // Expression ID should uniquely identify the origin of the expression. E.g.
  // owasp-crs-v020901-id973337 identifies Owasp core rule set version 2.9.1
  // rule id 973337. The ID could be used to determine the individual attack
  // definition that has been detected. It could also be used to exclude it from
  // the policy in case of false positive. required
  optional string id = 1;

  // The sensitivity value associated with the WAF rule ID. This corresponds to
  // the ModSecurity paranoia level, ranging from 1 to 4. 0 is reserved for
  // opt-in only rules.
  optional int32 sensitivity = 2;
}

// In contrast to a single BackendService in HttpRouteAction to which all
// matching traffic is directed to, WeightedBackendService allows traffic to be
// split across multiple backend services. The volume of traffic for each
// backend service is proportional to the weight specified in each
// WeightedBackendService
message WeightedBackendService {
  // The full or partial URL to the default BackendService resource. Before
  // forwarding the request to backendService, the load balancer applies any
  // relevant headerActions specified as part of this backendServiceWeight.
  optional string backend_service = 1;

  // Specifies changes to request and response headers that need to take effect
  // for the selected backendService. headerAction specified here take effect
  // before headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
  // headerAction is not supported for load balancers that have their
  // loadBalancingScheme set to EXTERNAL. Not supported when the URL map is
  // bound to a target gRPC proxy that has validateForProxyless field set to
  // true.
  optional HttpHeaderAction header_action = 2;

  // Specifies the fraction of traffic sent to a backend service, computed as
  // weight / (sum of all weightedBackendService weights in routeAction) . The
  // selection of a backend service is determined only for new traffic. Once a
  // user's request has been directed to a backend service, subsequent requests
  // are sent to the same backend service as determined by the backend service's
  // session affinity policy. The value must be from 0 to 1000.
  optional uint32 weight = 3;
}

message XpnHostList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // [Output Only] A list of shared VPC host project URLs.
  repeated Project items = 2;

  // [Output Only] Type of resource. Always compute#xpnHostList for lists of
  // shared VPC hosts.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

// Service resource (a.k.a service project) ID.
message XpnResourceId {
  // The ID of the service resource. In the case of projects, this field
  // supports project id (e.g., my-project-123) and project number (e.g.
  // 12345678).
  optional string id = 1;

  // The type of the service resource.
  // PROJECT:
  // XPN_RESOURCE_TYPE_UNSPECIFIED:
  optional string type = 2;
}

// Represents a Zone resource. A zone is a deployment area. These deployment
// areas are subsets of a region. For example the zone us-east1-a is located in
// the us-east1 region. For more information, read Regions and Zones.
message Zone {
  // [Output Only] Available cpu/platform selections for the zone.
  repeated string available_cpu_platforms = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 2;

  // [Output Only] The deprecation status associated with this zone.
  optional DeprecationStatus deprecated = 3;

  // [Output Only] Textual description of the resource.
  optional string description = 4;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  optional string id = 5;

  // [Output Only] Type of the resource. Always compute#zone for zones.
  optional string kind = 6;

  // [Output Only] Name of the resource.
  optional string name = 7;

  // [Output Only] Full URL reference to the region which hosts the zone.
  optional string region = 8;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 9;

  // [Output Only] Status of the zone, either UP or DOWN.
  // DOWN:
  // UP:
  optional string status = 10;

  // [Output Only] Reserved for future use.
  optional bool supports_pzs = 11;
}

// Contains a list of zone resources.
message ZoneList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 1;

  // A list of Zone resources.
  repeated Zone items = 2;

  // Type of resource.
  optional string kind = 3;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than maxResults, use the
  // nextPageToken as a value for the query parameter pageToken in the next list
  // request. Subsequent list requests will have their own nextPageToken to
  // continue paging through the results.
  optional string next_page_token = 4;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 5;

  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute Engine
    // returns NO_RESULTS_ON_PAGE if there are no results in the response.
    // CLEANUP_FAILED: Warning about failed cleanup of transient changes made by
    // a failed operation.
    // DEPRECATED_RESOURCE_USED: A link to a deprecated resource was created.
    // DEPRECATED_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as deprecated
    // DISK_SIZE_LARGER_THAN_IMAGE_SIZE: The user created a boot disk that is
    // larger than image size.
    // EXPERIMENTAL_TYPE_USED: When deploying and at least one of the resources
    // has a type marked as experimental
    // EXTERNAL_API_WARNING: Warning that is present in an external api call
    // FIELD_VALUE_OVERRIDEN: Warning that value of a field has been overridden.
    // Deprecated unused field.
    // INJECTED_KERNELS_DEPRECATED: The operation involved use of an injected
    // kernel, which is deprecated.
    // INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB: A WEIGHTED_MAGLEV backend
    // service is associated with a health check that is not of type
    // HTTP/HTTPS/HTTP2.
    // LARGE_DEPLOYMENT_WARNING: When deploying a deployment with a exceedingly
    // large number of resources
    // MISSING_TYPE_DEPENDENCY: A resource depends on a missing type
    // NEXT_HOP_ADDRESS_NOT_ASSIGNED: The route's nextHopIp address is not
    // assigned to an instance on the network.
    // NEXT_HOP_CANNOT_IP_FORWARD: The route's next hop instance cannot ip
    // forward.
    // NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE: The route's nextHopInstance URL
    // refers to an instance that does not have an ipv6 interface on the same
    // network as the route.
    // NEXT_HOP_INSTANCE_NOT_FOUND: The route's nextHopInstance URL refers to an
    // instance that does not exist.
    // NEXT_HOP_INSTANCE_NOT_ON_NETWORK: The route's nextHopInstance URL refers
    // to an instance that is not on the same network as the route.
    // NEXT_HOP_NOT_RUNNING: The route's next hop instance does not have a
    // status of RUNNING.
    // NOT_CRITICAL_ERROR: Error which is not critical. We decided to continue
    // the process despite the mentioned error.
    // NO_RESULTS_ON_PAGE: No results are present on a particular list page.
    // PARTIAL_SUCCESS: Success is reported, but some results may be missing due
    // to errors
    // REQUIRED_TOS_AGREEMENT: The user attempted to use a resource that
    // requires a TOS they have not accepted.
    // RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning that a resource is in
    // use.
    // RESOURCE_NOT_DELETED: One or more of the resources set to auto-delete
    // could not be deleted because they were in use.
    // SCHEMA_VALIDATION_IGNORED: When a resource schema validation is ignored.
    // SINGLE_INSTANCE_PROPERTY_TEMPLATE: Instance template used in instance
    // group manager is valid as such, but its application does not make a lot
    // of sense, because it allows only single instance in instance group.
    // UNDECLARED_PROPERTIES: When undeclared properties in the schema are
    // present
    // UNREACHABLE: A given scope cannot be reached.
    optional string code = 1;

    message DataItem {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the key
      // value might be the zone name. Other examples might be a key indicating
      // a deprecated resource and a suggested replacement, or a warning about
      // invalid network settings (for example, if an instance attempts to
      // perform IP forwarding but is not enabled for IP forwarding).
      optional string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      optional string value = 2;
    }

    // [Output Only] Metadata about this warning in key: value format. For
    // example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    repeated DataItem data = 2;

    // [Output Only] A human-readable description of the warning code.
    optional string message = 3;
  }

  // [Output Only] Informational warning message.
  optional Warning warning = 6;
}

message ZoneSetLabelsRequest {
  // The fingerprint of the previous set of labels for this resource, used to
  // detect conflicts. The fingerprint is initially generated by Compute Engine
  // and changes after every request to modify or update labels. You must always
  // provide an up-to-date fingerprint hash in order to update or change labels.
  // Make a get() request to the resource to get the latest fingerprint.
  optional string label_fingerprint = 1;

  // The labels to set for this resource.
  map<string, string> labels = 2;
}

message ZoneSetPolicyRequest {
  // Flatten Policy to create a backwacd compatible wire-format. Deprecated. Use
  // 'policy' to specify bindings.
  repeated Binding bindings = 1;

  // Flatten Policy to create a backward compatible wire-format. Deprecated. Use
  // 'policy' to specify the etag.
  optional string etag = 2;

  // REQUIRED: The complete policy to be applied to the 'resource'. The size of
  // the policy is limited to a few 10s of KB. An empty policy is in general a
  // valid policy but certain services (like Projects) might reject them.
  optional Policy policy = 3;
}
