// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/compute/disks/v1/disks.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_DISKS_V1_DISKS_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_DISKS_V1_DISKS_CLIENT_H

#include "google/cloud/compute/disks/v1/disks_rest_connection.h"
#include "google/cloud/experimental_tag.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace compute_disks_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service for the disks resource.
/// https://cloud.google.com/compute/docs/reference/rest/v1/disks
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class DisksClient {
 public:
  explicit DisksClient(ExperimentalTag,
                       std::shared_ptr<DisksConnection> connection,
                       Options opts = {});
  ~DisksClient();

  ///@{
  /// @name Copy and move support
  DisksClient(DisksClient const&) = default;
  DisksClient& operator=(DisksClient const&) = default;
  DisksClient(DisksClient&&) = default;
  DisksClient& operator=(DisksClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(DisksClient const& a, DisksClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(DisksClient const& a, DisksClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Adds existing resource policies to a disk. You can only add one policy
  /// which will be applied to this disk for scheduling snapshot creation.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param disk  The disk name for this request.
  /// @param disks_add_resource_policies_request_resource  The
  /// DisksAddResourcePoliciesRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.disks.v1.AddResourcePoliciesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L201}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> AddResourcePolicies(
      std::string const& project, std::string const& zone,
      std::string const& disk,
      google::cloud::cpp::compute::v1::DisksAddResourcePoliciesRequest const&
          disks_add_resource_policies_request_resource,
      Options opts = {});

  ///
  /// Adds existing resource policies to a disk. You can only add one policy
  /// which will be applied to this disk for scheduling snapshot creation.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::disks::v1::AddResourcePoliciesRequest,google/cloud/compute/disks/v1/disks.proto#L201}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.disks.v1.AddResourcePoliciesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L201}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> AddResourcePolicies(
      google::cloud::cpp::compute::disks::v1::AddResourcePoliciesRequest const&
          request,
      Options opts = {});

  ///
  /// Retrieves an aggregated list of persistent disks.
  ///
  /// @param project  Project ID for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::DiskAggregatedList,google/cloud/compute/v1/internal/common.proto#L4522}
  ///
  /// [google.cloud.cpp.compute.disks.v1.AggregatedListDisksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L235}
  /// [google.cloud.cpp.compute.v1.DiskAggregatedList]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L4522}
  ///
  StatusOr<google::cloud::cpp::compute::v1::DiskAggregatedList>
  AggregatedListDisks(std::string const& project, Options opts = {});

  ///
  /// Retrieves an aggregated list of persistent disks.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::disks::v1::AggregatedListDisksRequest,google/cloud/compute/disks/v1/disks.proto#L235}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::DiskAggregatedList,google/cloud/compute/v1/internal/common.proto#L4522}
  ///
  /// [google.cloud.cpp.compute.disks.v1.AggregatedListDisksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L235}
  /// [google.cloud.cpp.compute.v1.DiskAggregatedList]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L4522}
  ///
  StatusOr<google::cloud::cpp::compute::v1::DiskAggregatedList>
  AggregatedListDisks(
      google::cloud::cpp::compute::disks::v1::AggregatedListDisksRequest const&
          request,
      Options opts = {});

  ///
  /// Creates a snapshot of a specified persistent disk. For regular snapshot
  /// creation, consider using snapshots.insert instead, as that method supports
  /// more features, such as creating snapshots in a project different from the
  /// source disk project.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param disk  Name of the persistent disk to snapshot.
  /// @param snapshot_resource  The Snapshot for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.disks.v1.CreateSnapshotRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L309}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> CreateSnapshot(
      std::string const& project, std::string const& zone,
      std::string const& disk,
      google::cloud::cpp::compute::v1::Snapshot const& snapshot_resource,
      Options opts = {});

  ///
  /// Creates a snapshot of a specified persistent disk. For regular snapshot
  /// creation, consider using snapshots.insert instead, as that method supports
  /// more features, such as creating snapshots in a project different from the
  /// source disk project.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::disks::v1::CreateSnapshotRequest,google/cloud/compute/disks/v1/disks.proto#L309}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.disks.v1.CreateSnapshotRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L309}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> CreateSnapshot(
      google::cloud::cpp::compute::disks::v1::CreateSnapshotRequest const&
          request,
      Options opts = {});

  ///
  /// Deletes the specified persistent disk. Deleting a disk removes its data
  /// permanently and is irreversible. However, deleting a disk does not delete
  /// any snapshots previously made from the disk. You must separately delete
  /// snapshots.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param disk  Name of the persistent disk to delete.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.disks.v1.DeleteDisksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L346}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteDisks(
      std::string const& project, std::string const& zone,
      std::string const& disk, Options opts = {});

  ///
  /// Deletes the specified persistent disk. Deleting a disk removes its data
  /// permanently and is irreversible. However, deleting a disk does not delete
  /// any snapshots previously made from the disk. You must separately delete
  /// snapshots.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::disks::v1::DeleteDisksRequest,google/cloud/compute/disks/v1/disks.proto#L346}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.disks.v1.DeleteDisksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L346}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteDisks(
      google::cloud::cpp::compute::disks::v1::DeleteDisksRequest const& request,
      Options opts = {});

  ///
  /// Returns the specified persistent disk.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param disk  Name of the persistent disk to return.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Disk,google/cloud/compute/v1/internal/common.proto#L4301}
  ///
  /// [google.cloud.cpp.compute.disks.v1.GetDisksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L376}
  /// [google.cloud.cpp.compute.v1.Disk]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L4301}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Disk> GetDisks(
      std::string const& project, std::string const& zone,
      std::string const& disk, Options opts = {});

  ///
  /// Returns the specified persistent disk.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::disks::v1::GetDisksRequest,google/cloud/compute/disks/v1/disks.proto#L376}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Disk,google/cloud/compute/v1/internal/common.proto#L4301}
  ///
  /// [google.cloud.cpp.compute.disks.v1.GetDisksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L376}
  /// [google.cloud.cpp.compute.v1.Disk]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L4301}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Disk> GetDisks(
      google::cloud::cpp::compute::disks::v1::GetDisksRequest const& request,
      Options opts = {});

  ///
  /// Gets the access control policy for a resource. May be empty if no such
  /// policy or resource exists.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param resource  Name or id of the resource for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Policy,google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  /// [google.cloud.cpp.compute.disks.v1.GetIamPolicyRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L388}
  /// [google.cloud.cpp.compute.v1.Policy]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Policy> GetIamPolicy(
      std::string const& project, std::string const& zone,
      std::string const& resource, Options opts = {});

  ///
  /// Gets the access control policy for a resource. May be empty if no such
  /// policy or resource exists.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::disks::v1::GetIamPolicyRequest,google/cloud/compute/disks/v1/disks.proto#L388}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Policy,google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  /// [google.cloud.cpp.compute.disks.v1.GetIamPolicyRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L388}
  /// [google.cloud.cpp.compute.v1.Policy]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Policy> GetIamPolicy(
      google::cloud::cpp::compute::disks::v1::GetIamPolicyRequest const&
          request,
      Options opts = {});

  ///
  /// Creates a persistent disk in the specified project using the data in the
  /// request. You can create a disk from a source (sourceImage, sourceSnapshot,
  /// or sourceDisk) or create an empty 500 GB data disk by omitting all
  /// properties. You can also create a disk that is larger than the default
  /// size by specifying the sizeGb property.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param disk_resource  The Disk for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.disks.v1.InsertDisksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L403}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> InsertDisks(
      std::string const& project, std::string const& zone,
      google::cloud::cpp::compute::v1::Disk const& disk_resource,
      Options opts = {});

  ///
  /// Creates a persistent disk in the specified project using the data in the
  /// request. You can create a disk from a source (sourceImage, sourceSnapshot,
  /// or sourceDisk) or create an empty 500 GB data disk by omitting all
  /// properties. You can also create a disk that is larger than the default
  /// size by specifying the sizeGb property.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::disks::v1::InsertDisksRequest,google/cloud/compute/disks/v1/disks.proto#L403}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.disks.v1.InsertDisksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L403}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> InsertDisks(
      google::cloud::cpp::compute::disks::v1::InsertDisksRequest const& request,
      Options opts = {});

  ///
  /// Retrieves a list of persistent disks contained within the specified zone.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Disk,google/cloud/compute/v1/internal/common.proto#L4301}
  ///
  /// [google.cloud.cpp.compute.disks.v1.ListDisksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L436}
  /// [google.cloud.cpp.compute.v1.Disk]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L4301}
  ///
  StreamRange<google::cloud::cpp::compute::v1::Disk> ListDisks(
      std::string const& project, std::string const& zone, Options opts = {});

  ///
  /// Retrieves a list of persistent disks contained within the specified zone.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::disks::v1::ListDisksRequest,google/cloud/compute/disks/v1/disks.proto#L436}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Disk,google/cloud/compute/v1/internal/common.proto#L4301}
  ///
  /// [google.cloud.cpp.compute.disks.v1.ListDisksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L436}
  /// [google.cloud.cpp.compute.v1.Disk]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L4301}
  ///
  StreamRange<google::cloud::cpp::compute::v1::Disk> ListDisks(
      google::cloud::cpp::compute::disks::v1::ListDisksRequest request,
      Options opts = {});

  ///
  /// Removes resource policies from a disk.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param disk  The disk name for this request.
  /// @param disks_remove_resource_policies_request_resource  The
  /// DisksRemoveResourcePoliciesRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.disks.v1.RemoveResourcePoliciesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L504}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> RemoveResourcePolicies(
      std::string const& project, std::string const& zone,
      std::string const& disk,
      google::cloud::cpp::compute::v1::DisksRemoveResourcePoliciesRequest const&
          disks_remove_resource_policies_request_resource,
      Options opts = {});

  ///
  /// Removes resource policies from a disk.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::disks::v1::RemoveResourcePoliciesRequest,google/cloud/compute/disks/v1/disks.proto#L504}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.disks.v1.RemoveResourcePoliciesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L504}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> RemoveResourcePolicies(
      google::cloud::cpp::compute::disks::v1::
          RemoveResourcePoliciesRequest const& request,
      Options opts = {});

  ///
  /// Resizes the specified persistent disk. You can only increase the size of
  /// the disk.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param disk  The name of the persistent disk.
  /// @param disks_resize_request_resource  The DisksResizeRequest for this
  /// request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.disks.v1.ResizeRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L538}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> Resize(
      std::string const& project, std::string const& zone,
      std::string const& disk,
      google::cloud::cpp::compute::v1::DisksResizeRequest const&
          disks_resize_request_resource,
      Options opts = {});

  ///
  /// Resizes the specified persistent disk. You can only increase the size of
  /// the disk.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::disks::v1::ResizeRequest,google/cloud/compute/disks/v1/disks.proto#L538}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.disks.v1.ResizeRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L538}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> Resize(
      google::cloud::cpp::compute::disks::v1::ResizeRequest const& request,
      Options opts = {});

  ///
  /// Sets the access control policy on the specified resource. Replaces any
  /// existing policy.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param resource  Name or id of the resource for this request.
  /// @param zone_set_policy_request_resource  The ZoneSetPolicyRequest for this
  /// request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Policy,google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  /// [google.cloud.cpp.compute.disks.v1.SetIamPolicyRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L572}
  /// [google.cloud.cpp.compute.v1.Policy]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Policy> SetIamPolicy(
      std::string const& project, std::string const& zone,
      std::string const& resource,
      google::cloud::cpp::compute::v1::ZoneSetPolicyRequest const&
          zone_set_policy_request_resource,
      Options opts = {});

  ///
  /// Sets the access control policy on the specified resource. Replaces any
  /// existing policy.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::disks::v1::SetIamPolicyRequest,google/cloud/compute/disks/v1/disks.proto#L572}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Policy,google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  /// [google.cloud.cpp.compute.disks.v1.SetIamPolicyRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L572}
  /// [google.cloud.cpp.compute.v1.Policy]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Policy> SetIamPolicy(
      google::cloud::cpp::compute::disks::v1::SetIamPolicyRequest const&
          request,
      Options opts = {});

  ///
  /// Sets the labels on a disk. To learn more about labels, read the Labeling
  /// Resources documentation.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param resource  Name or id of the resource for this request.
  /// @param zone_set_labels_request_resource  The ZoneSetLabelsRequest for this
  /// request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.disks.v1.SetLabelsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L588}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetLabels(
      std::string const& project, std::string const& zone,
      std::string const& resource,
      google::cloud::cpp::compute::v1::ZoneSetLabelsRequest const&
          zone_set_labels_request_resource,
      Options opts = {});

  ///
  /// Sets the labels on a disk. To learn more about labels, read the Labeling
  /// Resources documentation.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::disks::v1::SetLabelsRequest,google/cloud/compute/disks/v1/disks.proto#L588}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.disks.v1.SetLabelsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L588}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetLabels(
      google::cloud::cpp::compute::disks::v1::SetLabelsRequest const& request,
      Options opts = {});

  ///
  /// Returns permissions that a caller has on the specified resource.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param resource  Name or id of the resource for this request.
  /// @param test_permissions_request_resource  The TestPermissionsRequest for
  /// this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::TestPermissionsResponse,google/cloud/compute/v1/internal/common.proto#L28939}
  ///
  /// [google.cloud.cpp.compute.disks.v1.TestIamPermissionsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L622}
  /// [google.cloud.cpp.compute.v1.TestPermissionsResponse]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L28939}
  ///
  StatusOr<google::cloud::cpp::compute::v1::TestPermissionsResponse>
  TestIamPermissions(
      std::string const& project, std::string const& zone,
      std::string const& resource,
      google::cloud::cpp::compute::v1::TestPermissionsRequest const&
          test_permissions_request_resource,
      Options opts = {});

  ///
  /// Returns permissions that a caller has on the specified resource.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::disks::v1::TestIamPermissionsRequest,google/cloud/compute/disks/v1/disks.proto#L622}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::TestPermissionsResponse,google/cloud/compute/v1/internal/common.proto#L28939}
  ///
  /// [google.cloud.cpp.compute.disks.v1.TestIamPermissionsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L622}
  /// [google.cloud.cpp.compute.v1.TestPermissionsResponse]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L28939}
  ///
  StatusOr<google::cloud::cpp::compute::v1::TestPermissionsResponse>
  TestIamPermissions(
      google::cloud::cpp::compute::disks::v1::TestIamPermissionsRequest const&
          request,
      Options opts = {});

  ///
  /// Updates the specified disk with the data included in the request. The
  /// update is performed only on selected fields included as part of
  /// update-mask. Only the following fields can be modified: user_license.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param disk  The disk name for this request.
  /// @param disk_resource  The Disk for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.disks.v1.UpdateDisksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L638}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> UpdateDisks(
      std::string const& project, std::string const& zone,
      std::string const& disk,
      google::cloud::cpp::compute::v1::Disk const& disk_resource,
      Options opts = {});

  ///
  /// Updates the specified disk with the data included in the request. The
  /// update is performed only on selected fields included as part of
  /// update-mask. Only the following fields can be modified: user_license.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::disks::v1::UpdateDisksRequest,google/cloud/compute/disks/v1/disks.proto#L638}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.disks.v1.UpdateDisksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/disks/v1/disks.proto#L638}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> UpdateDisks(
      google::cloud::cpp::compute::disks::v1::UpdateDisksRequest const& request,
      Options opts = {});

 private:
  std::shared_ptr<DisksConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_disks_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_DISKS_V1_DISKS_CLIENT_H
