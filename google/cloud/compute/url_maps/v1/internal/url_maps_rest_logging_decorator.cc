// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/compute/url_maps/v1/url_maps.proto

#include "google/cloud/compute/url_maps/v1/internal/url_maps_rest_logging_decorator.h"
#include "google/cloud/internal/log_wrapper.h"
#include "google/cloud/status_or.h"
#include <memory>

namespace google {
namespace cloud {
namespace compute_url_maps_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

UrlMapsRestLogging::UrlMapsRestLogging(
    std::shared_ptr<UrlMapsRestStub> child,
    TracingOptions tracing_options,
    std::set<std::string> components)
    : child_(std::move(child)), tracing_options_(std::move(tracing_options)),
      components_(std::move(components)) {}

StatusOr<google::cloud::cpp::compute::v1::UrlMapsAggregatedList>
UrlMapsRestLogging::AggregatedListUrlMaps(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::urlMaps::v1::AggregatedListUrlMapsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context,
             google::cloud::cpp::compute::urlMaps::v1::AggregatedListUrlMapsRequest const& request) {
        return child_->AggregatedListUrlMaps(rest_context, request);
      },
      rest_context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
UrlMapsRestLogging::DeleteUrlMaps(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::urlMaps::v1::DeleteUrlMapsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context,
             google::cloud::cpp::compute::urlMaps::v1::DeleteUrlMapsRequest const& request) {
        return child_->DeleteUrlMaps(rest_context, request);
      },
      rest_context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::compute::v1::UrlMap>
UrlMapsRestLogging::GetUrlMaps(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::urlMaps::v1::GetUrlMapsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context,
             google::cloud::cpp::compute::urlMaps::v1::GetUrlMapsRequest const& request) {
        return child_->GetUrlMaps(rest_context, request);
      },
      rest_context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
UrlMapsRestLogging::InsertUrlMaps(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::urlMaps::v1::InsertUrlMapsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context,
             google::cloud::cpp::compute::urlMaps::v1::InsertUrlMapsRequest const& request) {
        return child_->InsertUrlMaps(rest_context, request);
      },
      rest_context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
UrlMapsRestLogging::InvalidateCache(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::urlMaps::v1::InvalidateCacheRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context,
             google::cloud::cpp::compute::urlMaps::v1::InvalidateCacheRequest const& request) {
        return child_->InvalidateCache(rest_context, request);
      },
      rest_context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::compute::v1::UrlMapList>
UrlMapsRestLogging::ListUrlMaps(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::urlMaps::v1::ListUrlMapsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context,
             google::cloud::cpp::compute::urlMaps::v1::ListUrlMapsRequest const& request) {
        return child_->ListUrlMaps(rest_context, request);
      },
      rest_context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
UrlMapsRestLogging::PatchUrlMaps(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::urlMaps::v1::PatchUrlMapsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context,
             google::cloud::cpp::compute::urlMaps::v1::PatchUrlMapsRequest const& request) {
        return child_->PatchUrlMaps(rest_context, request);
      },
      rest_context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
UrlMapsRestLogging::UpdateUrlMaps(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::urlMaps::v1::UpdateUrlMapsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context,
             google::cloud::cpp::compute::urlMaps::v1::UpdateUrlMapsRequest const& request) {
        return child_->UpdateUrlMaps(rest_context, request);
      },
      rest_context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::compute::v1::UrlMapsValidateResponse>
UrlMapsRestLogging::Validate(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::urlMaps::v1::ValidateRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context,
             google::cloud::cpp::compute::urlMaps::v1::ValidateRequest const& request) {
        return child_->Validate(rest_context, request);
      },
      rest_context, request, __func__, tracing_options_);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_url_maps_v1_internal
}  // namespace cloud
}  // namespace google
