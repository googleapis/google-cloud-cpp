// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source:
// google/cloud/compute/region_health_checks/v1/region_health_checks.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_REGION_HEALTH_CHECKS_V1_REGION_HEALTH_CHECKS_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_REGION_HEALTH_CHECKS_V1_REGION_HEALTH_CHECKS_CLIENT_H

#include "google/cloud/compute/region_health_checks/v1/region_health_checks_rest_connection.h"
#include "google/cloud/experimental_tag.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <memory>

namespace google {
namespace cloud {
namespace compute_region_health_checks_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service for the regionHealthChecks resource.
/// https://cloud.google.com/compute/docs/reference/rest/v1/regionHealthChecks
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class RegionHealthChecksClient {
 public:
  explicit RegionHealthChecksClient(
      ExperimentalTag, std::shared_ptr<RegionHealthChecksConnection> connection,
      Options opts = {});
  ~RegionHealthChecksClient();

  ///@{
  /// @name Copy and move support
  RegionHealthChecksClient(RegionHealthChecksClient const&) = default;
  RegionHealthChecksClient& operator=(RegionHealthChecksClient const&) =
      default;
  RegionHealthChecksClient(RegionHealthChecksClient&&) = default;
  RegionHealthChecksClient& operator=(RegionHealthChecksClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(RegionHealthChecksClient const& a,
                         RegionHealthChecksClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(RegionHealthChecksClient const& a,
                         RegionHealthChecksClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Deletes the specified HealthCheck resource.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region scoping this request.
  /// @param health_check  Name of the HealthCheck resource to delete.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.regionHealthChecks.v1.DeleteRegionHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/region_health_checks/v1/region_health_checks.proto#L96}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteRegionHealthChecks(
      std::string const& project, std::string const& region,
      std::string const& health_check, Options opts = {});

  ///
  /// Deletes the specified HealthCheck resource.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::regionHealthChecks::v1::DeleteRegionHealthChecksRequest,google/cloud/compute/region_health_checks/v1/region_health_checks.proto#L96}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.regionHealthChecks.v1.DeleteRegionHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/region_health_checks/v1/region_health_checks.proto#L96}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteRegionHealthChecks(
      google::cloud::cpp::compute::regionHealthChecks::v1::
          DeleteRegionHealthChecksRequest const& request,
      Options opts = {});

  ///
  /// Returns the specified HealthCheck resource.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region scoping this request.
  /// @param health_check  Name of the HealthCheck resource to return.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::HealthCheck,google/cloud/compute/v1/internal/common.proto#L7293}
  ///
  /// [google.cloud.cpp.compute.regionHealthChecks.v1.GetRegionHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/region_health_checks/v1/region_health_checks.proto#L120}
  /// [google.cloud.cpp.compute.v1.HealthCheck]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L7293}
  ///
  StatusOr<google::cloud::cpp::compute::v1::HealthCheck> GetRegionHealthChecks(
      std::string const& project, std::string const& region,
      std::string const& health_check, Options opts = {});

  ///
  /// Returns the specified HealthCheck resource.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::regionHealthChecks::v1::GetRegionHealthChecksRequest,google/cloud/compute/region_health_checks/v1/region_health_checks.proto#L120}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::HealthCheck,google/cloud/compute/v1/internal/common.proto#L7293}
  ///
  /// [google.cloud.cpp.compute.regionHealthChecks.v1.GetRegionHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/region_health_checks/v1/region_health_checks.proto#L120}
  /// [google.cloud.cpp.compute.v1.HealthCheck]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L7293}
  ///
  StatusOr<google::cloud::cpp::compute::v1::HealthCheck> GetRegionHealthChecks(
      google::cloud::cpp::compute::regionHealthChecks::v1::
          GetRegionHealthChecksRequest const& request,
      Options opts = {});

  ///
  /// Creates a HealthCheck resource in the specified project using the data
  /// included in the request.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region scoping this request.
  /// @param health_check_resource  The HealthCheck for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.regionHealthChecks.v1.InsertRegionHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/region_health_checks/v1/region_health_checks.proto#L132}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> InsertRegionHealthChecks(
      std::string const& project, std::string const& region,
      google::cloud::cpp::compute::v1::HealthCheck const& health_check_resource,
      Options opts = {});

  ///
  /// Creates a HealthCheck resource in the specified project using the data
  /// included in the request.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::regionHealthChecks::v1::InsertRegionHealthChecksRequest,google/cloud/compute/region_health_checks/v1/region_health_checks.proto#L132}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.regionHealthChecks.v1.InsertRegionHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/region_health_checks/v1/region_health_checks.proto#L132}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> InsertRegionHealthChecks(
      google::cloud::cpp::compute::regionHealthChecks::v1::
          InsertRegionHealthChecksRequest const& request,
      Options opts = {});

  ///
  /// Retrieves the list of HealthCheck resources available to the specified
  /// project.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region scoping this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::HealthCheck,google/cloud/compute/v1/internal/common.proto#L7293}
  ///
  /// [google.cloud.cpp.compute.regionHealthChecks.v1.ListRegionHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/region_health_checks/v1/region_health_checks.proto#L156}
  /// [google.cloud.cpp.compute.v1.HealthCheck]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L7293}
  ///
  StreamRange<google::cloud::cpp::compute::v1::HealthCheck>
  ListRegionHealthChecks(std::string const& project, std::string const& region,
                         Options opts = {});

  ///
  /// Retrieves the list of HealthCheck resources available to the specified
  /// project.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::regionHealthChecks::v1::ListRegionHealthChecksRequest,google/cloud/compute/region_health_checks/v1/region_health_checks.proto#L156}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::HealthCheck,google/cloud/compute/v1/internal/common.proto#L7293}
  ///
  /// [google.cloud.cpp.compute.regionHealthChecks.v1.ListRegionHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/region_health_checks/v1/region_health_checks.proto#L156}
  /// [google.cloud.cpp.compute.v1.HealthCheck]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L7293}
  ///
  StreamRange<google::cloud::cpp::compute::v1::HealthCheck>
  ListRegionHealthChecks(google::cloud::cpp::compute::regionHealthChecks::v1::
                             ListRegionHealthChecksRequest request,
                         Options opts = {});

  ///
  /// Updates a HealthCheck resource in the specified project using the data
  /// included in the request. This method supports PATCH semantics and uses the
  /// JSON merge patch format and processing rules.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region scoping this request.
  /// @param health_check  Name of the HealthCheck resource to patch.
  /// @param health_check_resource  The HealthCheck for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.regionHealthChecks.v1.PatchRegionHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/region_health_checks/v1/region_health_checks.proto#L224}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> PatchRegionHealthChecks(
      std::string const& project, std::string const& region,
      std::string const& health_check,
      google::cloud::cpp::compute::v1::HealthCheck const& health_check_resource,
      Options opts = {});

  ///
  /// Updates a HealthCheck resource in the specified project using the data
  /// included in the request. This method supports PATCH semantics and uses the
  /// JSON merge patch format and processing rules.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::regionHealthChecks::v1::PatchRegionHealthChecksRequest,google/cloud/compute/region_health_checks/v1/region_health_checks.proto#L224}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.regionHealthChecks.v1.PatchRegionHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/region_health_checks/v1/region_health_checks.proto#L224}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> PatchRegionHealthChecks(
      google::cloud::cpp::compute::regionHealthChecks::v1::
          PatchRegionHealthChecksRequest const& request,
      Options opts = {});

  ///
  /// Updates a HealthCheck resource in the specified project using the data
  /// included in the request.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region scoping this request.
  /// @param health_check  Name of the HealthCheck resource to update.
  /// @param health_check_resource  The HealthCheck for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.regionHealthChecks.v1.UpdateRegionHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/region_health_checks/v1/region_health_checks.proto#L251}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> UpdateRegionHealthChecks(
      std::string const& project, std::string const& region,
      std::string const& health_check,
      google::cloud::cpp::compute::v1::HealthCheck const& health_check_resource,
      Options opts = {});

  ///
  /// Updates a HealthCheck resource in the specified project using the data
  /// included in the request.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::regionHealthChecks::v1::UpdateRegionHealthChecksRequest,google/cloud/compute/region_health_checks/v1/region_health_checks.proto#L251}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.regionHealthChecks.v1.UpdateRegionHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/region_health_checks/v1/region_health_checks.proto#L251}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> UpdateRegionHealthChecks(
      google::cloud::cpp::compute::regionHealthChecks::v1::
          UpdateRegionHealthChecksRequest const& request,
      Options opts = {});

 private:
  std::shared_ptr<RegionHealthChecksConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_region_health_checks_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_REGION_HEALTH_CHECKS_V1_REGION_HEALTH_CHECKS_CLIENT_H
