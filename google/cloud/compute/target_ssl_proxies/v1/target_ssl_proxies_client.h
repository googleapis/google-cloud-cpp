// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_TARGET_SSL_PROXIES_V1_TARGET_SSL_PROXIES_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_TARGET_SSL_PROXIES_V1_TARGET_SSL_PROXIES_CLIENT_H

#include "google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies_rest_connection.h"
#include "google/cloud/experimental_tag.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <memory>

namespace google {
namespace cloud {
namespace compute_target_ssl_proxies_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service for the targetSslProxies resource.
/// https://cloud.google.com/compute/docs/reference/rest/v1/targetSslProxies
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class TargetSslProxiesClient {
 public:
  explicit TargetSslProxiesClient(
      ExperimentalTag, std::shared_ptr<TargetSslProxiesConnection> connection,
      Options opts = {});
  ~TargetSslProxiesClient();

  ///@{
  /// @name Copy and move support
  TargetSslProxiesClient(TargetSslProxiesClient const&) = default;
  TargetSslProxiesClient& operator=(TargetSslProxiesClient const&) = default;
  TargetSslProxiesClient(TargetSslProxiesClient&&) = default;
  TargetSslProxiesClient& operator=(TargetSslProxiesClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(TargetSslProxiesClient const& a,
                         TargetSslProxiesClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(TargetSslProxiesClient const& a,
                         TargetSslProxiesClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Deletes the specified TargetSslProxy resource.
  ///
  /// @param project  Project ID for this request.
  /// @param target_ssl_proxy  Name of the TargetSslProxy resource to delete.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetSslProxies.v1.DeleteTargetSslProxiesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L140}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteTargetSslProxies(
      std::string const& project, std::string const& target_ssl_proxy,
      Options opts = {});

  ///
  /// Deletes the specified TargetSslProxy resource.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::targetSslProxies::v1::DeleteTargetSslProxiesRequest,google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L140}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetSslProxies.v1.DeleteTargetSslProxiesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L140}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteTargetSslProxies(
      google::cloud::cpp::compute::targetSslProxies::v1::
          DeleteTargetSslProxiesRequest const& request,
      Options opts = {});

  ///
  /// Returns the specified TargetSslProxy resource.
  ///
  /// @param project  Project ID for this request.
  /// @param target_ssl_proxy  Name of the TargetSslProxy resource to return.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::TargetSslProxy,google/cloud/compute/v1/internal/common.proto#L28021}
  ///
  /// [google.cloud.cpp.compute.targetSslProxies.v1.GetTargetSslProxiesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L164}
  /// [google.cloud.cpp.compute.v1.TargetSslProxy]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L28021}
  ///
  StatusOr<google::cloud::cpp::compute::v1::TargetSslProxy> GetTargetSslProxies(
      std::string const& project, std::string const& target_ssl_proxy,
      Options opts = {});

  ///
  /// Returns the specified TargetSslProxy resource.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::targetSslProxies::v1::GetTargetSslProxiesRequest,google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L164}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::TargetSslProxy,google/cloud/compute/v1/internal/common.proto#L28021}
  ///
  /// [google.cloud.cpp.compute.targetSslProxies.v1.GetTargetSslProxiesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L164}
  /// [google.cloud.cpp.compute.v1.TargetSslProxy]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L28021}
  ///
  StatusOr<google::cloud::cpp::compute::v1::TargetSslProxy> GetTargetSslProxies(
      google::cloud::cpp::compute::targetSslProxies::v1::
          GetTargetSslProxiesRequest const& request,
      Options opts = {});

  ///
  /// Creates a TargetSslProxy resource in the specified project using the data
  /// included in the request.
  ///
  /// @param project  Project ID for this request.
  /// @param target_ssl_proxy_resource  The TargetSslProxy for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetSslProxies.v1.InsertTargetSslProxiesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L173}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> InsertTargetSslProxies(
      std::string const& project,
      google::cloud::cpp::compute::v1::TargetSslProxy const&
          target_ssl_proxy_resource,
      Options opts = {});

  ///
  /// Creates a TargetSslProxy resource in the specified project using the data
  /// included in the request.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::targetSslProxies::v1::InsertTargetSslProxiesRequest,google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L173}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetSslProxies.v1.InsertTargetSslProxiesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L173}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> InsertTargetSslProxies(
      google::cloud::cpp::compute::targetSslProxies::v1::
          InsertTargetSslProxiesRequest const& request,
      Options opts = {});

  ///
  /// Retrieves the list of TargetSslProxy resources available to the specified
  /// project.
  ///
  /// @param project  Project ID for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::TargetSslProxy,google/cloud/compute/v1/internal/common.proto#L28021}
  ///
  /// [google.cloud.cpp.compute.targetSslProxies.v1.ListTargetSslProxiesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L198}
  /// [google.cloud.cpp.compute.v1.TargetSslProxy]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L28021}
  ///
  StreamRange<google::cloud::cpp::compute::v1::TargetSslProxy>
  ListTargetSslProxies(std::string const& project, Options opts = {});

  ///
  /// Retrieves the list of TargetSslProxy resources available to the specified
  /// project.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::targetSslProxies::v1::ListTargetSslProxiesRequest,google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L198}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::TargetSslProxy,google/cloud/compute/v1/internal/common.proto#L28021}
  ///
  /// [google.cloud.cpp.compute.targetSslProxies.v1.ListTargetSslProxiesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L198}
  /// [google.cloud.cpp.compute.v1.TargetSslProxy]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L28021}
  ///
  StreamRange<google::cloud::cpp::compute::v1::TargetSslProxy>
  ListTargetSslProxies(google::cloud::cpp::compute::targetSslProxies::v1::
                           ListTargetSslProxiesRequest request,
                       Options opts = {});

  ///
  /// Changes the BackendService for TargetSslProxy.
  ///
  /// @param project  Project ID for this request.
  /// @param target_ssl_proxy  Name of the TargetSslProxy resource whose
  /// BackendService resource is to be
  ///  set.
  /// @param target_ssl_proxies_set_backend_service_request_resource  The
  /// TargetSslProxiesSetBackendServiceRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetSslProxies.v1.SetBackendServiceRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L263}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetBackendService(
      std::string const& project, std::string const& target_ssl_proxy,
      google::cloud::cpp::compute::v1::
          TargetSslProxiesSetBackendServiceRequest const&
              target_ssl_proxies_set_backend_service_request_resource,
      Options opts = {});

  ///
  /// Changes the BackendService for TargetSslProxy.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::targetSslProxies::v1::SetBackendServiceRequest,google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L263}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetSslProxies.v1.SetBackendServiceRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L263}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetBackendService(
      google::cloud::cpp::compute::targetSslProxies::v1::
          SetBackendServiceRequest const& request,
      Options opts = {});

  ///
  /// Changes the Certificate Map for TargetSslProxy.
  ///
  /// @param project  Project ID for this request.
  /// @param target_ssl_proxy  Name of the TargetSslProxy resource whose
  /// CertificateMap is to be set. The
  ///  name must be 1-63 characters long, and comply with RFC1035.
  /// @param target_ssl_proxies_set_certificate_map_request_resource  The
  /// TargetSslProxiesSetCertificateMapRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetSslProxies.v1.SetCertificateMapRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L292}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetCertificateMap(
      std::string const& project, std::string const& target_ssl_proxy,
      google::cloud::cpp::compute::v1::
          TargetSslProxiesSetCertificateMapRequest const&
              target_ssl_proxies_set_certificate_map_request_resource,
      Options opts = {});

  ///
  /// Changes the Certificate Map for TargetSslProxy.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::targetSslProxies::v1::SetCertificateMapRequest,google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L292}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetSslProxies.v1.SetCertificateMapRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L292}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetCertificateMap(
      google::cloud::cpp::compute::targetSslProxies::v1::
          SetCertificateMapRequest const& request,
      Options opts = {});

  ///
  /// Changes the ProxyHeaderType for TargetSslProxy.
  ///
  /// @param project  Project ID for this request.
  /// @param target_ssl_proxy  Name of the TargetSslProxy resource whose
  /// ProxyHeader is to be set.
  /// @param target_ssl_proxies_set_proxy_header_request_resource  The
  /// TargetSslProxiesSetProxyHeaderRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetSslProxies.v1.SetProxyHeaderRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L321}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetProxyHeader(
      std::string const& project, std::string const& target_ssl_proxy,
      google::cloud::cpp::compute::v1::
          TargetSslProxiesSetProxyHeaderRequest const&
              target_ssl_proxies_set_proxy_header_request_resource,
      Options opts = {});

  ///
  /// Changes the ProxyHeaderType for TargetSslProxy.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::targetSslProxies::v1::SetProxyHeaderRequest,google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L321}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetSslProxies.v1.SetProxyHeaderRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L321}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetProxyHeader(
      google::cloud::cpp::compute::targetSslProxies::v1::
          SetProxyHeaderRequest const& request,
      Options opts = {});

  ///
  /// Changes SslCertificates for TargetSslProxy.
  ///
  /// @param project  Project ID for this request.
  /// @param target_ssl_proxy  Name of the TargetSslProxy resource whose
  /// SslCertificate resource is to be
  ///  set.
  /// @param target_ssl_proxies_set_ssl_certificates_request_resource  The
  /// TargetSslProxiesSetSslCertificatesRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetSslProxies.v1.SetSslCertificatesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L349}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetSslCertificates(
      std::string const& project, std::string const& target_ssl_proxy,
      google::cloud::cpp::compute::v1::
          TargetSslProxiesSetSslCertificatesRequest const&
              target_ssl_proxies_set_ssl_certificates_request_resource,
      Options opts = {});

  ///
  /// Changes SslCertificates for TargetSslProxy.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::targetSslProxies::v1::SetSslCertificatesRequest,google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L349}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetSslProxies.v1.SetSslCertificatesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L349}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetSslCertificates(
      google::cloud::cpp::compute::targetSslProxies::v1::
          SetSslCertificatesRequest const& request,
      Options opts = {});

  ///
  /// Sets the SSL policy for TargetSslProxy. The SSL policy specifies the
  /// server-side support for SSL features. This affects connections between
  /// clients and the SSL proxy load balancer. They do not affect the connection
  /// between the load balancer and the backends.
  ///
  /// @param project  Project ID for this request.
  /// @param target_ssl_proxy  Name of the TargetSslProxy resource whose SSL
  /// policy is to be set. The name
  ///  must be 1-63 characters long, and comply with RFC1035.
  /// @param ssl_policy_reference_resource  The SslPolicyReference for this
  /// request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetSslProxies.v1.SetSslPolicyRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L378}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetSslPolicy(
      std::string const& project, std::string const& target_ssl_proxy,
      google::cloud::cpp::compute::v1::SslPolicyReference const&
          ssl_policy_reference_resource,
      Options opts = {});

  ///
  /// Sets the SSL policy for TargetSslProxy. The SSL policy specifies the
  /// server-side support for SSL features. This affects connections between
  /// clients and the SSL proxy load balancer. They do not affect the connection
  /// between the load balancer and the backends.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::targetSslProxies::v1::SetSslPolicyRequest,google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L378}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetSslProxies.v1.SetSslPolicyRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_ssl_proxies/v1/target_ssl_proxies.proto#L378}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetSslPolicy(
      google::cloud::cpp::compute::targetSslProxies::v1::
          SetSslPolicyRequest const& request,
      Options opts = {});

 private:
  std::shared_ptr<TargetSslProxiesConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_target_ssl_proxies_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_TARGET_SSL_PROXIES_V1_TARGET_SSL_PROXIES_CLIENT_H
