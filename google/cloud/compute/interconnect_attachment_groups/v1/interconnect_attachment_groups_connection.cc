// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source:
// google/cloud/compute/interconnect_attachment_groups/v1/interconnect_attachment_groups.proto

#include "google/cloud/compute/interconnect_attachment_groups/v1/interconnect_attachment_groups_connection.h"
#include "google/cloud/compute/interconnect_attachment_groups/v1/interconnect_attachment_groups_options.h"
#include "google/cloud/compute/interconnect_attachment_groups/v1/internal/interconnect_attachment_groups_option_defaults.h"
#include "google/cloud/compute/interconnect_attachment_groups/v1/internal/interconnect_attachment_groups_tracing_connection.h"
#include "google/cloud/background_threads.h"
#include "google/cloud/common_options.h"
#include "google/cloud/credentials.h"
#include "google/cloud/grpc_options.h"
#include "google/cloud/internal/pagination_range.h"
#include "google/cloud/internal/unified_grpc_credentials.h"
#include <memory>
#include <utility>

namespace google {
namespace cloud {
namespace compute_interconnect_attachment_groups_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

InterconnectAttachmentGroupsConnection::
    ~InterconnectAttachmentGroupsConnection() = default;

future<StatusOr<google::cloud::cpp::compute::v1::Operation>>
InterconnectAttachmentGroupsConnection::DeleteInterconnectAttachmentGroup(
    google::cloud::cpp::compute::interconnect_attachment_groups::v1::
        DeleteInterconnectAttachmentGroupRequest const&) {
  return google::cloud::make_ready_future<
      StatusOr<google::cloud::cpp::compute::v1::Operation>>(
      Status(StatusCode::kUnimplemented, "not implemented"));
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InterconnectAttachmentGroupsConnection::DeleteInterconnectAttachmentGroup(
    NoAwaitTag, google::cloud::cpp::compute::interconnect_attachment_groups::
                    v1::DeleteInterconnectAttachmentGroupRequest const&) {
  return StatusOr<google::cloud::cpp::compute::v1::Operation>(
      Status(StatusCode::kUnimplemented, "not implemented"));
}

future<StatusOr<google::cloud::cpp::compute::v1::Operation>>
InterconnectAttachmentGroupsConnection::DeleteInterconnectAttachmentGroup(
    google::cloud::cpp::compute::v1::Operation const&) {
  return google::cloud::make_ready_future<
      StatusOr<google::cloud::cpp::compute::v1::Operation>>(
      Status(StatusCode::kUnimplemented, "not implemented"));
}

StatusOr<google::cloud::cpp::compute::v1::InterconnectAttachmentGroup>
InterconnectAttachmentGroupsConnection::GetInterconnectAttachmentGroup(
    google::cloud::cpp::compute::interconnect_attachment_groups::v1::
        GetInterconnectAttachmentGroupRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::cpp::compute::v1::Policy>
InterconnectAttachmentGroupsConnection::GetIamPolicy(
    google::cloud::cpp::compute::interconnect_attachment_groups::v1::
        GetIamPolicyRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::cpp::compute::v1::
             InterconnectAttachmentGroupsGetOperationalStatusResponse>
InterconnectAttachmentGroupsConnection::GetOperationalStatus(
    google::cloud::cpp::compute::interconnect_attachment_groups::v1::
        GetOperationalStatusRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

future<StatusOr<google::cloud::cpp::compute::v1::Operation>>
InterconnectAttachmentGroupsConnection::InsertInterconnectAttachmentGroup(
    google::cloud::cpp::compute::interconnect_attachment_groups::v1::
        InsertInterconnectAttachmentGroupRequest const&) {
  return google::cloud::make_ready_future<
      StatusOr<google::cloud::cpp::compute::v1::Operation>>(
      Status(StatusCode::kUnimplemented, "not implemented"));
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InterconnectAttachmentGroupsConnection::InsertInterconnectAttachmentGroup(
    NoAwaitTag, google::cloud::cpp::compute::interconnect_attachment_groups::
                    v1::InsertInterconnectAttachmentGroupRequest const&) {
  return StatusOr<google::cloud::cpp::compute::v1::Operation>(
      Status(StatusCode::kUnimplemented, "not implemented"));
}

future<StatusOr<google::cloud::cpp::compute::v1::Operation>>
InterconnectAttachmentGroupsConnection::InsertInterconnectAttachmentGroup(
    google::cloud::cpp::compute::v1::Operation const&) {
  return google::cloud::make_ready_future<
      StatusOr<google::cloud::cpp::compute::v1::Operation>>(
      Status(StatusCode::kUnimplemented, "not implemented"));
}

StreamRange<google::cloud::cpp::compute::v1::InterconnectAttachmentGroup>
InterconnectAttachmentGroupsConnection::ListInterconnectAttachmentGroups(
    google::cloud::cpp::compute::interconnect_attachment_groups::v1::
        ListInterconnectAttachmentGroupsRequest) {  // NOLINT(performance-unnecessary-value-param)
  return google::cloud::internal::MakeUnimplementedPaginationRange<StreamRange<
      google::cloud::cpp::compute::v1::InterconnectAttachmentGroup>>();
}

future<StatusOr<google::cloud::cpp::compute::v1::Operation>>
InterconnectAttachmentGroupsConnection::PatchInterconnectAttachmentGroup(
    google::cloud::cpp::compute::interconnect_attachment_groups::v1::
        PatchInterconnectAttachmentGroupRequest const&) {
  return google::cloud::make_ready_future<
      StatusOr<google::cloud::cpp::compute::v1::Operation>>(
      Status(StatusCode::kUnimplemented, "not implemented"));
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
InterconnectAttachmentGroupsConnection::PatchInterconnectAttachmentGroup(
    NoAwaitTag, google::cloud::cpp::compute::interconnect_attachment_groups::
                    v1::PatchInterconnectAttachmentGroupRequest const&) {
  return StatusOr<google::cloud::cpp::compute::v1::Operation>(
      Status(StatusCode::kUnimplemented, "not implemented"));
}

future<StatusOr<google::cloud::cpp::compute::v1::Operation>>
InterconnectAttachmentGroupsConnection::PatchInterconnectAttachmentGroup(
    google::cloud::cpp::compute::v1::Operation const&) {
  return google::cloud::make_ready_future<
      StatusOr<google::cloud::cpp::compute::v1::Operation>>(
      Status(StatusCode::kUnimplemented, "not implemented"));
}

StatusOr<google::cloud::cpp::compute::v1::Policy>
InterconnectAttachmentGroupsConnection::SetIamPolicy(
    google::cloud::cpp::compute::interconnect_attachment_groups::v1::
        SetIamPolicyRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::cpp::compute::v1::TestPermissionsResponse>
InterconnectAttachmentGroupsConnection::TestIamPermissions(
    google::cloud::cpp::compute::interconnect_attachment_groups::v1::
        TestIamPermissionsRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_interconnect_attachment_groups_v1
}  // namespace cloud
}  // namespace google
