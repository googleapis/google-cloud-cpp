// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source:
// google/cloud/compute/interconnect_attachment_groups/v1/interconnect_attachment_groups.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_INTERCONNECT_ATTACHMENT_GROUPS_V1_INTERNAL_INTERCONNECT_ATTACHMENT_GROUPS_REST_LOGGING_DECORATOR_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_INTERCONNECT_ATTACHMENT_GROUPS_V1_INTERNAL_INTERCONNECT_ATTACHMENT_GROUPS_REST_LOGGING_DECORATOR_H

#include "google/cloud/compute/interconnect_attachment_groups/v1/internal/interconnect_attachment_groups_rest_stub.h"
#include "google/cloud/future.h"
#include "google/cloud/internal/rest_context.h"
#include "google/cloud/tracing_options.h"
#include "google/cloud/version.h"
#include <google/cloud/compute/global_operations/v1/global_operations.pb.h>
#include <google/cloud/compute/interconnect_attachment_groups/v1/interconnect_attachment_groups.pb.h>
#include <memory>
#include <set>
#include <string>

namespace google {
namespace cloud {
namespace compute_interconnect_attachment_groups_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

class InterconnectAttachmentGroupsRestLogging
    : public InterconnectAttachmentGroupsRestStub {
 public:
  ~InterconnectAttachmentGroupsRestLogging() override = default;
  InterconnectAttachmentGroupsRestLogging(
      std::shared_ptr<InterconnectAttachmentGroupsRestStub> child,
      TracingOptions tracing_options, std::set<std::string> components);

  future<StatusOr<google::cloud::cpp::compute::v1::Operation>>
  AsyncDeleteInterconnectAttachmentGroup(
      google::cloud::CompletionQueue& cq,
      std::unique_ptr<google::cloud::rest_internal::RestContext> rest_context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          DeleteInterconnectAttachmentGroupRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation>
  DeleteInterconnectAttachmentGroup(
      google::cloud::rest_internal::RestContext& rest_context,
      Options const& options,
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          DeleteInterconnectAttachmentGroupRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::InterconnectAttachmentGroup>
  GetInterconnectAttachmentGroup(
      google::cloud::rest_internal::RestContext& rest_context,
      Options const& options,
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          GetInterconnectAttachmentGroupRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Policy> GetIamPolicy(
      google::cloud::rest_internal::RestContext& rest_context,
      Options const& options,
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          GetIamPolicyRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::
               InterconnectAttachmentGroupsGetOperationalStatusResponse>
  GetOperationalStatus(
      google::cloud::rest_internal::RestContext& rest_context,
      Options const& options,
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          GetOperationalStatusRequest const& request) override;

  future<StatusOr<google::cloud::cpp::compute::v1::Operation>>
  AsyncInsertInterconnectAttachmentGroup(
      google::cloud::CompletionQueue& cq,
      std::unique_ptr<google::cloud::rest_internal::RestContext> rest_context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          InsertInterconnectAttachmentGroupRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation>
  InsertInterconnectAttachmentGroup(
      google::cloud::rest_internal::RestContext& rest_context,
      Options const& options,
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          InsertInterconnectAttachmentGroupRequest const& request) override;

  StatusOr<
      google::cloud::cpp::compute::v1::InterconnectAttachmentGroupsListResponse>
  ListInterconnectAttachmentGroups(
      google::cloud::rest_internal::RestContext& rest_context,
      Options const& options,
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          ListInterconnectAttachmentGroupsRequest const& request) override;

  future<StatusOr<google::cloud::cpp::compute::v1::Operation>>
  AsyncPatchInterconnectAttachmentGroup(
      google::cloud::CompletionQueue& cq,
      std::unique_ptr<google::cloud::rest_internal::RestContext> rest_context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          PatchInterconnectAttachmentGroupRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation>
  PatchInterconnectAttachmentGroup(
      google::cloud::rest_internal::RestContext& rest_context,
      Options const& options,
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          PatchInterconnectAttachmentGroupRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Policy> SetIamPolicy(
      google::cloud::rest_internal::RestContext& rest_context,
      Options const& options,
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          SetIamPolicyRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::TestPermissionsResponse>
  TestIamPermissions(
      google::cloud::rest_internal::RestContext& rest_context,
      Options const& options,
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          TestIamPermissionsRequest const& request) override;

  future<StatusOr<google::cloud::cpp::compute::v1::Operation>>
  AsyncGetOperation(
      google::cloud::CompletionQueue& cq,
      std::unique_ptr<google::cloud::rest_internal::RestContext> rest_context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::cpp::compute::global_operations::v1::
          GetOperationRequest const& request) override;

  future<Status> AsyncCancelOperation(
      google::cloud::CompletionQueue& cq,
      std::unique_ptr<google::cloud::rest_internal::RestContext> rest_context,
      google::cloud::internal::ImmutableOptions options,
      google::cloud::cpp::compute::global_operations::v1::
          DeleteOperationRequest const& request) override;

 private:
  std::shared_ptr<InterconnectAttachmentGroupsRestStub> child_;
  TracingOptions tracing_options_;
  std::set<std::string> components_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_interconnect_attachment_groups_v1_internal
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_INTERCONNECT_ATTACHMENT_GROUPS_V1_INTERNAL_INTERCONNECT_ATTACHMENT_GROUPS_REST_LOGGING_DECORATOR_H
