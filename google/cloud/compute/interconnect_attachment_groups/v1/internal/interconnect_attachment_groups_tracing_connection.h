// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source:
// google/cloud/compute/interconnect_attachment_groups/v1/interconnect_attachment_groups.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_INTERCONNECT_ATTACHMENT_GROUPS_V1_INTERNAL_INTERCONNECT_ATTACHMENT_GROUPS_TRACING_CONNECTION_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_INTERCONNECT_ATTACHMENT_GROUPS_V1_INTERNAL_INTERCONNECT_ATTACHMENT_GROUPS_TRACING_CONNECTION_H

#include "google/cloud/compute/interconnect_attachment_groups/v1/interconnect_attachment_groups_connection.h"
#include "google/cloud/version.h"
#include <memory>

namespace google {
namespace cloud {
namespace compute_interconnect_attachment_groups_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

#ifdef GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

class InterconnectAttachmentGroupsTracingConnection
    : public compute_interconnect_attachment_groups_v1::
          InterconnectAttachmentGroupsConnection {
 public:
  ~InterconnectAttachmentGroupsTracingConnection() override = default;

  explicit InterconnectAttachmentGroupsTracingConnection(
      std::shared_ptr<compute_interconnect_attachment_groups_v1::
                          InterconnectAttachmentGroupsConnection>
          child);

  Options options() override { return child_->options(); }

  future<StatusOr<google::cloud::cpp::compute::v1::Operation>>
  DeleteInterconnectAttachmentGroup(
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          DeleteInterconnectAttachmentGroupRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation>
  DeleteInterconnectAttachmentGroup(
      NoAwaitTag,
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          DeleteInterconnectAttachmentGroupRequest const& request) override;

  future<StatusOr<google::cloud::cpp::compute::v1::Operation>>
  DeleteInterconnectAttachmentGroup(
      google::cloud::cpp::compute::v1::Operation const& operation) override;

  StatusOr<google::cloud::cpp::compute::v1::InterconnectAttachmentGroup>
  GetInterconnectAttachmentGroup(
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          GetInterconnectAttachmentGroupRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Policy> GetIamPolicy(
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          GetIamPolicyRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::
               InterconnectAttachmentGroupsGetOperationalStatusResponse>
  GetOperationalStatus(
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          GetOperationalStatusRequest const& request) override;

  future<StatusOr<google::cloud::cpp::compute::v1::Operation>>
  InsertInterconnectAttachmentGroup(
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          InsertInterconnectAttachmentGroupRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation>
  InsertInterconnectAttachmentGroup(
      NoAwaitTag,
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          InsertInterconnectAttachmentGroupRequest const& request) override;

  future<StatusOr<google::cloud::cpp::compute::v1::Operation>>
  InsertInterconnectAttachmentGroup(
      google::cloud::cpp::compute::v1::Operation const& operation) override;

  StreamRange<google::cloud::cpp::compute::v1::InterconnectAttachmentGroup>
  ListInterconnectAttachmentGroups(
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          ListInterconnectAttachmentGroupsRequest request) override;

  future<StatusOr<google::cloud::cpp::compute::v1::Operation>>
  PatchInterconnectAttachmentGroup(
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          PatchInterconnectAttachmentGroupRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation>
  PatchInterconnectAttachmentGroup(
      NoAwaitTag,
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          PatchInterconnectAttachmentGroupRequest const& request) override;

  future<StatusOr<google::cloud::cpp::compute::v1::Operation>>
  PatchInterconnectAttachmentGroup(
      google::cloud::cpp::compute::v1::Operation const& operation) override;

  StatusOr<google::cloud::cpp::compute::v1::Policy> SetIamPolicy(
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          SetIamPolicyRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::TestPermissionsResponse>
  TestIamPermissions(
      google::cloud::cpp::compute::interconnect_attachment_groups::v1::
          TestIamPermissionsRequest const& request) override;

 private:
  std::shared_ptr<compute_interconnect_attachment_groups_v1::
                      InterconnectAttachmentGroupsConnection>
      child_;
};

#endif  // GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

/**
 * Conditionally applies the tracing decorator to the given connection.
 *
 * The connection is only decorated if tracing is enabled (as determined by the
 * connection's options).
 */
std::shared_ptr<compute_interconnect_attachment_groups_v1::
                    InterconnectAttachmentGroupsConnection>
MakeInterconnectAttachmentGroupsTracingConnection(
    std::shared_ptr<compute_interconnect_attachment_groups_v1::
                        InterconnectAttachmentGroupsConnection>
        conn);

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_interconnect_attachment_groups_v1_internal
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_INTERCONNECT_ATTACHMENT_GROUPS_V1_INTERNAL_INTERCONNECT_ATTACHMENT_GROUPS_TRACING_CONNECTION_H
