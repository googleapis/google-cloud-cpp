// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/compute/packet_mirrorings/v1/packet_mirrorings.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_PACKET_MIRRORINGS_V1_PACKET_MIRRORINGS_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_PACKET_MIRRORINGS_V1_PACKET_MIRRORINGS_CLIENT_H

#include "google/cloud/compute/packet_mirrorings/v1/packet_mirrorings_rest_connection.h"
#include "google/cloud/experimental_tag.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace compute_packet_mirrorings_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service for the packetMirrorings resource.
/// https://cloud.google.com/compute/docs/reference/rest/v1/packetMirrorings
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class PacketMirroringsClient {
 public:
  explicit PacketMirroringsClient(
      ExperimentalTag, std::shared_ptr<PacketMirroringsConnection> connection,
      Options opts = {});
  ~PacketMirroringsClient();

  ///@{
  /// @name Copy and move support
  PacketMirroringsClient(PacketMirroringsClient const&) = default;
  PacketMirroringsClient& operator=(PacketMirroringsClient const&) = default;
  PacketMirroringsClient(PacketMirroringsClient&&) = default;
  PacketMirroringsClient& operator=(PacketMirroringsClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(PacketMirroringsClient const& a,
                         PacketMirroringsClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(PacketMirroringsClient const& a,
                         PacketMirroringsClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Retrieves an aggregated list of packetMirrorings.
  ///
  /// @param project  Project ID for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::PacketMirroringAggregatedList,google/cloud/compute/v1/internal/common.proto#L18107}
  ///
  /// [google.cloud.cpp.compute.packetMirrorings.v1.AggregatedListPacketMirroringsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/packet_mirrorings/v1/packet_mirrorings.proto#L102}
  /// [google.cloud.cpp.compute.v1.PacketMirroringAggregatedList]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L18107}
  ///
  StatusOr<google::cloud::cpp::compute::v1::PacketMirroringAggregatedList>
  AggregatedListPacketMirrorings(std::string const& project, Options opts = {});

  ///
  /// Retrieves an aggregated list of packetMirrorings.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::packetMirrorings::v1::AggregatedListPacketMirroringsRequest,google/cloud/compute/packet_mirrorings/v1/packet_mirrorings.proto#L102}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::PacketMirroringAggregatedList,google/cloud/compute/v1/internal/common.proto#L18107}
  ///
  /// [google.cloud.cpp.compute.packetMirrorings.v1.AggregatedListPacketMirroringsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/packet_mirrorings/v1/packet_mirrorings.proto#L102}
  /// [google.cloud.cpp.compute.v1.PacketMirroringAggregatedList]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L18107}
  ///
  StatusOr<google::cloud::cpp::compute::v1::PacketMirroringAggregatedList>
  AggregatedListPacketMirrorings(
      google::cloud::cpp::compute::packetMirrorings::v1::
          AggregatedListPacketMirroringsRequest const& request,
      Options opts = {});

  ///
  /// Deletes the specified PacketMirroring resource.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region for this request.
  /// @param packet_mirroring  Name of the PacketMirroring resource to delete.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.packetMirrorings.v1.DeletePacketMirroringsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/packet_mirrorings/v1/packet_mirrorings.proto#L176}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> DeletePacketMirrorings(
      std::string const& project, std::string const& region,
      std::string const& packet_mirroring, Options opts = {});

  ///
  /// Deletes the specified PacketMirroring resource.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::packetMirrorings::v1::DeletePacketMirroringsRequest,google/cloud/compute/packet_mirrorings/v1/packet_mirrorings.proto#L176}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.packetMirrorings.v1.DeletePacketMirroringsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/packet_mirrorings/v1/packet_mirrorings.proto#L176}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> DeletePacketMirrorings(
      google::cloud::cpp::compute::packetMirrorings::v1::
          DeletePacketMirroringsRequest const& request,
      Options opts = {});

  ///
  /// Returns the specified PacketMirroring resource.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region for this request.
  /// @param packet_mirroring  Name of the PacketMirroring resource to return.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::PacketMirroring,google/cloud/compute/v1/internal/common.proto#L18043}
  ///
  /// [google.cloud.cpp.compute.packetMirrorings.v1.GetPacketMirroringsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/packet_mirrorings/v1/packet_mirrorings.proto#L200}
  /// [google.cloud.cpp.compute.v1.PacketMirroring]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L18043}
  ///
  StatusOr<google::cloud::cpp::compute::v1::PacketMirroring>
  GetPacketMirrorings(std::string const& project, std::string const& region,
                      std::string const& packet_mirroring, Options opts = {});

  ///
  /// Returns the specified PacketMirroring resource.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::packetMirrorings::v1::GetPacketMirroringsRequest,google/cloud/compute/packet_mirrorings/v1/packet_mirrorings.proto#L200}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::PacketMirroring,google/cloud/compute/v1/internal/common.proto#L18043}
  ///
  /// [google.cloud.cpp.compute.packetMirrorings.v1.GetPacketMirroringsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/packet_mirrorings/v1/packet_mirrorings.proto#L200}
  /// [google.cloud.cpp.compute.v1.PacketMirroring]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L18043}
  ///
  StatusOr<google::cloud::cpp::compute::v1::PacketMirroring>
  GetPacketMirrorings(google::cloud::cpp::compute::packetMirrorings::v1::
                          GetPacketMirroringsRequest const& request,
                      Options opts = {});

  ///
  /// Creates a PacketMirroring resource in the specified project and region
  /// using the data included in the request.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region for this request.
  /// @param packet_mirroring_resource  The PacketMirroring for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.packetMirrorings.v1.InsertPacketMirroringsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/packet_mirrorings/v1/packet_mirrorings.proto#L212}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> InsertPacketMirrorings(
      std::string const& project, std::string const& region,
      google::cloud::cpp::compute::v1::PacketMirroring const&
          packet_mirroring_resource,
      Options opts = {});

  ///
  /// Creates a PacketMirroring resource in the specified project and region
  /// using the data included in the request.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::packetMirrorings::v1::InsertPacketMirroringsRequest,google/cloud/compute/packet_mirrorings/v1/packet_mirrorings.proto#L212}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.packetMirrorings.v1.InsertPacketMirroringsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/packet_mirrorings/v1/packet_mirrorings.proto#L212}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> InsertPacketMirrorings(
      google::cloud::cpp::compute::packetMirrorings::v1::
          InsertPacketMirroringsRequest const& request,
      Options opts = {});

  ///
  /// Retrieves a list of PacketMirroring resources available to the specified
  /// project and region.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::PacketMirroring,google/cloud/compute/v1/internal/common.proto#L18043}
  ///
  /// [google.cloud.cpp.compute.packetMirrorings.v1.ListPacketMirroringsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/packet_mirrorings/v1/packet_mirrorings.proto#L236}
  /// [google.cloud.cpp.compute.v1.PacketMirroring]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L18043}
  ///
  StreamRange<google::cloud::cpp::compute::v1::PacketMirroring>
  ListPacketMirrorings(std::string const& project, std::string const& region,
                       Options opts = {});

  ///
  /// Retrieves a list of PacketMirroring resources available to the specified
  /// project and region.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::packetMirrorings::v1::ListPacketMirroringsRequest,google/cloud/compute/packet_mirrorings/v1/packet_mirrorings.proto#L236}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::PacketMirroring,google/cloud/compute/v1/internal/common.proto#L18043}
  ///
  /// [google.cloud.cpp.compute.packetMirrorings.v1.ListPacketMirroringsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/packet_mirrorings/v1/packet_mirrorings.proto#L236}
  /// [google.cloud.cpp.compute.v1.PacketMirroring]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L18043}
  ///
  StreamRange<google::cloud::cpp::compute::v1::PacketMirroring>
  ListPacketMirrorings(google::cloud::cpp::compute::packetMirrorings::v1::
                           ListPacketMirroringsRequest request,
                       Options opts = {});

  ///
  /// Patches the specified PacketMirroring resource with the data included in
  /// the request. This method supports PATCH semantics and uses JSON merge
  /// patch format and processing rules.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region for this request.
  /// @param packet_mirroring  Name of the PacketMirroring resource to patch.
  /// @param packet_mirroring_resource  The PacketMirroring for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.packetMirrorings.v1.PatchPacketMirroringsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/packet_mirrorings/v1/packet_mirrorings.proto#L304}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> PatchPacketMirrorings(
      std::string const& project, std::string const& region,
      std::string const& packet_mirroring,
      google::cloud::cpp::compute::v1::PacketMirroring const&
          packet_mirroring_resource,
      Options opts = {});

  ///
  /// Patches the specified PacketMirroring resource with the data included in
  /// the request. This method supports PATCH semantics and uses JSON merge
  /// patch format and processing rules.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::packetMirrorings::v1::PatchPacketMirroringsRequest,google/cloud/compute/packet_mirrorings/v1/packet_mirrorings.proto#L304}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.packetMirrorings.v1.PatchPacketMirroringsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/packet_mirrorings/v1/packet_mirrorings.proto#L304}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> PatchPacketMirrorings(
      google::cloud::cpp::compute::packetMirrorings::v1::
          PatchPacketMirroringsRequest const& request,
      Options opts = {});

  ///
  /// Returns permissions that a caller has on the specified resource.
  ///
  /// @param project  Project ID for this request.
  /// @param region  The name of the region for this request.
  /// @param resource  Name or id of the resource for this request.
  /// @param test_permissions_request_resource  The TestPermissionsRequest for
  /// this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::TestPermissionsResponse,google/cloud/compute/v1/internal/common.proto#L28901}
  ///
  /// [google.cloud.cpp.compute.packetMirrorings.v1.TestIamPermissionsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/packet_mirrorings/v1/packet_mirrorings.proto#L331}
  /// [google.cloud.cpp.compute.v1.TestPermissionsResponse]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L28901}
  ///
  StatusOr<google::cloud::cpp::compute::v1::TestPermissionsResponse>
  TestIamPermissions(
      std::string const& project, std::string const& region,
      std::string const& resource,
      google::cloud::cpp::compute::v1::TestPermissionsRequest const&
          test_permissions_request_resource,
      Options opts = {});

  ///
  /// Returns permissions that a caller has on the specified resource.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::packetMirrorings::v1::TestIamPermissionsRequest,google/cloud/compute/packet_mirrorings/v1/packet_mirrorings.proto#L331}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::TestPermissionsResponse,google/cloud/compute/v1/internal/common.proto#L28901}
  ///
  /// [google.cloud.cpp.compute.packetMirrorings.v1.TestIamPermissionsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/packet_mirrorings/v1/packet_mirrorings.proto#L331}
  /// [google.cloud.cpp.compute.v1.TestPermissionsResponse]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L28901}
  ///
  StatusOr<google::cloud::cpp::compute::v1::TestPermissionsResponse>
  TestIamPermissions(google::cloud::cpp::compute::packetMirrorings::v1::
                         TestIamPermissionsRequest const& request,
                     Options opts = {});

 private:
  std::shared_ptr<PacketMirroringsConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_packet_mirrorings_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_PACKET_MIRRORINGS_V1_PACKET_MIRRORINGS_CLIENT_H
