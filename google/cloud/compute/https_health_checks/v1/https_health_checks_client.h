// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/compute/https_health_checks/v1/https_health_checks.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_HTTPS_HEALTH_CHECKS_V1_HTTPS_HEALTH_CHECKS_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_HTTPS_HEALTH_CHECKS_V1_HTTPS_HEALTH_CHECKS_CLIENT_H

#include "google/cloud/compute/https_health_checks/v1/https_health_checks_rest_connection.h"
#include "google/cloud/experimental_tag.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <memory>

namespace google {
namespace cloud {
namespace compute_https_health_checks_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service for the httpsHealthChecks resource.
/// https://cloud.google.com/compute/docs/reference/rest/v1/httpsHealthChecks
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class HttpsHealthChecksClient {
 public:
  explicit HttpsHealthChecksClient(
      ExperimentalTag, std::shared_ptr<HttpsHealthChecksConnection> connection,
      Options opts = {});
  ~HttpsHealthChecksClient();

  ///@{
  /// @name Copy and move support
  HttpsHealthChecksClient(HttpsHealthChecksClient const&) = default;
  HttpsHealthChecksClient& operator=(HttpsHealthChecksClient const&) = default;
  HttpsHealthChecksClient(HttpsHealthChecksClient&&) = default;
  HttpsHealthChecksClient& operator=(HttpsHealthChecksClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(HttpsHealthChecksClient const& a,
                         HttpsHealthChecksClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(HttpsHealthChecksClient const& a,
                         HttpsHealthChecksClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Deletes the specified HttpsHealthCheck resource.
  ///
  /// @param project  Project ID for this request.
  /// @param https_health_check  Name of the HttpsHealthCheck resource to
  /// delete.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.httpsHealthChecks.v1.DeleteHttpsHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/https_health_checks/v1/https_health_checks.proto#L105}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteHttpsHealthChecks(
      std::string const& project, std::string const& https_health_check,
      Options opts = {});

  ///
  /// Deletes the specified HttpsHealthCheck resource.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::httpsHealthChecks::v1::DeleteHttpsHealthChecksRequest,google/cloud/compute/https_health_checks/v1/https_health_checks.proto#L105}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.httpsHealthChecks.v1.DeleteHttpsHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/https_health_checks/v1/https_health_checks.proto#L105}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteHttpsHealthChecks(
      google::cloud::cpp::compute::httpsHealthChecks::v1::
          DeleteHttpsHealthChecksRequest const& request,
      Options opts = {});

  ///
  /// Returns the specified HttpsHealthCheck resource.
  ///
  /// @param project  Project ID for this request.
  /// @param https_health_check  Name of the HttpsHealthCheck resource to
  /// return.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::HttpsHealthCheck,google/cloud/compute/v1/internal/common.proto#L8619}
  ///
  /// [google.cloud.cpp.compute.httpsHealthChecks.v1.GetHttpsHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/https_health_checks/v1/https_health_checks.proto#L129}
  /// [google.cloud.cpp.compute.v1.HttpsHealthCheck]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L8619}
  ///
  StatusOr<google::cloud::cpp::compute::v1::HttpsHealthCheck>
  GetHttpsHealthChecks(std::string const& project,
                       std::string const& https_health_check,
                       Options opts = {});

  ///
  /// Returns the specified HttpsHealthCheck resource.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::httpsHealthChecks::v1::GetHttpsHealthChecksRequest,google/cloud/compute/https_health_checks/v1/https_health_checks.proto#L129}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::HttpsHealthCheck,google/cloud/compute/v1/internal/common.proto#L8619}
  ///
  /// [google.cloud.cpp.compute.httpsHealthChecks.v1.GetHttpsHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/https_health_checks/v1/https_health_checks.proto#L129}
  /// [google.cloud.cpp.compute.v1.HttpsHealthCheck]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L8619}
  ///
  StatusOr<google::cloud::cpp::compute::v1::HttpsHealthCheck>
  GetHttpsHealthChecks(google::cloud::cpp::compute::httpsHealthChecks::v1::
                           GetHttpsHealthChecksRequest const& request,
                       Options opts = {});

  ///
  /// Creates a HttpsHealthCheck resource in the specified project using the
  /// data included in the request.
  ///
  /// @param project  Project ID for this request.
  /// @param https_health_check_resource  The HttpsHealthCheck for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.httpsHealthChecks.v1.InsertHttpsHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/https_health_checks/v1/https_health_checks.proto#L138}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> InsertHttpsHealthChecks(
      std::string const& project,
      google::cloud::cpp::compute::v1::HttpsHealthCheck const&
          https_health_check_resource,
      Options opts = {});

  ///
  /// Creates a HttpsHealthCheck resource in the specified project using the
  /// data included in the request.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::httpsHealthChecks::v1::InsertHttpsHealthChecksRequest,google/cloud/compute/https_health_checks/v1/https_health_checks.proto#L138}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.httpsHealthChecks.v1.InsertHttpsHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/https_health_checks/v1/https_health_checks.proto#L138}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> InsertHttpsHealthChecks(
      google::cloud::cpp::compute::httpsHealthChecks::v1::
          InsertHttpsHealthChecksRequest const& request,
      Options opts = {});

  ///
  /// Retrieves the list of HttpsHealthCheck resources available to the
  /// specified project.
  ///
  /// @param project  Project ID for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::HttpsHealthCheck,google/cloud/compute/v1/internal/common.proto#L8619}
  ///
  /// [google.cloud.cpp.compute.httpsHealthChecks.v1.ListHttpsHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/https_health_checks/v1/https_health_checks.proto#L163}
  /// [google.cloud.cpp.compute.v1.HttpsHealthCheck]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L8619}
  ///
  StreamRange<google::cloud::cpp::compute::v1::HttpsHealthCheck>
  ListHttpsHealthChecks(std::string const& project, Options opts = {});

  ///
  /// Retrieves the list of HttpsHealthCheck resources available to the
  /// specified project.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::httpsHealthChecks::v1::ListHttpsHealthChecksRequest,google/cloud/compute/https_health_checks/v1/https_health_checks.proto#L163}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::HttpsHealthCheck,google/cloud/compute/v1/internal/common.proto#L8619}
  ///
  /// [google.cloud.cpp.compute.httpsHealthChecks.v1.ListHttpsHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/https_health_checks/v1/https_health_checks.proto#L163}
  /// [google.cloud.cpp.compute.v1.HttpsHealthCheck]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L8619}
  ///
  StreamRange<google::cloud::cpp::compute::v1::HttpsHealthCheck>
  ListHttpsHealthChecks(google::cloud::cpp::compute::httpsHealthChecks::v1::
                            ListHttpsHealthChecksRequest request,
                        Options opts = {});

  ///
  /// Updates a HttpsHealthCheck resource in the specified project using the
  /// data included in the request. This method supports PATCH semantics and
  /// uses the JSON merge patch format and processing rules.
  ///
  /// @param project  Project ID for this request.
  /// @param https_health_check  Name of the HttpsHealthCheck resource to patch.
  /// @param https_health_check_resource  The HttpsHealthCheck for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.httpsHealthChecks.v1.PatchHttpsHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/https_health_checks/v1/https_health_checks.proto#L228}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> PatchHttpsHealthChecks(
      std::string const& project, std::string const& https_health_check,
      google::cloud::cpp::compute::v1::HttpsHealthCheck const&
          https_health_check_resource,
      Options opts = {});

  ///
  /// Updates a HttpsHealthCheck resource in the specified project using the
  /// data included in the request. This method supports PATCH semantics and
  /// uses the JSON merge patch format and processing rules.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::httpsHealthChecks::v1::PatchHttpsHealthChecksRequest,google/cloud/compute/https_health_checks/v1/https_health_checks.proto#L228}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.httpsHealthChecks.v1.PatchHttpsHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/https_health_checks/v1/https_health_checks.proto#L228}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> PatchHttpsHealthChecks(
      google::cloud::cpp::compute::httpsHealthChecks::v1::
          PatchHttpsHealthChecksRequest const& request,
      Options opts = {});

  ///
  /// Updates a HttpsHealthCheck resource in the specified project using the
  /// data included in the request.
  ///
  /// @param project  Project ID for this request.
  /// @param https_health_check  Name of the HttpsHealthCheck resource to
  /// update.
  /// @param https_health_check_resource  The HttpsHealthCheck for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.httpsHealthChecks.v1.UpdateHttpsHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/https_health_checks/v1/https_health_checks.proto#L256}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> UpdateHttpsHealthChecks(
      std::string const& project, std::string const& https_health_check,
      google::cloud::cpp::compute::v1::HttpsHealthCheck const&
          https_health_check_resource,
      Options opts = {});

  ///
  /// Updates a HttpsHealthCheck resource in the specified project using the
  /// data included in the request.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::httpsHealthChecks::v1::UpdateHttpsHealthChecksRequest,google/cloud/compute/https_health_checks/v1/https_health_checks.proto#L256}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.httpsHealthChecks.v1.UpdateHttpsHealthChecksRequest]:
  /// @googleapis_reference_link{google/cloud/compute/https_health_checks/v1/https_health_checks.proto#L256}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> UpdateHttpsHealthChecks(
      google::cloud::cpp::compute::httpsHealthChecks::v1::
          UpdateHttpsHealthChecksRequest const& request,
      Options opts = {});

 private:
  std::shared_ptr<HttpsHealthChecksConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_https_health_checks_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_HTTPS_HEALTH_CHECKS_V1_HTTPS_HEALTH_CHECKS_CLIENT_H
