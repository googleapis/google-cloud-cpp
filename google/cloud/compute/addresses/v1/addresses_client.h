// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/compute/addresses/v1/addresses.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_ADDRESSES_V1_ADDRESSES_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_ADDRESSES_V1_ADDRESSES_CLIENT_H

#include "google/cloud/compute/addresses/v1/addresses_rest_connection.h"
#include "google/cloud/experimental_tag.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace compute_addresses_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service for the addresses resource.
/// https://cloud.google.com/compute/docs/reference/rest/v1/addresses
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class AddressesClient {
 public:
  explicit AddressesClient(ExperimentalTag,
                           std::shared_ptr<AddressesConnection> connection,
                           Options opts = {});
  ~AddressesClient();

  ///@{
  /// @name Copy and move support
  AddressesClient(AddressesClient const&) = default;
  AddressesClient& operator=(AddressesClient const&) = default;
  AddressesClient(AddressesClient&&) = default;
  AddressesClient& operator=(AddressesClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(AddressesClient const& a, AddressesClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(AddressesClient const& a, AddressesClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Retrieves an aggregated list of addresses.
  ///
  /// @param project  Project ID for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::AddressAggregatedList,google/cloud/compute/v1/internal/common.proto#L569}
  ///
  /// [google.cloud.cpp.compute.addresses.v1.AggregatedListAddressesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/addresses/v1/addresses.proto#L91}
  /// [google.cloud.cpp.compute.v1.AddressAggregatedList]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L569}
  ///
  StatusOr<google::cloud::cpp::compute::v1::AddressAggregatedList>
  AggregatedListAddresses(std::string const& project, Options opts = {});

  ///
  /// Retrieves an aggregated list of addresses.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::addresses::v1::AggregatedListAddressesRequest,google/cloud/compute/addresses/v1/addresses.proto#L91}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::AddressAggregatedList,google/cloud/compute/v1/internal/common.proto#L569}
  ///
  /// [google.cloud.cpp.compute.addresses.v1.AggregatedListAddressesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/addresses/v1/addresses.proto#L91}
  /// [google.cloud.cpp.compute.v1.AddressAggregatedList]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L569}
  ///
  StatusOr<google::cloud::cpp::compute::v1::AddressAggregatedList>
  AggregatedListAddresses(google::cloud::cpp::compute::addresses::v1::
                              AggregatedListAddressesRequest const& request,
                          Options opts = {});

  ///
  /// Deletes the specified address resource.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region for this request.
  /// @param address  Name of the address resource to delete.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.addresses.v1.DeleteAddressesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/addresses/v1/addresses.proto#L165}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteAddresses(
      std::string const& project, std::string const& region,
      std::string const& address, Options opts = {});

  ///
  /// Deletes the specified address resource.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::addresses::v1::DeleteAddressesRequest,google/cloud/compute/addresses/v1/addresses.proto#L165}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.addresses.v1.DeleteAddressesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/addresses/v1/addresses.proto#L165}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteAddresses(
      google::cloud::cpp::compute::addresses::v1::DeleteAddressesRequest const&
          request,
      Options opts = {});

  ///
  /// Returns the specified address resource.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region for this request.
  /// @param address  Name of the address resource to return.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Address,google/cloud/compute/v1/internal/common.proto#L437}
  ///
  /// [google.cloud.cpp.compute.addresses.v1.GetAddressesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/addresses/v1/addresses.proto#L189}
  /// [google.cloud.cpp.compute.v1.Address]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L437}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Address> GetAddresses(
      std::string const& project, std::string const& region,
      std::string const& address, Options opts = {});

  ///
  /// Returns the specified address resource.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::addresses::v1::GetAddressesRequest,google/cloud/compute/addresses/v1/addresses.proto#L189}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Address,google/cloud/compute/v1/internal/common.proto#L437}
  ///
  /// [google.cloud.cpp.compute.addresses.v1.GetAddressesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/addresses/v1/addresses.proto#L189}
  /// [google.cloud.cpp.compute.v1.Address]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L437}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Address> GetAddresses(
      google::cloud::cpp::compute::addresses::v1::GetAddressesRequest const&
          request,
      Options opts = {});

  ///
  /// Creates an address resource in the specified project by using the data
  /// included in the request.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region for this request.
  /// @param address_resource  The Address for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.addresses.v1.InsertAddressesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/addresses/v1/addresses.proto#L201}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> InsertAddresses(
      std::string const& project, std::string const& region,
      google::cloud::cpp::compute::v1::Address const& address_resource,
      Options opts = {});

  ///
  /// Creates an address resource in the specified project by using the data
  /// included in the request.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::addresses::v1::InsertAddressesRequest,google/cloud/compute/addresses/v1/addresses.proto#L201}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.addresses.v1.InsertAddressesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/addresses/v1/addresses.proto#L201}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> InsertAddresses(
      google::cloud::cpp::compute::addresses::v1::InsertAddressesRequest const&
          request,
      Options opts = {});

  ///
  /// Retrieves a list of addresses contained within the specified region.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Address,google/cloud/compute/v1/internal/common.proto#L437}
  ///
  /// [google.cloud.cpp.compute.addresses.v1.ListAddressesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/addresses/v1/addresses.proto#L225}
  /// [google.cloud.cpp.compute.v1.Address]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L437}
  ///
  StreamRange<google::cloud::cpp::compute::v1::Address> ListAddresses(
      std::string const& project, std::string const& region, Options opts = {});

  ///
  /// Retrieves a list of addresses contained within the specified region.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::addresses::v1::ListAddressesRequest,google/cloud/compute/addresses/v1/addresses.proto#L225}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Address,google/cloud/compute/v1/internal/common.proto#L437}
  ///
  /// [google.cloud.cpp.compute.addresses.v1.ListAddressesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/addresses/v1/addresses.proto#L225}
  /// [google.cloud.cpp.compute.v1.Address]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L437}
  ///
  StreamRange<google::cloud::cpp::compute::v1::Address> ListAddresses(
      google::cloud::cpp::compute::addresses::v1::ListAddressesRequest request,
      Options opts = {});

  ///
  /// Sets the labels on an Address. To learn more about labels, read the
  /// Labeling Resources documentation.
  ///
  /// @param project  Project ID for this request.
  /// @param region  The region for this request.
  /// @param resource  Name or id of the resource for this request.
  /// @param region_set_labels_request_resource  The RegionSetLabelsRequest for
  /// this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.addresses.v1.SetLabelsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/addresses/v1/addresses.proto#L293}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetLabels(
      std::string const& project, std::string const& region,
      std::string const& resource,
      google::cloud::cpp::compute::v1::RegionSetLabelsRequest const&
          region_set_labels_request_resource,
      Options opts = {});

  ///
  /// Sets the labels on an Address. To learn more about labels, read the
  /// Labeling Resources documentation.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::addresses::v1::SetLabelsRequest,google/cloud/compute/addresses/v1/addresses.proto#L293}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.addresses.v1.SetLabelsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/addresses/v1/addresses.proto#L293}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetLabels(
      google::cloud::cpp::compute::addresses::v1::SetLabelsRequest const&
          request,
      Options opts = {});

 private:
  std::shared_ptr<AddressesConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_addresses_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_ADDRESSES_V1_ADDRESSES_CLIENT_H
