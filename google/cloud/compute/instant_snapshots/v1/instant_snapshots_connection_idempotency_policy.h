// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/compute/instant_snapshots/v1/instant_snapshots.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_INSTANT_SNAPSHOTS_V1_INSTANT_SNAPSHOTS_CONNECTION_IDEMPOTENCY_POLICY_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_INSTANT_SNAPSHOTS_V1_INSTANT_SNAPSHOTS_CONNECTION_IDEMPOTENCY_POLICY_H

#include "google/cloud/idempotency.h"
#include "google/cloud/version.h"
#include <google/cloud/compute/instant_snapshots/v1/instant_snapshots.pb.h>
#include <memory>

namespace google {
namespace cloud {
namespace compute_instant_snapshots_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

class InstantSnapshotsConnectionIdempotencyPolicy {
 public:
  virtual ~InstantSnapshotsConnectionIdempotencyPolicy();

  /// Create a new copy of this object.
  virtual std::unique_ptr<InstantSnapshotsConnectionIdempotencyPolicy> clone()
      const;

  virtual google::cloud::Idempotency AggregatedListInstantSnapshots(
      google::cloud::cpp::compute::instant_snapshots::v1::
          AggregatedListInstantSnapshotsRequest request);

  virtual google::cloud::Idempotency DeleteInstantSnapshot(
      google::cloud::cpp::compute::instant_snapshots::v1::
          DeleteInstantSnapshotRequest const& request);

  virtual google::cloud::Idempotency GetInstantSnapshot(
      google::cloud::cpp::compute::instant_snapshots::v1::
          GetInstantSnapshotRequest const& request);

  virtual google::cloud::Idempotency GetIamPolicy(
      google::cloud::cpp::compute::instant_snapshots::v1::
          GetIamPolicyRequest const& request);

  virtual google::cloud::Idempotency InsertInstantSnapshot(
      google::cloud::cpp::compute::instant_snapshots::v1::
          InsertInstantSnapshotRequest const& request);

  virtual google::cloud::Idempotency ListInstantSnapshots(
      google::cloud::cpp::compute::instant_snapshots::v1::
          ListInstantSnapshotsRequest request);

  virtual google::cloud::Idempotency SetIamPolicy(
      google::cloud::cpp::compute::instant_snapshots::v1::
          SetIamPolicyRequest const& request);

  virtual google::cloud::Idempotency SetLabels(
      google::cloud::cpp::compute::instant_snapshots::v1::
          SetLabelsRequest const& request);

  virtual google::cloud::Idempotency TestIamPermissions(
      google::cloud::cpp::compute::instant_snapshots::v1::
          TestIamPermissionsRequest const& request);
};

std::unique_ptr<InstantSnapshotsConnectionIdempotencyPolicy>
MakeDefaultInstantSnapshotsConnectionIdempotencyPolicy();

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_instant_snapshots_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_INSTANT_SNAPSHOTS_V1_INSTANT_SNAPSHOTS_CONNECTION_IDEMPOTENCY_POLICY_H
