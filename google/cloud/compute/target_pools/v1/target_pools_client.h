// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/compute/target_pools/v1/target_pools.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_TARGET_POOLS_V1_TARGET_POOLS_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_TARGET_POOLS_V1_TARGET_POOLS_CLIENT_H

#include "google/cloud/compute/target_pools/v1/target_pools_rest_connection.h"
#include "google/cloud/experimental_tag.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace compute_target_pools_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service for the targetPools resource.
/// https://cloud.google.com/compute/docs/reference/rest/v1/targetPools
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class TargetPoolsClient {
 public:
  explicit TargetPoolsClient(ExperimentalTag,
                             std::shared_ptr<TargetPoolsConnection> connection,
                             Options opts = {});
  ~TargetPoolsClient();

  ///@{
  /// @name Copy and move support
  TargetPoolsClient(TargetPoolsClient const&) = default;
  TargetPoolsClient& operator=(TargetPoolsClient const&) = default;
  TargetPoolsClient(TargetPoolsClient&&) = default;
  TargetPoolsClient& operator=(TargetPoolsClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(TargetPoolsClient const& a,
                         TargetPoolsClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(TargetPoolsClient const& a,
                         TargetPoolsClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Adds health check URLs to a target pool.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region scoping this request.
  /// @param target_pool  Name of the target pool to add a health check to.
  /// @param target_pools_add_health_check_request_resource  The
  /// TargetPoolsAddHealthCheckRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetPools.v1.AddHealthCheckRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_pools/v1/target_pools.proto#L159}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> AddHealthCheck(
      std::string const& project, std::string const& region,
      std::string const& target_pool,
      google::cloud::cpp::compute::v1::TargetPoolsAddHealthCheckRequest const&
          target_pools_add_health_check_request_resource,
      Options opts = {});

  ///
  /// Adds health check URLs to a target pool.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::targetPools::v1::AddHealthCheckRequest,google/cloud/compute/target_pools/v1/target_pools.proto#L159}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetPools.v1.AddHealthCheckRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_pools/v1/target_pools.proto#L159}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> AddHealthCheck(
      google::cloud::cpp::compute::targetPools::v1::AddHealthCheckRequest const&
          request,
      Options opts = {});

  ///
  /// Adds an instance to a target pool.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region scoping this request.
  /// @param target_pool  Name of the TargetPool resource to add instances to.
  /// @param target_pools_add_instance_request_resource  The
  /// TargetPoolsAddInstanceRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetPools.v1.AddInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_pools/v1/target_pools.proto#L193}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> AddInstance(
      std::string const& project, std::string const& region,
      std::string const& target_pool,
      google::cloud::cpp::compute::v1::TargetPoolsAddInstanceRequest const&
          target_pools_add_instance_request_resource,
      Options opts = {});

  ///
  /// Adds an instance to a target pool.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::targetPools::v1::AddInstanceRequest,google/cloud/compute/target_pools/v1/target_pools.proto#L193}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetPools.v1.AddInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_pools/v1/target_pools.proto#L193}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> AddInstance(
      google::cloud::cpp::compute::targetPools::v1::AddInstanceRequest const&
          request,
      Options opts = {});

  ///
  /// Retrieves an aggregated list of target pools.
  ///
  /// @param project  Project ID for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::TargetPoolAggregatedList,google/cloud/compute/v1/internal/common.proto#L27653}
  ///
  /// [google.cloud.cpp.compute.targetPools.v1.AggregatedListTargetPoolsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_pools/v1/target_pools.proto#L227}
  /// [google.cloud.cpp.compute.v1.TargetPoolAggregatedList]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L27653}
  ///
  StatusOr<google::cloud::cpp::compute::v1::TargetPoolAggregatedList>
  AggregatedListTargetPools(std::string const& project, Options opts = {});

  ///
  /// Retrieves an aggregated list of target pools.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::targetPools::v1::AggregatedListTargetPoolsRequest,google/cloud/compute/target_pools/v1/target_pools.proto#L227}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::TargetPoolAggregatedList,google/cloud/compute/v1/internal/common.proto#L27653}
  ///
  /// [google.cloud.cpp.compute.targetPools.v1.AggregatedListTargetPoolsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_pools/v1/target_pools.proto#L227}
  /// [google.cloud.cpp.compute.v1.TargetPoolAggregatedList]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L27653}
  ///
  StatusOr<google::cloud::cpp::compute::v1::TargetPoolAggregatedList>
  AggregatedListTargetPools(google::cloud::cpp::compute::targetPools::v1::
                                AggregatedListTargetPoolsRequest const& request,
                            Options opts = {});

  ///
  /// Deletes the specified target pool.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region scoping this request.
  /// @param target_pool  Name of the TargetPool resource to delete.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetPools.v1.DeleteTargetPoolsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_pools/v1/target_pools.proto#L301}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteTargetPools(
      std::string const& project, std::string const& region,
      std::string const& target_pool, Options opts = {});

  ///
  /// Deletes the specified target pool.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::targetPools::v1::DeleteTargetPoolsRequest,google/cloud/compute/target_pools/v1/target_pools.proto#L301}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetPools.v1.DeleteTargetPoolsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_pools/v1/target_pools.proto#L301}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteTargetPools(
      google::cloud::cpp::compute::targetPools::v1::
          DeleteTargetPoolsRequest const& request,
      Options opts = {});

  ///
  /// Returns the specified target pool.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region scoping this request.
  /// @param target_pool  Name of the TargetPool resource to return.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::TargetPool,google/cloud/compute/v1/internal/common.proto#L27552}
  ///
  /// [google.cloud.cpp.compute.targetPools.v1.GetTargetPoolsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_pools/v1/target_pools.proto#L347}
  /// [google.cloud.cpp.compute.v1.TargetPool]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L27552}
  ///
  StatusOr<google::cloud::cpp::compute::v1::TargetPool> GetTargetPools(
      std::string const& project, std::string const& region,
      std::string const& target_pool, Options opts = {});

  ///
  /// Returns the specified target pool.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::targetPools::v1::GetTargetPoolsRequest,google/cloud/compute/target_pools/v1/target_pools.proto#L347}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::TargetPool,google/cloud/compute/v1/internal/common.proto#L27552}
  ///
  /// [google.cloud.cpp.compute.targetPools.v1.GetTargetPoolsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_pools/v1/target_pools.proto#L347}
  /// [google.cloud.cpp.compute.v1.TargetPool]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L27552}
  ///
  StatusOr<google::cloud::cpp::compute::v1::TargetPool> GetTargetPools(
      google::cloud::cpp::compute::targetPools::v1::GetTargetPoolsRequest const&
          request,
      Options opts = {});

  ///
  /// Gets the most recent health check results for each IP for the instance
  /// that is referenced by the given target pool.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region scoping this request.
  /// @param target_pool  Name of the TargetPool resource to which the queried
  /// instance belongs.
  /// @param instance_reference_resource  The InstanceReference for this
  /// request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::TargetPoolInstanceHealth,google/cloud/compute/v1/internal/common.proto#L27759}
  ///
  /// [google.cloud.cpp.compute.targetPools.v1.GetHealthRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_pools/v1/target_pools.proto#L331}
  /// [google.cloud.cpp.compute.v1.TargetPoolInstanceHealth]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L27759}
  ///
  StatusOr<google::cloud::cpp::compute::v1::TargetPoolInstanceHealth> GetHealth(
      std::string const& project, std::string const& region,
      std::string const& target_pool,
      google::cloud::cpp::compute::v1::InstanceReference const&
          instance_reference_resource,
      Options opts = {});

  ///
  /// Gets the most recent health check results for each IP for the instance
  /// that is referenced by the given target pool.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::targetPools::v1::GetHealthRequest,google/cloud/compute/target_pools/v1/target_pools.proto#L331}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::TargetPoolInstanceHealth,google/cloud/compute/v1/internal/common.proto#L27759}
  ///
  /// [google.cloud.cpp.compute.targetPools.v1.GetHealthRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_pools/v1/target_pools.proto#L331}
  /// [google.cloud.cpp.compute.v1.TargetPoolInstanceHealth]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L27759}
  ///
  StatusOr<google::cloud::cpp::compute::v1::TargetPoolInstanceHealth> GetHealth(
      google::cloud::cpp::compute::targetPools::v1::GetHealthRequest const&
          request,
      Options opts = {});

  ///
  /// Creates a target pool in the specified project and region using the data
  /// included in the request.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region scoping this request.
  /// @param target_pool_resource  The TargetPool for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetPools.v1.InsertTargetPoolsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_pools/v1/target_pools.proto#L359}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> InsertTargetPools(
      std::string const& project, std::string const& region,
      google::cloud::cpp::compute::v1::TargetPool const& target_pool_resource,
      Options opts = {});

  ///
  /// Creates a target pool in the specified project and region using the data
  /// included in the request.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::targetPools::v1::InsertTargetPoolsRequest,google/cloud/compute/target_pools/v1/target_pools.proto#L359}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetPools.v1.InsertTargetPoolsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_pools/v1/target_pools.proto#L359}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> InsertTargetPools(
      google::cloud::cpp::compute::targetPools::v1::
          InsertTargetPoolsRequest const& request,
      Options opts = {});

  ///
  /// Retrieves a list of target pools available to the specified project and
  /// region.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region scoping this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::TargetPool,google/cloud/compute/v1/internal/common.proto#L27552}
  ///
  /// [google.cloud.cpp.compute.targetPools.v1.ListTargetPoolsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_pools/v1/target_pools.proto#L389}
  /// [google.cloud.cpp.compute.v1.TargetPool]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L27552}
  ///
  StreamRange<google::cloud::cpp::compute::v1::TargetPool> ListTargetPools(
      std::string const& project, std::string const& region, Options opts = {});

  ///
  /// Retrieves a list of target pools available to the specified project and
  /// region.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::targetPools::v1::ListTargetPoolsRequest,google/cloud/compute/target_pools/v1/target_pools.proto#L389}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::TargetPool,google/cloud/compute/v1/internal/common.proto#L27552}
  ///
  /// [google.cloud.cpp.compute.targetPools.v1.ListTargetPoolsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_pools/v1/target_pools.proto#L389}
  /// [google.cloud.cpp.compute.v1.TargetPool]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L27552}
  ///
  StreamRange<google::cloud::cpp::compute::v1::TargetPool> ListTargetPools(
      google::cloud::cpp::compute::targetPools::v1::ListTargetPoolsRequest
          request,
      Options opts = {});

  ///
  /// Removes health check URL from a target pool.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region for this request.
  /// @param target_pool  Name of the target pool to remove health checks from.
  /// @param target_pools_remove_health_check_request_resource  The
  /// TargetPoolsRemoveHealthCheckRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetPools.v1.RemoveHealthCheckRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_pools/v1/target_pools.proto#L457}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> RemoveHealthCheck(
      std::string const& project, std::string const& region,
      std::string const& target_pool,
      google::cloud::cpp::compute::v1::
          TargetPoolsRemoveHealthCheckRequest const&
              target_pools_remove_health_check_request_resource,
      Options opts = {});

  ///
  /// Removes health check URL from a target pool.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::targetPools::v1::RemoveHealthCheckRequest,google/cloud/compute/target_pools/v1/target_pools.proto#L457}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetPools.v1.RemoveHealthCheckRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_pools/v1/target_pools.proto#L457}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> RemoveHealthCheck(
      google::cloud::cpp::compute::targetPools::v1::
          RemoveHealthCheckRequest const& request,
      Options opts = {});

  ///
  /// Removes instance URL from a target pool.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region scoping this request.
  /// @param target_pool  Name of the TargetPool resource to remove instances
  /// from.
  /// @param target_pools_remove_instance_request_resource  The
  /// TargetPoolsRemoveInstanceRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetPools.v1.RemoveInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_pools/v1/target_pools.proto#L491}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> RemoveInstance(
      std::string const& project, std::string const& region,
      std::string const& target_pool,
      google::cloud::cpp::compute::v1::TargetPoolsRemoveInstanceRequest const&
          target_pools_remove_instance_request_resource,
      Options opts = {});

  ///
  /// Removes instance URL from a target pool.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::targetPools::v1::RemoveInstanceRequest,google/cloud/compute/target_pools/v1/target_pools.proto#L491}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetPools.v1.RemoveInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_pools/v1/target_pools.proto#L491}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> RemoveInstance(
      google::cloud::cpp::compute::targetPools::v1::RemoveInstanceRequest const&
          request,
      Options opts = {});

  ///
  /// Changes a backup target pool's configurations.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region scoping this request.
  /// @param target_pool  Name of the TargetPool resource to set a backup pool
  /// for.
  /// @param target_reference_resource  The TargetReference for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetPools.v1.SetBackupRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_pools/v1/target_pools.proto#L525}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetBackup(
      std::string const& project, std::string const& region,
      std::string const& target_pool,
      google::cloud::cpp::compute::v1::TargetReference const&
          target_reference_resource,
      Options opts = {});

  ///
  /// Changes a backup target pool's configurations.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::targetPools::v1::SetBackupRequest,google/cloud/compute/target_pools/v1/target_pools.proto#L525}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.targetPools.v1.SetBackupRequest]:
  /// @googleapis_reference_link{google/cloud/compute/target_pools/v1/target_pools.proto#L525}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetBackup(
      google::cloud::cpp::compute::targetPools::v1::SetBackupRequest const&
          request,
      Options opts = {});

 private:
  std::shared_ptr<TargetPoolsConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_target_pools_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_TARGET_POOLS_V1_TARGET_POOLS_CLIENT_H
