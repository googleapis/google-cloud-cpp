// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/compute/node_groups/v1/node_groups.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_NODE_GROUPS_V1_NODE_GROUPS_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_NODE_GROUPS_V1_NODE_GROUPS_CLIENT_H

#include "google/cloud/compute/node_groups/v1/node_groups_rest_connection.h"
#include "google/cloud/experimental_tag.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace compute_node_groups_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service for the nodeGroups resource.
/// https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class NodeGroupsClient {
 public:
  explicit NodeGroupsClient(ExperimentalTag,
                            std::shared_ptr<NodeGroupsConnection> connection,
                            Options opts = {});
  ~NodeGroupsClient();

  ///@{
  /// @name Copy and move support
  NodeGroupsClient(NodeGroupsClient const&) = default;
  NodeGroupsClient& operator=(NodeGroupsClient const&) = default;
  NodeGroupsClient(NodeGroupsClient&&) = default;
  NodeGroupsClient& operator=(NodeGroupsClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(NodeGroupsClient const& a, NodeGroupsClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(NodeGroupsClient const& a, NodeGroupsClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Adds specified number of nodes to the node group.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param node_group  Name of the NodeGroup resource.
  /// @param node_groups_add_nodes_request_resource  The
  /// NodeGroupsAddNodesRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.AddNodesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L181}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> AddNodes(
      std::string const& project, std::string const& zone,
      std::string const& node_group,
      google::cloud::cpp::compute::v1::NodeGroupsAddNodesRequest const&
          node_groups_add_nodes_request_resource,
      Options opts = {});

  ///
  /// Adds specified number of nodes to the node group.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::nodeGroups::v1::AddNodesRequest,google/cloud/compute/node_groups/v1/node_groups.proto#L181}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.AddNodesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L181}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> AddNodes(
      google::cloud::cpp::compute::nodeGroups::v1::AddNodesRequest const&
          request,
      Options opts = {});

  ///
  /// Retrieves an aggregated list of node groups. Note: use
  /// nodeGroups.listNodes for more details about each group.
  ///
  /// @param project  Project ID for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::NodeGroupAggregatedList,google/cloud/compute/v1/internal/common.proto#L16041}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.AggregatedListNodeGroupsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L215}
  /// [google.cloud.cpp.compute.v1.NodeGroupAggregatedList]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L16041}
  ///
  StatusOr<google::cloud::cpp::compute::v1::NodeGroupAggregatedList>
  AggregatedListNodeGroups(std::string const& project, Options opts = {});

  ///
  /// Retrieves an aggregated list of node groups. Note: use
  /// nodeGroups.listNodes for more details about each group.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::nodeGroups::v1::AggregatedListNodeGroupsRequest,google/cloud/compute/node_groups/v1/node_groups.proto#L215}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::NodeGroupAggregatedList,google/cloud/compute/v1/internal/common.proto#L16041}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.AggregatedListNodeGroupsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L215}
  /// [google.cloud.cpp.compute.v1.NodeGroupAggregatedList]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L16041}
  ///
  StatusOr<google::cloud::cpp::compute::v1::NodeGroupAggregatedList>
  AggregatedListNodeGroups(google::cloud::cpp::compute::nodeGroups::v1::
                               AggregatedListNodeGroupsRequest const& request,
                           Options opts = {});

  ///
  /// Deletes the specified NodeGroup resource.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param node_group  Name of the NodeGroup resource to delete.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.DeleteNodeGroupsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L289}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteNodeGroups(
      std::string const& project, std::string const& zone,
      std::string const& node_group, Options opts = {});

  ///
  /// Deletes the specified NodeGroup resource.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::nodeGroups::v1::DeleteNodeGroupsRequest,google/cloud/compute/node_groups/v1/node_groups.proto#L289}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.DeleteNodeGroupsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L289}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteNodeGroups(
      google::cloud::cpp::compute::nodeGroups::v1::
          DeleteNodeGroupsRequest const& request,
      Options opts = {});

  ///
  /// Deletes specified nodes from the node group.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param node_group  Name of the NodeGroup resource whose nodes will be
  /// deleted.
  /// @param node_groups_delete_nodes_request_resource  The
  /// NodeGroupsDeleteNodesRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.DeleteNodesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L319}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteNodes(
      std::string const& project, std::string const& zone,
      std::string const& node_group,
      google::cloud::cpp::compute::v1::NodeGroupsDeleteNodesRequest const&
          node_groups_delete_nodes_request_resource,
      Options opts = {});

  ///
  /// Deletes specified nodes from the node group.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::nodeGroups::v1::DeleteNodesRequest,google/cloud/compute/node_groups/v1/node_groups.proto#L319}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.DeleteNodesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L319}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteNodes(
      google::cloud::cpp::compute::nodeGroups::v1::DeleteNodesRequest const&
          request,
      Options opts = {});

  ///
  /// Returns the specified NodeGroup. Get a list of available NodeGroups by
  /// making a list() request. Note: the "nodes" field should not be used. Use
  /// nodeGroups.listNodes instead.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param node_group  Name of the node group to return.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::NodeGroup,google/cloud/compute/v1/internal/common.proto#L15963}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.GetNodeGroupsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L368}
  /// [google.cloud.cpp.compute.v1.NodeGroup]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L15963}
  ///
  StatusOr<google::cloud::cpp::compute::v1::NodeGroup> GetNodeGroups(
      std::string const& project, std::string const& zone,
      std::string const& node_group, Options opts = {});

  ///
  /// Returns the specified NodeGroup. Get a list of available NodeGroups by
  /// making a list() request. Note: the "nodes" field should not be used. Use
  /// nodeGroups.listNodes instead.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::nodeGroups::v1::GetNodeGroupsRequest,google/cloud/compute/node_groups/v1/node_groups.proto#L368}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::NodeGroup,google/cloud/compute/v1/internal/common.proto#L15963}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.GetNodeGroupsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L368}
  /// [google.cloud.cpp.compute.v1.NodeGroup]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L15963}
  ///
  StatusOr<google::cloud::cpp::compute::v1::NodeGroup> GetNodeGroups(
      google::cloud::cpp::compute::nodeGroups::v1::GetNodeGroupsRequest const&
          request,
      Options opts = {});

  ///
  /// Gets the access control policy for a resource. May be empty if no such
  /// policy or resource exists.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param resource  Name or id of the resource for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Policy,google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.GetIamPolicyRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L353}
  /// [google.cloud.cpp.compute.v1.Policy]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Policy> GetIamPolicy(
      std::string const& project, std::string const& zone,
      std::string const& resource, Options opts = {});

  ///
  /// Gets the access control policy for a resource. May be empty if no such
  /// policy or resource exists.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::nodeGroups::v1::GetIamPolicyRequest,google/cloud/compute/node_groups/v1/node_groups.proto#L353}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Policy,google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.GetIamPolicyRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L353}
  /// [google.cloud.cpp.compute.v1.Policy]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Policy> GetIamPolicy(
      google::cloud::cpp::compute::nodeGroups::v1::GetIamPolicyRequest const&
          request,
      Options opts = {});

  ///
  /// Creates a NodeGroup resource in the specified project using the data
  /// included in the request.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param initial_node_count  Initial count of nodes in the node group.
  /// @param node_group_resource  The NodeGroup for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.InsertNodeGroupsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L380}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> InsertNodeGroups(
      std::string const& project, std::string const& zone,
      std::int32_t initial_node_count,
      google::cloud::cpp::compute::v1::NodeGroup const& node_group_resource,
      Options opts = {});

  ///
  /// Creates a NodeGroup resource in the specified project using the data
  /// included in the request.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::nodeGroups::v1::InsertNodeGroupsRequest,google/cloud/compute/node_groups/v1/node_groups.proto#L380}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.InsertNodeGroupsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L380}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> InsertNodeGroups(
      google::cloud::cpp::compute::nodeGroups::v1::
          InsertNodeGroupsRequest const& request,
      Options opts = {});

  ///
  /// Retrieves a list of node groups available to the specified project. Note:
  /// use nodeGroups.listNodes for more details about each group.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::NodeGroup,google/cloud/compute/v1/internal/common.proto#L15963}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.ListNodeGroupsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L413}
  /// [google.cloud.cpp.compute.v1.NodeGroup]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L15963}
  ///
  StreamRange<google::cloud::cpp::compute::v1::NodeGroup> ListNodeGroups(
      std::string const& project, std::string const& zone, Options opts = {});

  ///
  /// Retrieves a list of node groups available to the specified project. Note:
  /// use nodeGroups.listNodes for more details about each group.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::nodeGroups::v1::ListNodeGroupsRequest,google/cloud/compute/node_groups/v1/node_groups.proto#L413}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::NodeGroup,google/cloud/compute/v1/internal/common.proto#L15963}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.ListNodeGroupsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L413}
  /// [google.cloud.cpp.compute.v1.NodeGroup]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L15963}
  ///
  StreamRange<google::cloud::cpp::compute::v1::NodeGroup> ListNodeGroups(
      google::cloud::cpp::compute::nodeGroups::v1::ListNodeGroupsRequest
          request,
      Options opts = {});

  ///
  /// Lists nodes in the node group.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param node_group  Name of the NodeGroup resource whose nodes you want to
  /// list.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::NodeGroupNode,google/cloud/compute/v1/internal/common.proto#L16281}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.ListNodesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L481}
  /// [google.cloud.cpp.compute.v1.NodeGroupNode]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L16281}
  ///
  StreamRange<google::cloud::cpp::compute::v1::NodeGroupNode> ListNodes(
      std::string const& project, std::string const& zone,
      std::string const& node_group, Options opts = {});

  ///
  /// Lists nodes in the node group.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::nodeGroups::v1::ListNodesRequest,google/cloud/compute/node_groups/v1/node_groups.proto#L481}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::NodeGroupNode,google/cloud/compute/v1/internal/common.proto#L16281}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.ListNodesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L481}
  /// [google.cloud.cpp.compute.v1.NodeGroupNode]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L16281}
  ///
  StreamRange<google::cloud::cpp::compute::v1::NodeGroupNode> ListNodes(
      google::cloud::cpp::compute::nodeGroups::v1::ListNodesRequest request,
      Options opts = {});

  ///
  /// Updates the specified node group.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param node_group  Name of the NodeGroup resource to update.
  /// @param node_group_resource  The NodeGroup for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.PatchNodeGroupsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L552}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> PatchNodeGroups(
      std::string const& project, std::string const& zone,
      std::string const& node_group,
      google::cloud::cpp::compute::v1::NodeGroup const& node_group_resource,
      Options opts = {});

  ///
  /// Updates the specified node group.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::nodeGroups::v1::PatchNodeGroupsRequest,google/cloud/compute/node_groups/v1/node_groups.proto#L552}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.PatchNodeGroupsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L552}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> PatchNodeGroups(
      google::cloud::cpp::compute::nodeGroups::v1::PatchNodeGroupsRequest const&
          request,
      Options opts = {});

  ///
  /// Sets the access control policy on the specified resource. Replaces any
  /// existing policy.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param resource  Name or id of the resource for this request.
  /// @param zone_set_policy_request_resource  The ZoneSetPolicyRequest for this
  /// request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Policy,google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.SetIamPolicyRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L585}
  /// [google.cloud.cpp.compute.v1.Policy]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Policy> SetIamPolicy(
      std::string const& project, std::string const& zone,
      std::string const& resource,
      google::cloud::cpp::compute::v1::ZoneSetPolicyRequest const&
          zone_set_policy_request_resource,
      Options opts = {});

  ///
  /// Sets the access control policy on the specified resource. Replaces any
  /// existing policy.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::nodeGroups::v1::SetIamPolicyRequest,google/cloud/compute/node_groups/v1/node_groups.proto#L585}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Policy,google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.SetIamPolicyRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L585}
  /// [google.cloud.cpp.compute.v1.Policy]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L18675}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Policy> SetIamPolicy(
      google::cloud::cpp::compute::nodeGroups::v1::SetIamPolicyRequest const&
          request,
      Options opts = {});

  ///
  /// Updates the node template of the node group.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param node_group  Name of the NodeGroup resource to update.
  /// @param node_groups_set_node_template_request_resource  The
  /// NodeGroupsSetNodeTemplateRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.SetNodeTemplateRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L601}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetNodeTemplate(
      std::string const& project, std::string const& zone,
      std::string const& node_group,
      google::cloud::cpp::compute::v1::NodeGroupsSetNodeTemplateRequest const&
          node_groups_set_node_template_request_resource,
      Options opts = {});

  ///
  /// Updates the node template of the node group.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::nodeGroups::v1::SetNodeTemplateRequest,google/cloud/compute/node_groups/v1/node_groups.proto#L601}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.SetNodeTemplateRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L601}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17443}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetNodeTemplate(
      google::cloud::cpp::compute::nodeGroups::v1::SetNodeTemplateRequest const&
          request,
      Options opts = {});

  ///
  /// Returns permissions that a caller has on the specified resource.
  ///
  /// @param project  Project ID for this request.
  /// @param zone  The name of the zone for this request.
  /// @param resource  Name or id of the resource for this request.
  /// @param test_permissions_request_resource  The TestPermissionsRequest for
  /// this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::TestPermissionsResponse,google/cloud/compute/v1/internal/common.proto#L28939}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.TestIamPermissionsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L635}
  /// [google.cloud.cpp.compute.v1.TestPermissionsResponse]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L28939}
  ///
  StatusOr<google::cloud::cpp::compute::v1::TestPermissionsResponse>
  TestIamPermissions(
      std::string const& project, std::string const& zone,
      std::string const& resource,
      google::cloud::cpp::compute::v1::TestPermissionsRequest const&
          test_permissions_request_resource,
      Options opts = {});

  ///
  /// Returns permissions that a caller has on the specified resource.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::nodeGroups::v1::TestIamPermissionsRequest,google/cloud/compute/node_groups/v1/node_groups.proto#L635}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::TestPermissionsResponse,google/cloud/compute/v1/internal/common.proto#L28939}
  ///
  /// [google.cloud.cpp.compute.nodeGroups.v1.TestIamPermissionsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/node_groups/v1/node_groups.proto#L635}
  /// [google.cloud.cpp.compute.v1.TestPermissionsResponse]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L28939}
  ///
  StatusOr<google::cloud::cpp::compute::v1::TestPermissionsResponse>
  TestIamPermissions(google::cloud::cpp::compute::nodeGroups::v1::
                         TestIamPermissionsRequest const& request,
                     Options opts = {});

 private:
  std::shared_ptr<NodeGroupsConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_node_groups_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_NODE_GROUPS_V1_NODE_GROUPS_CLIENT_H
