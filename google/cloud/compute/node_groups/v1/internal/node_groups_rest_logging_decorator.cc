// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/compute/node_groups/v1/node_groups.proto

#include "google/cloud/compute/node_groups/v1/internal/node_groups_rest_logging_decorator.h"
#include "google/cloud/internal/log_wrapper.h"
#include "google/cloud/status_or.h"
#include <memory>

namespace google {
namespace cloud {
namespace compute_node_groups_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

NodeGroupsRestLogging::NodeGroupsRestLogging(
    std::shared_ptr<NodeGroupsRestStub> child, TracingOptions tracing_options,
    std::set<std::string> components)
    : child_(std::move(child)),
      tracing_options_(std::move(tracing_options)),
      components_(std::move(components)) {}

StatusOr<google::cloud::cpp::compute::v1::Operation>
NodeGroupsRestLogging::AddNodes(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::nodeGroups::v1::AddNodesRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context,
             google::cloud::cpp::compute::nodeGroups::v1::AddNodesRequest const&
                 request) { return child_->AddNodes(rest_context, request); },
      rest_context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::compute::v1::NodeGroupAggregatedList>
NodeGroupsRestLogging::AggregatedListNodeGroups(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::nodeGroups::v1::
        AggregatedListNodeGroupsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context,
             google::cloud::cpp::compute::nodeGroups::v1::
                 AggregatedListNodeGroupsRequest const& request) {
        return child_->AggregatedListNodeGroups(rest_context, request);
      },
      rest_context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
NodeGroupsRestLogging::DeleteNodeGroups(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::nodeGroups::v1::DeleteNodeGroupsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context,
             google::cloud::cpp::compute::nodeGroups::v1::
                 DeleteNodeGroupsRequest const& request) {
        return child_->DeleteNodeGroups(rest_context, request);
      },
      rest_context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
NodeGroupsRestLogging::DeleteNodes(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::nodeGroups::v1::DeleteNodesRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          rest_internal::RestContext& rest_context,
          google::cloud::cpp::compute::nodeGroups::v1::DeleteNodesRequest const&
              request) { return child_->DeleteNodes(rest_context, request); },
      rest_context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::compute::v1::NodeGroup>
NodeGroupsRestLogging::GetNodeGroups(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::nodeGroups::v1::GetNodeGroupsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context,
             google::cloud::cpp::compute::nodeGroups::v1::
                 GetNodeGroupsRequest const& request) {
        return child_->GetNodeGroups(rest_context, request);
      },
      rest_context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::compute::v1::Policy>
NodeGroupsRestLogging::GetIamPolicy(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::nodeGroups::v1::GetIamPolicyRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context,
             google::cloud::cpp::compute::nodeGroups::v1::
                 GetIamPolicyRequest const& request) {
        return child_->GetIamPolicy(rest_context, request);
      },
      rest_context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
NodeGroupsRestLogging::InsertNodeGroups(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::nodeGroups::v1::InsertNodeGroupsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context,
             google::cloud::cpp::compute::nodeGroups::v1::
                 InsertNodeGroupsRequest const& request) {
        return child_->InsertNodeGroups(rest_context, request);
      },
      rest_context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::compute::v1::NodeGroupList>
NodeGroupsRestLogging::ListNodeGroups(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::nodeGroups::v1::ListNodeGroupsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context,
             google::cloud::cpp::compute::nodeGroups::v1::
                 ListNodeGroupsRequest const& request) {
        return child_->ListNodeGroups(rest_context, request);
      },
      rest_context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::compute::v1::NodeGroupsListNodes>
NodeGroupsRestLogging::ListNodes(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::nodeGroups::v1::ListNodesRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          rest_internal::RestContext& rest_context,
          google::cloud::cpp::compute::nodeGroups::v1::ListNodesRequest const&
              request) { return child_->ListNodes(rest_context, request); },
      rest_context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
NodeGroupsRestLogging::PatchNodeGroups(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::nodeGroups::v1::PatchNodeGroupsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context,
             google::cloud::cpp::compute::nodeGroups::v1::
                 PatchNodeGroupsRequest const& request) {
        return child_->PatchNodeGroups(rest_context, request);
      },
      rest_context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::compute::v1::Policy>
NodeGroupsRestLogging::SetIamPolicy(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::nodeGroups::v1::SetIamPolicyRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context,
             google::cloud::cpp::compute::nodeGroups::v1::
                 SetIamPolicyRequest const& request) {
        return child_->SetIamPolicy(rest_context, request);
      },
      rest_context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::compute::v1::Operation>
NodeGroupsRestLogging::SetNodeTemplate(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::nodeGroups::v1::SetNodeTemplateRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context,
             google::cloud::cpp::compute::nodeGroups::v1::
                 SetNodeTemplateRequest const& request) {
        return child_->SetNodeTemplate(rest_context, request);
      },
      rest_context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::compute::v1::TestPermissionsResponse>
NodeGroupsRestLogging::TestIamPermissions(
    rest_internal::RestContext& rest_context,
    google::cloud::cpp::compute::nodeGroups::v1::
        TestIamPermissionsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context,
             google::cloud::cpp::compute::nodeGroups::v1::
                 TestIamPermissionsRequest const& request) {
        return child_->TestIamPermissions(rest_context, request);
      },
      rest_context, request, __func__, tracing_options_);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_node_groups_v1_internal
}  // namespace cloud
}  // namespace google
