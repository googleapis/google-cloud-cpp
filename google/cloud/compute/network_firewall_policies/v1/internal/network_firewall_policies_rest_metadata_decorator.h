// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/compute/network_firewall_policies/v1/network_firewall_policies.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_NETWORK_FIREWALL_POLICIES_V1_INTERNAL_NETWORK_FIREWALL_POLICIES_REST_METADATA_DECORATOR_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_NETWORK_FIREWALL_POLICIES_V1_INTERNAL_NETWORK_FIREWALL_POLICIES_REST_METADATA_DECORATOR_H

#include "google/cloud/compute/network_firewall_policies/v1/internal/network_firewall_policies_rest_stub.h"
#include "google/cloud/future.h"
#include "google/cloud/rest_options.h"
#include "google/cloud/version.h"
#include <google/cloud/compute/network_firewall_policies/v1/network_firewall_policies.pb.h>
#include <memory>
#include <string>

namespace google {
namespace cloud {
namespace compute_network_firewall_policies_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

class NetworkFirewallPoliciesRestMetadata : public NetworkFirewallPoliciesRestStub {
 public:
  ~NetworkFirewallPoliciesRestMetadata() override = default;
  explicit NetworkFirewallPoliciesRestMetadata(std::shared_ptr<NetworkFirewallPoliciesRestStub> child);

  StatusOr<google::cloud::cpp::compute::v1::Operation> AddAssociation(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::networkFirewallPolicies::v1::AddAssociationRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation> AddRule(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::networkFirewallPolicies::v1::AddRuleRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation> CloneRules(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::networkFirewallPolicies::v1::CloneRulesRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation> DeleteNetworkFirewallPolicies(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::networkFirewallPolicies::v1::DeleteNetworkFirewallPoliciesRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::FirewallPolicy> GetNetworkFirewallPolicies(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::networkFirewallPolicies::v1::GetNetworkFirewallPoliciesRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::FirewallPolicyAssociation> GetAssociation(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::networkFirewallPolicies::v1::GetAssociationRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Policy> GetIamPolicy(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::networkFirewallPolicies::v1::GetIamPolicyRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::FirewallPolicyRule> GetRule(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::networkFirewallPolicies::v1::GetRuleRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation> InsertNetworkFirewallPolicies(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::networkFirewallPolicies::v1::InsertNetworkFirewallPoliciesRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::FirewallPolicyList> ListNetworkFirewallPolicies(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::networkFirewallPolicies::v1::ListNetworkFirewallPoliciesRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation> PatchNetworkFirewallPolicies(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::networkFirewallPolicies::v1::PatchNetworkFirewallPoliciesRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation> PatchRule(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::networkFirewallPolicies::v1::PatchRuleRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation> RemoveAssociation(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::networkFirewallPolicies::v1::RemoveAssociationRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Operation> RemoveRule(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::networkFirewallPolicies::v1::RemoveRuleRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::Policy> SetIamPolicy(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::networkFirewallPolicies::v1::SetIamPolicyRequest const& request) override;

  StatusOr<google::cloud::cpp::compute::v1::TestPermissionsResponse> TestIamPermissions(
      google::cloud::rest_internal::RestContext& rest_context,
      google::cloud::cpp::compute::networkFirewallPolicies::v1::TestIamPermissionsRequest const& request) override;

 private:
  void SetMetadata(rest_internal::RestContext& rest_context,
                   std::vector<std::string> const& params = {});

  std::shared_ptr<NetworkFirewallPoliciesRestStub> child_;
  std::string api_client_header_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_network_firewall_policies_v1_internal
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_NETWORK_FIREWALL_POLICIES_V1_INTERNAL_NETWORK_FIREWALL_POLICIES_REST_METADATA_DECORATOR_H
