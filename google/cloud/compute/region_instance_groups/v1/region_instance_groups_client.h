// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source:
// google/cloud/compute/region_instance_groups/v1/region_instance_groups.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_REGION_INSTANCE_GROUPS_V1_REGION_INSTANCE_GROUPS_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_REGION_INSTANCE_GROUPS_V1_REGION_INSTANCE_GROUPS_CLIENT_H

#include "google/cloud/compute/region_instance_groups/v1/region_instance_groups_rest_connection.h"
#include "google/cloud/experimental_tag.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <memory>

namespace google {
namespace cloud {
namespace compute_region_instance_groups_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service for the regionInstanceGroups resource.
/// https://cloud.google.com/compute/docs/reference/rest/v1/regionInstanceGroups
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class RegionInstanceGroupsClient {
 public:
  explicit RegionInstanceGroupsClient(
      ExperimentalTag,
      std::shared_ptr<RegionInstanceGroupsConnection> connection,
      Options opts = {});
  ~RegionInstanceGroupsClient();

  ///@{
  /// @name Copy and move support
  RegionInstanceGroupsClient(RegionInstanceGroupsClient const&) = default;
  RegionInstanceGroupsClient& operator=(RegionInstanceGroupsClient const&) =
      default;
  RegionInstanceGroupsClient(RegionInstanceGroupsClient&&) = default;
  RegionInstanceGroupsClient& operator=(RegionInstanceGroupsClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(RegionInstanceGroupsClient const& a,
                         RegionInstanceGroupsClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(RegionInstanceGroupsClient const& a,
                         RegionInstanceGroupsClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Returns the specified instance group resource.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region scoping this request.
  /// @param instance_group  Name of the instance group resource to return.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::InstanceGroup,google/cloud/compute/v1/internal/common.proto#L9441}
  ///
  /// [google.cloud.cpp.compute.regionInstanceGroups.v1.GetRegionInstanceGroupsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/region_instance_groups/v1/region_instance_groups.proto#L75}
  /// [google.cloud.cpp.compute.v1.InstanceGroup]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L9441}
  ///
  StatusOr<google::cloud::cpp::compute::v1::InstanceGroup>
  GetRegionInstanceGroups(std::string const& project, std::string const& region,
                          std::string const& instance_group, Options opts = {});

  ///
  /// Returns the specified instance group resource.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::regionInstanceGroups::v1::GetRegionInstanceGroupsRequest,google/cloud/compute/region_instance_groups/v1/region_instance_groups.proto#L75}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::InstanceGroup,google/cloud/compute/v1/internal/common.proto#L9441}
  ///
  /// [google.cloud.cpp.compute.regionInstanceGroups.v1.GetRegionInstanceGroupsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/region_instance_groups/v1/region_instance_groups.proto#L75}
  /// [google.cloud.cpp.compute.v1.InstanceGroup]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L9441}
  ///
  StatusOr<google::cloud::cpp::compute::v1::InstanceGroup>
  GetRegionInstanceGroups(google::cloud::cpp::compute::regionInstanceGroups::
                              v1::GetRegionInstanceGroupsRequest const& request,
                          Options opts = {});

  ///
  /// Retrieves the list of instance group resources contained within the
  /// specified region.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region scoping this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::InstanceGroup,google/cloud/compute/v1/internal/common.proto#L9441}
  ///
  /// [google.cloud.cpp.compute.regionInstanceGroups.v1.ListRegionInstanceGroupsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/region_instance_groups/v1/region_instance_groups.proto#L162}
  /// [google.cloud.cpp.compute.v1.InstanceGroup]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L9441}
  ///
  StreamRange<google::cloud::cpp::compute::v1::InstanceGroup>
  ListRegionInstanceGroups(std::string const& project,
                           std::string const& region, Options opts = {});

  ///
  /// Retrieves the list of instance group resources contained within the
  /// specified region.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::regionInstanceGroups::v1::ListRegionInstanceGroupsRequest,google/cloud/compute/region_instance_groups/v1/region_instance_groups.proto#L162}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::InstanceGroup,google/cloud/compute/v1/internal/common.proto#L9441}
  ///
  /// [google.cloud.cpp.compute.regionInstanceGroups.v1.ListRegionInstanceGroupsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/region_instance_groups/v1/region_instance_groups.proto#L162}
  /// [google.cloud.cpp.compute.v1.InstanceGroup]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L9441}
  ///
  StreamRange<google::cloud::cpp::compute::v1::InstanceGroup>
  ListRegionInstanceGroups(google::cloud::cpp::compute::regionInstanceGroups::
                               v1::ListRegionInstanceGroupsRequest request,
                           Options opts = {});

  ///
  /// Lists the instances in the specified instance group and displays
  /// information about the named ports. Depending on the specified options,
  /// this method can list all instances or only the instances that are running.
  /// The orderBy query parameter is not supported.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region scoping this request.
  /// @param instance_group  Name of the regional instance group for which we
  /// want to list the
  ///  instances.
  /// @param region_instance_groups_list_instances_request_resource  The
  /// RegionInstanceGroupsListInstancesRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::InstanceWithNamedPorts,google/cloud/compute/v1/internal/common.proto#L11587}
  ///
  /// [google.cloud.cpp.compute.regionInstanceGroups.v1.ListInstancesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/region_instance_groups/v1/region_instance_groups.proto#L87}
  /// [google.cloud.cpp.compute.v1.InstanceWithNamedPorts]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L11587}
  ///
  StreamRange<google::cloud::cpp::compute::v1::InstanceWithNamedPorts>
  ListInstances(std::string const& project, std::string const& region,
                std::string const& instance_group,
                google::cloud::cpp::compute::v1::
                    RegionInstanceGroupsListInstancesRequest const&
                        region_instance_groups_list_instances_request_resource,
                Options opts = {});

  ///
  /// Lists the instances in the specified instance group and displays
  /// information about the named ports. Depending on the specified options,
  /// this method can list all instances or only the instances that are running.
  /// The orderBy query parameter is not supported.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::regionInstanceGroups::v1::ListInstancesRequest,google/cloud/compute/region_instance_groups/v1/region_instance_groups.proto#L87}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::InstanceWithNamedPorts,google/cloud/compute/v1/internal/common.proto#L11587}
  ///
  /// [google.cloud.cpp.compute.regionInstanceGroups.v1.ListInstancesRequest]:
  /// @googleapis_reference_link{google/cloud/compute/region_instance_groups/v1/region_instance_groups.proto#L87}
  /// [google.cloud.cpp.compute.v1.InstanceWithNamedPorts]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L11587}
  ///
  StreamRange<google::cloud::cpp::compute::v1::InstanceWithNamedPorts>
  ListInstances(google::cloud::cpp::compute::regionInstanceGroups::v1::
                    ListInstancesRequest request,
                Options opts = {});

  ///
  /// Sets the named ports for the specified regional instance group.
  ///
  /// @param project  Project ID for this request.
  /// @param region  Name of the region scoping this request.
  /// @param instance_group  The name of the regional instance group where the
  /// named ports are updated.
  /// @param region_instance_groups_set_named_ports_request_resource  The
  /// RegionInstanceGroupsSetNamedPortsRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.regionInstanceGroups.v1.SetNamedPortsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/region_instance_groups/v1/region_instance_groups.proto#L230}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetNamedPorts(
      std::string const& project, std::string const& region,
      std::string const& instance_group,
      google::cloud::cpp::compute::v1::
          RegionInstanceGroupsSetNamedPortsRequest const&
              region_instance_groups_set_named_ports_request_resource,
      Options opts = {});

  ///
  /// Sets the named ports for the specified regional instance group.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::cpp::compute::regionInstanceGroups::v1::SetNamedPortsRequest,google/cloud/compute/region_instance_groups/v1/region_instance_groups.proto#L230}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::cpp::compute::v1::Operation,google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  /// [google.cloud.cpp.compute.regionInstanceGroups.v1.SetNamedPortsRequest]:
  /// @googleapis_reference_link{google/cloud/compute/region_instance_groups/v1/region_instance_groups.proto#L230}
  /// [google.cloud.cpp.compute.v1.Operation]:
  /// @googleapis_reference_link{google/cloud/compute/v1/internal/common.proto#L17422}
  ///
  StatusOr<google::cloud::cpp::compute::v1::Operation> SetNamedPorts(
      google::cloud::cpp::compute::regionInstanceGroups::v1::
          SetNamedPortsRequest const& request,
      Options opts = {});

 private:
  std::shared_ptr<RegionInstanceGroupsConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace compute_region_instance_groups_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_COMPUTE_REGION_INSTANCE_GROUPS_V1_REGION_INSTANCE_GROUPS_CLIENT_H
