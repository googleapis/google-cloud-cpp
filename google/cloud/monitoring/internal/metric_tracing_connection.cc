// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/monitoring/v3/metric_service.proto

#include "google/cloud/monitoring/internal/metric_tracing_connection.h"
#include "google/cloud/internal/opentelemetry.h"
#include <memory>

namespace google {
namespace cloud {
namespace monitoring_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

#ifdef GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

MetricServiceTracingConnection::MetricServiceTracingConnection(
    std::shared_ptr<monitoring::MetricServiceConnection> child)
    : child_(std::move(child)) {}

StreamRange<google::api::MonitoredResourceDescriptor>
MetricServiceTracingConnection::ListMonitoredResourceDescriptors(
    google::monitoring::v3::ListMonitoredResourceDescriptorsRequest request) {
  return child_->ListMonitoredResourceDescriptors(request);
}

StatusOr<google::api::MonitoredResourceDescriptor>
MetricServiceTracingConnection::GetMonitoredResourceDescriptor(
    google::monitoring::v3::GetMonitoredResourceDescriptorRequest const&
        request) {
  return child_->GetMonitoredResourceDescriptor(request);
}

StreamRange<google::api::MetricDescriptor>
MetricServiceTracingConnection::ListMetricDescriptors(
    google::monitoring::v3::ListMetricDescriptorsRequest request) {
  return child_->ListMetricDescriptors(request);
}

StatusOr<google::api::MetricDescriptor>
MetricServiceTracingConnection::GetMetricDescriptor(
    google::monitoring::v3::GetMetricDescriptorRequest const& request) {
  return child_->GetMetricDescriptor(request);
}

StatusOr<google::api::MetricDescriptor>
MetricServiceTracingConnection::CreateMetricDescriptor(
    google::monitoring::v3::CreateMetricDescriptorRequest const& request) {
  return child_->CreateMetricDescriptor(request);
}

Status MetricServiceTracingConnection::DeleteMetricDescriptor(
    google::monitoring::v3::DeleteMetricDescriptorRequest const& request) {
  return child_->DeleteMetricDescriptor(request);
}

StreamRange<google::monitoring::v3::TimeSeries>
MetricServiceTracingConnection::ListTimeSeries(
    google::monitoring::v3::ListTimeSeriesRequest request) {
  return child_->ListTimeSeries(request);
}

Status MetricServiceTracingConnection::CreateTimeSeries(
    google::monitoring::v3::CreateTimeSeriesRequest const& request) {
  return child_->CreateTimeSeries(request);
}

Status MetricServiceTracingConnection::CreateServiceTimeSeries(
    google::monitoring::v3::CreateTimeSeriesRequest const& request) {
  return child_->CreateServiceTimeSeries(request);
}

future<Status> MetricServiceTracingConnection::AsyncCreateTimeSeries(
    google::monitoring::v3::CreateTimeSeriesRequest const& request) {
  return child_->AsyncCreateTimeSeries(request);
}

#endif  // GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace monitoring_internal
}  // namespace cloud
}  // namespace google
