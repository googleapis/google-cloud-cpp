// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/iam/v3/principal_access_boundary_policies_service.proto

#include "google/cloud/iam/v3/principal_access_boundary_policies_connection.h"
#include "google/cloud/iam/v3/internal/principal_access_boundary_policies_connection_impl.h"
#include "google/cloud/iam/v3/internal/principal_access_boundary_policies_option_defaults.h"
#include "google/cloud/iam/v3/internal/principal_access_boundary_policies_stub_factory.h"
#include "google/cloud/iam/v3/internal/principal_access_boundary_policies_tracing_connection.h"
#include "google/cloud/iam/v3/principal_access_boundary_policies_options.h"
#include "google/cloud/background_threads.h"
#include "google/cloud/common_options.h"
#include "google/cloud/credentials.h"
#include "google/cloud/grpc_options.h"
#include "google/cloud/internal/pagination_range.h"
#include "google/cloud/internal/unified_grpc_credentials.h"
#include <memory>
#include <utility>

namespace google {
namespace cloud {
namespace iam_v3 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

PrincipalAccessBoundaryPoliciesConnection::
    ~PrincipalAccessBoundaryPoliciesConnection() = default;

future<StatusOr<google::iam::v3::PrincipalAccessBoundaryPolicy>>
PrincipalAccessBoundaryPoliciesConnection::CreatePrincipalAccessBoundaryPolicy(
    google::iam::v3::CreatePrincipalAccessBoundaryPolicyRequest const&) {
  return google::cloud::make_ready_future<
      StatusOr<google::iam::v3::PrincipalAccessBoundaryPolicy>>(
      Status(StatusCode::kUnimplemented, "not implemented"));
}

StatusOr<google::longrunning::Operation>
PrincipalAccessBoundaryPoliciesConnection::CreatePrincipalAccessBoundaryPolicy(
    NoAwaitTag,
    google::iam::v3::CreatePrincipalAccessBoundaryPolicyRequest const&) {
  return StatusOr<google::longrunning::Operation>(
      Status(StatusCode::kUnimplemented, "not implemented"));
}

future<StatusOr<google::iam::v3::PrincipalAccessBoundaryPolicy>>
PrincipalAccessBoundaryPoliciesConnection::CreatePrincipalAccessBoundaryPolicy(
    google::longrunning::Operation const&) {
  return google::cloud::make_ready_future<
      StatusOr<google::iam::v3::PrincipalAccessBoundaryPolicy>>(
      Status(StatusCode::kUnimplemented, "not implemented"));
}

StatusOr<google::iam::v3::PrincipalAccessBoundaryPolicy>
PrincipalAccessBoundaryPoliciesConnection::GetPrincipalAccessBoundaryPolicy(
    google::iam::v3::GetPrincipalAccessBoundaryPolicyRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

future<StatusOr<google::iam::v3::PrincipalAccessBoundaryPolicy>>
PrincipalAccessBoundaryPoliciesConnection::UpdatePrincipalAccessBoundaryPolicy(
    google::iam::v3::UpdatePrincipalAccessBoundaryPolicyRequest const&) {
  return google::cloud::make_ready_future<
      StatusOr<google::iam::v3::PrincipalAccessBoundaryPolicy>>(
      Status(StatusCode::kUnimplemented, "not implemented"));
}

StatusOr<google::longrunning::Operation>
PrincipalAccessBoundaryPoliciesConnection::UpdatePrincipalAccessBoundaryPolicy(
    NoAwaitTag,
    google::iam::v3::UpdatePrincipalAccessBoundaryPolicyRequest const&) {
  return StatusOr<google::longrunning::Operation>(
      Status(StatusCode::kUnimplemented, "not implemented"));
}

future<StatusOr<google::iam::v3::PrincipalAccessBoundaryPolicy>>
PrincipalAccessBoundaryPoliciesConnection::UpdatePrincipalAccessBoundaryPolicy(
    google::longrunning::Operation const&) {
  return google::cloud::make_ready_future<
      StatusOr<google::iam::v3::PrincipalAccessBoundaryPolicy>>(
      Status(StatusCode::kUnimplemented, "not implemented"));
}

future<StatusOr<google::iam::v3::OperationMetadata>>
PrincipalAccessBoundaryPoliciesConnection::DeletePrincipalAccessBoundaryPolicy(
    google::iam::v3::DeletePrincipalAccessBoundaryPolicyRequest const&) {
  return google::cloud::make_ready_future<
      StatusOr<google::iam::v3::OperationMetadata>>(
      Status(StatusCode::kUnimplemented, "not implemented"));
}

StatusOr<google::longrunning::Operation>
PrincipalAccessBoundaryPoliciesConnection::DeletePrincipalAccessBoundaryPolicy(
    NoAwaitTag,
    google::iam::v3::DeletePrincipalAccessBoundaryPolicyRequest const&) {
  return StatusOr<google::longrunning::Operation>(
      Status(StatusCode::kUnimplemented, "not implemented"));
}

future<StatusOr<google::iam::v3::OperationMetadata>>
PrincipalAccessBoundaryPoliciesConnection::DeletePrincipalAccessBoundaryPolicy(
    google::longrunning::Operation const&) {
  return google::cloud::make_ready_future<
      StatusOr<google::iam::v3::OperationMetadata>>(
      Status(StatusCode::kUnimplemented, "not implemented"));
}

StreamRange<google::iam::v3::PrincipalAccessBoundaryPolicy>
PrincipalAccessBoundaryPoliciesConnection::ListPrincipalAccessBoundaryPolicies(
    google::iam::v3::
        ListPrincipalAccessBoundaryPoliciesRequest) {  // NOLINT(performance-unnecessary-value-param)
  return google::cloud::internal::MakeUnimplementedPaginationRange<
      StreamRange<google::iam::v3::PrincipalAccessBoundaryPolicy>>();
}

StreamRange<google::iam::v3::PolicyBinding>
PrincipalAccessBoundaryPoliciesConnection::
    SearchPrincipalAccessBoundaryPolicyBindings(
        google::iam::v3::
            SearchPrincipalAccessBoundaryPolicyBindingsRequest) {  // NOLINT(performance-unnecessary-value-param)
  return google::cloud::internal::MakeUnimplementedPaginationRange<
      StreamRange<google::iam::v3::PolicyBinding>>();
}

StatusOr<google::longrunning::Operation>
PrincipalAccessBoundaryPoliciesConnection::GetOperation(
    google::longrunning::GetOperationRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

std::shared_ptr<PrincipalAccessBoundaryPoliciesConnection>
MakePrincipalAccessBoundaryPoliciesConnection(Options options) {
  internal::CheckExpectedOptions<
      CommonOptionList, GrpcOptionList, UnifiedCredentialsOptionList,
      PrincipalAccessBoundaryPoliciesPolicyOptionList>(options, __func__);
  options = iam_v3_internal::PrincipalAccessBoundaryPoliciesDefaultOptions(
      std::move(options));
  auto background = internal::MakeBackgroundThreadsFactory(options)();
  auto auth = internal::CreateAuthenticationStrategy(background->cq(), options);
  auto stub = iam_v3_internal::CreateDefaultPrincipalAccessBoundaryPoliciesStub(
      std::move(auth), options);
  return iam_v3_internal::MakePrincipalAccessBoundaryPoliciesTracingConnection(
      std::make_shared<
          iam_v3_internal::PrincipalAccessBoundaryPoliciesConnectionImpl>(
          std::move(background), std::move(stub), std::move(options)));
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace iam_v3
}  // namespace cloud
}  // namespace google
