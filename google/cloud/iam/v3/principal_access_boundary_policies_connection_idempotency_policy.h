// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/iam/v3/principal_access_boundary_policies_service.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_IAM_V3_PRINCIPAL_ACCESS_BOUNDARY_POLICIES_CONNECTION_IDEMPOTENCY_POLICY_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_IAM_V3_PRINCIPAL_ACCESS_BOUNDARY_POLICIES_CONNECTION_IDEMPOTENCY_POLICY_H

#include "google/cloud/idempotency.h"
#include "google/cloud/version.h"
#include <google/iam/v3/principal_access_boundary_policies_service.grpc.pb.h>
#include <google/longrunning/operations.grpc.pb.h>
#include <memory>

namespace google {
namespace cloud {
namespace iam_v3 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

class PrincipalAccessBoundaryPoliciesConnectionIdempotencyPolicy {
 public:
  virtual ~PrincipalAccessBoundaryPoliciesConnectionIdempotencyPolicy();

  /// Create a new copy of this object.
  virtual std::unique_ptr<
      PrincipalAccessBoundaryPoliciesConnectionIdempotencyPolicy>
  clone() const;

  virtual google::cloud::Idempotency CreatePrincipalAccessBoundaryPolicy(
      google::iam::v3::CreatePrincipalAccessBoundaryPolicyRequest const&
          request);

  virtual google::cloud::Idempotency GetPrincipalAccessBoundaryPolicy(
      google::iam::v3::GetPrincipalAccessBoundaryPolicyRequest const& request);

  virtual google::cloud::Idempotency UpdatePrincipalAccessBoundaryPolicy(
      google::iam::v3::UpdatePrincipalAccessBoundaryPolicyRequest const&
          request);

  virtual google::cloud::Idempotency DeletePrincipalAccessBoundaryPolicy(
      google::iam::v3::DeletePrincipalAccessBoundaryPolicyRequest const&
          request);

  virtual google::cloud::Idempotency ListPrincipalAccessBoundaryPolicies(
      google::iam::v3::ListPrincipalAccessBoundaryPoliciesRequest request);

  virtual google::cloud::Idempotency
  SearchPrincipalAccessBoundaryPolicyBindings(
      google::iam::v3::SearchPrincipalAccessBoundaryPolicyBindingsRequest
          request);

  virtual google::cloud::Idempotency GetOperation(
      google::longrunning::GetOperationRequest const& request);
};

std::unique_ptr<PrincipalAccessBoundaryPoliciesConnectionIdempotencyPolicy>
MakeDefaultPrincipalAccessBoundaryPoliciesConnectionIdempotencyPolicy();

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace iam_v3
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_IAM_V3_PRINCIPAL_ACCESS_BOUNDARY_POLICIES_CONNECTION_IDEMPOTENCY_POLICY_H
