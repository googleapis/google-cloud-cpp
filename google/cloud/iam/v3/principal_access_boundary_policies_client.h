// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/iam/v3/principal_access_boundary_policies_service.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_IAM_V3_PRINCIPAL_ACCESS_BOUNDARY_POLICIES_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_IAM_V3_PRINCIPAL_ACCESS_BOUNDARY_POLICIES_CLIENT_H

#include "google/cloud/iam/v3/principal_access_boundary_policies_connection.h"
#include "google/cloud/future.h"
#include "google/cloud/no_await_tag.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <google/longrunning/operations.grpc.pb.h>
#include <map>
#include <memory>
#include <string>

namespace google {
namespace cloud {
namespace iam_v3 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Manages Identity and Access Management (IAM) principal access boundary
/// policies.
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class PrincipalAccessBoundaryPoliciesClient {
 public:
  explicit PrincipalAccessBoundaryPoliciesClient(
      std::shared_ptr<PrincipalAccessBoundaryPoliciesConnection> connection,
      Options opts = {});
  ~PrincipalAccessBoundaryPoliciesClient();

  ///@{
  /// @name Copy and move support
  PrincipalAccessBoundaryPoliciesClient(
      PrincipalAccessBoundaryPoliciesClient const&) = default;
  PrincipalAccessBoundaryPoliciesClient& operator=(
      PrincipalAccessBoundaryPoliciesClient const&) = default;
  PrincipalAccessBoundaryPoliciesClient(
      PrincipalAccessBoundaryPoliciesClient&&) = default;
  PrincipalAccessBoundaryPoliciesClient& operator=(
      PrincipalAccessBoundaryPoliciesClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(PrincipalAccessBoundaryPoliciesClient const& a,
                         PrincipalAccessBoundaryPoliciesClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(PrincipalAccessBoundaryPoliciesClient const& a,
                         PrincipalAccessBoundaryPoliciesClient const& b) {
    return !(a == b);
  }
  ///@}

  // clang-format off
  ///
  /// Creates a principal access boundary policy, and returns a long running
  /// operation.
  ///
  /// @param parent  Required. The parent resource where this principal access boundary policy
  ///  will be created. Only organization is supported now.
  ///  @n
  ///  Format:
  ///    `organizations/{organization_id}/locations/{location}`
  /// @param principal_access_boundary_policy  Required. The principal access boundary policy to create.
  /// @param principal_access_boundary_policy_id  Required. The ID to use for the principal access boundary policy, which
  ///  will become the final component of the principal access boundary policy's
  ///  resource name.
  ///  @n
  ///  This value must start with a lowercase letter followed by up to 62
  ///  lowercase letters, numbers, hyphens, or dots. Pattern,
  ///  /[a-z][a-z0-9-\.]{2,62}/.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return A [`future`] that becomes satisfied when the LRO
  ///     ([Long Running Operation]) completes or the polling policy in effect
  ///     for this call is exhausted. The future is satisfied with an error if
  ///     the LRO completes with an error or the polling policy is exhausted.
  ///     In this case the [`StatusOr`] returned by the future contains the
  ///     error. If the LRO completes successfully the value of the future
  ///     contains the LRO's result. For this RPC the result is a
  ///     [google.iam.v3.PrincipalAccessBoundaryPolicy] proto message.
  ///     The C++ class representing this message is created by Protobuf, using
  ///     the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [Long Running Operation]: https://google.aip.dev/151
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.iam.v3.CreatePrincipalAccessBoundaryPolicyRequest]: @googleapis_reference_link{google/iam/v3/principal_access_boundary_policies_service.proto#L122}
  /// [google.iam.v3.PrincipalAccessBoundaryPolicy]: @googleapis_reference_link{google/iam/v3/principal_access_boundary_policy_resources.proto#L31}
  ///
  // clang-format on
  future<StatusOr<google::iam::v3::PrincipalAccessBoundaryPolicy>>
  CreatePrincipalAccessBoundaryPolicy(
      std::string const& parent,
      google::iam::v3::PrincipalAccessBoundaryPolicy const&
          principal_access_boundary_policy,
      std::string const& principal_access_boundary_policy_id,
      Options opts = {});

  // clang-format off
  ///
  /// @copybrief CreatePrincipalAccessBoundaryPolicy
  ///
  /// Specifying the [`NoAwaitTag`] immediately returns the
  /// [`google::longrunning::Operation`] that corresponds to the Long Running
  /// Operation that has been started. No polling for operation status occurs.
  ///
  /// [`NoAwaitTag`]: @ref google::cloud::NoAwaitTag
  ///
  // clang-format on
  StatusOr<google::longrunning::Operation> CreatePrincipalAccessBoundaryPolicy(
      NoAwaitTag, std::string const& parent,
      google::iam::v3::PrincipalAccessBoundaryPolicy const&
          principal_access_boundary_policy,
      std::string const& principal_access_boundary_policy_id,
      Options opts = {});

  // clang-format off
  ///
  /// Creates a principal access boundary policy, and returns a long running
  /// operation.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.iam.v3.CreatePrincipalAccessBoundaryPolicyRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return A [`future`] that becomes satisfied when the LRO
  ///     ([Long Running Operation]) completes or the polling policy in effect
  ///     for this call is exhausted. The future is satisfied with an error if
  ///     the LRO completes with an error or the polling policy is exhausted.
  ///     In this case the [`StatusOr`] returned by the future contains the
  ///     error. If the LRO completes successfully the value of the future
  ///     contains the LRO's result. For this RPC the result is a
  ///     [google.iam.v3.PrincipalAccessBoundaryPolicy] proto message.
  ///     The C++ class representing this message is created by Protobuf, using
  ///     the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [Long Running Operation]: https://google.aip.dev/151
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.iam.v3.CreatePrincipalAccessBoundaryPolicyRequest]: @googleapis_reference_link{google/iam/v3/principal_access_boundary_policies_service.proto#L122}
  /// [google.iam.v3.PrincipalAccessBoundaryPolicy]: @googleapis_reference_link{google/iam/v3/principal_access_boundary_policy_resources.proto#L31}
  ///
  // clang-format on
  future<StatusOr<google::iam::v3::PrincipalAccessBoundaryPolicy>>
  CreatePrincipalAccessBoundaryPolicy(
      google::iam::v3::CreatePrincipalAccessBoundaryPolicyRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// @copybrief CreatePrincipalAccessBoundaryPolicy
  ///
  /// Specifying the [`NoAwaitTag`] immediately returns the
  /// [`google::longrunning::Operation`] that corresponds to the Long Running
  /// Operation that has been started. No polling for operation status occurs.
  ///
  /// [`NoAwaitTag`]: @ref google::cloud::NoAwaitTag
  ///
  // clang-format on
  StatusOr<google::longrunning::Operation> CreatePrincipalAccessBoundaryPolicy(
      NoAwaitTag,
      google::iam::v3::CreatePrincipalAccessBoundaryPolicyRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// @copybrief CreatePrincipalAccessBoundaryPolicy
  ///
  /// This method accepts a `google::longrunning::Operation` that corresponds
  /// to a previously started Long Running Operation (LRO) and polls the status
  /// of the LRO in the background.
  ///
  // clang-format on
  future<StatusOr<google::iam::v3::PrincipalAccessBoundaryPolicy>>
  CreatePrincipalAccessBoundaryPolicy(
      google::longrunning::Operation const& operation, Options opts = {});

  // clang-format off
  ///
  /// Gets a principal access boundary policy.
  ///
  /// @param name  Required. The name of the principal access boundary policy to retrieve.
  ///  @n
  ///  Format:
  ///    `organizations/{organization_id}/locations/{location}/principalAccessBoundaryPolicies/{principal_access_boundary_policy_id}`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.iam.v3.PrincipalAccessBoundaryPolicy])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.iam.v3.GetPrincipalAccessBoundaryPolicyRequest]: @googleapis_reference_link{google/iam/v3/principal_access_boundary_policies_service.proto#L155}
  /// [google.iam.v3.PrincipalAccessBoundaryPolicy]: @googleapis_reference_link{google/iam/v3/principal_access_boundary_policy_resources.proto#L31}
  ///
  // clang-format on
  StatusOr<google::iam::v3::PrincipalAccessBoundaryPolicy>
  GetPrincipalAccessBoundaryPolicy(std::string const& name, Options opts = {});

  // clang-format off
  ///
  /// Gets a principal access boundary policy.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.iam.v3.GetPrincipalAccessBoundaryPolicyRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.iam.v3.PrincipalAccessBoundaryPolicy])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.iam.v3.GetPrincipalAccessBoundaryPolicyRequest]: @googleapis_reference_link{google/iam/v3/principal_access_boundary_policies_service.proto#L155}
  /// [google.iam.v3.PrincipalAccessBoundaryPolicy]: @googleapis_reference_link{google/iam/v3/principal_access_boundary_policy_resources.proto#L31}
  ///
  // clang-format on
  StatusOr<google::iam::v3::PrincipalAccessBoundaryPolicy>
  GetPrincipalAccessBoundaryPolicy(
      google::iam::v3::GetPrincipalAccessBoundaryPolicyRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Updates a principal access boundary policy.
  ///
  /// @param principal_access_boundary_policy  Required. The principal access boundary policy to update.
  ///  @n
  ///  The principal access boundary policy's `name` field is used to identify the
  ///  policy to update.
  /// @param update_mask  Optional. The list of fields to update
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return A [`future`] that becomes satisfied when the LRO
  ///     ([Long Running Operation]) completes or the polling policy in effect
  ///     for this call is exhausted. The future is satisfied with an error if
  ///     the LRO completes with an error or the polling policy is exhausted.
  ///     In this case the [`StatusOr`] returned by the future contains the
  ///     error. If the LRO completes successfully the value of the future
  ///     contains the LRO's result. For this RPC the result is a
  ///     [google.iam.v3.PrincipalAccessBoundaryPolicy] proto message.
  ///     The C++ class representing this message is created by Protobuf, using
  ///     the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [Long Running Operation]: https://google.aip.dev/151
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.iam.v3.PrincipalAccessBoundaryPolicy]: @googleapis_reference_link{google/iam/v3/principal_access_boundary_policy_resources.proto#L31}
  /// [google.iam.v3.UpdatePrincipalAccessBoundaryPolicyRequest]: @googleapis_reference_link{google/iam/v3/principal_access_boundary_policies_service.proto#L169}
  ///
  // clang-format on
  future<StatusOr<google::iam::v3::PrincipalAccessBoundaryPolicy>>
  UpdatePrincipalAccessBoundaryPolicy(
      google::iam::v3::PrincipalAccessBoundaryPolicy const&
          principal_access_boundary_policy,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  // clang-format off
  ///
  /// @copybrief UpdatePrincipalAccessBoundaryPolicy
  ///
  /// Specifying the [`NoAwaitTag`] immediately returns the
  /// [`google::longrunning::Operation`] that corresponds to the Long Running
  /// Operation that has been started. No polling for operation status occurs.
  ///
  /// [`NoAwaitTag`]: @ref google::cloud::NoAwaitTag
  ///
  // clang-format on
  StatusOr<google::longrunning::Operation> UpdatePrincipalAccessBoundaryPolicy(
      NoAwaitTag,
      google::iam::v3::PrincipalAccessBoundaryPolicy const&
          principal_access_boundary_policy,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  // clang-format off
  ///
  /// Updates a principal access boundary policy.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.iam.v3.UpdatePrincipalAccessBoundaryPolicyRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return A [`future`] that becomes satisfied when the LRO
  ///     ([Long Running Operation]) completes or the polling policy in effect
  ///     for this call is exhausted. The future is satisfied with an error if
  ///     the LRO completes with an error or the polling policy is exhausted.
  ///     In this case the [`StatusOr`] returned by the future contains the
  ///     error. If the LRO completes successfully the value of the future
  ///     contains the LRO's result. For this RPC the result is a
  ///     [google.iam.v3.PrincipalAccessBoundaryPolicy] proto message.
  ///     The C++ class representing this message is created by Protobuf, using
  ///     the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [Long Running Operation]: https://google.aip.dev/151
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.iam.v3.PrincipalAccessBoundaryPolicy]: @googleapis_reference_link{google/iam/v3/principal_access_boundary_policy_resources.proto#L31}
  /// [google.iam.v3.UpdatePrincipalAccessBoundaryPolicyRequest]: @googleapis_reference_link{google/iam/v3/principal_access_boundary_policies_service.proto#L169}
  ///
  // clang-format on
  future<StatusOr<google::iam::v3::PrincipalAccessBoundaryPolicy>>
  UpdatePrincipalAccessBoundaryPolicy(
      google::iam::v3::UpdatePrincipalAccessBoundaryPolicyRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// @copybrief UpdatePrincipalAccessBoundaryPolicy
  ///
  /// Specifying the [`NoAwaitTag`] immediately returns the
  /// [`google::longrunning::Operation`] that corresponds to the Long Running
  /// Operation that has been started. No polling for operation status occurs.
  ///
  /// [`NoAwaitTag`]: @ref google::cloud::NoAwaitTag
  ///
  // clang-format on
  StatusOr<google::longrunning::Operation> UpdatePrincipalAccessBoundaryPolicy(
      NoAwaitTag,
      google::iam::v3::UpdatePrincipalAccessBoundaryPolicyRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// @copybrief UpdatePrincipalAccessBoundaryPolicy
  ///
  /// This method accepts a `google::longrunning::Operation` that corresponds
  /// to a previously started Long Running Operation (LRO) and polls the status
  /// of the LRO in the background.
  ///
  // clang-format on
  future<StatusOr<google::iam::v3::PrincipalAccessBoundaryPolicy>>
  UpdatePrincipalAccessBoundaryPolicy(
      google::longrunning::Operation const& operation, Options opts = {});

  // clang-format off
  ///
  /// Deletes a principal access boundary policy.
  ///
  /// @param name  Required. The name of the principal access boundary policy to delete.
  ///  @n
  ///  Format:
  ///    `organizations/{organization_id}/locations/{location}/principalAccessBoundaryPolicies/{principal_access_boundary_policy_id}`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return A [`future`] that becomes satisfied when the LRO
  ///     ([Long Running Operation]) completes or the polling policy in effect
  ///     for this call is exhausted. The future is satisfied with an error if
  ///     the LRO completes with an error or the polling policy is exhausted.
  ///     In this case the [`StatusOr`] returned by the future contains the
  ///     error. If the LRO completes successfully the value of the future
  ///     contains the LRO's result. For this RPC the result is a
  ///     [google.iam.v3.OperationMetadata] proto message.
  ///     The C++ class representing this message is created by Protobuf, using
  ///     the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [Long Running Operation]: https://google.aip.dev/151
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.iam.v3.DeletePrincipalAccessBoundaryPolicyRequest]: @googleapis_reference_link{google/iam/v3/principal_access_boundary_policies_service.proto#L187}
  /// [google.iam.v3.OperationMetadata]: @googleapis_reference_link{google/iam/v3/operation_metadata.proto#L29}
  ///
  // clang-format on
  future<StatusOr<google::iam::v3::OperationMetadata>>
  DeletePrincipalAccessBoundaryPolicy(std::string const& name,
                                      Options opts = {});

  // clang-format off
  ///
  /// @copybrief DeletePrincipalAccessBoundaryPolicy
  ///
  /// Specifying the [`NoAwaitTag`] immediately returns the
  /// [`google::longrunning::Operation`] that corresponds to the Long Running
  /// Operation that has been started. No polling for operation status occurs.
  ///
  /// [`NoAwaitTag`]: @ref google::cloud::NoAwaitTag
  ///
  // clang-format on
  StatusOr<google::longrunning::Operation> DeletePrincipalAccessBoundaryPolicy(
      NoAwaitTag, std::string const& name, Options opts = {});

  // clang-format off
  ///
  /// Deletes a principal access boundary policy.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.iam.v3.DeletePrincipalAccessBoundaryPolicyRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return A [`future`] that becomes satisfied when the LRO
  ///     ([Long Running Operation]) completes or the polling policy in effect
  ///     for this call is exhausted. The future is satisfied with an error if
  ///     the LRO completes with an error or the polling policy is exhausted.
  ///     In this case the [`StatusOr`] returned by the future contains the
  ///     error. If the LRO completes successfully the value of the future
  ///     contains the LRO's result. For this RPC the result is a
  ///     [google.iam.v3.OperationMetadata] proto message.
  ///     The C++ class representing this message is created by Protobuf, using
  ///     the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [Long Running Operation]: https://google.aip.dev/151
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.iam.v3.DeletePrincipalAccessBoundaryPolicyRequest]: @googleapis_reference_link{google/iam/v3/principal_access_boundary_policies_service.proto#L187}
  /// [google.iam.v3.OperationMetadata]: @googleapis_reference_link{google/iam/v3/operation_metadata.proto#L29}
  ///
  // clang-format on
  future<StatusOr<google::iam::v3::OperationMetadata>>
  DeletePrincipalAccessBoundaryPolicy(
      google::iam::v3::DeletePrincipalAccessBoundaryPolicyRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// @copybrief DeletePrincipalAccessBoundaryPolicy
  ///
  /// Specifying the [`NoAwaitTag`] immediately returns the
  /// [`google::longrunning::Operation`] that corresponds to the Long Running
  /// Operation that has been started. No polling for operation status occurs.
  ///
  /// [`NoAwaitTag`]: @ref google::cloud::NoAwaitTag
  ///
  // clang-format on
  StatusOr<google::longrunning::Operation> DeletePrincipalAccessBoundaryPolicy(
      NoAwaitTag,
      google::iam::v3::DeletePrincipalAccessBoundaryPolicyRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// @copybrief DeletePrincipalAccessBoundaryPolicy
  ///
  /// This method accepts a `google::longrunning::Operation` that corresponds
  /// to a previously started Long Running Operation (LRO) and polls the status
  /// of the LRO in the background.
  ///
  // clang-format on
  future<StatusOr<google::iam::v3::OperationMetadata>>
  DeletePrincipalAccessBoundaryPolicy(
      google::longrunning::Operation const& operation, Options opts = {});

  // clang-format off
  ///
  /// Lists principal access boundary policies.
  ///
  /// @param parent  Required. The parent resource, which owns the collection of principal
  ///  access boundary policies.
  ///  @n
  ///  Format:
  ///    `organizations/{organization_id}/locations/{location}`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.iam.v3.PrincipalAccessBoundaryPolicy], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.iam.v3.ListPrincipalAccessBoundaryPoliciesRequest]: @googleapis_reference_link{google/iam/v3/principal_access_boundary_policies_service.proto#L213}
  /// [google.iam.v3.PrincipalAccessBoundaryPolicy]: @googleapis_reference_link{google/iam/v3/principal_access_boundary_policy_resources.proto#L31}
  ///
  // clang-format on
  StreamRange<google::iam::v3::PrincipalAccessBoundaryPolicy>
  ListPrincipalAccessBoundaryPolicies(std::string const& parent,
                                      Options opts = {});

  // clang-format off
  ///
  /// Lists principal access boundary policies.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.iam.v3.ListPrincipalAccessBoundaryPoliciesRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.iam.v3.PrincipalAccessBoundaryPolicy], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.iam.v3.ListPrincipalAccessBoundaryPoliciesRequest]: @googleapis_reference_link{google/iam/v3/principal_access_boundary_policies_service.proto#L213}
  /// [google.iam.v3.PrincipalAccessBoundaryPolicy]: @googleapis_reference_link{google/iam/v3/principal_access_boundary_policy_resources.proto#L31}
  ///
  // clang-format on
  StreamRange<google::iam::v3::PrincipalAccessBoundaryPolicy>
  ListPrincipalAccessBoundaryPolicies(
      google::iam::v3::ListPrincipalAccessBoundaryPoliciesRequest request,
      Options opts = {});

  // clang-format off
  ///
  /// Returns all policy bindings that bind a specific policy if a user has
  /// searchPolicyBindings permission on that policy.
  ///
  /// @param name  Required. The name of the principal access boundary policy.
  ///  Format:
  ///   `organizations/{organization_id}/locations/{location}/principalAccessBoundaryPolicies/{principal_access_boundary_policy_id}`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.iam.v3.PolicyBinding], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.iam.v3.PolicyBinding]: @googleapis_reference_link{google/iam/v3/policy_binding_resources.proto#L32}
  /// [google.iam.v3.SearchPrincipalAccessBoundaryPolicyBindingsRequest]: @googleapis_reference_link{google/iam/v3/principal_access_boundary_policies_service.proto#L254}
  ///
  // clang-format on
  StreamRange<google::iam::v3::PolicyBinding>
  SearchPrincipalAccessBoundaryPolicyBindings(std::string const& name,
                                              Options opts = {});

  // clang-format off
  ///
  /// Returns all policy bindings that bind a specific policy if a user has
  /// searchPolicyBindings permission on that policy.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.iam.v3.SearchPrincipalAccessBoundaryPolicyBindingsRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.iam.v3.PolicyBinding], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.iam.v3.PolicyBinding]: @googleapis_reference_link{google/iam/v3/policy_binding_resources.proto#L32}
  /// [google.iam.v3.SearchPrincipalAccessBoundaryPolicyBindingsRequest]: @googleapis_reference_link{google/iam/v3/principal_access_boundary_policies_service.proto#L254}
  ///
  // clang-format on
  StreamRange<google::iam::v3::PolicyBinding>
  SearchPrincipalAccessBoundaryPolicyBindings(
      google::iam::v3::SearchPrincipalAccessBoundaryPolicyBindingsRequest
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Gets the latest state of a long-running operation.  Clients can use this
  /// method to poll the operation result at intervals as recommended by the API
  /// service.
  ///
  /// @param name  The name of the operation resource.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.longrunning.Operation])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.longrunning.GetOperationRequest]: @googleapis_reference_link{google/longrunning/operations.proto#L160}
  /// [google.longrunning.Operation]: @googleapis_reference_link{google/longrunning/operations.proto#L121}
  ///
  // clang-format on
  StatusOr<google::longrunning::Operation> GetOperation(std::string const& name,
                                                        Options opts = {});

  // clang-format off
  ///
  /// Gets the latest state of a long-running operation.  Clients can use this
  /// method to poll the operation result at intervals as recommended by the API
  /// service.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.longrunning.GetOperationRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.longrunning.Operation])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.longrunning.GetOperationRequest]: @googleapis_reference_link{google/longrunning/operations.proto#L160}
  /// [google.longrunning.Operation]: @googleapis_reference_link{google/longrunning/operations.proto#L121}
  ///
  // clang-format on
  StatusOr<google::longrunning::Operation> GetOperation(
      google::longrunning::GetOperationRequest const& request,
      Options opts = {});

 private:
  std::shared_ptr<PrincipalAccessBoundaryPoliciesConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace iam_v3
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_IAM_V3_PRINCIPAL_ACCESS_BOUNDARY_POLICIES_CLIENT_H
