// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/iam/admin/v1/iam.proto

#include "google/cloud/iam/internal/iam_tracing_connection.h"
#include "google/cloud/internal/opentelemetry.h"
#include <memory>

namespace google {
namespace cloud {
namespace iam_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

#ifdef GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

IAMTracingConnection::IAMTracingConnection(
    std::shared_ptr<iam::IAMConnection> child)
    : child_(std::move(child)) {}

StreamRange<google::iam::admin::v1::ServiceAccount>
IAMTracingConnection::ListServiceAccounts(
    google::iam::admin::v1::ListServiceAccountsRequest request) {
  return child_->ListServiceAccounts(request);
}

StatusOr<google::iam::admin::v1::ServiceAccount>
IAMTracingConnection::GetServiceAccount(
    google::iam::admin::v1::GetServiceAccountRequest const& request) {
  return child_->GetServiceAccount(request);
}

StatusOr<google::iam::admin::v1::ServiceAccount>
IAMTracingConnection::CreateServiceAccount(
    google::iam::admin::v1::CreateServiceAccountRequest const& request) {
  return child_->CreateServiceAccount(request);
}

StatusOr<google::iam::admin::v1::ServiceAccount>
IAMTracingConnection::PatchServiceAccount(
    google::iam::admin::v1::PatchServiceAccountRequest const& request) {
  return child_->PatchServiceAccount(request);
}

Status IAMTracingConnection::DeleteServiceAccount(
    google::iam::admin::v1::DeleteServiceAccountRequest const& request) {
  return child_->DeleteServiceAccount(request);
}

StatusOr<google::iam::admin::v1::UndeleteServiceAccountResponse>
IAMTracingConnection::UndeleteServiceAccount(
    google::iam::admin::v1::UndeleteServiceAccountRequest const& request) {
  return child_->UndeleteServiceAccount(request);
}

Status IAMTracingConnection::EnableServiceAccount(
    google::iam::admin::v1::EnableServiceAccountRequest const& request) {
  return child_->EnableServiceAccount(request);
}

Status IAMTracingConnection::DisableServiceAccount(
    google::iam::admin::v1::DisableServiceAccountRequest const& request) {
  return child_->DisableServiceAccount(request);
}

StatusOr<google::iam::admin::v1::ListServiceAccountKeysResponse>
IAMTracingConnection::ListServiceAccountKeys(
    google::iam::admin::v1::ListServiceAccountKeysRequest const& request) {
  return child_->ListServiceAccountKeys(request);
}

StatusOr<google::iam::admin::v1::ServiceAccountKey>
IAMTracingConnection::GetServiceAccountKey(
    google::iam::admin::v1::GetServiceAccountKeyRequest const& request) {
  return child_->GetServiceAccountKey(request);
}

StatusOr<google::iam::admin::v1::ServiceAccountKey>
IAMTracingConnection::CreateServiceAccountKey(
    google::iam::admin::v1::CreateServiceAccountKeyRequest const& request) {
  return child_->CreateServiceAccountKey(request);
}

StatusOr<google::iam::admin::v1::ServiceAccountKey>
IAMTracingConnection::UploadServiceAccountKey(
    google::iam::admin::v1::UploadServiceAccountKeyRequest const& request) {
  return child_->UploadServiceAccountKey(request);
}

Status IAMTracingConnection::DeleteServiceAccountKey(
    google::iam::admin::v1::DeleteServiceAccountKeyRequest const& request) {
  return child_->DeleteServiceAccountKey(request);
}

Status IAMTracingConnection::DisableServiceAccountKey(
    google::iam::admin::v1::DisableServiceAccountKeyRequest const& request) {
  return child_->DisableServiceAccountKey(request);
}

Status IAMTracingConnection::EnableServiceAccountKey(
    google::iam::admin::v1::EnableServiceAccountKeyRequest const& request) {
  return child_->EnableServiceAccountKey(request);
}

StatusOr<google::iam::v1::Policy> IAMTracingConnection::GetIamPolicy(
    google::iam::v1::GetIamPolicyRequest const& request) {
  return child_->GetIamPolicy(request);
}

StatusOr<google::iam::v1::Policy> IAMTracingConnection::SetIamPolicy(
    google::iam::v1::SetIamPolicyRequest const& request) {
  return child_->SetIamPolicy(request);
}

StatusOr<google::iam::v1::TestIamPermissionsResponse>
IAMTracingConnection::TestIamPermissions(
    google::iam::v1::TestIamPermissionsRequest const& request) {
  return child_->TestIamPermissions(request);
}

StreamRange<google::iam::admin::v1::Role>
IAMTracingConnection::QueryGrantableRoles(
    google::iam::admin::v1::QueryGrantableRolesRequest request) {
  return child_->QueryGrantableRoles(request);
}

StreamRange<google::iam::admin::v1::Role> IAMTracingConnection::ListRoles(
    google::iam::admin::v1::ListRolesRequest request) {
  return child_->ListRoles(request);
}

StatusOr<google::iam::admin::v1::Role> IAMTracingConnection::GetRole(
    google::iam::admin::v1::GetRoleRequest const& request) {
  return child_->GetRole(request);
}

StatusOr<google::iam::admin::v1::Role> IAMTracingConnection::CreateRole(
    google::iam::admin::v1::CreateRoleRequest const& request) {
  return child_->CreateRole(request);
}

StatusOr<google::iam::admin::v1::Role> IAMTracingConnection::UpdateRole(
    google::iam::admin::v1::UpdateRoleRequest const& request) {
  return child_->UpdateRole(request);
}

StatusOr<google::iam::admin::v1::Role> IAMTracingConnection::DeleteRole(
    google::iam::admin::v1::DeleteRoleRequest const& request) {
  return child_->DeleteRole(request);
}

StatusOr<google::iam::admin::v1::Role> IAMTracingConnection::UndeleteRole(
    google::iam::admin::v1::UndeleteRoleRequest const& request) {
  return child_->UndeleteRole(request);
}

StreamRange<google::iam::admin::v1::Permission>
IAMTracingConnection::QueryTestablePermissions(
    google::iam::admin::v1::QueryTestablePermissionsRequest request) {
  return child_->QueryTestablePermissions(request);
}

StatusOr<google::iam::admin::v1::QueryAuditableServicesResponse>
IAMTracingConnection::QueryAuditableServices(
    google::iam::admin::v1::QueryAuditableServicesRequest const& request) {
  return child_->QueryAuditableServices(request);
}

StatusOr<google::iam::admin::v1::LintPolicyResponse>
IAMTracingConnection::LintPolicy(
    google::iam::admin::v1::LintPolicyRequest const& request) {
  return child_->LintPolicy(request);
}

#endif  // GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
namespace gcpcxxV1 = GOOGLE_CLOUD_CPP_NS;  // NOLINT(misc-unused-alias-decls)
}  // namespace iam_internal
}  // namespace cloud
}  // namespace google
