// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/aiplatform/v1/featurestore_online_service.proto

#include "google/cloud/aiplatform/v1/internal/featurestore_online_serving_stub.h"
#include "google/cloud/grpc_error_delegate.h"
#include "google/cloud/status_or.h"
#include <google/cloud/aiplatform/v1/featurestore_online_service.grpc.pb.h>
#include <memory>

namespace google {
namespace cloud {
namespace aiplatform_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

FeaturestoreOnlineServingServiceStub::~FeaturestoreOnlineServingServiceStub() =
    default;

StatusOr<google::cloud::aiplatform::v1::ReadFeatureValuesResponse>
DefaultFeaturestoreOnlineServingServiceStub::ReadFeatureValues(
    grpc::ClientContext& context,
    google::cloud::aiplatform::v1::ReadFeatureValuesRequest const& request) {
  google::cloud::aiplatform::v1::ReadFeatureValuesResponse response;
  auto status = grpc_stub_->ReadFeatureValues(&context, request, &response);
  if (!status.ok()) {
    return google::cloud::MakeStatusFromRpcError(status);
  }
  return response;
}

std::unique_ptr<google::cloud::internal::StreamingReadRpc<
    google::cloud::aiplatform::v1::ReadFeatureValuesResponse>>
DefaultFeaturestoreOnlineServingServiceStub::StreamingReadFeatureValues(
    std::shared_ptr<grpc::ClientContext> context, Options const&,
    google::cloud::aiplatform::v1::StreamingReadFeatureValuesRequest const&
        request) {
  auto stream = grpc_stub_->StreamingReadFeatureValues(context.get(), request);
  return std::make_unique<google::cloud::internal::StreamingReadRpcImpl<
      google::cloud::aiplatform::v1::ReadFeatureValuesResponse>>(
      std::move(context), std::move(stream));
}

StatusOr<google::cloud::aiplatform::v1::WriteFeatureValuesResponse>
DefaultFeaturestoreOnlineServingServiceStub::WriteFeatureValues(
    grpc::ClientContext& context,
    google::cloud::aiplatform::v1::WriteFeatureValuesRequest const& request) {
  google::cloud::aiplatform::v1::WriteFeatureValuesResponse response;
  auto status = grpc_stub_->WriteFeatureValues(&context, request, &response);
  if (!status.ok()) {
    return google::cloud::MakeStatusFromRpcError(status);
  }
  return response;
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace aiplatform_v1_internal
}  // namespace cloud
}  // namespace google
