// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/run/v2/revision.proto

#include "google/cloud/run/internal/revisions_tracing_stub.h"

namespace google {
namespace cloud {
namespace run_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

RevisionsTracingStub::RevisionsTracingStub(std::shared_ptr<RevisionsStub> child)
    : child_(std::move(child)) {}

StatusOr<google::cloud::run::v2::Revision> RevisionsTracingStub::GetRevision(
    grpc::ClientContext& context,
    google::cloud::run::v2::GetRevisionRequest const& request) {
  return child_->GetRevision(context, request);
}

StatusOr<google::cloud::run::v2::ListRevisionsResponse>
RevisionsTracingStub::ListRevisions(
    grpc::ClientContext& context,
    google::cloud::run::v2::ListRevisionsRequest const& request) {
  return child_->ListRevisions(context, request);
}

future<StatusOr<google::longrunning::Operation>>
RevisionsTracingStub::AsyncDeleteRevision(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::run::v2::DeleteRevisionRequest const& request) {
  return child_->AsyncDeleteRevision(cq, std::move(context), request);
}

future<StatusOr<google::longrunning::Operation>>
RevisionsTracingStub::AsyncGetOperation(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::longrunning::GetOperationRequest const& request) {
  return child_->AsyncGetOperation(cq, std::move(context), request);
}

future<Status> RevisionsTracingStub::AsyncCancelOperation(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::longrunning::CancelOperationRequest const& request) {
  return child_->AsyncCancelOperation(cq, std::move(context), request);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace run_internal
}  // namespace cloud
}  // namespace google
