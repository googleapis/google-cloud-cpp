/*!

@mainpage Cloud Run Admin API C++ Client Library

This directory contains an idiomatic C++ client library for
[Cloud Run][cloud-service-docs], a managed compute platform that lets
you run containers directly on top of Google's scalable infrastructure.

Note that this library only provides tools to **manage** Cloud Run resources. To
actually deploy a C++ function to Cloud Run, see the
[Cloud Run for C++ Hello World][hello-world] example, which uses the
[C++ Functions Framework][functions-framework] library.

[hello-world]: https://github.com/GoogleCloudPlatform/cpp-samples/tree/main/cloud-run-hello-world
[functions-framework]: https://github.com/GoogleCloudPlatform/functions-framework-cpp

While this library is **GA**, please note Google Cloud C++ client libraries do **not** follow [Semantic Versioning](https://semver.org/).

@tableofcontents{HTML:2}

## Quickstart

The following shows the code that you'll run in the
`google/cloud/run/quickstart/` directory,
which should give you a taste of the Cloud Run Admin API C++ client library API.

@snippet quickstart.cc all

## Main classes

<!-- inject-client-list-start -->
This library offers multiple `*Client` classes, which are listed below. Each one
of these classes exposes all the RPCs for a service as member functions of the
class. This library groups multiple services because they are part of the same
product or are often used together. A typical example may be the administrative
and data plane operations for a single product.

The library also has other classes that provide helpers, configuration
parameters, and infrastructure to mock the `*Client` classes when testing your
application.

- [\c run_v2::ExecutionsClient](@ref google::cloud::run_v2::ExecutionsClient)
- [\c run_v2::JobsClient](@ref google::cloud::run_v2::JobsClient)
- [\c run_v2::RevisionsClient](@ref google::cloud::run_v2::RevisionsClient)
- [\c run_v2::ServicesClient](@ref google::cloud::run_v2::ServicesClient)
- [\c run_v2::TasksClient](@ref google::cloud::run_v2::TasksClient)
<!-- inject-client-list-end -->

## More Information

- @ref common-error-handling - describes how the library reports errors.
- @ref run-override-endpoint - describes how to override the default
  endpoint.
- @ref run-override-authentication - describes how to change the
  authentication credentials used by the library.
- @ref run-override-retry - describes how to change the default retry
  policies.
- @ref run-env - describes environment variables that can configure the behavior of the library.

[cloud-service-docs]: https://cloud.google.com/run

*/
