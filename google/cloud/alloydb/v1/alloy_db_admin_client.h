// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/alloydb/v1/service.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_ALLOYDB_V1_ALLOY_DB_ADMIN_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_ALLOYDB_V1_ALLOY_DB_ADMIN_CLIENT_H

#include "google/cloud/alloydb/v1/alloy_db_admin_connection.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <google/longrunning/operations.grpc.pb.h>
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace alloydb_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service describing handlers for resources
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class AlloyDBAdminClient {
 public:
  explicit AlloyDBAdminClient(
      std::shared_ptr<AlloyDBAdminConnection> connection, Options opts = {});
  ~AlloyDBAdminClient();

  ///@{
  /// @name Copy and move support
  AlloyDBAdminClient(AlloyDBAdminClient const&) = default;
  AlloyDBAdminClient& operator=(AlloyDBAdminClient const&) = default;
  AlloyDBAdminClient(AlloyDBAdminClient&&) = default;
  AlloyDBAdminClient& operator=(AlloyDBAdminClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(AlloyDBAdminClient const& a,
                         AlloyDBAdminClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(AlloyDBAdminClient const& a,
                         AlloyDBAdminClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Lists Clusters in a given project and location.
  ///
  /// @param parent  Required. The name of the parent resource. For the required
  /// format, see the
  ///  comment on the Cluster.name field. Additionally, you can perform an
  ///  aggregated list operation by specifying a value with the following
  ///  format:
  ///   * projects/{project}/locations/-
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Cluster,google/cloud/alloydb/v1/resources.proto#L300}
  ///
  /// [google.cloud.alloydb.v1.Cluster]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L300}
  /// [google.cloud.alloydb.v1.ListClustersRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L291}
  ///
  StreamRange<google::cloud::alloydb::v1::Cluster> ListClusters(
      std::string const& parent, Options opts = {});

  ///
  /// Lists Clusters in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::alloydb::v1::ListClustersRequest,google/cloud/alloydb/v1/service.proto#L291}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Cluster,google/cloud/alloydb/v1/resources.proto#L300}
  ///
  /// [google.cloud.alloydb.v1.Cluster]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L300}
  /// [google.cloud.alloydb.v1.ListClustersRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L291}
  ///
  StreamRange<google::cloud::alloydb::v1::Cluster> ListClusters(
      google::cloud::alloydb::v1::ListClustersRequest request,
      Options opts = {});

  ///
  /// Gets details of a single Cluster.
  ///
  /// @param name  Required. The name of the resource. For the required format,
  /// see the
  ///  comment on the Cluster.name field.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Cluster,google/cloud/alloydb/v1/resources.proto#L300}
  ///
  /// [google.cloud.alloydb.v1.Cluster]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L300}
  /// [google.cloud.alloydb.v1.GetClusterRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L330}
  ///
  StatusOr<google::cloud::alloydb::v1::Cluster> GetCluster(
      std::string const& name, Options opts = {});

  ///
  /// Gets details of a single Cluster.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::alloydb::v1::GetClusterRequest,google/cloud/alloydb/v1/service.proto#L330}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Cluster,google/cloud/alloydb/v1/resources.proto#L300}
  ///
  /// [google.cloud.alloydb.v1.Cluster]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L300}
  /// [google.cloud.alloydb.v1.GetClusterRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L330}
  ///
  StatusOr<google::cloud::alloydb::v1::Cluster> GetCluster(
      google::cloud::alloydb::v1::GetClusterRequest const& request,
      Options opts = {});

  ///
  /// Creates a new Cluster in a given project and location.
  ///
  /// @param parent  Required. The name of the parent resource. For the required
  /// format, see the
  ///  comment on the Cluster.name field.
  /// @param cluster  Required. The resource being created
  /// @param cluster_id  Required. ID of the requesting object.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Cluster,google/cloud/alloydb/v1/resources.proto#L300}
  ///
  /// [google.cloud.alloydb.v1.Cluster]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L300}
  /// [google.cloud.alloydb.v1.CreateClusterRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L340}
  ///
  future<StatusOr<google::cloud::alloydb::v1::Cluster>> CreateCluster(
      std::string const& parent,
      google::cloud::alloydb::v1::Cluster const& cluster,
      std::string const& cluster_id, Options opts = {});

  ///
  /// Creates a new Cluster in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::alloydb::v1::CreateClusterRequest,google/cloud/alloydb/v1/service.proto#L340}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Cluster,google/cloud/alloydb/v1/resources.proto#L300}
  ///
  /// [google.cloud.alloydb.v1.Cluster]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L300}
  /// [google.cloud.alloydb.v1.CreateClusterRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L340}
  ///
  future<StatusOr<google::cloud::alloydb::v1::Cluster>> CreateCluster(
      google::cloud::alloydb::v1::CreateClusterRequest const& request,
      Options opts = {});

  ///
  /// Updates the parameters of a single Cluster.
  ///
  /// @param cluster  Required. The resource being updated
  /// @param update_mask  Optional. Field mask is used to specify the fields to
  /// be overwritten in the
  ///  Cluster resource by the update.
  ///  The fields specified in the update_mask are relative to the resource, not
  ///  the full request. A field will be overwritten if it is in the mask. If
  ///  the user does not provide a mask then all fields will be overwritten.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Cluster,google/cloud/alloydb/v1/resources.proto#L300}
  ///
  /// [google.cloud.alloydb.v1.Cluster]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L300}
  /// [google.cloud.alloydb.v1.UpdateClusterRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L378}
  ///
  future<StatusOr<google::cloud::alloydb::v1::Cluster>> UpdateCluster(
      google::cloud::alloydb::v1::Cluster const& cluster,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Updates the parameters of a single Cluster.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::alloydb::v1::UpdateClusterRequest,google/cloud/alloydb/v1/service.proto#L378}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Cluster,google/cloud/alloydb/v1/resources.proto#L300}
  ///
  /// [google.cloud.alloydb.v1.Cluster]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L300}
  /// [google.cloud.alloydb.v1.UpdateClusterRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L378}
  ///
  future<StatusOr<google::cloud::alloydb::v1::Cluster>> UpdateCluster(
      google::cloud::alloydb::v1::UpdateClusterRequest const& request,
      Options opts = {});

  ///
  /// Deletes a single Cluster.
  ///
  /// @param name  Required. The name of the resource. For the required format,
  /// see the
  ///  comment on the Cluster.name field.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::OperationMetadata,google/cloud/alloydb/v1/service.proto#L1038}
  ///
  /// [google.cloud.alloydb.v1.DeleteClusterRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L416}
  /// [google.cloud.alloydb.v1.OperationMetadata]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L1038}
  ///
  future<StatusOr<google::cloud::alloydb::v1::OperationMetadata>> DeleteCluster(
      std::string const& name, Options opts = {});

  ///
  /// Deletes a single Cluster.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::alloydb::v1::DeleteClusterRequest,google/cloud/alloydb/v1/service.proto#L416}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::OperationMetadata,google/cloud/alloydb/v1/service.proto#L1038}
  ///
  /// [google.cloud.alloydb.v1.DeleteClusterRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L416}
  /// [google.cloud.alloydb.v1.OperationMetadata]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L1038}
  ///
  future<StatusOr<google::cloud::alloydb::v1::OperationMetadata>> DeleteCluster(
      google::cloud::alloydb::v1::DeleteClusterRequest const& request,
      Options opts = {});

  ///
  /// Creates a new Cluster in a given project and location, with a volume
  /// restored from the provided source, either a backup ID or a point-in-time
  /// and a source cluster.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::alloydb::v1::RestoreClusterRequest,google/cloud/alloydb/v1/service.proto#L454}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Cluster,google/cloud/alloydb/v1/resources.proto#L300}
  ///
  /// [google.cloud.alloydb.v1.Cluster]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L300}
  /// [google.cloud.alloydb.v1.RestoreClusterRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L454}
  ///
  future<StatusOr<google::cloud::alloydb::v1::Cluster>> RestoreCluster(
      google::cloud::alloydb::v1::RestoreClusterRequest const& request,
      Options opts = {});

  ///
  /// Lists Instances in a given project and location.
  ///
  /// @param parent  Required. The name of the parent resource. For the required
  /// format, see the
  ///  comment on the Instance.name field. Additionally, you can perform an
  ///  aggregated list operation by specifying a value with one of the following
  ///  formats:
  ///   * projects/{project}/locations/-/clusters/-
  ///   * projects/{project}/locations/{region}/clusters/-
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Instance,google/cloud/alloydb/v1/resources.proto#L497}
  ///
  /// [google.cloud.alloydb.v1.Instance]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L497}
  /// [google.cloud.alloydb.v1.ListInstancesRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L499}
  ///
  StreamRange<google::cloud::alloydb::v1::Instance> ListInstances(
      std::string const& parent, Options opts = {});

  ///
  /// Lists Instances in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::alloydb::v1::ListInstancesRequest,google/cloud/alloydb/v1/service.proto#L499}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Instance,google/cloud/alloydb/v1/resources.proto#L497}
  ///
  /// [google.cloud.alloydb.v1.Instance]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L497}
  /// [google.cloud.alloydb.v1.ListInstancesRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L499}
  ///
  StreamRange<google::cloud::alloydb::v1::Instance> ListInstances(
      google::cloud::alloydb::v1::ListInstancesRequest request,
      Options opts = {});

  ///
  /// Gets details of a single Instance.
  ///
  /// @param name  Required. The name of the resource. For the required format,
  /// see the
  ///  comment on the Instance.name field.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Instance,google/cloud/alloydb/v1/resources.proto#L497}
  ///
  /// [google.cloud.alloydb.v1.GetInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L540}
  /// [google.cloud.alloydb.v1.Instance]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L497}
  ///
  StatusOr<google::cloud::alloydb::v1::Instance> GetInstance(
      std::string const& name, Options opts = {});

  ///
  /// Gets details of a single Instance.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::alloydb::v1::GetInstanceRequest,google/cloud/alloydb/v1/service.proto#L540}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Instance,google/cloud/alloydb/v1/resources.proto#L497}
  ///
  /// [google.cloud.alloydb.v1.GetInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L540}
  /// [google.cloud.alloydb.v1.Instance]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L497}
  ///
  StatusOr<google::cloud::alloydb::v1::Instance> GetInstance(
      google::cloud::alloydb::v1::GetInstanceRequest const& request,
      Options opts = {});

  ///
  /// Creates a new Instance in a given project and location.
  ///
  /// @param parent  Required. The name of the parent resource. For the required
  /// format, see the
  ///  comment on the Instance.name field.
  /// @param instance  Required. The resource being created
  /// @param instance_id  Required. ID of the requesting object.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Instance,google/cloud/alloydb/v1/resources.proto#L497}
  ///
  /// [google.cloud.alloydb.v1.CreateInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L555}
  /// [google.cloud.alloydb.v1.Instance]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L497}
  ///
  future<StatusOr<google::cloud::alloydb::v1::Instance>> CreateInstance(
      std::string const& parent,
      google::cloud::alloydb::v1::Instance const& instance,
      std::string const& instance_id, Options opts = {});

  ///
  /// Creates a new Instance in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::alloydb::v1::CreateInstanceRequest,google/cloud/alloydb/v1/service.proto#L555}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Instance,google/cloud/alloydb/v1/resources.proto#L497}
  ///
  /// [google.cloud.alloydb.v1.CreateInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L555}
  /// [google.cloud.alloydb.v1.Instance]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L497}
  ///
  future<StatusOr<google::cloud::alloydb::v1::Instance>> CreateInstance(
      google::cloud::alloydb::v1::CreateInstanceRequest const& request,
      Options opts = {});

  ///
  /// Creates new instances under the given project, location and cluster.
  /// There can be only one primary instance in a cluster. If the primary
  /// instance exists in the cluster as well as this request, then API will
  /// throw an error.
  /// The primary instance should exist before any read pool instance is
  /// created. If the primary instance is a part of the request payload, then
  /// the API will take care of creating instances in the correct order.
  /// This method is here to support Google-internal use cases, and is not meant
  /// for external customers to consume. Please do not start relying on it; its
  /// behavior is subject to change without notice.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::alloydb::v1::BatchCreateInstancesRequest,google/cloud/alloydb/v1/service.proto#L601}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::BatchCreateInstancesResponse,google/cloud/alloydb/v1/service.proto#L630}
  ///
  /// [google.cloud.alloydb.v1.BatchCreateInstancesRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L601}
  /// [google.cloud.alloydb.v1.BatchCreateInstancesResponse]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L630}
  ///
  future<StatusOr<google::cloud::alloydb::v1::BatchCreateInstancesResponse>>
  BatchCreateInstances(
      google::cloud::alloydb::v1::BatchCreateInstancesRequest const& request,
      Options opts = {});

  ///
  /// Updates the parameters of a single Instance.
  ///
  /// @param instance  Required. The resource being updated
  /// @param update_mask  Optional. Field mask is used to specify the fields to
  /// be overwritten in the
  ///  Instance resource by the update.
  ///  The fields specified in the update_mask are relative to the resource, not
  ///  the full request. A field will be overwritten if it is in the mask. If
  ///  the user does not provide a mask then all fields will be overwritten.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Instance,google/cloud/alloydb/v1/resources.proto#L497}
  ///
  /// [google.cloud.alloydb.v1.Instance]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L497}
  /// [google.cloud.alloydb.v1.UpdateInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L718}
  ///
  future<StatusOr<google::cloud::alloydb::v1::Instance>> UpdateInstance(
      google::cloud::alloydb::v1::Instance const& instance,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Updates the parameters of a single Instance.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::alloydb::v1::UpdateInstanceRequest,google/cloud/alloydb/v1/service.proto#L718}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Instance,google/cloud/alloydb/v1/resources.proto#L497}
  ///
  /// [google.cloud.alloydb.v1.Instance]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L497}
  /// [google.cloud.alloydb.v1.UpdateInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L718}
  ///
  future<StatusOr<google::cloud::alloydb::v1::Instance>> UpdateInstance(
      google::cloud::alloydb::v1::UpdateInstanceRequest const& request,
      Options opts = {});

  ///
  /// Deletes a single Instance.
  ///
  /// @param name  Required. The name of the resource. For the required format,
  /// see the
  ///  comment on the Instance.name field.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::OperationMetadata,google/cloud/alloydb/v1/service.proto#L1038}
  ///
  /// [google.cloud.alloydb.v1.DeleteInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L756}
  /// [google.cloud.alloydb.v1.OperationMetadata]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L1038}
  ///
  future<StatusOr<google::cloud::alloydb::v1::OperationMetadata>>
  DeleteInstance(std::string const& name, Options opts = {});

  ///
  /// Deletes a single Instance.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::alloydb::v1::DeleteInstanceRequest,google/cloud/alloydb/v1/service.proto#L756}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::OperationMetadata,google/cloud/alloydb/v1/service.proto#L1038}
  ///
  /// [google.cloud.alloydb.v1.DeleteInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L756}
  /// [google.cloud.alloydb.v1.OperationMetadata]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L1038}
  ///
  future<StatusOr<google::cloud::alloydb::v1::OperationMetadata>>
  DeleteInstance(
      google::cloud::alloydb::v1::DeleteInstanceRequest const& request,
      Options opts = {});

  ///
  /// Forces a Failover for a highly available instance.
  /// Failover promotes the HA standby instance as the new primary.
  /// Imperative only.
  ///
  /// @param name  Required. The name of the resource. For the required format,
  /// see the
  ///  comment on the Instance.name field.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Instance,google/cloud/alloydb/v1/resources.proto#L497}
  ///
  /// [google.cloud.alloydb.v1.FailoverInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L792}
  /// [google.cloud.alloydb.v1.Instance]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L497}
  ///
  future<StatusOr<google::cloud::alloydb::v1::Instance>> FailoverInstance(
      std::string const& name, Options opts = {});

  ///
  /// Forces a Failover for a highly available instance.
  /// Failover promotes the HA standby instance as the new primary.
  /// Imperative only.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::alloydb::v1::FailoverInstanceRequest,google/cloud/alloydb/v1/service.proto#L792}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Instance,google/cloud/alloydb/v1/resources.proto#L497}
  ///
  /// [google.cloud.alloydb.v1.FailoverInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L792}
  /// [google.cloud.alloydb.v1.Instance]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L497}
  ///
  future<StatusOr<google::cloud::alloydb::v1::Instance>> FailoverInstance(
      google::cloud::alloydb::v1::FailoverInstanceRequest const& request,
      Options opts = {});

  ///
  /// Restart an Instance in a cluster.
  /// Imperative only.
  ///
  /// @param name  Required. The name of the resource. For the required format,
  /// see the
  ///  comment on the Instance.name field.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Instance,google/cloud/alloydb/v1/resources.proto#L497}
  ///
  /// [google.cloud.alloydb.v1.Instance]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L497}
  /// [google.cloud.alloydb.v1.RestartInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L822}
  ///
  future<StatusOr<google::cloud::alloydb::v1::Instance>> RestartInstance(
      std::string const& name, Options opts = {});

  ///
  /// Restart an Instance in a cluster.
  /// Imperative only.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::alloydb::v1::RestartInstanceRequest,google/cloud/alloydb/v1/service.proto#L822}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Instance,google/cloud/alloydb/v1/resources.proto#L497}
  ///
  /// [google.cloud.alloydb.v1.Instance]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L497}
  /// [google.cloud.alloydb.v1.RestartInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L822}
  ///
  future<StatusOr<google::cloud::alloydb::v1::Instance>> RestartInstance(
      google::cloud::alloydb::v1::RestartInstanceRequest const& request,
      Options opts = {});

  ///
  /// Lists Backups in a given project and location.
  ///
  /// @param parent  Required. Parent value for ListBackupsRequest
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Backup,google/cloud/alloydb/v1/resources.proto#L735}
  ///
  /// [google.cloud.alloydb.v1.Backup]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L735}
  /// [google.cloud.alloydb.v1.ListBackupsRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L853}
  ///
  StreamRange<google::cloud::alloydb::v1::Backup> ListBackups(
      std::string const& parent, Options opts = {});

  ///
  /// Lists Backups in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::alloydb::v1::ListBackupsRequest,google/cloud/alloydb/v1/service.proto#L853}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Backup,google/cloud/alloydb/v1/resources.proto#L735}
  ///
  /// [google.cloud.alloydb.v1.Backup]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L735}
  /// [google.cloud.alloydb.v1.ListBackupsRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L853}
  ///
  StreamRange<google::cloud::alloydb::v1::Backup> ListBackups(
      google::cloud::alloydb::v1::ListBackupsRequest request,
      Options opts = {});

  ///
  /// Gets details of a single Backup.
  ///
  /// @param name  Required. Name of the resource
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Backup,google/cloud/alloydb/v1/resources.proto#L735}
  ///
  /// [google.cloud.alloydb.v1.Backup]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L735}
  /// [google.cloud.alloydb.v1.GetBackupRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L889}
  ///
  StatusOr<google::cloud::alloydb::v1::Backup> GetBackup(
      std::string const& name, Options opts = {});

  ///
  /// Gets details of a single Backup.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::alloydb::v1::GetBackupRequest,google/cloud/alloydb/v1/service.proto#L889}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Backup,google/cloud/alloydb/v1/resources.proto#L735}
  ///
  /// [google.cloud.alloydb.v1.Backup]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L735}
  /// [google.cloud.alloydb.v1.GetBackupRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L889}
  ///
  StatusOr<google::cloud::alloydb::v1::Backup> GetBackup(
      google::cloud::alloydb::v1::GetBackupRequest const& request,
      Options opts = {});

  ///
  /// Creates a new Backup in a given project and location.
  ///
  /// @param parent  Required. Value for parent.
  /// @param backup  Required. The resource being created
  /// @param backup_id  Required. ID of the requesting object.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Backup,google/cloud/alloydb/v1/resources.proto#L735}
  ///
  /// [google.cloud.alloydb.v1.Backup]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L735}
  /// [google.cloud.alloydb.v1.CreateBackupRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L898}
  ///
  future<StatusOr<google::cloud::alloydb::v1::Backup>> CreateBackup(
      std::string const& parent,
      google::cloud::alloydb::v1::Backup const& backup,
      std::string const& backup_id, Options opts = {});

  ///
  /// Creates a new Backup in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::alloydb::v1::CreateBackupRequest,google/cloud/alloydb/v1/service.proto#L898}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Backup,google/cloud/alloydb/v1/resources.proto#L735}
  ///
  /// [google.cloud.alloydb.v1.Backup]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L735}
  /// [google.cloud.alloydb.v1.CreateBackupRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L898}
  ///
  future<StatusOr<google::cloud::alloydb::v1::Backup>> CreateBackup(
      google::cloud::alloydb::v1::CreateBackupRequest const& request,
      Options opts = {});

  ///
  /// Updates the parameters of a single Backup.
  ///
  /// @param backup  Required. The resource being updated
  /// @param update_mask  Optional. Field mask is used to specify the fields to
  /// be overwritten in the
  ///  Backup resource by the update.
  ///  The fields specified in the update_mask are relative to the resource, not
  ///  the full request. A field will be overwritten if it is in the mask. If
  ///  the user does not provide a mask then all fields will be overwritten.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Backup,google/cloud/alloydb/v1/resources.proto#L735}
  ///
  /// [google.cloud.alloydb.v1.Backup]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L735}
  /// [google.cloud.alloydb.v1.UpdateBackupRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L934}
  ///
  future<StatusOr<google::cloud::alloydb::v1::Backup>> UpdateBackup(
      google::cloud::alloydb::v1::Backup const& backup,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Updates the parameters of a single Backup.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::alloydb::v1::UpdateBackupRequest,google/cloud/alloydb/v1/service.proto#L934}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::Backup,google/cloud/alloydb/v1/resources.proto#L735}
  ///
  /// [google.cloud.alloydb.v1.Backup]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L735}
  /// [google.cloud.alloydb.v1.UpdateBackupRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L934}
  ///
  future<StatusOr<google::cloud::alloydb::v1::Backup>> UpdateBackup(
      google::cloud::alloydb::v1::UpdateBackupRequest const& request,
      Options opts = {});

  ///
  /// Deletes a single Backup.
  ///
  /// @param name  Required. Name of the resource. For the required format, see
  /// the comment on
  ///  the Backup.name field.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::OperationMetadata,google/cloud/alloydb/v1/service.proto#L1038}
  ///
  /// [google.cloud.alloydb.v1.DeleteBackupRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L971}
  /// [google.cloud.alloydb.v1.OperationMetadata]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L1038}
  ///
  future<StatusOr<google::cloud::alloydb::v1::OperationMetadata>> DeleteBackup(
      std::string const& name, Options opts = {});

  ///
  /// Deletes a single Backup.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::alloydb::v1::DeleteBackupRequest,google/cloud/alloydb/v1/service.proto#L971}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::OperationMetadata,google/cloud/alloydb/v1/service.proto#L1038}
  ///
  /// [google.cloud.alloydb.v1.DeleteBackupRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L971}
  /// [google.cloud.alloydb.v1.OperationMetadata]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L1038}
  ///
  future<StatusOr<google::cloud::alloydb::v1::OperationMetadata>> DeleteBackup(
      google::cloud::alloydb::v1::DeleteBackupRequest const& request,
      Options opts = {});

  ///
  /// Lists SupportedDatabaseFlags for a given project and location.
  ///
  /// @param parent  Required. The name of the parent resource. The required
  /// format is:
  ///   * projects/{project}/locations/{location}
  ///  Regardless of the parent specified here, as long it is contains a valid
  ///  project and location, the service will return a static list of supported
  ///  flags resources. Note that we do not yet support region-specific
  ///  flags.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::SupportedDatabaseFlag,google/cloud/alloydb/v1/resources.proto#L871}
  ///
  /// [google.cloud.alloydb.v1.ListSupportedDatabaseFlagsRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L1005}
  /// [google.cloud.alloydb.v1.SupportedDatabaseFlag]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L871}
  ///
  StreamRange<google::cloud::alloydb::v1::SupportedDatabaseFlag>
  ListSupportedDatabaseFlags(std::string const& parent, Options opts = {});

  ///
  /// Lists SupportedDatabaseFlags for a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::alloydb::v1::ListSupportedDatabaseFlagsRequest,google/cloud/alloydb/v1/service.proto#L1005}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::alloydb::v1::SupportedDatabaseFlag,google/cloud/alloydb/v1/resources.proto#L871}
  ///
  /// [google.cloud.alloydb.v1.ListSupportedDatabaseFlagsRequest]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/service.proto#L1005}
  /// [google.cloud.alloydb.v1.SupportedDatabaseFlag]:
  /// @googleapis_reference_link{google/cloud/alloydb/v1/resources.proto#L871}
  ///
  StreamRange<google::cloud::alloydb::v1::SupportedDatabaseFlag>
  ListSupportedDatabaseFlags(
      google::cloud::alloydb::v1::ListSupportedDatabaseFlagsRequest request,
      Options opts = {});

 private:
  std::shared_ptr<AlloyDBAdminConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace alloydb_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_ALLOYDB_V1_ALLOY_DB_ADMIN_CLIENT_H
