// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/baremetalsolution/v2/baremetalsolution.proto

#include "google/cloud/baremetalsolution/bare_metal_solution_connection_idempotency_policy.h"
#include "absl/memory/memory.h"
#include <memory>

namespace google {
namespace cloud {
namespace baremetalsolution {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

using ::google::cloud::Idempotency;

BareMetalSolutionConnectionIdempotencyPolicy::
    ~BareMetalSolutionConnectionIdempotencyPolicy() = default;

namespace {
class DefaultBareMetalSolutionConnectionIdempotencyPolicy
    : public BareMetalSolutionConnectionIdempotencyPolicy {
 public:
  ~DefaultBareMetalSolutionConnectionIdempotencyPolicy() override = default;

  /// Create a new copy of this object.
  std::unique_ptr<BareMetalSolutionConnectionIdempotencyPolicy> clone()
      const override {
    return absl::make_unique<
        DefaultBareMetalSolutionConnectionIdempotencyPolicy>(*this);
  }

  Idempotency ListInstances(
      google::cloud::baremetalsolution::v2::ListInstancesRequest) override {
    return Idempotency::kIdempotent;
  }

  Idempotency GetInstance(
      google::cloud::baremetalsolution::v2::GetInstanceRequest const&)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency ResetInstance(
      google::cloud::baremetalsolution::v2::ResetInstanceRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency ListVolumes(
      google::cloud::baremetalsolution::v2::ListVolumesRequest) override {
    return Idempotency::kIdempotent;
  }

  Idempotency GetVolume(
      google::cloud::baremetalsolution::v2::GetVolumeRequest const&) override {
    return Idempotency::kIdempotent;
  }

  Idempotency UpdateVolume(
      google::cloud::baremetalsolution::v2::UpdateVolumeRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency ListNetworks(
      google::cloud::baremetalsolution::v2::ListNetworksRequest) override {
    return Idempotency::kIdempotent;
  }

  Idempotency GetNetwork(
      google::cloud::baremetalsolution::v2::GetNetworkRequest const&) override {
    return Idempotency::kIdempotent;
  }

  Idempotency ListSnapshotSchedulePolicies(
      google::cloud::baremetalsolution::v2::ListSnapshotSchedulePoliciesRequest)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency GetSnapshotSchedulePolicy(
      google::cloud::baremetalsolution::v2::
          GetSnapshotSchedulePolicyRequest const&) override {
    return Idempotency::kIdempotent;
  }

  Idempotency CreateSnapshotSchedulePolicy(
      google::cloud::baremetalsolution::v2::
          CreateSnapshotSchedulePolicyRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency UpdateSnapshotSchedulePolicy(
      google::cloud::baremetalsolution::v2::
          UpdateSnapshotSchedulePolicyRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency DeleteSnapshotSchedulePolicy(
      google::cloud::baremetalsolution::v2::
          DeleteSnapshotSchedulePolicyRequest const&) override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency CreateVolumeSnapshot(
      google::cloud::baremetalsolution::v2::CreateVolumeSnapshotRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency RestoreVolumeSnapshot(
      google::cloud::baremetalsolution::v2::RestoreVolumeSnapshotRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency DeleteVolumeSnapshot(
      google::cloud::baremetalsolution::v2::DeleteVolumeSnapshotRequest const&)
      override {
    return Idempotency::kNonIdempotent;
  }

  Idempotency GetVolumeSnapshot(
      google::cloud::baremetalsolution::v2::GetVolumeSnapshotRequest const&)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency ListVolumeSnapshots(
      google::cloud::baremetalsolution::v2::ListVolumeSnapshotsRequest)
      override {
    return Idempotency::kIdempotent;
  }

  Idempotency GetLun(
      google::cloud::baremetalsolution::v2::GetLunRequest const&) override {
    return Idempotency::kIdempotent;
  }

  Idempotency ListLuns(
      google::cloud::baremetalsolution::v2::ListLunsRequest) override {
    return Idempotency::kIdempotent;
  }
};
}  // namespace

std::unique_ptr<BareMetalSolutionConnectionIdempotencyPolicy>
MakeDefaultBareMetalSolutionConnectionIdempotencyPolicy() {
  return absl::make_unique<
      DefaultBareMetalSolutionConnectionIdempotencyPolicy>();
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace baremetalsolution
}  // namespace cloud
}  // namespace google
