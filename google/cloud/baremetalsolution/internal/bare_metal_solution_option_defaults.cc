// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/baremetalsolution/v2/baremetalsolution.proto

#include "google/cloud/baremetalsolution/internal/bare_metal_solution_option_defaults.h"
#include "google/cloud/baremetalsolution/bare_metal_solution_connection.h"
#include "google/cloud/baremetalsolution/bare_metal_solution_options.h"
#include "google/cloud/internal/populate_common_options.h"
#include "google/cloud/internal/populate_grpc_options.h"
#include <memory>

namespace google {
namespace cloud {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN
namespace baremetalsolution_internal {

namespace {
auto constexpr kBackoffScaling = 2.0;
}  // namespace

Options BareMetalSolutionDefaultOptions(Options options) {
  options = google::cloud::internal::PopulateCommonOptions(
      std::move(options), "GOOGLE_CLOUD_CPP_BARE_METAL_SOLUTION_ENDPOINT", "",
      "GOOGLE_CLOUD_CPP_BARE_METAL_SOLUTION_AUTHORITY",
      "baremetalsolution.googleapis.com");
  options =
      google::cloud::internal::PopulateGrpcOptions(std::move(options), "");
  if (!options.has<GOOGLE_CLOUD_CPP_NS::BareMetalSolutionRetryPolicyOption>()) {
    options.set<GOOGLE_CLOUD_CPP_NS::BareMetalSolutionRetryPolicyOption>(
        GOOGLE_CLOUD_CPP_NS::BareMetalSolutionLimitedTimeRetryPolicy(
            std::chrono::minutes(30))
            .clone());
  }
  if (!options
           .has<GOOGLE_CLOUD_CPP_NS::BareMetalSolutionBackoffPolicyOption>()) {
    options.set<GOOGLE_CLOUD_CPP_NS::BareMetalSolutionBackoffPolicyOption>(
        ExponentialBackoffPolicy(std::chrono::seconds(1),
                                 std::chrono::minutes(5), kBackoffScaling)
            .clone());
  }
  if (!options
           .has<GOOGLE_CLOUD_CPP_NS::BareMetalSolutionPollingPolicyOption>()) {
    options.set<GOOGLE_CLOUD_CPP_NS::BareMetalSolutionPollingPolicyOption>(
        GenericPollingPolicy<
            GOOGLE_CLOUD_CPP_NS::BareMetalSolutionRetryPolicyOption::Type,
            GOOGLE_CLOUD_CPP_NS::BareMetalSolutionBackoffPolicyOption::Type>(
            options
                .get<GOOGLE_CLOUD_CPP_NS::BareMetalSolutionRetryPolicyOption>()
                ->clone(),
            options
                .get<
                    GOOGLE_CLOUD_CPP_NS::BareMetalSolutionBackoffPolicyOption>()
                ->clone())
            .clone());
  }
  if (!options.has<GOOGLE_CLOUD_CPP_NS::
                       BareMetalSolutionConnectionIdempotencyPolicyOption>()) {
    options.set<GOOGLE_CLOUD_CPP_NS::
                    BareMetalSolutionConnectionIdempotencyPolicyOption>(
        GOOGLE_CLOUD_CPP_NS::
            MakeDefaultBareMetalSolutionConnectionIdempotencyPolicy());
  }

  return options;
}

}  // namespace baremetalsolution_internal
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace cloud
}  // namespace google
