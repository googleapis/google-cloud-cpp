// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/baremetalsolution/v2/baremetalsolution.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BAREMETALSOLUTION_INTERNAL_BARE_METAL_SOLUTION_TRACING_CONNECTION_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BAREMETALSOLUTION_INTERNAL_BARE_METAL_SOLUTION_TRACING_CONNECTION_H

#include "google/cloud/baremetalsolution/bare_metal_solution_connection.h"
#include "google/cloud/version.h"
#include <memory>

namespace google {
namespace cloud {
namespace baremetalsolution_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

#ifdef GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

class BareMetalSolutionTracingConnection
    : public baremetalsolution::BareMetalSolutionConnection {
 public:
  ~BareMetalSolutionTracingConnection() override = default;

  explicit BareMetalSolutionTracingConnection(
      std::shared_ptr<baremetalsolution::BareMetalSolutionConnection> child);

  Options options() override { return child_->options(); }

  StreamRange<google::cloud::baremetalsolution::v2::Instance> ListInstances(
      google::cloud::baremetalsolution::v2::ListInstancesRequest request)
      override;

  StatusOr<google::cloud::baremetalsolution::v2::Instance> GetInstance(
      google::cloud::baremetalsolution::v2::GetInstanceRequest const& request)
      override;

  future<StatusOr<google::cloud::baremetalsolution::v2::Instance>>
  UpdateInstance(
      google::cloud::baremetalsolution::v2::UpdateInstanceRequest const&
          request) override;

  future<StatusOr<google::cloud::baremetalsolution::v2::ResetInstanceResponse>>
  ResetInstance(
      google::cloud::baremetalsolution::v2::ResetInstanceRequest const& request)
      override;

  future<StatusOr<google::cloud::baremetalsolution::v2::StartInstanceResponse>>
  StartInstance(
      google::cloud::baremetalsolution::v2::StartInstanceRequest const& request)
      override;

  future<StatusOr<google::cloud::baremetalsolution::v2::StopInstanceResponse>>
  StopInstance(google::cloud::baremetalsolution::v2::StopInstanceRequest const&
                   request) override;

  future<StatusOr<google::cloud::baremetalsolution::v2::Instance>> DetachLun(
      google::cloud::baremetalsolution::v2::DetachLunRequest const& request)
      override;

  StreamRange<google::cloud::baremetalsolution::v2::Volume> ListVolumes(
      google::cloud::baremetalsolution::v2::ListVolumesRequest request)
      override;

  StatusOr<google::cloud::baremetalsolution::v2::Volume> GetVolume(
      google::cloud::baremetalsolution::v2::GetVolumeRequest const& request)
      override;

  future<StatusOr<google::cloud::baremetalsolution::v2::Volume>> UpdateVolume(
      google::cloud::baremetalsolution::v2::UpdateVolumeRequest const& request)
      override;

  future<StatusOr<google::cloud::baremetalsolution::v2::Volume>> ResizeVolume(
      google::cloud::baremetalsolution::v2::ResizeVolumeRequest const& request)
      override;

  StreamRange<google::cloud::baremetalsolution::v2::Network> ListNetworks(
      google::cloud::baremetalsolution::v2::ListNetworksRequest request)
      override;

  StatusOr<google::cloud::baremetalsolution::v2::ListNetworkUsageResponse>
  ListNetworkUsage(
      google::cloud::baremetalsolution::v2::ListNetworkUsageRequest const&
          request) override;

  StatusOr<google::cloud::baremetalsolution::v2::Network> GetNetwork(
      google::cloud::baremetalsolution::v2::GetNetworkRequest const& request)
      override;

  future<StatusOr<google::cloud::baremetalsolution::v2::Network>> UpdateNetwork(
      google::cloud::baremetalsolution::v2::UpdateNetworkRequest const& request)
      override;

  StatusOr<google::cloud::baremetalsolution::v2::Lun> GetLun(
      google::cloud::baremetalsolution::v2::GetLunRequest const& request)
      override;

  StreamRange<google::cloud::baremetalsolution::v2::Lun> ListLuns(
      google::cloud::baremetalsolution::v2::ListLunsRequest request) override;

  StatusOr<google::cloud::baremetalsolution::v2::NfsShare> GetNfsShare(
      google::cloud::baremetalsolution::v2::GetNfsShareRequest const& request)
      override;

  StreamRange<google::cloud::baremetalsolution::v2::NfsShare> ListNfsShares(
      google::cloud::baremetalsolution::v2::ListNfsSharesRequest request)
      override;

  future<StatusOr<google::cloud::baremetalsolution::v2::NfsShare>>
  UpdateNfsShare(
      google::cloud::baremetalsolution::v2::UpdateNfsShareRequest const&
          request) override;

 private:
  std::shared_ptr<baremetalsolution::BareMetalSolutionConnection> child_;
};

#endif  // GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

/**
 * Conditionally applies the tracing decorator to the given connection.
 *
 * The connection is only decorated if tracing is enabled (as determined by the
 * connection's options).
 */
std::shared_ptr<baremetalsolution::BareMetalSolutionConnection>
MakeBareMetalSolutionTracingConnection(
    std::shared_ptr<baremetalsolution::BareMetalSolutionConnection> conn);

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace baremetalsolution_internal
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BAREMETALSOLUTION_INTERNAL_BARE_METAL_SOLUTION_TRACING_CONNECTION_H
