// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/baremetalsolution/v2/baremetalsolution.proto

#include "google/cloud/baremetalsolution/v2/bare_metal_solution_connection_idempotency_policy.h"
#include "absl/memory/memory.h"
#include <memory>

namespace google {
namespace cloud {
namespace baremetalsolution_v2 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

using ::google::cloud::Idempotency;

BareMetalSolutionConnectionIdempotencyPolicy::
    ~BareMetalSolutionConnectionIdempotencyPolicy() = default;

std::unique_ptr<BareMetalSolutionConnectionIdempotencyPolicy>
BareMetalSolutionConnectionIdempotencyPolicy::clone() const {
  return absl::make_unique<BareMetalSolutionConnectionIdempotencyPolicy>(*this);
}

Idempotency BareMetalSolutionConnectionIdempotencyPolicy::ListInstances(
    google::cloud::baremetalsolution::v2::ListInstancesRequest) {  // NOLINT
  return Idempotency::kIdempotent;
}

Idempotency BareMetalSolutionConnectionIdempotencyPolicy::GetInstance(
    google::cloud::baremetalsolution::v2::GetInstanceRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency BareMetalSolutionConnectionIdempotencyPolicy::UpdateInstance(
    google::cloud::baremetalsolution::v2::UpdateInstanceRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency BareMetalSolutionConnectionIdempotencyPolicy::ResetInstance(
    google::cloud::baremetalsolution::v2::ResetInstanceRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency BareMetalSolutionConnectionIdempotencyPolicy::StartInstance(
    google::cloud::baremetalsolution::v2::StartInstanceRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency BareMetalSolutionConnectionIdempotencyPolicy::StopInstance(
    google::cloud::baremetalsolution::v2::StopInstanceRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency BareMetalSolutionConnectionIdempotencyPolicy::DetachLun(
    google::cloud::baremetalsolution::v2::DetachLunRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency BareMetalSolutionConnectionIdempotencyPolicy::ListVolumes(
    google::cloud::baremetalsolution::v2::ListVolumesRequest) {  // NOLINT
  return Idempotency::kIdempotent;
}

Idempotency BareMetalSolutionConnectionIdempotencyPolicy::GetVolume(
    google::cloud::baremetalsolution::v2::GetVolumeRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency BareMetalSolutionConnectionIdempotencyPolicy::UpdateVolume(
    google::cloud::baremetalsolution::v2::UpdateVolumeRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency BareMetalSolutionConnectionIdempotencyPolicy::ResizeVolume(
    google::cloud::baremetalsolution::v2::ResizeVolumeRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency BareMetalSolutionConnectionIdempotencyPolicy::ListNetworks(
    google::cloud::baremetalsolution::v2::ListNetworksRequest) {  // NOLINT
  return Idempotency::kIdempotent;
}

Idempotency BareMetalSolutionConnectionIdempotencyPolicy::ListNetworkUsage(
    google::cloud::baremetalsolution::v2::ListNetworkUsageRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency BareMetalSolutionConnectionIdempotencyPolicy::GetNetwork(
    google::cloud::baremetalsolution::v2::GetNetworkRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency BareMetalSolutionConnectionIdempotencyPolicy::UpdateNetwork(
    google::cloud::baremetalsolution::v2::UpdateNetworkRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency BareMetalSolutionConnectionIdempotencyPolicy::GetLun(
    google::cloud::baremetalsolution::v2::GetLunRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency BareMetalSolutionConnectionIdempotencyPolicy::ListLuns(
    google::cloud::baremetalsolution::v2::ListLunsRequest) {  // NOLINT
  return Idempotency::kIdempotent;
}

Idempotency BareMetalSolutionConnectionIdempotencyPolicy::GetNfsShare(
    google::cloud::baremetalsolution::v2::GetNfsShareRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency BareMetalSolutionConnectionIdempotencyPolicy::ListNfsShares(
    google::cloud::baremetalsolution::v2::ListNfsSharesRequest) {  // NOLINT
  return Idempotency::kIdempotent;
}

Idempotency BareMetalSolutionConnectionIdempotencyPolicy::UpdateNfsShare(
    google::cloud::baremetalsolution::v2::UpdateNfsShareRequest const&) {
  return Idempotency::kNonIdempotent;
}

std::unique_ptr<BareMetalSolutionConnectionIdempotencyPolicy>
MakeDefaultBareMetalSolutionConnectionIdempotencyPolicy() {
  return absl::make_unique<BareMetalSolutionConnectionIdempotencyPolicy>();
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace baremetalsolution_v2
}  // namespace cloud
}  // namespace google
