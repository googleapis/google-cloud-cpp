// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/baremetalsolution/v2/baremetalsolution.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BAREMETALSOLUTION_BARE_METAL_SOLUTION_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BAREMETALSOLUTION_BARE_METAL_SOLUTION_CLIENT_H

#include "google/cloud/baremetalsolution/bare_metal_solution_connection.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <google/longrunning/operations.grpc.pb.h>
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace baremetalsolution {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Performs management operations on Bare Metal Solution servers.
///
/// The `baremetalsolution.googleapis.com` service provides management
/// capabilities for Bare Metal Solution servers. To access the API methods, you
/// must assign Bare Metal Solution IAM roles containing the desired permissions
/// to your staff in your Google Cloud project. You must also enable the Bare
/// Metal Solution API. Once enabled, the methods act
/// upon specific servers in your Bare Metal Solution environment.
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class BareMetalSolutionClient {
 public:
  explicit BareMetalSolutionClient(
      std::shared_ptr<BareMetalSolutionConnection> connection,
      Options opts = {});
  ~BareMetalSolutionClient();

  ///@{
  /// @name Copy and move support
  BareMetalSolutionClient(BareMetalSolutionClient const&) = default;
  BareMetalSolutionClient& operator=(BareMetalSolutionClient const&) = default;
  BareMetalSolutionClient(BareMetalSolutionClient&&) = default;
  BareMetalSolutionClient& operator=(BareMetalSolutionClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(BareMetalSolutionClient const& a,
                         BareMetalSolutionClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(BareMetalSolutionClient const& a,
                         BareMetalSolutionClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// List servers in a given project and location.
  ///
  /// @param parent  Required. Parent value for ListInstancesRequest.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Instance,google/cloud/baremetalsolution/v2/instance.proto#L35}
  ///
  /// [google.cloud.baremetalsolution.v2.ListInstancesRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L136}
  /// [google.cloud.baremetalsolution.v2.Instance]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L35}
  ///
  StreamRange<google::cloud::baremetalsolution::v2::Instance> ListInstances(
      std::string const& parent, Options opts = {});

  ///
  /// List servers in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::baremetalsolution::v2::ListInstancesRequest,google/cloud/baremetalsolution/v2/instance.proto#L136}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Instance,google/cloud/baremetalsolution/v2/instance.proto#L35}
  ///
  /// [google.cloud.baremetalsolution.v2.ListInstancesRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L136}
  /// [google.cloud.baremetalsolution.v2.Instance]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L35}
  ///
  StreamRange<google::cloud::baremetalsolution::v2::Instance> ListInstances(
      google::cloud::baremetalsolution::v2::ListInstancesRequest request,
      Options opts = {});

  ///
  /// Get details about a single server.
  ///
  /// @param name  Required. Name of the resource.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Instance,google/cloud/baremetalsolution/v2/instance.proto#L35}
  ///
  /// [google.cloud.baremetalsolution.v2.GetInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L125}
  /// [google.cloud.baremetalsolution.v2.Instance]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L35}
  ///
  StatusOr<google::cloud::baremetalsolution::v2::Instance> GetInstance(
      std::string const& name, Options opts = {});

  ///
  /// Get details about a single server.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::baremetalsolution::v2::GetInstanceRequest,google/cloud/baremetalsolution/v2/instance.proto#L125}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Instance,google/cloud/baremetalsolution/v2/instance.proto#L35}
  ///
  /// [google.cloud.baremetalsolution.v2.GetInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L125}
  /// [google.cloud.baremetalsolution.v2.Instance]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L35}
  ///
  StatusOr<google::cloud::baremetalsolution::v2::Instance> GetInstance(
      google::cloud::baremetalsolution::v2::GetInstanceRequest const& request,
      Options opts = {});

  ///
  /// Update details of a single server.
  ///
  /// @param instance  Required. The server to update.
  ///  The `name` field is used to identify the instance to update.
  ///  Format: projects/{project}/locations/{location}/instances/{instance}
  /// @param update_mask  The list of fields to update.
  ///  The currently supported fields are:
  ///    `labels`
  ///    `hyperthreading_enabled`
  ///    `os_image`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Instance,google/cloud/baremetalsolution/v2/instance.proto#L35}
  ///
  /// [google.cloud.baremetalsolution.v2.UpdateInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L169}
  /// [google.cloud.baremetalsolution.v2.Instance]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L35}
  ///
  future<StatusOr<google::cloud::baremetalsolution::v2::Instance>>
  UpdateInstance(google::cloud::baremetalsolution::v2::Instance const& instance,
                 google::protobuf::FieldMask const& update_mask,
                 Options opts = {});

  ///
  /// Update details of a single server.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::baremetalsolution::v2::UpdateInstanceRequest,google/cloud/baremetalsolution/v2/instance.proto#L169}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Instance,google/cloud/baremetalsolution/v2/instance.proto#L35}
  ///
  /// [google.cloud.baremetalsolution.v2.UpdateInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L169}
  /// [google.cloud.baremetalsolution.v2.Instance]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L35}
  ///
  future<StatusOr<google::cloud::baremetalsolution::v2::Instance>>
  UpdateInstance(
      google::cloud::baremetalsolution::v2::UpdateInstanceRequest const&
          request,
      Options opts = {});

  ///
  /// Perform an ungraceful, hard reset on a server. Equivalent to shutting the
  /// power off and then turning it back on.
  ///
  /// @param name  Required. Name of the resource.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::ResetInstanceResponse,google/cloud/baremetalsolution/v2/baremetalsolution.proto#L288}
  ///
  /// [google.cloud.baremetalsolution.v2.ResetInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L185}
  /// [google.cloud.baremetalsolution.v2.ResetInstanceResponse]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/baremetalsolution.proto#L288}
  ///
  future<StatusOr<google::cloud::baremetalsolution::v2::ResetInstanceResponse>>
  ResetInstance(std::string const& name, Options opts = {});

  ///
  /// Perform an ungraceful, hard reset on a server. Equivalent to shutting the
  /// power off and then turning it back on.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::baremetalsolution::v2::ResetInstanceRequest,google/cloud/baremetalsolution/v2/instance.proto#L185}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::ResetInstanceResponse,google/cloud/baremetalsolution/v2/baremetalsolution.proto#L288}
  ///
  /// [google.cloud.baremetalsolution.v2.ResetInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L185}
  /// [google.cloud.baremetalsolution.v2.ResetInstanceResponse]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/baremetalsolution.proto#L288}
  ///
  future<StatusOr<google::cloud::baremetalsolution::v2::ResetInstanceResponse>>
  ResetInstance(
      google::cloud::baremetalsolution::v2::ResetInstanceRequest const& request,
      Options opts = {});

  ///
  /// Starts a server that was shutdown.
  ///
  /// @param name  Required. Name of the resource.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::StartInstanceResponse,google/cloud/baremetalsolution/v2/instance.proto#L285}
  ///
  /// [google.cloud.baremetalsolution.v2.StartInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L196}
  /// [google.cloud.baremetalsolution.v2.StartInstanceResponse]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L285}
  ///
  future<StatusOr<google::cloud::baremetalsolution::v2::StartInstanceResponse>>
  StartInstance(std::string const& name, Options opts = {});

  ///
  /// Starts a server that was shutdown.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::baremetalsolution::v2::StartInstanceRequest,google/cloud/baremetalsolution/v2/instance.proto#L196}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::StartInstanceResponse,google/cloud/baremetalsolution/v2/instance.proto#L285}
  ///
  /// [google.cloud.baremetalsolution.v2.StartInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L196}
  /// [google.cloud.baremetalsolution.v2.StartInstanceResponse]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L285}
  ///
  future<StatusOr<google::cloud::baremetalsolution::v2::StartInstanceResponse>>
  StartInstance(
      google::cloud::baremetalsolution::v2::StartInstanceRequest const& request,
      Options opts = {});

  ///
  /// Stop a running server.
  ///
  /// @param name  Required. Name of the resource.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::StopInstanceResponse,google/cloud/baremetalsolution/v2/instance.proto#L288}
  ///
  /// [google.cloud.baremetalsolution.v2.StopInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L207}
  /// [google.cloud.baremetalsolution.v2.StopInstanceResponse]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L288}
  ///
  future<StatusOr<google::cloud::baremetalsolution::v2::StopInstanceResponse>>
  StopInstance(std::string const& name, Options opts = {});

  ///
  /// Stop a running server.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::baremetalsolution::v2::StopInstanceRequest,google/cloud/baremetalsolution/v2/instance.proto#L207}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::StopInstanceResponse,google/cloud/baremetalsolution/v2/instance.proto#L288}
  ///
  /// [google.cloud.baremetalsolution.v2.StopInstanceRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L207}
  /// [google.cloud.baremetalsolution.v2.StopInstanceResponse]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L288}
  ///
  future<StatusOr<google::cloud::baremetalsolution::v2::StopInstanceResponse>>
  StopInstance(
      google::cloud::baremetalsolution::v2::StopInstanceRequest const& request,
      Options opts = {});

  ///
  /// Detach LUN from Instance.
  ///
  /// @param instance  Required. Name of the instance.
  /// @param lun  Required. Name of the Lun to detach.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Instance,google/cloud/baremetalsolution/v2/instance.proto#L35}
  ///
  /// [google.cloud.baremetalsolution.v2.DetachLunRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L218}
  /// [google.cloud.baremetalsolution.v2.Instance]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L35}
  ///
  future<StatusOr<google::cloud::baremetalsolution::v2::Instance>> DetachLun(
      std::string const& instance, std::string const& lun, Options opts = {});

  ///
  /// Detach LUN from Instance.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::baremetalsolution::v2::DetachLunRequest,google/cloud/baremetalsolution/v2/instance.proto#L218}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Instance,google/cloud/baremetalsolution/v2/instance.proto#L35}
  ///
  /// [google.cloud.baremetalsolution.v2.DetachLunRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L218}
  /// [google.cloud.baremetalsolution.v2.Instance]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/instance.proto#L35}
  ///
  future<StatusOr<google::cloud::baremetalsolution::v2::Instance>> DetachLun(
      google::cloud::baremetalsolution::v2::DetachLunRequest const& request,
      Options opts = {});

  ///
  /// List storage volumes in a given project and location.
  ///
  /// @param parent  Required. Parent value for ListVolumesRequest.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Volume,google/cloud/baremetalsolution/v2/volume.proto#L32}
  ///
  /// [google.cloud.baremetalsolution.v2.ListVolumesRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/volume.proto#L169}
  /// [google.cloud.baremetalsolution.v2.Volume]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/volume.proto#L32}
  ///
  StreamRange<google::cloud::baremetalsolution::v2::Volume> ListVolumes(
      std::string const& parent, Options opts = {});

  ///
  /// List storage volumes in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::baremetalsolution::v2::ListVolumesRequest,google/cloud/baremetalsolution/v2/volume.proto#L169}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Volume,google/cloud/baremetalsolution/v2/volume.proto#L32}
  ///
  /// [google.cloud.baremetalsolution.v2.ListVolumesRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/volume.proto#L169}
  /// [google.cloud.baremetalsolution.v2.Volume]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/volume.proto#L32}
  ///
  StreamRange<google::cloud::baremetalsolution::v2::Volume> ListVolumes(
      google::cloud::baremetalsolution::v2::ListVolumesRequest request,
      Options opts = {});

  ///
  /// Get details of a single storage volume.
  ///
  /// @param name  Required. Name of the resource.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Volume,google/cloud/baremetalsolution/v2/volume.proto#L32}
  ///
  /// [google.cloud.baremetalsolution.v2.GetVolumeRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/volume.proto#L158}
  /// [google.cloud.baremetalsolution.v2.Volume]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/volume.proto#L32}
  ///
  StatusOr<google::cloud::baremetalsolution::v2::Volume> GetVolume(
      std::string const& name, Options opts = {});

  ///
  /// Get details of a single storage volume.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::baremetalsolution::v2::GetVolumeRequest,google/cloud/baremetalsolution/v2/volume.proto#L158}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Volume,google/cloud/baremetalsolution/v2/volume.proto#L32}
  ///
  /// [google.cloud.baremetalsolution.v2.GetVolumeRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/volume.proto#L158}
  /// [google.cloud.baremetalsolution.v2.Volume]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/volume.proto#L32}
  ///
  StatusOr<google::cloud::baremetalsolution::v2::Volume> GetVolume(
      google::cloud::baremetalsolution::v2::GetVolumeRequest const& request,
      Options opts = {});

  ///
  /// Update details of a single storage volume.
  ///
  /// @param volume  Required. The volume to update.
  ///  The `name` field is used to identify the volume to update.
  ///  Format: projects/{project}/locations/{location}/volumes/{volume}
  /// @param update_mask  The list of fields to update.
  ///  The only currently supported fields are:
  ///    `snapshot_auto_delete_behavior`
  ///    `snapshot_schedule_policy_name`
  ///    'labels'
  ///    'snapshot_enabled'
  ///    'snapshot_reservation_detail.reserved_space_percent'
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Volume,google/cloud/baremetalsolution/v2/volume.proto#L32}
  ///
  /// [google.cloud.baremetalsolution.v2.UpdateVolumeRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/volume.proto#L202}
  /// [google.cloud.baremetalsolution.v2.Volume]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/volume.proto#L32}
  ///
  future<StatusOr<google::cloud::baremetalsolution::v2::Volume>> UpdateVolume(
      google::cloud::baremetalsolution::v2::Volume const& volume,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Update details of a single storage volume.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::baremetalsolution::v2::UpdateVolumeRequest,google/cloud/baremetalsolution/v2/volume.proto#L202}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Volume,google/cloud/baremetalsolution/v2/volume.proto#L32}
  ///
  /// [google.cloud.baremetalsolution.v2.UpdateVolumeRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/volume.proto#L202}
  /// [google.cloud.baremetalsolution.v2.Volume]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/volume.proto#L32}
  ///
  future<StatusOr<google::cloud::baremetalsolution::v2::Volume>> UpdateVolume(
      google::cloud::baremetalsolution::v2::UpdateVolumeRequest const& request,
      Options opts = {});

  ///
  /// Emergency Volume resize.
  ///
  /// @param volume  Required. Volume to resize.
  /// @param size_gib  New Volume size, in GiB.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Volume,google/cloud/baremetalsolution/v2/volume.proto#L32}
  ///
  /// [google.cloud.baremetalsolution.v2.ResizeVolumeRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/volume.proto#L220}
  /// [google.cloud.baremetalsolution.v2.Volume]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/volume.proto#L32}
  ///
  future<StatusOr<google::cloud::baremetalsolution::v2::Volume>> ResizeVolume(
      std::string const& volume, std::int64_t size_gib, Options opts = {});

  ///
  /// Emergency Volume resize.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::baremetalsolution::v2::ResizeVolumeRequest,google/cloud/baremetalsolution/v2/volume.proto#L220}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Volume,google/cloud/baremetalsolution/v2/volume.proto#L32}
  ///
  /// [google.cloud.baremetalsolution.v2.ResizeVolumeRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/volume.proto#L220}
  /// [google.cloud.baremetalsolution.v2.Volume]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/volume.proto#L32}
  ///
  future<StatusOr<google::cloud::baremetalsolution::v2::Volume>> ResizeVolume(
      google::cloud::baremetalsolution::v2::ResizeVolumeRequest const& request,
      Options opts = {});

  ///
  /// List network in a given project and location.
  ///
  /// @param parent  Required. Parent value for ListNetworksRequest.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Network,google/cloud/baremetalsolution/v2/network.proto#L32}
  ///
  /// [google.cloud.baremetalsolution.v2.ListNetworksRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/network.proto#L214}
  /// [google.cloud.baremetalsolution.v2.Network]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/network.proto#L32}
  ///
  StreamRange<google::cloud::baremetalsolution::v2::Network> ListNetworks(
      std::string const& parent, Options opts = {});

  ///
  /// List network in a given project and location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::baremetalsolution::v2::ListNetworksRequest,google/cloud/baremetalsolution/v2/network.proto#L214}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Network,google/cloud/baremetalsolution/v2/network.proto#L32}
  ///
  /// [google.cloud.baremetalsolution.v2.ListNetworksRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/network.proto#L214}
  /// [google.cloud.baremetalsolution.v2.Network]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/network.proto#L32}
  ///
  StreamRange<google::cloud::baremetalsolution::v2::Network> ListNetworks(
      google::cloud::baremetalsolution::v2::ListNetworksRequest request,
      Options opts = {});

  ///
  /// List all Networks (and used IPs for each Network) in the vendor account
  /// associated with the specified project.
  ///
  /// @param location  Required. Parent value (project and location).
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::ListNetworkUsageResponse,google/cloud/baremetalsolution/v2/network.proto#L281}
  ///
  /// [google.cloud.baremetalsolution.v2.ListNetworkUsageRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/network.proto#L270}
  /// [google.cloud.baremetalsolution.v2.ListNetworkUsageResponse]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/network.proto#L281}
  ///
  StatusOr<google::cloud::baremetalsolution::v2::ListNetworkUsageResponse>
  ListNetworkUsage(std::string const& location, Options opts = {});

  ///
  /// List all Networks (and used IPs for each Network) in the vendor account
  /// associated with the specified project.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::baremetalsolution::v2::ListNetworkUsageRequest,google/cloud/baremetalsolution/v2/network.proto#L270}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::ListNetworkUsageResponse,google/cloud/baremetalsolution/v2/network.proto#L281}
  ///
  /// [google.cloud.baremetalsolution.v2.ListNetworkUsageRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/network.proto#L270}
  /// [google.cloud.baremetalsolution.v2.ListNetworkUsageResponse]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/network.proto#L281}
  ///
  StatusOr<google::cloud::baremetalsolution::v2::ListNetworkUsageResponse>
  ListNetworkUsage(
      google::cloud::baremetalsolution::v2::ListNetworkUsageRequest const&
          request,
      Options opts = {});

  ///
  /// Get details of a single network.
  ///
  /// @param name  Required. Name of the resource.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Network,google/cloud/baremetalsolution/v2/network.proto#L32}
  ///
  /// [google.cloud.baremetalsolution.v2.GetNetworkRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/network.proto#L203}
  /// [google.cloud.baremetalsolution.v2.Network]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/network.proto#L32}
  ///
  StatusOr<google::cloud::baremetalsolution::v2::Network> GetNetwork(
      std::string const& name, Options opts = {});

  ///
  /// Get details of a single network.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::baremetalsolution::v2::GetNetworkRequest,google/cloud/baremetalsolution/v2/network.proto#L203}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Network,google/cloud/baremetalsolution/v2/network.proto#L32}
  ///
  /// [google.cloud.baremetalsolution.v2.GetNetworkRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/network.proto#L203}
  /// [google.cloud.baremetalsolution.v2.Network]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/network.proto#L32}
  ///
  StatusOr<google::cloud::baremetalsolution::v2::Network> GetNetwork(
      google::cloud::baremetalsolution::v2::GetNetworkRequest const& request,
      Options opts = {});

  ///
  /// Update details of a single network.
  ///
  /// @param network  Required. The network to update.
  ///  The `name` field is used to identify the instance to update.
  ///  Format: projects/{project}/locations/{location}/networks/{network}
  /// @param update_mask  The list of fields to update.
  ///  The only currently supported fields are:
  ///    `labels`, `reservations`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Network,google/cloud/baremetalsolution/v2/network.proto#L32}
  ///
  /// [google.cloud.baremetalsolution.v2.UpdateNetworkRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/network.proto#L247}
  /// [google.cloud.baremetalsolution.v2.Network]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/network.proto#L32}
  ///
  future<StatusOr<google::cloud::baremetalsolution::v2::Network>> UpdateNetwork(
      google::cloud::baremetalsolution::v2::Network const& network,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Update details of a single network.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::baremetalsolution::v2::UpdateNetworkRequest,google/cloud/baremetalsolution/v2/network.proto#L247}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Network,google/cloud/baremetalsolution/v2/network.proto#L32}
  ///
  /// [google.cloud.baremetalsolution.v2.UpdateNetworkRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/network.proto#L247}
  /// [google.cloud.baremetalsolution.v2.Network]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/network.proto#L32}
  ///
  future<StatusOr<google::cloud::baremetalsolution::v2::Network>> UpdateNetwork(
      google::cloud::baremetalsolution::v2::UpdateNetworkRequest const& request,
      Options opts = {});

  ///
  /// Get details of a single storage logical unit number(LUN).
  ///
  /// @param name  Required. Name of the resource.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Lun,google/cloud/baremetalsolution/v2/lun.proto#L31}
  ///
  /// [google.cloud.baremetalsolution.v2.GetLunRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/lun.proto#L111}
  /// [google.cloud.baremetalsolution.v2.Lun]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/lun.proto#L31}
  ///
  StatusOr<google::cloud::baremetalsolution::v2::Lun> GetLun(
      std::string const& name, Options opts = {});

  ///
  /// Get details of a single storage logical unit number(LUN).
  ///
  /// @param request
  /// @googleapis_link{google::cloud::baremetalsolution::v2::GetLunRequest,google/cloud/baremetalsolution/v2/lun.proto#L111}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Lun,google/cloud/baremetalsolution/v2/lun.proto#L31}
  ///
  /// [google.cloud.baremetalsolution.v2.GetLunRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/lun.proto#L111}
  /// [google.cloud.baremetalsolution.v2.Lun]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/lun.proto#L31}
  ///
  StatusOr<google::cloud::baremetalsolution::v2::Lun> GetLun(
      google::cloud::baremetalsolution::v2::GetLunRequest const& request,
      Options opts = {});

  ///
  /// List storage volume luns for given storage volume.
  ///
  /// @param parent  Required. Parent value for ListLunsRequest.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Lun,google/cloud/baremetalsolution/v2/lun.proto#L31}
  ///
  /// [google.cloud.baremetalsolution.v2.ListLunsRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/lun.proto#L122}
  /// [google.cloud.baremetalsolution.v2.Lun]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/lun.proto#L31}
  ///
  StreamRange<google::cloud::baremetalsolution::v2::Lun> ListLuns(
      std::string const& parent, Options opts = {});

  ///
  /// List storage volume luns for given storage volume.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::baremetalsolution::v2::ListLunsRequest,google/cloud/baremetalsolution/v2/lun.proto#L122}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::Lun,google/cloud/baremetalsolution/v2/lun.proto#L31}
  ///
  /// [google.cloud.baremetalsolution.v2.ListLunsRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/lun.proto#L122}
  /// [google.cloud.baremetalsolution.v2.Lun]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/lun.proto#L31}
  ///
  StreamRange<google::cloud::baremetalsolution::v2::Lun> ListLuns(
      google::cloud::baremetalsolution::v2::ListLunsRequest request,
      Options opts = {});

  ///
  /// Get details of a single NFS share.
  ///
  /// @param name  Required. Name of the resource.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::NfsShare,google/cloud/baremetalsolution/v2/nfs_share.proto#L32}
  ///
  /// [google.cloud.baremetalsolution.v2.GetNfsShareRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/nfs_share.proto#L109}
  /// [google.cloud.baremetalsolution.v2.NfsShare]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/nfs_share.proto#L32}
  ///
  StatusOr<google::cloud::baremetalsolution::v2::NfsShare> GetNfsShare(
      std::string const& name, Options opts = {});

  ///
  /// Get details of a single NFS share.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::baremetalsolution::v2::GetNfsShareRequest,google/cloud/baremetalsolution/v2/nfs_share.proto#L109}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::NfsShare,google/cloud/baremetalsolution/v2/nfs_share.proto#L32}
  ///
  /// [google.cloud.baremetalsolution.v2.GetNfsShareRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/nfs_share.proto#L109}
  /// [google.cloud.baremetalsolution.v2.NfsShare]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/nfs_share.proto#L32}
  ///
  StatusOr<google::cloud::baremetalsolution::v2::NfsShare> GetNfsShare(
      google::cloud::baremetalsolution::v2::GetNfsShareRequest const& request,
      Options opts = {});

  ///
  /// List NFS shares.
  ///
  /// @param parent  Required. Parent value for ListNfsSharesRequest.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::NfsShare,google/cloud/baremetalsolution/v2/nfs_share.proto#L32}
  ///
  /// [google.cloud.baremetalsolution.v2.ListNfsSharesRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/nfs_share.proto#L120}
  /// [google.cloud.baremetalsolution.v2.NfsShare]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/nfs_share.proto#L32}
  ///
  StreamRange<google::cloud::baremetalsolution::v2::NfsShare> ListNfsShares(
      std::string const& parent, Options opts = {});

  ///
  /// List NFS shares.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::baremetalsolution::v2::ListNfsSharesRequest,google/cloud/baremetalsolution/v2/nfs_share.proto#L120}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::NfsShare,google/cloud/baremetalsolution/v2/nfs_share.proto#L32}
  ///
  /// [google.cloud.baremetalsolution.v2.ListNfsSharesRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/nfs_share.proto#L120}
  /// [google.cloud.baremetalsolution.v2.NfsShare]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/nfs_share.proto#L32}
  ///
  StreamRange<google::cloud::baremetalsolution::v2::NfsShare> ListNfsShares(
      google::cloud::baremetalsolution::v2::ListNfsSharesRequest request,
      Options opts = {});

  ///
  /// Update details of a single NFS share.
  ///
  /// @param nfs_share  Required. The NFS share to update.
  ///  The `name` field is used to identify the NFS share to update.
  ///  Format: projects/{project}/locations/{location}/nfsShares/{nfs_share}
  /// @param update_mask  The list of fields to update.
  ///  The only currently supported fields are:
  ///    `labels`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::NfsShare,google/cloud/baremetalsolution/v2/nfs_share.proto#L32}
  ///
  /// [google.cloud.baremetalsolution.v2.UpdateNfsShareRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/nfs_share.proto#L153}
  /// [google.cloud.baremetalsolution.v2.NfsShare]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/nfs_share.proto#L32}
  ///
  future<StatusOr<google::cloud::baremetalsolution::v2::NfsShare>>
  UpdateNfsShare(
      google::cloud::baremetalsolution::v2::NfsShare const& nfs_share,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Update details of a single NFS share.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::baremetalsolution::v2::UpdateNfsShareRequest,google/cloud/baremetalsolution/v2/nfs_share.proto#L153}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::baremetalsolution::v2::NfsShare,google/cloud/baremetalsolution/v2/nfs_share.proto#L32}
  ///
  /// [google.cloud.baremetalsolution.v2.UpdateNfsShareRequest]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/nfs_share.proto#L153}
  /// [google.cloud.baremetalsolution.v2.NfsShare]:
  /// @googleapis_reference_link{google/cloud/baremetalsolution/v2/nfs_share.proto#L32}
  ///
  future<StatusOr<google::cloud::baremetalsolution::v2::NfsShare>>
  UpdateNfsShare(
      google::cloud::baremetalsolution::v2::UpdateNfsShareRequest const&
          request,
      Options opts = {});

 private:
  std::shared_ptr<BareMetalSolutionConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace baremetalsolution
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BAREMETALSOLUTION_BARE_METAL_SOLUTION_CLIENT_H
