// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/baremetalsolution/v2/baremetalsolution.proto

#include "google/cloud/baremetalsolution/bare_metal_solution_client.h"
#include <memory>

namespace google {
namespace cloud {
namespace baremetalsolution {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

BareMetalSolutionClient::BareMetalSolutionClient(
    std::shared_ptr<BareMetalSolutionConnection> connection, Options opts)
    : connection_(std::move(connection)),
      options_(
          internal::MergeOptions(std::move(opts), connection_->options())) {}
BareMetalSolutionClient::~BareMetalSolutionClient() = default;

StreamRange<google::cloud::baremetalsolution::v2::Instance>
BareMetalSolutionClient::ListInstances(std::string const& parent,
                                       Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::ListInstancesRequest request;
  request.set_parent(parent);
  return connection_->ListInstances(request);
}

StreamRange<google::cloud::baremetalsolution::v2::Instance>
BareMetalSolutionClient::ListInstances(
    google::cloud::baremetalsolution::v2::ListInstancesRequest request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->ListInstances(std::move(request));
}

StatusOr<google::cloud::baremetalsolution::v2::Instance>
BareMetalSolutionClient::GetInstance(std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::GetInstanceRequest request;
  request.set_name(name);
  return connection_->GetInstance(request);
}

StatusOr<google::cloud::baremetalsolution::v2::Instance>
BareMetalSolutionClient::GetInstance(
    google::cloud::baremetalsolution::v2::GetInstanceRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->GetInstance(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::Instance>>
BareMetalSolutionClient::UpdateInstance(
    google::cloud::baremetalsolution::v2::Instance const& instance,
    google::protobuf::FieldMask const& update_mask, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::UpdateInstanceRequest request;
  *request.mutable_instance() = instance;
  *request.mutable_update_mask() = update_mask;
  return connection_->UpdateInstance(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::Instance>>
BareMetalSolutionClient::UpdateInstance(
    google::cloud::baremetalsolution::v2::UpdateInstanceRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->UpdateInstance(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::ResetInstanceResponse>>
BareMetalSolutionClient::ResetInstance(std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::ResetInstanceRequest request;
  request.set_name(name);
  return connection_->ResetInstance(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::ResetInstanceResponse>>
BareMetalSolutionClient::ResetInstance(
    google::cloud::baremetalsolution::v2::ResetInstanceRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->ResetInstance(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::StartInstanceResponse>>
BareMetalSolutionClient::StartInstance(std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::StartInstanceRequest request;
  request.set_name(name);
  return connection_->StartInstance(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::StartInstanceResponse>>
BareMetalSolutionClient::StartInstance(
    google::cloud::baremetalsolution::v2::StartInstanceRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->StartInstance(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::StopInstanceResponse>>
BareMetalSolutionClient::StopInstance(std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::StopInstanceRequest request;
  request.set_name(name);
  return connection_->StopInstance(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::StopInstanceResponse>>
BareMetalSolutionClient::StopInstance(
    google::cloud::baremetalsolution::v2::StopInstanceRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->StopInstance(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::Instance>>
BareMetalSolutionClient::DetachLun(std::string const& instance,
                                   std::string const& lun, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::DetachLunRequest request;
  request.set_instance(instance);
  request.set_lun(lun);
  return connection_->DetachLun(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::Instance>>
BareMetalSolutionClient::DetachLun(
    google::cloud::baremetalsolution::v2::DetachLunRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->DetachLun(request);
}

StreamRange<google::cloud::baremetalsolution::v2::Volume>
BareMetalSolutionClient::ListVolumes(std::string const& parent, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::ListVolumesRequest request;
  request.set_parent(parent);
  return connection_->ListVolumes(request);
}

StreamRange<google::cloud::baremetalsolution::v2::Volume>
BareMetalSolutionClient::ListVolumes(
    google::cloud::baremetalsolution::v2::ListVolumesRequest request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->ListVolumes(std::move(request));
}

StatusOr<google::cloud::baremetalsolution::v2::Volume>
BareMetalSolutionClient::GetVolume(std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::GetVolumeRequest request;
  request.set_name(name);
  return connection_->GetVolume(request);
}

StatusOr<google::cloud::baremetalsolution::v2::Volume>
BareMetalSolutionClient::GetVolume(
    google::cloud::baremetalsolution::v2::GetVolumeRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->GetVolume(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::Volume>>
BareMetalSolutionClient::UpdateVolume(
    google::cloud::baremetalsolution::v2::Volume const& volume,
    google::protobuf::FieldMask const& update_mask, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::UpdateVolumeRequest request;
  *request.mutable_volume() = volume;
  *request.mutable_update_mask() = update_mask;
  return connection_->UpdateVolume(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::Volume>>
BareMetalSolutionClient::UpdateVolume(
    google::cloud::baremetalsolution::v2::UpdateVolumeRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->UpdateVolume(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::Volume>>
BareMetalSolutionClient::ResizeVolume(std::string const& volume,
                                      std::int64_t size_gib, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::ResizeVolumeRequest request;
  request.set_volume(volume);
  request.set_size_gib(size_gib);
  return connection_->ResizeVolume(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::Volume>>
BareMetalSolutionClient::ResizeVolume(
    google::cloud::baremetalsolution::v2::ResizeVolumeRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->ResizeVolume(request);
}

StreamRange<google::cloud::baremetalsolution::v2::Network>
BareMetalSolutionClient::ListNetworks(std::string const& parent, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::ListNetworksRequest request;
  request.set_parent(parent);
  return connection_->ListNetworks(request);
}

StreamRange<google::cloud::baremetalsolution::v2::Network>
BareMetalSolutionClient::ListNetworks(
    google::cloud::baremetalsolution::v2::ListNetworksRequest request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->ListNetworks(std::move(request));
}

StatusOr<google::cloud::baremetalsolution::v2::ListNetworkUsageResponse>
BareMetalSolutionClient::ListNetworkUsage(std::string const& location,
                                          Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::ListNetworkUsageRequest request;
  request.set_location(location);
  return connection_->ListNetworkUsage(request);
}

StatusOr<google::cloud::baremetalsolution::v2::ListNetworkUsageResponse>
BareMetalSolutionClient::ListNetworkUsage(
    google::cloud::baremetalsolution::v2::ListNetworkUsageRequest const&
        request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->ListNetworkUsage(request);
}

StatusOr<google::cloud::baremetalsolution::v2::Network>
BareMetalSolutionClient::GetNetwork(std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::GetNetworkRequest request;
  request.set_name(name);
  return connection_->GetNetwork(request);
}

StatusOr<google::cloud::baremetalsolution::v2::Network>
BareMetalSolutionClient::GetNetwork(
    google::cloud::baremetalsolution::v2::GetNetworkRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->GetNetwork(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::Network>>
BareMetalSolutionClient::UpdateNetwork(
    google::cloud::baremetalsolution::v2::Network const& network,
    google::protobuf::FieldMask const& update_mask, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::UpdateNetworkRequest request;
  *request.mutable_network() = network;
  *request.mutable_update_mask() = update_mask;
  return connection_->UpdateNetwork(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::Network>>
BareMetalSolutionClient::UpdateNetwork(
    google::cloud::baremetalsolution::v2::UpdateNetworkRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->UpdateNetwork(request);
}

StatusOr<google::cloud::baremetalsolution::v2::Lun>
BareMetalSolutionClient::GetLun(std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::GetLunRequest request;
  request.set_name(name);
  return connection_->GetLun(request);
}

StatusOr<google::cloud::baremetalsolution::v2::Lun>
BareMetalSolutionClient::GetLun(
    google::cloud::baremetalsolution::v2::GetLunRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->GetLun(request);
}

StreamRange<google::cloud::baremetalsolution::v2::Lun>
BareMetalSolutionClient::ListLuns(std::string const& parent, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::ListLunsRequest request;
  request.set_parent(parent);
  return connection_->ListLuns(request);
}

StreamRange<google::cloud::baremetalsolution::v2::Lun>
BareMetalSolutionClient::ListLuns(
    google::cloud::baremetalsolution::v2::ListLunsRequest request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->ListLuns(std::move(request));
}

StatusOr<google::cloud::baremetalsolution::v2::NfsShare>
BareMetalSolutionClient::GetNfsShare(std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::GetNfsShareRequest request;
  request.set_name(name);
  return connection_->GetNfsShare(request);
}

StatusOr<google::cloud::baremetalsolution::v2::NfsShare>
BareMetalSolutionClient::GetNfsShare(
    google::cloud::baremetalsolution::v2::GetNfsShareRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->GetNfsShare(request);
}

StreamRange<google::cloud::baremetalsolution::v2::NfsShare>
BareMetalSolutionClient::ListNfsShares(std::string const& parent,
                                       Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::ListNfsSharesRequest request;
  request.set_parent(parent);
  return connection_->ListNfsShares(request);
}

StreamRange<google::cloud::baremetalsolution::v2::NfsShare>
BareMetalSolutionClient::ListNfsShares(
    google::cloud::baremetalsolution::v2::ListNfsSharesRequest request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->ListNfsShares(std::move(request));
}

future<StatusOr<google::cloud::baremetalsolution::v2::NfsShare>>
BareMetalSolutionClient::UpdateNfsShare(
    google::cloud::baremetalsolution::v2::NfsShare const& nfs_share,
    google::protobuf::FieldMask const& update_mask, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::UpdateNfsShareRequest request;
  *request.mutable_nfs_share() = nfs_share;
  *request.mutable_update_mask() = update_mask;
  return connection_->UpdateNfsShare(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::NfsShare>>
BareMetalSolutionClient::UpdateNfsShare(
    google::cloud::baremetalsolution::v2::UpdateNfsShareRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->UpdateNfsShare(request);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace baremetalsolution
}  // namespace cloud
}  // namespace google
