// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/baremetalsolution/v2/baremetalsolution.proto

#include "google/cloud/baremetalsolution/bare_metal_solution_client.h"
#include "google/cloud/baremetalsolution/internal/bare_metal_solution_option_defaults.h"
#include <memory>

namespace google {
namespace cloud {
namespace baremetalsolution {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

BareMetalSolutionClient::BareMetalSolutionClient(
    std::shared_ptr<BareMetalSolutionConnection> connection, Options opts)
    : connection_(std::move(connection)),
      options_(internal::MergeOptions(
          std::move(opts),
          baremetalsolution_internal::BareMetalSolutionDefaultOptions(
              connection_->options()))) {}
BareMetalSolutionClient::~BareMetalSolutionClient() = default;

StreamRange<google::cloud::baremetalsolution::v2::Instance>
BareMetalSolutionClient::ListInstances(std::string const& parent,
                                       Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::ListInstancesRequest request;
  request.set_parent(parent);
  return connection_->ListInstances(request);
}

StreamRange<google::cloud::baremetalsolution::v2::Instance>
BareMetalSolutionClient::ListInstances(
    google::cloud::baremetalsolution::v2::ListInstancesRequest request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->ListInstances(std::move(request));
}

StatusOr<google::cloud::baremetalsolution::v2::Instance>
BareMetalSolutionClient::GetInstance(std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::GetInstanceRequest request;
  request.set_name(name);
  return connection_->GetInstance(request);
}

StatusOr<google::cloud::baremetalsolution::v2::Instance>
BareMetalSolutionClient::GetInstance(
    google::cloud::baremetalsolution::v2::GetInstanceRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->GetInstance(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::ResetInstanceResponse>>
BareMetalSolutionClient::ResetInstance(std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::ResetInstanceRequest request;
  request.set_name(name);
  return connection_->ResetInstance(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::ResetInstanceResponse>>
BareMetalSolutionClient::ResetInstance(
    google::cloud::baremetalsolution::v2::ResetInstanceRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->ResetInstance(request);
}

StreamRange<google::cloud::baremetalsolution::v2::Volume>
BareMetalSolutionClient::ListVolumes(std::string const& parent, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::ListVolumesRequest request;
  request.set_parent(parent);
  return connection_->ListVolumes(request);
}

StreamRange<google::cloud::baremetalsolution::v2::Volume>
BareMetalSolutionClient::ListVolumes(
    google::cloud::baremetalsolution::v2::ListVolumesRequest request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->ListVolumes(std::move(request));
}

StatusOr<google::cloud::baremetalsolution::v2::Volume>
BareMetalSolutionClient::GetVolume(std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::GetVolumeRequest request;
  request.set_name(name);
  return connection_->GetVolume(request);
}

StatusOr<google::cloud::baremetalsolution::v2::Volume>
BareMetalSolutionClient::GetVolume(
    google::cloud::baremetalsolution::v2::GetVolumeRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->GetVolume(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::Volume>>
BareMetalSolutionClient::UpdateVolume(
    google::cloud::baremetalsolution::v2::Volume const& volume,
    google::protobuf::FieldMask const& update_mask, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::UpdateVolumeRequest request;
  *request.mutable_volume() = volume;
  *request.mutable_update_mask() = update_mask;
  return connection_->UpdateVolume(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::Volume>>
BareMetalSolutionClient::UpdateVolume(
    google::cloud::baremetalsolution::v2::UpdateVolumeRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->UpdateVolume(request);
}

StreamRange<google::cloud::baremetalsolution::v2::Network>
BareMetalSolutionClient::ListNetworks(std::string const& parent, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::ListNetworksRequest request;
  request.set_parent(parent);
  return connection_->ListNetworks(request);
}

StreamRange<google::cloud::baremetalsolution::v2::Network>
BareMetalSolutionClient::ListNetworks(
    google::cloud::baremetalsolution::v2::ListNetworksRequest request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->ListNetworks(std::move(request));
}

StatusOr<google::cloud::baremetalsolution::v2::Network>
BareMetalSolutionClient::GetNetwork(std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::GetNetworkRequest request;
  request.set_name(name);
  return connection_->GetNetwork(request);
}

StatusOr<google::cloud::baremetalsolution::v2::Network>
BareMetalSolutionClient::GetNetwork(
    google::cloud::baremetalsolution::v2::GetNetworkRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->GetNetwork(request);
}

StreamRange<google::cloud::baremetalsolution::v2::SnapshotSchedulePolicy>
BareMetalSolutionClient::ListSnapshotSchedulePolicies(std::string const& parent,
                                                      Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::ListSnapshotSchedulePoliciesRequest
      request;
  request.set_parent(parent);
  return connection_->ListSnapshotSchedulePolicies(request);
}

StreamRange<google::cloud::baremetalsolution::v2::SnapshotSchedulePolicy>
BareMetalSolutionClient::ListSnapshotSchedulePolicies(
    google::cloud::baremetalsolution::v2::ListSnapshotSchedulePoliciesRequest
        request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->ListSnapshotSchedulePolicies(std::move(request));
}

StatusOr<google::cloud::baremetalsolution::v2::SnapshotSchedulePolicy>
BareMetalSolutionClient::GetSnapshotSchedulePolicy(std::string const& name,
                                                   Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::GetSnapshotSchedulePolicyRequest
      request;
  request.set_name(name);
  return connection_->GetSnapshotSchedulePolicy(request);
}

StatusOr<google::cloud::baremetalsolution::v2::SnapshotSchedulePolicy>
BareMetalSolutionClient::GetSnapshotSchedulePolicy(
    google::cloud::baremetalsolution::v2::
        GetSnapshotSchedulePolicyRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->GetSnapshotSchedulePolicy(request);
}

StatusOr<google::cloud::baremetalsolution::v2::SnapshotSchedulePolicy>
BareMetalSolutionClient::CreateSnapshotSchedulePolicy(
    std::string const& parent,
    google::cloud::baremetalsolution::v2::SnapshotSchedulePolicy const&
        snapshot_schedule_policy,
    std::string const& snapshot_schedule_policy_id, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::CreateSnapshotSchedulePolicyRequest
      request;
  request.set_parent(parent);
  *request.mutable_snapshot_schedule_policy() = snapshot_schedule_policy;
  request.set_snapshot_schedule_policy_id(snapshot_schedule_policy_id);
  return connection_->CreateSnapshotSchedulePolicy(request);
}

StatusOr<google::cloud::baremetalsolution::v2::SnapshotSchedulePolicy>
BareMetalSolutionClient::CreateSnapshotSchedulePolicy(
    google::cloud::baremetalsolution::v2::
        CreateSnapshotSchedulePolicyRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->CreateSnapshotSchedulePolicy(request);
}

StatusOr<google::cloud::baremetalsolution::v2::SnapshotSchedulePolicy>
BareMetalSolutionClient::UpdateSnapshotSchedulePolicy(
    google::cloud::baremetalsolution::v2::SnapshotSchedulePolicy const&
        snapshot_schedule_policy,
    google::protobuf::FieldMask const& update_mask, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::UpdateSnapshotSchedulePolicyRequest
      request;
  *request.mutable_snapshot_schedule_policy() = snapshot_schedule_policy;
  *request.mutable_update_mask() = update_mask;
  return connection_->UpdateSnapshotSchedulePolicy(request);
}

StatusOr<google::cloud::baremetalsolution::v2::SnapshotSchedulePolicy>
BareMetalSolutionClient::UpdateSnapshotSchedulePolicy(
    google::cloud::baremetalsolution::v2::
        UpdateSnapshotSchedulePolicyRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->UpdateSnapshotSchedulePolicy(request);
}

Status BareMetalSolutionClient::DeleteSnapshotSchedulePolicy(
    std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::DeleteSnapshotSchedulePolicyRequest
      request;
  request.set_name(name);
  return connection_->DeleteSnapshotSchedulePolicy(request);
}

Status BareMetalSolutionClient::DeleteSnapshotSchedulePolicy(
    google::cloud::baremetalsolution::v2::
        DeleteSnapshotSchedulePolicyRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->DeleteSnapshotSchedulePolicy(request);
}

StatusOr<google::cloud::baremetalsolution::v2::VolumeSnapshot>
BareMetalSolutionClient::CreateVolumeSnapshot(
    std::string const& parent,
    google::cloud::baremetalsolution::v2::VolumeSnapshot const& volume_snapshot,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::CreateVolumeSnapshotRequest request;
  request.set_parent(parent);
  *request.mutable_volume_snapshot() = volume_snapshot;
  return connection_->CreateVolumeSnapshot(request);
}

StatusOr<google::cloud::baremetalsolution::v2::VolumeSnapshot>
BareMetalSolutionClient::CreateVolumeSnapshot(
    google::cloud::baremetalsolution::v2::CreateVolumeSnapshotRequest const&
        request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->CreateVolumeSnapshot(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::VolumeSnapshot>>
BareMetalSolutionClient::RestoreVolumeSnapshot(
    std::string const& volume_snapshot, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::RestoreVolumeSnapshotRequest request;
  request.set_volume_snapshot(volume_snapshot);
  return connection_->RestoreVolumeSnapshot(request);
}

future<StatusOr<google::cloud::baremetalsolution::v2::VolumeSnapshot>>
BareMetalSolutionClient::RestoreVolumeSnapshot(
    google::cloud::baremetalsolution::v2::RestoreVolumeSnapshotRequest const&
        request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->RestoreVolumeSnapshot(request);
}

Status BareMetalSolutionClient::DeleteVolumeSnapshot(std::string const& name,
                                                     Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::DeleteVolumeSnapshotRequest request;
  request.set_name(name);
  return connection_->DeleteVolumeSnapshot(request);
}

Status BareMetalSolutionClient::DeleteVolumeSnapshot(
    google::cloud::baremetalsolution::v2::DeleteVolumeSnapshotRequest const&
        request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->DeleteVolumeSnapshot(request);
}

StatusOr<google::cloud::baremetalsolution::v2::VolumeSnapshot>
BareMetalSolutionClient::GetVolumeSnapshot(std::string const& name,
                                           Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::GetVolumeSnapshotRequest request;
  request.set_name(name);
  return connection_->GetVolumeSnapshot(request);
}

StatusOr<google::cloud::baremetalsolution::v2::VolumeSnapshot>
BareMetalSolutionClient::GetVolumeSnapshot(
    google::cloud::baremetalsolution::v2::GetVolumeSnapshotRequest const&
        request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->GetVolumeSnapshot(request);
}

StreamRange<google::cloud::baremetalsolution::v2::VolumeSnapshot>
BareMetalSolutionClient::ListVolumeSnapshots(std::string const& parent,
                                             Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::ListVolumeSnapshotsRequest request;
  request.set_parent(parent);
  return connection_->ListVolumeSnapshots(request);
}

StreamRange<google::cloud::baremetalsolution::v2::VolumeSnapshot>
BareMetalSolutionClient::ListVolumeSnapshots(
    google::cloud::baremetalsolution::v2::ListVolumeSnapshotsRequest request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->ListVolumeSnapshots(std::move(request));
}

StatusOr<google::cloud::baremetalsolution::v2::Lun>
BareMetalSolutionClient::GetLun(std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::GetLunRequest request;
  request.set_name(name);
  return connection_->GetLun(request);
}

StatusOr<google::cloud::baremetalsolution::v2::Lun>
BareMetalSolutionClient::GetLun(
    google::cloud::baremetalsolution::v2::GetLunRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->GetLun(request);
}

StreamRange<google::cloud::baremetalsolution::v2::Lun>
BareMetalSolutionClient::ListLuns(std::string const& parent, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::baremetalsolution::v2::ListLunsRequest request;
  request.set_parent(parent);
  return connection_->ListLuns(request);
}

StreamRange<google::cloud::baremetalsolution::v2::Lun>
BareMetalSolutionClient::ListLuns(
    google::cloud::baremetalsolution::v2::ListLunsRequest request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->ListLuns(std::move(request));
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace baremetalsolution
}  // namespace cloud
}  // namespace google
