// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/container/v1/cluster_service.proto

#include "google/cloud/container/internal/cluster_manager_tracing_connection.h"
#include "google/cloud/internal/opentelemetry.h"
#include <memory>

namespace google {
namespace cloud {
namespace container_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

#ifdef GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

ClusterManagerTracingConnection::ClusterManagerTracingConnection(
    std::shared_ptr<container::ClusterManagerConnection> child)
    : child_(std::move(child)) {}

StatusOr<google::container::v1::ListClustersResponse>
ClusterManagerTracingConnection::ListClusters(
    google::container::v1::ListClustersRequest const& request) {
  return child_->ListClusters(request);
}

StatusOr<google::container::v1::Cluster>
ClusterManagerTracingConnection::GetCluster(
    google::container::v1::GetClusterRequest const& request) {
  return child_->GetCluster(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::CreateCluster(
    google::container::v1::CreateClusterRequest const& request) {
  return child_->CreateCluster(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::UpdateCluster(
    google::container::v1::UpdateClusterRequest const& request) {
  return child_->UpdateCluster(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::UpdateNodePool(
    google::container::v1::UpdateNodePoolRequest const& request) {
  return child_->UpdateNodePool(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::SetNodePoolAutoscaling(
    google::container::v1::SetNodePoolAutoscalingRequest const& request) {
  return child_->SetNodePoolAutoscaling(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::SetLoggingService(
    google::container::v1::SetLoggingServiceRequest const& request) {
  return child_->SetLoggingService(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::SetMonitoringService(
    google::container::v1::SetMonitoringServiceRequest const& request) {
  return child_->SetMonitoringService(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::SetAddonsConfig(
    google::container::v1::SetAddonsConfigRequest const& request) {
  return child_->SetAddonsConfig(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::SetLocations(
    google::container::v1::SetLocationsRequest const& request) {
  return child_->SetLocations(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::UpdateMaster(
    google::container::v1::UpdateMasterRequest const& request) {
  return child_->UpdateMaster(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::SetMasterAuth(
    google::container::v1::SetMasterAuthRequest const& request) {
  return child_->SetMasterAuth(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::DeleteCluster(
    google::container::v1::DeleteClusterRequest const& request) {
  return child_->DeleteCluster(request);
}

StatusOr<google::container::v1::ListOperationsResponse>
ClusterManagerTracingConnection::ListOperations(
    google::container::v1::ListOperationsRequest const& request) {
  return child_->ListOperations(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::GetOperation(
    google::container::v1::GetOperationRequest const& request) {
  return child_->GetOperation(request);
}

Status ClusterManagerTracingConnection::CancelOperation(
    google::container::v1::CancelOperationRequest const& request) {
  return child_->CancelOperation(request);
}

StatusOr<google::container::v1::ServerConfig>
ClusterManagerTracingConnection::GetServerConfig(
    google::container::v1::GetServerConfigRequest const& request) {
  return child_->GetServerConfig(request);
}

StatusOr<google::container::v1::GetJSONWebKeysResponse>
ClusterManagerTracingConnection::GetJSONWebKeys(
    google::container::v1::GetJSONWebKeysRequest const& request) {
  return child_->GetJSONWebKeys(request);
}

StatusOr<google::container::v1::ListNodePoolsResponse>
ClusterManagerTracingConnection::ListNodePools(
    google::container::v1::ListNodePoolsRequest const& request) {
  return child_->ListNodePools(request);
}

StatusOr<google::container::v1::NodePool>
ClusterManagerTracingConnection::GetNodePool(
    google::container::v1::GetNodePoolRequest const& request) {
  return child_->GetNodePool(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::CreateNodePool(
    google::container::v1::CreateNodePoolRequest const& request) {
  return child_->CreateNodePool(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::DeleteNodePool(
    google::container::v1::DeleteNodePoolRequest const& request) {
  return child_->DeleteNodePool(request);
}

Status ClusterManagerTracingConnection::CompleteNodePoolUpgrade(
    google::container::v1::CompleteNodePoolUpgradeRequest const& request) {
  return child_->CompleteNodePoolUpgrade(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::RollbackNodePoolUpgrade(
    google::container::v1::RollbackNodePoolUpgradeRequest const& request) {
  return child_->RollbackNodePoolUpgrade(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::SetNodePoolManagement(
    google::container::v1::SetNodePoolManagementRequest const& request) {
  return child_->SetNodePoolManagement(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::SetLabels(
    google::container::v1::SetLabelsRequest const& request) {
  return child_->SetLabels(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::SetLegacyAbac(
    google::container::v1::SetLegacyAbacRequest const& request) {
  return child_->SetLegacyAbac(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::StartIPRotation(
    google::container::v1::StartIPRotationRequest const& request) {
  return child_->StartIPRotation(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::CompleteIPRotation(
    google::container::v1::CompleteIPRotationRequest const& request) {
  return child_->CompleteIPRotation(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::SetNodePoolSize(
    google::container::v1::SetNodePoolSizeRequest const& request) {
  return child_->SetNodePoolSize(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::SetNetworkPolicy(
    google::container::v1::SetNetworkPolicyRequest const& request) {
  return child_->SetNetworkPolicy(request);
}

StatusOr<google::container::v1::Operation>
ClusterManagerTracingConnection::SetMaintenancePolicy(
    google::container::v1::SetMaintenancePolicyRequest const& request) {
  return child_->SetMaintenancePolicy(request);
}

StreamRange<google::container::v1::UsableSubnetwork>
ClusterManagerTracingConnection::ListUsableSubnetworks(
    google::container::v1::ListUsableSubnetworksRequest request) {
  return child_->ListUsableSubnetworks(request);
}

#endif  // GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace container_internal
}  // namespace cloud
}  // namespace google
