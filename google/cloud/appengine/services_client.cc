// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/appengine/v1/appengine.proto

#include "google/cloud/appengine/services_client.h"
#include "google/cloud/appengine/internal/services_option_defaults.h"
#include <memory>

namespace google {
namespace cloud {
namespace appengine {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

ServicesClient::ServicesClient(std::shared_ptr<ServicesConnection> connection,
                               Options options)
    : connection_(std::move(connection)),
      options_(appengine_internal::ServicesDefaultOptions(std::move(options))) {
}
ServicesClient::~ServicesClient() = default;

StreamRange<google::appengine::v1::Service> ServicesClient::ListServices(
    google::appengine::v1::ListServicesRequest request, Options options) {
  internal::OptionsSpan span(
      internal::MergeOptions(std::move(options), options_));
  return connection_->ListServices(std::move(request));
}

StatusOr<google::appengine::v1::Service> ServicesClient::GetService(
    google::appengine::v1::GetServiceRequest const& request, Options options) {
  internal::OptionsSpan span(
      internal::MergeOptions(std::move(options), options_));
  return connection_->GetService(request);
}

future<StatusOr<google::appengine::v1::Service>> ServicesClient::UpdateService(
    google::appengine::v1::UpdateServiceRequest const& request,
    Options options) {
  internal::OptionsSpan span(
      internal::MergeOptions(std::move(options), options_));
  return connection_->UpdateService(request);
}

future<StatusOr<google::appengine::v1::OperationMetadataV1>>
ServicesClient::DeleteService(
    google::appengine::v1::DeleteServiceRequest const& request,
    Options options) {
  internal::OptionsSpan span(
      internal::MergeOptions(std::move(options), options_));
  return connection_->DeleteService(request);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace appengine
}  // namespace cloud
}  // namespace google
