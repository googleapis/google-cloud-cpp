// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/contentwarehouse/v1/document_link_service.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_CONTENTWAREHOUSE_V1_DOCUMENT_LINK_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_CONTENTWAREHOUSE_V1_DOCUMENT_LINK_CLIENT_H

#include "google/cloud/contentwarehouse/v1/document_link_connection.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <memory>

namespace google {
namespace cloud {
namespace contentwarehouse_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// This service lets you manage document-links.
/// Document-Links are treated as sub-resources under source documents.
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class DocumentLinkServiceClient {
 public:
  explicit DocumentLinkServiceClient(
      std::shared_ptr<DocumentLinkServiceConnection> connection,
      Options opts = {});
  ~DocumentLinkServiceClient();

  ///@{
  /// @name Copy and move support
  DocumentLinkServiceClient(DocumentLinkServiceClient const&) = default;
  DocumentLinkServiceClient& operator=(DocumentLinkServiceClient const&) =
      default;
  DocumentLinkServiceClient(DocumentLinkServiceClient&&) = default;
  DocumentLinkServiceClient& operator=(DocumentLinkServiceClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(DocumentLinkServiceClient const& a,
                         DocumentLinkServiceClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(DocumentLinkServiceClient const& a,
                         DocumentLinkServiceClient const& b) {
    return !(a == b);
  }
  ///@}

  // clang-format off
  ///
  /// Return all target document-links from the document.
  ///
  /// @param parent  Required. The name of the document, for which all target links are
  ///  returned. Format:
  ///  projects/{project_number}/locations/{location}/documents/{target_document_id}.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest]: @googleapis_reference_link{google/cloud/contentwarehouse/v1/document_link_service.proto#L94}
  /// [google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse]: @googleapis_reference_link{google/cloud/contentwarehouse/v1/document_link_service.proto#L84}
  ///
  // clang-format on
  StatusOr<google::cloud::contentwarehouse::v1::ListLinkedTargetsResponse>
  ListLinkedTargets(std::string const& parent, Options opts = {});

  // clang-format off
  ///
  /// Return all target document-links from the document.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest]: @googleapis_reference_link{google/cloud/contentwarehouse/v1/document_link_service.proto#L94}
  /// [google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse]: @googleapis_reference_link{google/cloud/contentwarehouse/v1/document_link_service.proto#L84}
  ///
  // clang-format on
  StatusOr<google::cloud::contentwarehouse::v1::ListLinkedTargetsResponse>
  ListLinkedTargets(
      google::cloud::contentwarehouse::v1::ListLinkedTargetsRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Return all source document-links from the document.
  ///
  /// @param parent  Required. The name of the document, for which all source links are
  ///  returned. Format:
  ///  projects/{project_number}/locations/{location}/documents/{source_document_id}.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.cloud.contentwarehouse.v1.DocumentLink], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.contentwarehouse.v1.DocumentLink]: @googleapis_reference_link{google/cloud/contentwarehouse/v1/document_link_service.proto#L152}
  /// [google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest]: @googleapis_reference_link{google/cloud/contentwarehouse/v1/document_link_service.proto#L121}
  ///
  // clang-format on
  StreamRange<google::cloud::contentwarehouse::v1::DocumentLink>
  ListLinkedSources(std::string const& parent, Options opts = {});

  // clang-format off
  ///
  /// Return all source document-links from the document.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.cloud.contentwarehouse.v1.DocumentLink], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.contentwarehouse.v1.DocumentLink]: @googleapis_reference_link{google/cloud/contentwarehouse/v1/document_link_service.proto#L152}
  /// [google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest]: @googleapis_reference_link{google/cloud/contentwarehouse/v1/document_link_service.proto#L121}
  ///
  // clang-format on
  StreamRange<google::cloud::contentwarehouse::v1::DocumentLink>
  ListLinkedSources(
      google::cloud::contentwarehouse::v1::ListLinkedSourcesRequest request,
      Options opts = {});

  // clang-format off
  ///
  /// Create a link between a source document and a target document.
  ///
  /// @param parent  Required. Parent of the document-link to be created.
  ///  parent of document-link should be a document.
  ///  Format:
  ///  projects/{project_number}/locations/{location}/documents/{source_document_id}.
  /// @param document_link  Required. Document links associated with the source documents
  ///  (source_document_id).
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.contentwarehouse.v1.DocumentLink])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest]: @googleapis_reference_link{google/cloud/contentwarehouse/v1/document_link_service.proto#L201}
  /// [google.cloud.contentwarehouse.v1.DocumentLink]: @googleapis_reference_link{google/cloud/contentwarehouse/v1/document_link_service.proto#L152}
  ///
  // clang-format on
  StatusOr<google::cloud::contentwarehouse::v1::DocumentLink>
  CreateDocumentLink(
      std::string const& parent,
      google::cloud::contentwarehouse::v1::DocumentLink const& document_link,
      Options opts = {});

  // clang-format off
  ///
  /// Create a link between a source document and a target document.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.contentwarehouse.v1.DocumentLink])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest]: @googleapis_reference_link{google/cloud/contentwarehouse/v1/document_link_service.proto#L201}
  /// [google.cloud.contentwarehouse.v1.DocumentLink]: @googleapis_reference_link{google/cloud/contentwarehouse/v1/document_link_service.proto#L152}
  ///
  // clang-format on
  StatusOr<google::cloud::contentwarehouse::v1::DocumentLink>
  CreateDocumentLink(
      google::cloud::contentwarehouse::v1::CreateDocumentLinkRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Remove the link between the source and target documents.
  ///
  /// @param name  Required. The name of the document-link to be deleted.
  ///  Format:
  ///  projects/{project_number}/locations/{location}/documents/{source_document_id}/documentLinks/{document_link_id}.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [`Status`] object. If the request failed, the
  ///     status contains the details of the failure.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest]: @googleapis_reference_link{google/cloud/contentwarehouse/v1/document_link_service.proto#L223}
  ///
  // clang-format on
  Status DeleteDocumentLink(std::string const& name, Options opts = {});

  // clang-format off
  ///
  /// Remove the link between the source and target documents.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [`Status`] object. If the request failed, the
  ///     status contains the details of the failure.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest]: @googleapis_reference_link{google/cloud/contentwarehouse/v1/document_link_service.proto#L223}
  ///
  // clang-format on
  Status DeleteDocumentLink(
      google::cloud::contentwarehouse::v1::DeleteDocumentLinkRequest const&
          request,
      Options opts = {});

 private:
  std::shared_ptr<DocumentLinkServiceConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace contentwarehouse_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_CONTENTWAREHOUSE_V1_DOCUMENT_LINK_CLIENT_H
