/*!

@mainpage Generative Language API C++ Client Library

An idiomatic C++ client library for the [Generative Language API][cloud-service-docs].

The Gemini API allows developers to build generative AI applications using Gemini models. Gemini is our most capable model, built from the ground up to be multimodal. It can generalize and seamlessly understand, operate across, and combine different types of information including language, images, audio, video, and code. You can use the Gemini API for use cases like reasoning across text and images, content generation, dialogue agents, summarization and classification systems, and more.

While this library is **GA**, please note that the Google Cloud C++ client libraries do **not** follow
[Semantic Versioning](https://semver.org/).

@tableofcontents{HTML:2}

## Quickstart

The following shows the code that you'll run in the
`google/cloud/generativelanguage/quickstart/` directory,
which should give you a taste of the Generative Language API C++ client library API.

@snippet quickstart.cc all

## Main classes

<!-- inject-client-list-start -->
This library offers multiple `*Client` classes, which are listed below. Each one
of these classes exposes all the RPCs for a service as member functions of the
class. This library groups multiple services because they are part of the same
product or are often used together. A typical example may be the administrative
and data plane operations for a single product.

The library also has other classes that provide helpers, configuration
parameters, and infrastructure to mock the `*Client` classes when testing your
application.

- [\c generativelanguage_v1::GenerativeServiceClient](@ref google::cloud::generativelanguage_v1::GenerativeServiceClient)
- [\c generativelanguage_v1::ModelServiceClient](@ref google::cloud::generativelanguage_v1::ModelServiceClient)
<!-- inject-client-list-end -->

## More Information

- @ref common-error-handling - describes how the library reports errors.
- @ref generativelanguage-override-endpoint - describes how to override the default
  endpoint.
- @ref generativelanguage-override-authentication - describes how to change the
  authentication credentials used by the library.
- @ref generativelanguage-override-retry - describes how to change the default retry
  policies.
- @ref generativelanguage-env - describes environment variables that can configure the
  behavior of the library.

[cloud-service-docs]: https://ai.google.dev/docs

*/
