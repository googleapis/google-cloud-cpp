// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/apihub/v1/linting_service.proto

#include "google/cloud/apihub/v1/linting_connection.h"
#include "google/cloud/apihub/v1/internal/linting_connection_impl.h"
#include "google/cloud/apihub/v1/internal/linting_option_defaults.h"
#include "google/cloud/apihub/v1/internal/linting_stub_factory.h"
#include "google/cloud/apihub/v1/internal/linting_tracing_connection.h"
#include "google/cloud/apihub/v1/linting_options.h"
#include "google/cloud/background_threads.h"
#include "google/cloud/common_options.h"
#include "google/cloud/credentials.h"
#include "google/cloud/grpc_options.h"
#include "google/cloud/internal/unified_grpc_credentials.h"
#include <memory>
#include <utility>

namespace google {
namespace cloud {
namespace apihub_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

LintingServiceConnection::~LintingServiceConnection() = default;

StatusOr<google::cloud::apihub::v1::StyleGuide>
LintingServiceConnection::GetStyleGuide(
    google::cloud::apihub::v1::GetStyleGuideRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apihub::v1::StyleGuide>
LintingServiceConnection::UpdateStyleGuide(
    google::cloud::apihub::v1::UpdateStyleGuideRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apihub::v1::StyleGuideContents>
LintingServiceConnection::GetStyleGuideContents(
    google::cloud::apihub::v1::GetStyleGuideContentsRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

Status LintingServiceConnection::LintSpec(
    google::cloud::apihub::v1::LintSpecRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

std::shared_ptr<LintingServiceConnection> MakeLintingServiceConnection(
    Options options) {
  internal::CheckExpectedOptions<CommonOptionList, GrpcOptionList,
                                 UnifiedCredentialsOptionList,
                                 LintingServicePolicyOptionList>(options,
                                                                 __func__);
  options =
      apihub_v1_internal::LintingServiceDefaultOptions(std::move(options));
  auto background = internal::MakeBackgroundThreadsFactory(options)();
  auto auth = internal::CreateAuthenticationStrategy(background->cq(), options);
  auto stub = apihub_v1_internal::CreateDefaultLintingServiceStub(
      std::move(auth), options);
  return apihub_v1_internal::MakeLintingServiceTracingConnection(
      std::make_shared<apihub_v1_internal::LintingServiceConnectionImpl>(
          std::move(background), std::move(stub), std::move(options)));
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace apihub_v1
}  // namespace cloud
}  // namespace google
