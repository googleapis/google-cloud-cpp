// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/apihub/v1/apihub_service.proto

#include "google/cloud/apihub/v1/internal/api_hub_metadata_decorator.h"
#include "google/cloud/grpc_options.h"
#include "google/cloud/internal/absl_str_cat_quiet.h"
#include "google/cloud/internal/api_client_header.h"
#include "google/cloud/internal/url_encode.h"
#include "google/cloud/status_or.h"
#include <google/cloud/apihub/v1/apihub_service.grpc.pb.h>
#include <memory>
#include <string>
#include <utility>
#include <vector>

namespace google {
namespace cloud {
namespace apihub_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

ApiHubMetadata::ApiHubMetadata(
    std::shared_ptr<ApiHubStub> child,
    std::multimap<std::string, std::string> fixed_metadata,
    std::string api_client_header)
    : child_(std::move(child)),
      fixed_metadata_(std::move(fixed_metadata)),
      api_client_header_(
          api_client_header.empty()
              ? google::cloud::internal::GeneratedLibClientHeader()
              : std::move(api_client_header)) {}

StatusOr<google::cloud::apihub::v1::Api> ApiHubMetadata::CreateApi(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::CreateApiRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("parent=", internal::UrlEncode(request.parent())));
  return child_->CreateApi(context, options, request);
}

StatusOr<google::cloud::apihub::v1::Api> ApiHubMetadata::GetApi(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::GetApiRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("name=", internal::UrlEncode(request.name())));
  return child_->GetApi(context, options, request);
}

StatusOr<google::cloud::apihub::v1::ListApisResponse> ApiHubMetadata::ListApis(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::ListApisRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("parent=", internal::UrlEncode(request.parent())));
  return child_->ListApis(context, options, request);
}

StatusOr<google::cloud::apihub::v1::Api> ApiHubMetadata::UpdateApi(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::UpdateApiRequest const& request) {
  SetMetadata(
      context, options,
      absl::StrCat("api.name=", internal::UrlEncode(request.api().name())));
  return child_->UpdateApi(context, options, request);
}

Status ApiHubMetadata::DeleteApi(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::DeleteApiRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("name=", internal::UrlEncode(request.name())));
  return child_->DeleteApi(context, options, request);
}

StatusOr<google::cloud::apihub::v1::Version> ApiHubMetadata::CreateVersion(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::CreateVersionRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("parent=", internal::UrlEncode(request.parent())));
  return child_->CreateVersion(context, options, request);
}

StatusOr<google::cloud::apihub::v1::Version> ApiHubMetadata::GetVersion(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::GetVersionRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("name=", internal::UrlEncode(request.name())));
  return child_->GetVersion(context, options, request);
}

StatusOr<google::cloud::apihub::v1::ListVersionsResponse>
ApiHubMetadata::ListVersions(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::ListVersionsRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("parent=", internal::UrlEncode(request.parent())));
  return child_->ListVersions(context, options, request);
}

StatusOr<google::cloud::apihub::v1::Version> ApiHubMetadata::UpdateVersion(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::UpdateVersionRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("version.name=",
                           internal::UrlEncode(request.version().name())));
  return child_->UpdateVersion(context, options, request);
}

Status ApiHubMetadata::DeleteVersion(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::DeleteVersionRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("name=", internal::UrlEncode(request.name())));
  return child_->DeleteVersion(context, options, request);
}

StatusOr<google::cloud::apihub::v1::Spec> ApiHubMetadata::CreateSpec(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::CreateSpecRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("parent=", internal::UrlEncode(request.parent())));
  return child_->CreateSpec(context, options, request);
}

StatusOr<google::cloud::apihub::v1::Spec> ApiHubMetadata::GetSpec(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::GetSpecRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("name=", internal::UrlEncode(request.name())));
  return child_->GetSpec(context, options, request);
}

StatusOr<google::cloud::apihub::v1::SpecContents>
ApiHubMetadata::GetSpecContents(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::GetSpecContentsRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("name=", internal::UrlEncode(request.name())));
  return child_->GetSpecContents(context, options, request);
}

StatusOr<google::cloud::apihub::v1::ListSpecsResponse>
ApiHubMetadata::ListSpecs(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::ListSpecsRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("parent=", internal::UrlEncode(request.parent())));
  return child_->ListSpecs(context, options, request);
}

StatusOr<google::cloud::apihub::v1::Spec> ApiHubMetadata::UpdateSpec(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::UpdateSpecRequest const& request) {
  SetMetadata(
      context, options,
      absl::StrCat("spec.name=", internal::UrlEncode(request.spec().name())));
  return child_->UpdateSpec(context, options, request);
}

Status ApiHubMetadata::DeleteSpec(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::DeleteSpecRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("name=", internal::UrlEncode(request.name())));
  return child_->DeleteSpec(context, options, request);
}

StatusOr<google::cloud::apihub::v1::ApiOperation>
ApiHubMetadata::GetApiOperation(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::GetApiOperationRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("name=", internal::UrlEncode(request.name())));
  return child_->GetApiOperation(context, options, request);
}

StatusOr<google::cloud::apihub::v1::ListApiOperationsResponse>
ApiHubMetadata::ListApiOperations(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::ListApiOperationsRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("parent=", internal::UrlEncode(request.parent())));
  return child_->ListApiOperations(context, options, request);
}

StatusOr<google::cloud::apihub::v1::Definition> ApiHubMetadata::GetDefinition(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::GetDefinitionRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("name=", internal::UrlEncode(request.name())));
  return child_->GetDefinition(context, options, request);
}

StatusOr<google::cloud::apihub::v1::Deployment>
ApiHubMetadata::CreateDeployment(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::CreateDeploymentRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("parent=", internal::UrlEncode(request.parent())));
  return child_->CreateDeployment(context, options, request);
}

StatusOr<google::cloud::apihub::v1::Deployment> ApiHubMetadata::GetDeployment(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::GetDeploymentRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("name=", internal::UrlEncode(request.name())));
  return child_->GetDeployment(context, options, request);
}

StatusOr<google::cloud::apihub::v1::ListDeploymentsResponse>
ApiHubMetadata::ListDeployments(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::ListDeploymentsRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("parent=", internal::UrlEncode(request.parent())));
  return child_->ListDeployments(context, options, request);
}

StatusOr<google::cloud::apihub::v1::Deployment>
ApiHubMetadata::UpdateDeployment(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::UpdateDeploymentRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("deployment.name=",
                           internal::UrlEncode(request.deployment().name())));
  return child_->UpdateDeployment(context, options, request);
}

Status ApiHubMetadata::DeleteDeployment(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::DeleteDeploymentRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("name=", internal::UrlEncode(request.name())));
  return child_->DeleteDeployment(context, options, request);
}

StatusOr<google::cloud::apihub::v1::Attribute> ApiHubMetadata::CreateAttribute(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::CreateAttributeRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("parent=", internal::UrlEncode(request.parent())));
  return child_->CreateAttribute(context, options, request);
}

StatusOr<google::cloud::apihub::v1::Attribute> ApiHubMetadata::GetAttribute(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::GetAttributeRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("name=", internal::UrlEncode(request.name())));
  return child_->GetAttribute(context, options, request);
}

StatusOr<google::cloud::apihub::v1::Attribute> ApiHubMetadata::UpdateAttribute(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::UpdateAttributeRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("attribute.name=",
                           internal::UrlEncode(request.attribute().name())));
  return child_->UpdateAttribute(context, options, request);
}

Status ApiHubMetadata::DeleteAttribute(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::DeleteAttributeRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("name=", internal::UrlEncode(request.name())));
  return child_->DeleteAttribute(context, options, request);
}

StatusOr<google::cloud::apihub::v1::ListAttributesResponse>
ApiHubMetadata::ListAttributes(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::ListAttributesRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("parent=", internal::UrlEncode(request.parent())));
  return child_->ListAttributes(context, options, request);
}

StatusOr<google::cloud::apihub::v1::SearchResourcesResponse>
ApiHubMetadata::SearchResources(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::SearchResourcesRequest const& request) {
  SetMetadata(
      context, options,
      absl::StrCat("location=", internal::UrlEncode(request.location())));
  return child_->SearchResources(context, options, request);
}

StatusOr<google::cloud::apihub::v1::ExternalApi>
ApiHubMetadata::CreateExternalApi(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::CreateExternalApiRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("parent=", internal::UrlEncode(request.parent())));
  return child_->CreateExternalApi(context, options, request);
}

StatusOr<google::cloud::apihub::v1::ExternalApi> ApiHubMetadata::GetExternalApi(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::GetExternalApiRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("name=", internal::UrlEncode(request.name())));
  return child_->GetExternalApi(context, options, request);
}

StatusOr<google::cloud::apihub::v1::ExternalApi>
ApiHubMetadata::UpdateExternalApi(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::UpdateExternalApiRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("external_api.name=",
                           internal::UrlEncode(request.external_api().name())));
  return child_->UpdateExternalApi(context, options, request);
}

Status ApiHubMetadata::DeleteExternalApi(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::DeleteExternalApiRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("name=", internal::UrlEncode(request.name())));
  return child_->DeleteExternalApi(context, options, request);
}

StatusOr<google::cloud::apihub::v1::ListExternalApisResponse>
ApiHubMetadata::ListExternalApis(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::ListExternalApisRequest const& request) {
  SetMetadata(context, options,
              absl::StrCat("parent=", internal::UrlEncode(request.parent())));
  return child_->ListExternalApis(context, options, request);
}

void ApiHubMetadata::SetMetadata(grpc::ClientContext& context,
                                 Options const& options,
                                 std::string const& request_params) {
  context.AddMetadata("x-goog-request-params", request_params);
  SetMetadata(context, options);
}

void ApiHubMetadata::SetMetadata(grpc::ClientContext& context,
                                 Options const& options) {
  google::cloud::internal::SetMetadata(context, options, fixed_metadata_,
                                       api_client_header_);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace apihub_v1_internal
}  // namespace cloud
}  // namespace google
