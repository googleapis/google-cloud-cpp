// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/apihub/v1/apihub_service.proto

#include "google/cloud/apihub/v1/internal/api_hub_logging_decorator.h"
#include "google/cloud/internal/log_wrapper.h"
#include "google/cloud/status_or.h"
#include <google/cloud/apihub/v1/apihub_service.grpc.pb.h>
#include <memory>
#include <set>
#include <string>
#include <utility>

namespace google {
namespace cloud {
namespace apihub_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

ApiHubLogging::ApiHubLogging(std::shared_ptr<ApiHubStub> child,
                             TracingOptions tracing_options,
                             std::set<std::string> const&)
    : child_(std::move(child)), tracing_options_(std::move(tracing_options)) {}

StatusOr<google::cloud::apihub::v1::Api> ApiHubLogging::CreateApi(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::CreateApiRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::CreateApiRequest const& request) {
        return child_->CreateApi(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::Api> ApiHubLogging::GetApi(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::GetApiRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::GetApiRequest const& request) {
        return child_->GetApi(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::ListApisResponse> ApiHubLogging::ListApis(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::ListApisRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::ListApisRequest const& request) {
        return child_->ListApis(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::Api> ApiHubLogging::UpdateApi(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::UpdateApiRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::UpdateApiRequest const& request) {
        return child_->UpdateApi(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

Status ApiHubLogging::DeleteApi(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::DeleteApiRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::DeleteApiRequest const& request) {
        return child_->DeleteApi(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::Version> ApiHubLogging::CreateVersion(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::CreateVersionRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::CreateVersionRequest const& request) {
        return child_->CreateVersion(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::Version> ApiHubLogging::GetVersion(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::GetVersionRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::GetVersionRequest const& request) {
        return child_->GetVersion(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::ListVersionsResponse>
ApiHubLogging::ListVersions(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::ListVersionsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::ListVersionsRequest const& request) {
        return child_->ListVersions(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::Version> ApiHubLogging::UpdateVersion(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::UpdateVersionRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::UpdateVersionRequest const& request) {
        return child_->UpdateVersion(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

Status ApiHubLogging::DeleteVersion(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::DeleteVersionRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::DeleteVersionRequest const& request) {
        return child_->DeleteVersion(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::Spec> ApiHubLogging::CreateSpec(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::CreateSpecRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::CreateSpecRequest const& request) {
        return child_->CreateSpec(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::Spec> ApiHubLogging::GetSpec(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::GetSpecRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::GetSpecRequest const& request) {
        return child_->GetSpec(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::SpecContents>
ApiHubLogging::GetSpecContents(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::GetSpecContentsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::GetSpecContentsRequest const& request) {
        return child_->GetSpecContents(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::ListSpecsResponse> ApiHubLogging::ListSpecs(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::ListSpecsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::ListSpecsRequest const& request) {
        return child_->ListSpecs(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::Spec> ApiHubLogging::UpdateSpec(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::UpdateSpecRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::UpdateSpecRequest const& request) {
        return child_->UpdateSpec(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

Status ApiHubLogging::DeleteSpec(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::DeleteSpecRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::DeleteSpecRequest const& request) {
        return child_->DeleteSpec(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::ApiOperation>
ApiHubLogging::GetApiOperation(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::GetApiOperationRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::GetApiOperationRequest const& request) {
        return child_->GetApiOperation(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::ListApiOperationsResponse>
ApiHubLogging::ListApiOperations(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::ListApiOperationsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context, Options const& options,
          google::cloud::apihub::v1::ListApiOperationsRequest const& request) {
        return child_->ListApiOperations(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::Definition> ApiHubLogging::GetDefinition(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::GetDefinitionRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::GetDefinitionRequest const& request) {
        return child_->GetDefinition(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::Deployment> ApiHubLogging::CreateDeployment(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::CreateDeploymentRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context, Options const& options,
          google::cloud::apihub::v1::CreateDeploymentRequest const& request) {
        return child_->CreateDeployment(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::Deployment> ApiHubLogging::GetDeployment(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::GetDeploymentRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::GetDeploymentRequest const& request) {
        return child_->GetDeployment(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::ListDeploymentsResponse>
ApiHubLogging::ListDeployments(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::ListDeploymentsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::ListDeploymentsRequest const& request) {
        return child_->ListDeployments(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::Deployment> ApiHubLogging::UpdateDeployment(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::UpdateDeploymentRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context, Options const& options,
          google::cloud::apihub::v1::UpdateDeploymentRequest const& request) {
        return child_->UpdateDeployment(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

Status ApiHubLogging::DeleteDeployment(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::DeleteDeploymentRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context, Options const& options,
          google::cloud::apihub::v1::DeleteDeploymentRequest const& request) {
        return child_->DeleteDeployment(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::Attribute> ApiHubLogging::CreateAttribute(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::CreateAttributeRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::CreateAttributeRequest const& request) {
        return child_->CreateAttribute(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::Attribute> ApiHubLogging::GetAttribute(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::GetAttributeRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::GetAttributeRequest const& request) {
        return child_->GetAttribute(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::Attribute> ApiHubLogging::UpdateAttribute(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::UpdateAttributeRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::UpdateAttributeRequest const& request) {
        return child_->UpdateAttribute(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

Status ApiHubLogging::DeleteAttribute(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::DeleteAttributeRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::DeleteAttributeRequest const& request) {
        return child_->DeleteAttribute(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::ListAttributesResponse>
ApiHubLogging::ListAttributes(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::ListAttributesRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::ListAttributesRequest const& request) {
        return child_->ListAttributes(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::SearchResourcesResponse>
ApiHubLogging::SearchResources(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::SearchResourcesRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::SearchResourcesRequest const& request) {
        return child_->SearchResources(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::ExternalApi>
ApiHubLogging::CreateExternalApi(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::CreateExternalApiRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context, Options const& options,
          google::cloud::apihub::v1::CreateExternalApiRequest const& request) {
        return child_->CreateExternalApi(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::ExternalApi> ApiHubLogging::GetExternalApi(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::GetExternalApiRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context, Options const& options,
             google::cloud::apihub::v1::GetExternalApiRequest const& request) {
        return child_->GetExternalApi(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::ExternalApi>
ApiHubLogging::UpdateExternalApi(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::UpdateExternalApiRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context, Options const& options,
          google::cloud::apihub::v1::UpdateExternalApiRequest const& request) {
        return child_->UpdateExternalApi(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

Status ApiHubLogging::DeleteExternalApi(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::DeleteExternalApiRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context, Options const& options,
          google::cloud::apihub::v1::DeleteExternalApiRequest const& request) {
        return child_->DeleteExternalApi(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apihub::v1::ListExternalApisResponse>
ApiHubLogging::ListExternalApis(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::ListExternalApisRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context, Options const& options,
          google::cloud::apihub::v1::ListExternalApisRequest const& request) {
        return child_->ListExternalApis(context, options, request);
      },
      context, options, request, __func__, tracing_options_);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace apihub_v1_internal
}  // namespace cloud
}  // namespace google
