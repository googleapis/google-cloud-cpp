// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/apihub/v1/apihub_service.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_APIHUB_V1_INTERNAL_API_HUB_DEPENDENCIES_TRACING_STUB_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_APIHUB_V1_INTERNAL_API_HUB_DEPENDENCIES_TRACING_STUB_H

#include "google/cloud/apihub/v1/internal/api_hub_dependencies_stub.h"
#include "google/cloud/internal/trace_propagator.h"
#include "google/cloud/options.h"
#include "google/cloud/version.h"
#include <memory>

namespace google {
namespace cloud {
namespace apihub_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

#ifdef GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

class ApiHubDependenciesTracingStub : public ApiHubDependenciesStub {
 public:
  ~ApiHubDependenciesTracingStub() override = default;

  explicit ApiHubDependenciesTracingStub(
      std::shared_ptr<ApiHubDependenciesStub> child);

  StatusOr<google::cloud::apihub::v1::Dependency> CreateDependency(
      grpc::ClientContext& context, Options const& options,
      google::cloud::apihub::v1::CreateDependencyRequest const& request)
      override;

  StatusOr<google::cloud::apihub::v1::Dependency> GetDependency(
      grpc::ClientContext& context, Options const& options,
      google::cloud::apihub::v1::GetDependencyRequest const& request) override;

  StatusOr<google::cloud::apihub::v1::Dependency> UpdateDependency(
      grpc::ClientContext& context, Options const& options,
      google::cloud::apihub::v1::UpdateDependencyRequest const& request)
      override;

  Status DeleteDependency(
      grpc::ClientContext& context, Options const& options,
      google::cloud::apihub::v1::DeleteDependencyRequest const& request)
      override;

  StatusOr<google::cloud::apihub::v1::ListDependenciesResponse>
  ListDependencies(grpc::ClientContext& context, Options const& options,
                   google::cloud::apihub::v1::ListDependenciesRequest const&
                       request) override;

 private:
  std::shared_ptr<ApiHubDependenciesStub> child_;
  std::shared_ptr<opentelemetry::context::propagation::TextMapPropagator>
      propagator_;
};

#endif  // GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

/**
 * Applies the tracing decorator to the given stub.
 *
 * The stub is only decorated if the library has been compiled with
 * OpenTelemetry.
 */
std::shared_ptr<ApiHubDependenciesStub> MakeApiHubDependenciesTracingStub(
    std::shared_ptr<ApiHubDependenciesStub> stub);

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace apihub_v1_internal
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_APIHUB_V1_INTERNAL_API_HUB_DEPENDENCIES_TRACING_STUB_H
