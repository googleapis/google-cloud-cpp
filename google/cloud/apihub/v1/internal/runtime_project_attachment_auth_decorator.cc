// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/apihub/v1/runtime_project_attachment_service.proto

#include "google/cloud/apihub/v1/internal/runtime_project_attachment_auth_decorator.h"
#include <google/cloud/apihub/v1/runtime_project_attachment_service.grpc.pb.h>
#include <memory>
#include <utility>

namespace google {
namespace cloud {
namespace apihub_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

RuntimeProjectAttachmentServiceAuth::RuntimeProjectAttachmentServiceAuth(
    std::shared_ptr<google::cloud::internal::GrpcAuthenticationStrategy> auth,
    std::shared_ptr<RuntimeProjectAttachmentServiceStub> child)
    : auth_(std::move(auth)), child_(std::move(child)) {}

StatusOr<google::cloud::apihub::v1::RuntimeProjectAttachment>
RuntimeProjectAttachmentServiceAuth::CreateRuntimeProjectAttachment(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::CreateRuntimeProjectAttachmentRequest const&
        request) {
  auto status = auth_->ConfigureContext(context);
  if (!status.ok()) return status;
  return child_->CreateRuntimeProjectAttachment(context, options, request);
}

StatusOr<google::cloud::apihub::v1::RuntimeProjectAttachment>
RuntimeProjectAttachmentServiceAuth::GetRuntimeProjectAttachment(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::GetRuntimeProjectAttachmentRequest const&
        request) {
  auto status = auth_->ConfigureContext(context);
  if (!status.ok()) return status;
  return child_->GetRuntimeProjectAttachment(context, options, request);
}

StatusOr<google::cloud::apihub::v1::ListRuntimeProjectAttachmentsResponse>
RuntimeProjectAttachmentServiceAuth::ListRuntimeProjectAttachments(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::ListRuntimeProjectAttachmentsRequest const&
        request) {
  auto status = auth_->ConfigureContext(context);
  if (!status.ok()) return status;
  return child_->ListRuntimeProjectAttachments(context, options, request);
}

Status RuntimeProjectAttachmentServiceAuth::DeleteRuntimeProjectAttachment(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::DeleteRuntimeProjectAttachmentRequest const&
        request) {
  auto status = auth_->ConfigureContext(context);
  if (!status.ok()) return status;
  return child_->DeleteRuntimeProjectAttachment(context, options, request);
}

StatusOr<google::cloud::apihub::v1::LookupRuntimeProjectAttachmentResponse>
RuntimeProjectAttachmentServiceAuth::LookupRuntimeProjectAttachment(
    grpc::ClientContext& context, Options const& options,
    google::cloud::apihub::v1::LookupRuntimeProjectAttachmentRequest const&
        request) {
  auto status = auth_->ConfigureContext(context);
  if (!status.ok()) return status;
  return child_->LookupRuntimeProjectAttachment(context, options, request);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace apihub_v1_internal
}  // namespace cloud
}  // namespace google
