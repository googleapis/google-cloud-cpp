// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/apihub/v1/apihub_service.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_APIHUB_V1_MOCKS_MOCK_API_HUB_CONNECTION_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_APIHUB_V1_MOCKS_MOCK_API_HUB_CONNECTION_H

#include "google/cloud/apihub/v1/api_hub_connection.h"
#include <gmock/gmock.h>

namespace google {
namespace cloud {
namespace apihub_v1_mocks {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

/**
 * A class to mock `ApiHubConnection`.
 *
 * Application developers may want to test their code with simulated responses,
 * including errors, from an object of type `ApiHubClient`. To do so,
 * construct an object of type `ApiHubClient` with an instance of this
 * class. Then use the Google Test framework functions to program the behavior
 * of this mock.
 *
 * @see [This example][bq-mock] for how to test your application with GoogleTest.
 * While the example showcases types from the BigQuery library, the underlying
 * principles apply for any pair of `*Client` and `*Connection`.
 *
 * [bq-mock]: @cloud_cpp_docs_link{bigquery,bigquery-read-mock}
 */
class MockApiHubConnection : public apihub_v1::ApiHubConnection {
 public:
  MOCK_METHOD(Options, options, (), (override));

  MOCK_METHOD(StatusOr<google::cloud::apihub::v1::Api>, CreateApi,
              (google::cloud::apihub::v1::CreateApiRequest const& request),
              (override));

  MOCK_METHOD(StatusOr<google::cloud::apihub::v1::Api>, GetApi,
              (google::cloud::apihub::v1::GetApiRequest const& request),
              (override));

  MOCK_METHOD((StreamRange<google::cloud::apihub::v1::Api>), ListApis,
              (google::cloud::apihub::v1::ListApisRequest request), (override));

  MOCK_METHOD(StatusOr<google::cloud::apihub::v1::Api>, UpdateApi,
              (google::cloud::apihub::v1::UpdateApiRequest const& request),
              (override));

  MOCK_METHOD(Status, DeleteApi,
              (google::cloud::apihub::v1::DeleteApiRequest const& request),
              (override));

  MOCK_METHOD(StatusOr<google::cloud::apihub::v1::Version>, CreateVersion,
              (google::cloud::apihub::v1::CreateVersionRequest const& request),
              (override));

  MOCK_METHOD(StatusOr<google::cloud::apihub::v1::Version>, GetVersion,
              (google::cloud::apihub::v1::GetVersionRequest const& request),
              (override));

  MOCK_METHOD((StreamRange<google::cloud::apihub::v1::Version>), ListVersions,
              (google::cloud::apihub::v1::ListVersionsRequest request),
              (override));

  MOCK_METHOD(StatusOr<google::cloud::apihub::v1::Version>, UpdateVersion,
              (google::cloud::apihub::v1::UpdateVersionRequest const& request),
              (override));

  MOCK_METHOD(Status, DeleteVersion,
              (google::cloud::apihub::v1::DeleteVersionRequest const& request),
              (override));

  MOCK_METHOD(StatusOr<google::cloud::apihub::v1::Spec>, CreateSpec,
              (google::cloud::apihub::v1::CreateSpecRequest const& request),
              (override));

  MOCK_METHOD(StatusOr<google::cloud::apihub::v1::Spec>, GetSpec,
              (google::cloud::apihub::v1::GetSpecRequest const& request),
              (override));

  MOCK_METHOD(
      StatusOr<google::cloud::apihub::v1::SpecContents>, GetSpecContents,
      (google::cloud::apihub::v1::GetSpecContentsRequest const& request),
      (override));

  MOCK_METHOD((StreamRange<google::cloud::apihub::v1::Spec>), ListSpecs,
              (google::cloud::apihub::v1::ListSpecsRequest request),
              (override));

  MOCK_METHOD(StatusOr<google::cloud::apihub::v1::Spec>, UpdateSpec,
              (google::cloud::apihub::v1::UpdateSpecRequest const& request),
              (override));

  MOCK_METHOD(Status, DeleteSpec,
              (google::cloud::apihub::v1::DeleteSpecRequest const& request),
              (override));

  MOCK_METHOD(
      StatusOr<google::cloud::apihub::v1::ApiOperation>, GetApiOperation,
      (google::cloud::apihub::v1::GetApiOperationRequest const& request),
      (override));

  MOCK_METHOD((StreamRange<google::cloud::apihub::v1::ApiOperation>),
              ListApiOperations,
              (google::cloud::apihub::v1::ListApiOperationsRequest request),
              (override));

  MOCK_METHOD(StatusOr<google::cloud::apihub::v1::Definition>, GetDefinition,
              (google::cloud::apihub::v1::GetDefinitionRequest const& request),
              (override));

  MOCK_METHOD(
      StatusOr<google::cloud::apihub::v1::Deployment>, CreateDeployment,
      (google::cloud::apihub::v1::CreateDeploymentRequest const& request),
      (override));

  MOCK_METHOD(StatusOr<google::cloud::apihub::v1::Deployment>, GetDeployment,
              (google::cloud::apihub::v1::GetDeploymentRequest const& request),
              (override));

  MOCK_METHOD((StreamRange<google::cloud::apihub::v1::Deployment>),
              ListDeployments,
              (google::cloud::apihub::v1::ListDeploymentsRequest request),
              (override));

  MOCK_METHOD(
      StatusOr<google::cloud::apihub::v1::Deployment>, UpdateDeployment,
      (google::cloud::apihub::v1::UpdateDeploymentRequest const& request),
      (override));

  MOCK_METHOD(
      Status, DeleteDeployment,
      (google::cloud::apihub::v1::DeleteDeploymentRequest const& request),
      (override));

  MOCK_METHOD(
      StatusOr<google::cloud::apihub::v1::Attribute>, CreateAttribute,
      (google::cloud::apihub::v1::CreateAttributeRequest const& request),
      (override));

  MOCK_METHOD(StatusOr<google::cloud::apihub::v1::Attribute>, GetAttribute,
              (google::cloud::apihub::v1::GetAttributeRequest const& request),
              (override));

  MOCK_METHOD(
      StatusOr<google::cloud::apihub::v1::Attribute>, UpdateAttribute,
      (google::cloud::apihub::v1::UpdateAttributeRequest const& request),
      (override));

  MOCK_METHOD(
      Status, DeleteAttribute,
      (google::cloud::apihub::v1::DeleteAttributeRequest const& request),
      (override));

  MOCK_METHOD((StreamRange<google::cloud::apihub::v1::Attribute>),
              ListAttributes,
              (google::cloud::apihub::v1::ListAttributesRequest request),
              (override));

  MOCK_METHOD((StreamRange<google::cloud::apihub::v1::SearchResult>),
              SearchResources,
              (google::cloud::apihub::v1::SearchResourcesRequest request),
              (override));

  MOCK_METHOD(
      StatusOr<google::cloud::apihub::v1::ExternalApi>, CreateExternalApi,
      (google::cloud::apihub::v1::CreateExternalApiRequest const& request),
      (override));

  MOCK_METHOD(StatusOr<google::cloud::apihub::v1::ExternalApi>, GetExternalApi,
              (google::cloud::apihub::v1::GetExternalApiRequest const& request),
              (override));

  MOCK_METHOD(
      StatusOr<google::cloud::apihub::v1::ExternalApi>, UpdateExternalApi,
      (google::cloud::apihub::v1::UpdateExternalApiRequest const& request),
      (override));

  MOCK_METHOD(
      Status, DeleteExternalApi,
      (google::cloud::apihub::v1::DeleteExternalApiRequest const& request),
      (override));

  MOCK_METHOD((StreamRange<google::cloud::apihub::v1::ExternalApi>),
              ListExternalApis,
              (google::cloud::apihub::v1::ListExternalApisRequest request),
              (override));
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace apihub_v1_mocks
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_APIHUB_V1_MOCKS_MOCK_API_HUB_CONNECTION_H
