// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/apihub/v1/provisioning_service.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_APIHUB_V1_PROVISIONING_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_APIHUB_V1_PROVISIONING_CLIENT_H

#include "google/cloud/apihub/v1/provisioning_connection.h"
#include "google/cloud/future.h"
#include "google/cloud/no_await_tag.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <google/longrunning/operations.grpc.pb.h>
#include <map>
#include <memory>
#include <string>

namespace google {
namespace cloud {
namespace apihub_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// This service is used for managing the data plane provisioning of the API
/// hub.
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class ProvisioningClient {
 public:
  explicit ProvisioningClient(
      std::shared_ptr<ProvisioningConnection> connection, Options opts = {});
  ~ProvisioningClient();

  ///@{
  /// @name Copy and move support
  ProvisioningClient(ProvisioningClient const&) = default;
  ProvisioningClient& operator=(ProvisioningClient const&) = default;
  ProvisioningClient(ProvisioningClient&&) = default;
  ProvisioningClient& operator=(ProvisioningClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(ProvisioningClient const& a,
                         ProvisioningClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(ProvisioningClient const& a,
                         ProvisioningClient const& b) {
    return !(a == b);
  }
  ///@}

  // clang-format off
  ///
  /// Provisions instance resources for the API Hub.
  ///
  /// @param parent  Required. The parent resource for the Api Hub instance resource.
  ///  Format: `projects/{project}/locations/{location}`
  /// @param api_hub_instance  Required. The ApiHub instance.
  /// @param api_hub_instance_id  Optional. Identifier to assign to the Api Hub instance. Must be unique
  ///  within scope of the parent resource. If the field is not provided, system
  ///  generated id will be used.
  ///  @n
  ///  This value should be 4-40 characters, and valid characters
  ///  are `/[a-z][A-Z][0-9]-_/`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return A [`future`] that becomes satisfied when the LRO
  ///     ([Long Running Operation]) completes or the polling policy in effect
  ///     for this call is exhausted. The future is satisfied with an error if
  ///     the LRO completes with an error or the polling policy is exhausted.
  ///     In this case the [`StatusOr`] returned by the future contains the
  ///     error. If the LRO completes successfully the value of the future
  ///     contains the LRO's result. For this RPC the result is a
  ///     [google.cloud.apihub.v1.ApiHubInstance] proto message.
  ///     The C++ class representing this message is created by Protobuf, using
  ///     the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [Long Running Operation]: https://google.aip.dev/151
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apihub.v1.ApiHubInstance]: @googleapis_reference_link{google/cloud/apihub/v1/common_fields.proto#L1180}
  /// [google.cloud.apihub.v1.CreateApiHubInstanceRequest]: @googleapis_reference_link{google/cloud/apihub/v1/provisioning_service.proto#L77}
  ///
  // clang-format on
  future<StatusOr<google::cloud::apihub::v1::ApiHubInstance>>
  CreateApiHubInstance(
      std::string const& parent,
      google::cloud::apihub::v1::ApiHubInstance const& api_hub_instance,
      std::string const& api_hub_instance_id, Options opts = {});

  // clang-format off
  ///
  /// @copybrief CreateApiHubInstance
  ///
  /// Specifying the [`NoAwaitTag`] immediately returns the
  /// [`google::longrunning::Operation`] that corresponds to the Long Running
  /// Operation that has been started. No polling for operation status occurs.
  ///
  /// [`NoAwaitTag`]: @ref google::cloud::NoAwaitTag
  ///
  // clang-format on
  StatusOr<google::longrunning::Operation> CreateApiHubInstance(
      NoAwaitTag, std::string const& parent,
      google::cloud::apihub::v1::ApiHubInstance const& api_hub_instance,
      std::string const& api_hub_instance_id, Options opts = {});

  // clang-format off
  ///
  /// Provisions instance resources for the API Hub.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apihub.v1.CreateApiHubInstanceRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return A [`future`] that becomes satisfied when the LRO
  ///     ([Long Running Operation]) completes or the polling policy in effect
  ///     for this call is exhausted. The future is satisfied with an error if
  ///     the LRO completes with an error or the polling policy is exhausted.
  ///     In this case the [`StatusOr`] returned by the future contains the
  ///     error. If the LRO completes successfully the value of the future
  ///     contains the LRO's result. For this RPC the result is a
  ///     [google.cloud.apihub.v1.ApiHubInstance] proto message.
  ///     The C++ class representing this message is created by Protobuf, using
  ///     the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [Long Running Operation]: https://google.aip.dev/151
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apihub.v1.ApiHubInstance]: @googleapis_reference_link{google/cloud/apihub/v1/common_fields.proto#L1180}
  /// [google.cloud.apihub.v1.CreateApiHubInstanceRequest]: @googleapis_reference_link{google/cloud/apihub/v1/provisioning_service.proto#L77}
  ///
  // clang-format on
  future<StatusOr<google::cloud::apihub::v1::ApiHubInstance>>
  CreateApiHubInstance(
      google::cloud::apihub::v1::CreateApiHubInstanceRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// @copybrief CreateApiHubInstance
  ///
  /// Specifying the [`NoAwaitTag`] immediately returns the
  /// [`google::longrunning::Operation`] that corresponds to the Long Running
  /// Operation that has been started. No polling for operation status occurs.
  ///
  /// [`NoAwaitTag`]: @ref google::cloud::NoAwaitTag
  ///
  // clang-format on
  StatusOr<google::longrunning::Operation> CreateApiHubInstance(
      NoAwaitTag,
      google::cloud::apihub::v1::CreateApiHubInstanceRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// @copybrief CreateApiHubInstance
  ///
  /// This method accepts a `google::longrunning::Operation` that corresponds
  /// to a previously started Long Running Operation (LRO) and polls the status
  /// of the LRO in the background.
  ///
  // clang-format on
  future<StatusOr<google::cloud::apihub::v1::ApiHubInstance>>
  CreateApiHubInstance(google::longrunning::Operation const& operation,
                       Options opts = {});

  // clang-format off
  ///
  /// Gets details of a single API Hub instance.
  ///
  /// @param name  Required. The name of the Api Hub instance to retrieve.
  ///  Format:
  ///  `projects/{project}/locations/{location}/apiHubInstances/{apiHubInstance}`.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apihub.v1.ApiHubInstance])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apihub.v1.ApiHubInstance]: @googleapis_reference_link{google/cloud/apihub/v1/common_fields.proto#L1180}
  /// [google.cloud.apihub.v1.GetApiHubInstanceRequest]: @googleapis_reference_link{google/cloud/apihub/v1/provisioning_service.proto#L102}
  ///
  // clang-format on
  StatusOr<google::cloud::apihub::v1::ApiHubInstance> GetApiHubInstance(
      std::string const& name, Options opts = {});

  // clang-format off
  ///
  /// Gets details of a single API Hub instance.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apihub.v1.GetApiHubInstanceRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apihub.v1.ApiHubInstance])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apihub.v1.ApiHubInstance]: @googleapis_reference_link{google/cloud/apihub/v1/common_fields.proto#L1180}
  /// [google.cloud.apihub.v1.GetApiHubInstanceRequest]: @googleapis_reference_link{google/cloud/apihub/v1/provisioning_service.proto#L102}
  ///
  // clang-format on
  StatusOr<google::cloud::apihub::v1::ApiHubInstance> GetApiHubInstance(
      google::cloud::apihub::v1::GetApiHubInstanceRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Looks up an Api Hub instance in a given GCP project. There will always be
  /// only one Api Hub instance for a GCP project across all locations.
  ///
  /// @param parent  Required. There will always be only one Api Hub instance for a GCP project
  ///  across all locations.
  ///  The parent resource for the Api Hub instance resource.
  ///  Format: `projects/{project}/locations/{location}`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apihub.v1.LookupApiHubInstanceResponse])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apihub.v1.LookupApiHubInstanceRequest]: @googleapis_reference_link{google/cloud/apihub/v1/provisioning_service.proto#L117}
  /// [google.cloud.apihub.v1.LookupApiHubInstanceResponse]: @googleapis_reference_link{google/cloud/apihub/v1/provisioning_service.proto#L133}
  ///
  // clang-format on
  StatusOr<google::cloud::apihub::v1::LookupApiHubInstanceResponse>
  LookupApiHubInstance(std::string const& parent, Options opts = {});

  // clang-format off
  ///
  /// Looks up an Api Hub instance in a given GCP project. There will always be
  /// only one Api Hub instance for a GCP project across all locations.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apihub.v1.LookupApiHubInstanceRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apihub.v1.LookupApiHubInstanceResponse])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apihub.v1.LookupApiHubInstanceRequest]: @googleapis_reference_link{google/cloud/apihub/v1/provisioning_service.proto#L117}
  /// [google.cloud.apihub.v1.LookupApiHubInstanceResponse]: @googleapis_reference_link{google/cloud/apihub/v1/provisioning_service.proto#L133}
  ///
  // clang-format on
  StatusOr<google::cloud::apihub::v1::LookupApiHubInstanceResponse>
  LookupApiHubInstance(
      google::cloud::apihub::v1::LookupApiHubInstanceRequest const& request,
      Options opts = {});

 private:
  std::shared_ptr<ProvisioningConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace apihub_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_APIHUB_V1_PROVISIONING_CLIENT_H
