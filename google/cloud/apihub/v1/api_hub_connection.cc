// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/apihub/v1/apihub_service.proto

#include "google/cloud/apihub/v1/api_hub_connection.h"
#include "google/cloud/apihub/v1/api_hub_options.h"
#include "google/cloud/apihub/v1/internal/api_hub_connection_impl.h"
#include "google/cloud/apihub/v1/internal/api_hub_option_defaults.h"
#include "google/cloud/apihub/v1/internal/api_hub_stub_factory.h"
#include "google/cloud/apihub/v1/internal/api_hub_tracing_connection.h"
#include "google/cloud/background_threads.h"
#include "google/cloud/common_options.h"
#include "google/cloud/credentials.h"
#include "google/cloud/grpc_options.h"
#include "google/cloud/internal/pagination_range.h"
#include "google/cloud/internal/unified_grpc_credentials.h"
#include <memory>
#include <utility>

namespace google {
namespace cloud {
namespace apihub_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

ApiHubConnection::~ApiHubConnection() = default;

StatusOr<google::cloud::apihub::v1::Api> ApiHubConnection::CreateApi(
    google::cloud::apihub::v1::CreateApiRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apihub::v1::Api> ApiHubConnection::GetApi(
    google::cloud::apihub::v1::GetApiRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StreamRange<google::cloud::apihub::v1::Api> ApiHubConnection::ListApis(
    google::cloud::apihub::v1::
        ListApisRequest) {  // NOLINT(performance-unnecessary-value-param)
  return google::cloud::internal::MakeUnimplementedPaginationRange<
      StreamRange<google::cloud::apihub::v1::Api>>();
}

StatusOr<google::cloud::apihub::v1::Api> ApiHubConnection::UpdateApi(
    google::cloud::apihub::v1::UpdateApiRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

Status ApiHubConnection::DeleteApi(
    google::cloud::apihub::v1::DeleteApiRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apihub::v1::Version> ApiHubConnection::CreateVersion(
    google::cloud::apihub::v1::CreateVersionRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apihub::v1::Version> ApiHubConnection::GetVersion(
    google::cloud::apihub::v1::GetVersionRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StreamRange<google::cloud::apihub::v1::Version> ApiHubConnection::ListVersions(
    google::cloud::apihub::v1::
        ListVersionsRequest) {  // NOLINT(performance-unnecessary-value-param)
  return google::cloud::internal::MakeUnimplementedPaginationRange<
      StreamRange<google::cloud::apihub::v1::Version>>();
}

StatusOr<google::cloud::apihub::v1::Version> ApiHubConnection::UpdateVersion(
    google::cloud::apihub::v1::UpdateVersionRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

Status ApiHubConnection::DeleteVersion(
    google::cloud::apihub::v1::DeleteVersionRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apihub::v1::Spec> ApiHubConnection::CreateSpec(
    google::cloud::apihub::v1::CreateSpecRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apihub::v1::Spec> ApiHubConnection::GetSpec(
    google::cloud::apihub::v1::GetSpecRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apihub::v1::SpecContents>
ApiHubConnection::GetSpecContents(
    google::cloud::apihub::v1::GetSpecContentsRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StreamRange<google::cloud::apihub::v1::Spec> ApiHubConnection::ListSpecs(
    google::cloud::apihub::v1::
        ListSpecsRequest) {  // NOLINT(performance-unnecessary-value-param)
  return google::cloud::internal::MakeUnimplementedPaginationRange<
      StreamRange<google::cloud::apihub::v1::Spec>>();
}

StatusOr<google::cloud::apihub::v1::Spec> ApiHubConnection::UpdateSpec(
    google::cloud::apihub::v1::UpdateSpecRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

Status ApiHubConnection::DeleteSpec(
    google::cloud::apihub::v1::DeleteSpecRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apihub::v1::ApiOperation>
ApiHubConnection::GetApiOperation(
    google::cloud::apihub::v1::GetApiOperationRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StreamRange<google::cloud::apihub::v1::ApiOperation>
ApiHubConnection::ListApiOperations(
    google::cloud::apihub::v1::
        ListApiOperationsRequest) {  // NOLINT(performance-unnecessary-value-param)
  return google::cloud::internal::MakeUnimplementedPaginationRange<
      StreamRange<google::cloud::apihub::v1::ApiOperation>>();
}

StatusOr<google::cloud::apihub::v1::Definition> ApiHubConnection::GetDefinition(
    google::cloud::apihub::v1::GetDefinitionRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apihub::v1::Deployment>
ApiHubConnection::CreateDeployment(
    google::cloud::apihub::v1::CreateDeploymentRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apihub::v1::Deployment> ApiHubConnection::GetDeployment(
    google::cloud::apihub::v1::GetDeploymentRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StreamRange<google::cloud::apihub::v1::Deployment>
ApiHubConnection::ListDeployments(
    google::cloud::apihub::v1::
        ListDeploymentsRequest) {  // NOLINT(performance-unnecessary-value-param)
  return google::cloud::internal::MakeUnimplementedPaginationRange<
      StreamRange<google::cloud::apihub::v1::Deployment>>();
}

StatusOr<google::cloud::apihub::v1::Deployment>
ApiHubConnection::UpdateDeployment(
    google::cloud::apihub::v1::UpdateDeploymentRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

Status ApiHubConnection::DeleteDeployment(
    google::cloud::apihub::v1::DeleteDeploymentRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apihub::v1::Attribute>
ApiHubConnection::CreateAttribute(
    google::cloud::apihub::v1::CreateAttributeRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apihub::v1::Attribute> ApiHubConnection::GetAttribute(
    google::cloud::apihub::v1::GetAttributeRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apihub::v1::Attribute>
ApiHubConnection::UpdateAttribute(
    google::cloud::apihub::v1::UpdateAttributeRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

Status ApiHubConnection::DeleteAttribute(
    google::cloud::apihub::v1::DeleteAttributeRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StreamRange<google::cloud::apihub::v1::Attribute>
ApiHubConnection::ListAttributes(
    google::cloud::apihub::v1::
        ListAttributesRequest) {  // NOLINT(performance-unnecessary-value-param)
  return google::cloud::internal::MakeUnimplementedPaginationRange<
      StreamRange<google::cloud::apihub::v1::Attribute>>();
}

StreamRange<google::cloud::apihub::v1::SearchResult>
ApiHubConnection::SearchResources(
    google::cloud::apihub::v1::
        SearchResourcesRequest) {  // NOLINT(performance-unnecessary-value-param)
  return google::cloud::internal::MakeUnimplementedPaginationRange<
      StreamRange<google::cloud::apihub::v1::SearchResult>>();
}

StatusOr<google::cloud::apihub::v1::ExternalApi>
ApiHubConnection::CreateExternalApi(
    google::cloud::apihub::v1::CreateExternalApiRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apihub::v1::ExternalApi>
ApiHubConnection::GetExternalApi(
    google::cloud::apihub::v1::GetExternalApiRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apihub::v1::ExternalApi>
ApiHubConnection::UpdateExternalApi(
    google::cloud::apihub::v1::UpdateExternalApiRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

Status ApiHubConnection::DeleteExternalApi(
    google::cloud::apihub::v1::DeleteExternalApiRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StreamRange<google::cloud::apihub::v1::ExternalApi>
ApiHubConnection::ListExternalApis(
    google::cloud::apihub::v1::
        ListExternalApisRequest) {  // NOLINT(performance-unnecessary-value-param)
  return google::cloud::internal::MakeUnimplementedPaginationRange<
      StreamRange<google::cloud::apihub::v1::ExternalApi>>();
}

std::shared_ptr<ApiHubConnection> MakeApiHubConnection(Options options) {
  internal::CheckExpectedOptions<CommonOptionList, GrpcOptionList,
                                 UnifiedCredentialsOptionList,
                                 ApiHubPolicyOptionList>(options, __func__);
  options = apihub_v1_internal::ApiHubDefaultOptions(std::move(options));
  auto background = internal::MakeBackgroundThreadsFactory(options)();
  auto auth = internal::CreateAuthenticationStrategy(background->cq(), options);
  auto stub =
      apihub_v1_internal::CreateDefaultApiHubStub(std::move(auth), options);
  return apihub_v1_internal::MakeApiHubTracingConnection(
      std::make_shared<apihub_v1_internal::ApiHubConnectionImpl>(
          std::move(background), std::move(stub), std::move(options)));
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace apihub_v1
}  // namespace cloud
}  // namespace google
