// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/apihub/v1/runtime_project_attachment_service.proto

#include "google/cloud/apihub/v1/runtime_project_attachment_connection_idempotency_policy.h"
#include <memory>

namespace google {
namespace cloud {
namespace apihub_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

using ::google::cloud::Idempotency;

RuntimeProjectAttachmentServiceConnectionIdempotencyPolicy::
    ~RuntimeProjectAttachmentServiceConnectionIdempotencyPolicy() = default;

std::unique_ptr<RuntimeProjectAttachmentServiceConnectionIdempotencyPolicy>
RuntimeProjectAttachmentServiceConnectionIdempotencyPolicy::clone() const {
  return std::make_unique<
      RuntimeProjectAttachmentServiceConnectionIdempotencyPolicy>(*this);
}

Idempotency RuntimeProjectAttachmentServiceConnectionIdempotencyPolicy::
    CreateRuntimeProjectAttachment(
        google::cloud::apihub::v1::
            CreateRuntimeProjectAttachmentRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency RuntimeProjectAttachmentServiceConnectionIdempotencyPolicy::
    GetRuntimeProjectAttachment(
        google::cloud::apihub::v1::GetRuntimeProjectAttachmentRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency RuntimeProjectAttachmentServiceConnectionIdempotencyPolicy::
    ListRuntimeProjectAttachments(
        google::cloud::apihub::v1::
            ListRuntimeProjectAttachmentsRequest) {  // NOLINT
  return Idempotency::kIdempotent;
}

Idempotency RuntimeProjectAttachmentServiceConnectionIdempotencyPolicy::
    DeleteRuntimeProjectAttachment(
        google::cloud::apihub::v1::
            DeleteRuntimeProjectAttachmentRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency RuntimeProjectAttachmentServiceConnectionIdempotencyPolicy::
    LookupRuntimeProjectAttachment(
        google::cloud::apihub::v1::
            LookupRuntimeProjectAttachmentRequest const&) {
  return Idempotency::kIdempotent;
}

std::unique_ptr<RuntimeProjectAttachmentServiceConnectionIdempotencyPolicy>
MakeDefaultRuntimeProjectAttachmentServiceConnectionIdempotencyPolicy() {
  return std::make_unique<
      RuntimeProjectAttachmentServiceConnectionIdempotencyPolicy>();
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace apihub_v1
}  // namespace cloud
}  // namespace google
