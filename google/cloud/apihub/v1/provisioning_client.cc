// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/apihub/v1/provisioning_service.proto

#include "google/cloud/apihub/v1/provisioning_client.h"
#include <memory>
#include <utility>

namespace google {
namespace cloud {
namespace apihub_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

ProvisioningClient::ProvisioningClient(
    std::shared_ptr<ProvisioningConnection> connection, Options opts)
    : connection_(std::move(connection)),
      options_(
          internal::MergeOptions(std::move(opts), connection_->options())) {}
ProvisioningClient::~ProvisioningClient() = default;

future<StatusOr<google::cloud::apihub::v1::ApiHubInstance>>
ProvisioningClient::CreateApiHubInstance(
    std::string const& parent,
    google::cloud::apihub::v1::ApiHubInstance const& api_hub_instance,
    std::string const& api_hub_instance_id, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::apihub::v1::CreateApiHubInstanceRequest request;
  request.set_parent(parent);
  *request.mutable_api_hub_instance() = api_hub_instance;
  request.set_api_hub_instance_id(api_hub_instance_id);
  return connection_->CreateApiHubInstance(request);
}

StatusOr<google::longrunning::Operation>
ProvisioningClient::CreateApiHubInstance(
    NoAwaitTag, std::string const& parent,
    google::cloud::apihub::v1::ApiHubInstance const& api_hub_instance,
    std::string const& api_hub_instance_id, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::apihub::v1::CreateApiHubInstanceRequest request;
  request.set_parent(parent);
  *request.mutable_api_hub_instance() = api_hub_instance;
  request.set_api_hub_instance_id(api_hub_instance_id);
  return connection_->CreateApiHubInstance(NoAwaitTag{}, request);
}

future<StatusOr<google::cloud::apihub::v1::ApiHubInstance>>
ProvisioningClient::CreateApiHubInstance(
    google::cloud::apihub::v1::CreateApiHubInstanceRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->CreateApiHubInstance(request);
}

StatusOr<google::longrunning::Operation>
ProvisioningClient::CreateApiHubInstance(
    NoAwaitTag,
    google::cloud::apihub::v1::CreateApiHubInstanceRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->CreateApiHubInstance(NoAwaitTag{}, request);
}

future<StatusOr<google::cloud::apihub::v1::ApiHubInstance>>
ProvisioningClient::CreateApiHubInstance(
    google::longrunning::Operation const& operation, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->CreateApiHubInstance(operation);
}

StatusOr<google::cloud::apihub::v1::ApiHubInstance>
ProvisioningClient::GetApiHubInstance(std::string const& name, Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::apihub::v1::GetApiHubInstanceRequest request;
  request.set_name(name);
  return connection_->GetApiHubInstance(request);
}

StatusOr<google::cloud::apihub::v1::ApiHubInstance>
ProvisioningClient::GetApiHubInstance(
    google::cloud::apihub::v1::GetApiHubInstanceRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->GetApiHubInstance(request);
}

StatusOr<google::cloud::apihub::v1::LookupApiHubInstanceResponse>
ProvisioningClient::LookupApiHubInstance(std::string const& parent,
                                         Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  google::cloud::apihub::v1::LookupApiHubInstanceRequest request;
  request.set_parent(parent);
  return connection_->LookupApiHubInstance(request);
}

StatusOr<google::cloud::apihub::v1::LookupApiHubInstanceResponse>
ProvisioningClient::LookupApiHubInstance(
    google::cloud::apihub::v1::LookupApiHubInstanceRequest const& request,
    Options opts) {
  internal::OptionsSpan span(internal::MergeOptions(std::move(opts), options_));
  return connection_->LookupApiHubInstance(request);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace apihub_v1
}  // namespace cloud
}  // namespace google
