// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/pubsublite/v1/admin.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_PUBSUBLITE_ADMIN_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_PUBSUBLITE_ADMIN_CLIENT_H

#include "google/cloud/pubsublite/admin_connection.h"
#include "google/cloud/future.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <google/longrunning/operations.grpc.pb.h>
#include <memory>

namespace google {
namespace cloud {
namespace pubsublite {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

/**
 * The service that a client application uses to manage topics and
 * subscriptions, such creating, listing, and deleting topics and subscriptions.
 */
class AdminServiceClient {
 public:
  explicit AdminServiceClient(
      std::shared_ptr<AdminServiceConnection> connection);
  ~AdminServiceClient();

  //@{
  // @name Copy and move support
  AdminServiceClient(AdminServiceClient const&) = default;
  AdminServiceClient& operator=(AdminServiceClient const&) = default;
  AdminServiceClient(AdminServiceClient&&) = default;
  AdminServiceClient& operator=(AdminServiceClient&&) = default;
  //@}

  //@{
  // @name Equality
  friend bool operator==(AdminServiceClient const& a,
                         AdminServiceClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(AdminServiceClient const& a,
                         AdminServiceClient const& b) {
    return !(a == b);
  }
  //@}

  /**
   * Creates a new topic.
   *
   * @param parent  Required. The parent location in which to create the topic.
   *  Structured like `projects/{project_number}/locations/{location}`.
   * @param topic  Required. Configuration of the topic to create. Its `name`
   * field is ignored.
   * @param topic_id  Required. The ID to use for the topic, which will become
   * the final component of the topic's name. This value is structured like:
   * `my-topic-name`.
   * @return
   * [google::cloud::pubsublite::v1::Topic](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L102)
   */
  StatusOr<google::cloud::pubsublite::v1::Topic> CreateTopic(
      std::string const& parent,
      google::cloud::pubsublite::v1::Topic const& topic,
      std::string const& topic_id);

  /**
   * Returns the topic configuration.
   *
   * @param name  Required. The name of the topic whose configuration to return.
   * @return
   * [google::cloud::pubsublite::v1::Topic](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L102)
   */
  StatusOr<google::cloud::pubsublite::v1::Topic> GetTopic(
      std::string const& name);

  /**
   * Returns the partition information for the requested topic.
   *
   * @param name  Required. The topic whose partition information to return.
   * @return
   * [google::cloud::pubsublite::v1::TopicPartitions](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/admin.proto#L270)
   */
  StatusOr<google::cloud::pubsublite::v1::TopicPartitions> GetTopicPartitions(
      std::string const& name);

  /**
   * Returns the list of topics for the given project.
   *
   * @param parent  Required. The parent whose topics are to be listed.
   *  Structured like `projects/{project_number}/locations/{location}`.
   * @return
   * [google::cloud::pubsublite::v1::Topic](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L102)
   */
  StreamRange<google::cloud::pubsublite::v1::Topic> ListTopics(
      std::string const& parent);

  /**
   * Updates properties of the specified topic.
   *
   * @param topic  Required. The topic to update. Its `name` field must be
   * populated.
   * @param update_mask  Required. A mask specifying the topic fields to change.
   * @return
   * [google::cloud::pubsublite::v1::Topic](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L102)
   */
  StatusOr<google::cloud::pubsublite::v1::Topic> UpdateTopic(
      google::cloud::pubsublite::v1::Topic const& topic,
      google::protobuf::FieldMask const& update_mask);

  /**
   * Deletes the specified topic.
   *
   * @param name  Required. The name of the topic to delete.
   */
  Status DeleteTopic(std::string const& name);

  /**
   * Lists the subscriptions attached to the specified topic.
   *
   * @param name  Required. The name of the topic whose subscriptions to list.
   * @return std::string
   */
  StreamRange<std::string> ListTopicSubscriptions(std::string const& name);

  /**
   * Creates a new subscription.
   *
   * @param parent  Required. The parent location in which to create the
   * subscription. Structured like
   * `projects/{project_number}/locations/{location}`.
   * @param subscription  Required. Configuration of the subscription to create.
   * Its `name` field is ignored.
   * @param subscription_id  Required. The ID to use for the subscription, which
   * will become the final component of the subscription's name. This value is
   * structured like: `my-sub-name`.
   * @return
   * [google::cloud::pubsublite::v1::Subscription](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L186)
   */
  StatusOr<google::cloud::pubsublite::v1::Subscription> CreateSubscription(
      std::string const& parent,
      google::cloud::pubsublite::v1::Subscription const& subscription,
      std::string const& subscription_id);

  /**
   * Returns the subscription configuration.
   *
   * @param name  Required. The name of the subscription whose configuration to
   * return.
   * @return
   * [google::cloud::pubsublite::v1::Subscription](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L186)
   */
  StatusOr<google::cloud::pubsublite::v1::Subscription> GetSubscription(
      std::string const& name);

  /**
   * Returns the list of subscriptions for the given project.
   *
   * @param parent  Required. The parent whose subscriptions are to be listed.
   *  Structured like `projects/{project_number}/locations/{location}`.
   * @return
   * [google::cloud::pubsublite::v1::Subscription](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L186)
   */
  StreamRange<google::cloud::pubsublite::v1::Subscription> ListSubscriptions(
      std::string const& parent);

  /**
   * Updates properties of the specified subscription.
   *
   * @param subscription  Required. The subscription to update. Its `name` field
   * must be populated. Topic field must not be populated.
   * @param update_mask  Required. A mask specifying the subscription fields to
   * change.
   * @return
   * [google::cloud::pubsublite::v1::Subscription](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L186)
   */
  StatusOr<google::cloud::pubsublite::v1::Subscription> UpdateSubscription(
      google::cloud::pubsublite::v1::Subscription const& subscription,
      google::protobuf::FieldMask const& update_mask);

  /**
   * Deletes the specified subscription.
   *
   * @param name  Required. The name of the subscription to delete.
   */
  Status DeleteSubscription(std::string const& name);

  /**
   * Creates a new reservation.
   *
   * @param parent  Required. The parent location in which to create the
   * reservation. Structured like
   * `projects/{project_number}/locations/{location}`.
   * @param reservation  Required. Configuration of the reservation to create.
   * Its `name` field is ignored.
   * @param reservation_id  Required. The ID to use for the reservation, which
   * will become the final component of the reservation's name. This value is
   * structured like: `my-reservation-name`.
   * @return
   * [google::cloud::pubsublite::v1::Reservation](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L80)
   */
  StatusOr<google::cloud::pubsublite::v1::Reservation> CreateReservation(
      std::string const& parent,
      google::cloud::pubsublite::v1::Reservation const& reservation,
      std::string const& reservation_id);

  /**
   * Returns the reservation configuration.
   *
   * @param name  Required. The name of the reservation whose configuration to
   * return. Structured like:
   *  projects/{project_number}/locations/{location}/reservations/{reservation_id}
   * @return
   * [google::cloud::pubsublite::v1::Reservation](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L80)
   */
  StatusOr<google::cloud::pubsublite::v1::Reservation> GetReservation(
      std::string const& name);

  /**
   * Returns the list of reservations for the given project.
   *
   * @param parent  Required. The parent whose reservations are to be listed.
   *  Structured like `projects/{project_number}/locations/{location}`.
   * @return
   * [google::cloud::pubsublite::v1::Reservation](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L80)
   */
  StreamRange<google::cloud::pubsublite::v1::Reservation> ListReservations(
      std::string const& parent);

  /**
   * Updates properties of the specified reservation.
   *
   * @param reservation  Required. The reservation to update. Its `name` field
   * must be populated.
   * @param update_mask  Required. A mask specifying the reservation fields to
   * change.
   * @return
   * [google::cloud::pubsublite::v1::Reservation](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L80)
   */
  StatusOr<google::cloud::pubsublite::v1::Reservation> UpdateReservation(
      google::cloud::pubsublite::v1::Reservation const& reservation,
      google::protobuf::FieldMask const& update_mask);

  /**
   * Deletes the specified reservation.
   *
   * @param name  Required. The name of the reservation to delete.
   *  Structured like:
   *  projects/{project_number}/locations/{location}/reservations/{reservation_id}
   */
  Status DeleteReservation(std::string const& name);

  /**
   * Lists the topics attached to the specified reservation.
   *
   * @param name  Required. The name of the reservation whose topics to list.
   *  Structured like:
   *  projects/{project_number}/locations/{location}/reservations/{reservation_id}
   * @return std::string
   */
  StreamRange<std::string> ListReservationTopics(std::string const& name);

  /**
   * Creates a new topic.
   *
   * @param request
   * [google::cloud::pubsublite::v1::CreateTopicRequest](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/admin.proto#L227)
   * @return
   * [google::cloud::pubsublite::v1::Topic](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L102)
   */
  StatusOr<google::cloud::pubsublite::v1::Topic> CreateTopic(
      google::cloud::pubsublite::v1::CreateTopicRequest const& request);

  /**
   * Returns the topic configuration.
   *
   * @param request
   * [google::cloud::pubsublite::v1::GetTopicRequest](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/admin.proto#L248)
   * @return
   * [google::cloud::pubsublite::v1::Topic](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L102)
   */
  StatusOr<google::cloud::pubsublite::v1::Topic> GetTopic(
      google::cloud::pubsublite::v1::GetTopicRequest const& request);

  /**
   * Returns the partition information for the requested topic.
   *
   * @param request
   * [google::cloud::pubsublite::v1::GetTopicPartitionsRequest](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/admin.proto#L259)
   * @return
   * [google::cloud::pubsublite::v1::TopicPartitions](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/admin.proto#L270)
   */
  StatusOr<google::cloud::pubsublite::v1::TopicPartitions> GetTopicPartitions(
      google::cloud::pubsublite::v1::GetTopicPartitionsRequest const& request);

  /**
   * Returns the list of topics for the given project.
   *
   * @param request
   * [google::cloud::pubsublite::v1::ListTopicsRequest](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/admin.proto#L276)
   * @return
   * [google::cloud::pubsublite::v1::Topic](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L102)
   */
  StreamRange<google::cloud::pubsublite::v1::Topic> ListTopics(
      google::cloud::pubsublite::v1::ListTopicsRequest request);

  /**
   * Updates properties of the specified topic.
   *
   * @param request
   * [google::cloud::pubsublite::v1::UpdateTopicRequest](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/admin.proto#L311)
   * @return
   * [google::cloud::pubsublite::v1::Topic](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L102)
   */
  StatusOr<google::cloud::pubsublite::v1::Topic> UpdateTopic(
      google::cloud::pubsublite::v1::UpdateTopicRequest const& request);

  /**
   * Deletes the specified topic.
   *
   * @param request
   * [google::cloud::pubsublite::v1::DeleteTopicRequest](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/admin.proto#L320)
   */
  Status DeleteTopic(
      google::cloud::pubsublite::v1::DeleteTopicRequest const& request);

  /**
   * Lists the subscriptions attached to the specified topic.
   *
   * @param request
   * [google::cloud::pubsublite::v1::ListTopicSubscriptionsRequest](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/admin.proto#L331)
   * @return std::string
   */
  StreamRange<std::string> ListTopicSubscriptions(
      google::cloud::pubsublite::v1::ListTopicSubscriptionsRequest request);

  /**
   * Creates a new subscription.
   *
   * @param request
   * [google::cloud::pubsublite::v1::CreateSubscriptionRequest](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/admin.proto#L365)
   * @return
   * [google::cloud::pubsublite::v1::Subscription](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L186)
   */
  StatusOr<google::cloud::pubsublite::v1::Subscription> CreateSubscription(
      google::cloud::pubsublite::v1::CreateSubscriptionRequest const& request);

  /**
   * Returns the subscription configuration.
   *
   * @param request
   * [google::cloud::pubsublite::v1::GetSubscriptionRequest](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/admin.proto#L391)
   * @return
   * [google::cloud::pubsublite::v1::Subscription](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L186)
   */
  StatusOr<google::cloud::pubsublite::v1::Subscription> GetSubscription(
      google::cloud::pubsublite::v1::GetSubscriptionRequest const& request);

  /**
   * Returns the list of subscriptions for the given project.
   *
   * @param request
   * [google::cloud::pubsublite::v1::ListSubscriptionsRequest](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/admin.proto#L402)
   * @return
   * [google::cloud::pubsublite::v1::Subscription](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L186)
   */
  StreamRange<google::cloud::pubsublite::v1::Subscription> ListSubscriptions(
      google::cloud::pubsublite::v1::ListSubscriptionsRequest request);

  /**
   * Updates properties of the specified subscription.
   *
   * @param request
   * [google::cloud::pubsublite::v1::UpdateSubscriptionRequest](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/admin.proto#L437)
   * @return
   * [google::cloud::pubsublite::v1::Subscription](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L186)
   */
  StatusOr<google::cloud::pubsublite::v1::Subscription> UpdateSubscription(
      google::cloud::pubsublite::v1::UpdateSubscriptionRequest const& request);

  /**
   * Deletes the specified subscription.
   *
   * @param request
   * [google::cloud::pubsublite::v1::DeleteSubscriptionRequest](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/admin.proto#L447)
   */
  Status DeleteSubscription(
      google::cloud::pubsublite::v1::DeleteSubscriptionRequest const& request);

  /**
   * Performs an out-of-band seek for a subscription to a specified target,
   * which may be timestamps or named positions within the message backlog.
   * Seek translates these targets to cursors for each partition and
   * orchestrates subscribers to start consuming messages from these seek
   * cursors.
   *
   * If an operation is returned, the seek has been registered and subscribers
   * will eventually receive messages from the seek cursors (i.e. eventual
   * consistency), as long as they are using a minimum supported client library
   * version and not a system that tracks cursors independently of Pub/Sub Lite
   * (e.g. Apache Beam, Dataflow, Spark). The seek operation will fail for
   * unsupported clients.
   *
   * If clients would like to know when subscribers react to the seek (or not),
   * they can poll the operation. The seek operation will succeed and complete
   * once subscribers are ready to receive messages from the seek cursors for
   * all partitions of the topic. This means that the seek operation will not
   * complete until all subscribers come online.
   *
   * If the previous seek operation has not yet completed, it will be aborted
   * and the new invocation of seek will supersede it.
   *
   * @param request
   * [google::cloud::pubsublite::v1::SeekSubscriptionRequest](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/admin.proto#L458)
   * @return
   * [google::cloud::pubsublite::v1::SeekSubscriptionResponse](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/admin.proto#L493)
   */
  future<StatusOr<google::cloud::pubsublite::v1::SeekSubscriptionResponse>>
  SeekSubscription(
      google::cloud::pubsublite::v1::SeekSubscriptionRequest const& request);

  /**
   * Creates a new reservation.
   *
   * @param request
   * [google::cloud::pubsublite::v1::CreateReservationRequest](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/admin.proto#L516)
   * @return
   * [google::cloud::pubsublite::v1::Reservation](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L80)
   */
  StatusOr<google::cloud::pubsublite::v1::Reservation> CreateReservation(
      google::cloud::pubsublite::v1::CreateReservationRequest const& request);

  /**
   * Returns the reservation configuration.
   *
   * @param request
   * [google::cloud::pubsublite::v1::GetReservationRequest](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/admin.proto#L537)
   * @return
   * [google::cloud::pubsublite::v1::Reservation](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L80)
   */
  StatusOr<google::cloud::pubsublite::v1::Reservation> GetReservation(
      google::cloud::pubsublite::v1::GetReservationRequest const& request);

  /**
   * Returns the list of reservations for the given project.
   *
   * @param request
   * [google::cloud::pubsublite::v1::ListReservationsRequest](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/admin.proto#L550)
   * @return
   * [google::cloud::pubsublite::v1::Reservation](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L80)
   */
  StreamRange<google::cloud::pubsublite::v1::Reservation> ListReservations(
      google::cloud::pubsublite::v1::ListReservationsRequest request);

  /**
   * Updates properties of the specified reservation.
   *
   * @param request
   * [google::cloud::pubsublite::v1::UpdateReservationRequest](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/admin.proto#L585)
   * @return
   * [google::cloud::pubsublite::v1::Reservation](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/common.proto#L80)
   */
  StatusOr<google::cloud::pubsublite::v1::Reservation> UpdateReservation(
      google::cloud::pubsublite::v1::UpdateReservationRequest const& request);

  /**
   * Deletes the specified reservation.
   *
   * @param request
   * [google::cloud::pubsublite::v1::DeleteReservationRequest](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/admin.proto#L594)
   */
  Status DeleteReservation(
      google::cloud::pubsublite::v1::DeleteReservationRequest const& request);

  /**
   * Lists the topics attached to the specified reservation.
   *
   * @param request
   * [google::cloud::pubsublite::v1::ListReservationTopicsRequest](https://github.com/googleapis/googleapis/blob/53432afb877cb3c1920f73e6621daa8c24f86522/google/cloud/pubsublite/v1/admin.proto#L607)
   * @return std::string
   */
  StreamRange<std::string> ListReservationTopics(
      google::cloud::pubsublite::v1::ListReservationTopicsRequest request);

 private:
  std::shared_ptr<AdminServiceConnection> connection_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace pubsublite
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_PUBSUBLITE_ADMIN_CLIENT_H
