# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

package(default_visibility = ["//visibility:private"])

licenses(["notice"])  # Apache 2.0

load(":google_cloud_cpp_spanner.bzl", "google_cloud_cpp_spanner_hdrs", "google_cloud_cpp_spanner_srcs")
load(":google_cloud_cpp_spanner_rest.bzl", "google_cloud_cpp_spanner_rest_hdrs", "google_cloud_cpp_spanner_rest_srcs")

cc_library(
    name = "google_cloud_cpp_spanner",
    srcs = google_cloud_cpp_spanner_srcs,
    hdrs = google_cloud_cpp_spanner_hdrs,
    visibility = [
        ":__subpackages__",
        "//:__pkg__",
    ],
    deps = [
        "//:common",
        "//:grpc_utils",
        "@com_google_absl//absl/container:fixed_array",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/numeric:int128",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/time",
        "@com_google_googleapis//google/longrunning:longrunning_cc_grpc",
        "@com_google_googleapis//google/spanner/admin/database/v1:database_cc_grpc",
        "@com_google_googleapis//google/spanner/admin/instance/v1:instance_cc_grpc",
        "@com_google_googleapis//google/spanner/v1:spanner_cc_grpc",
        # Do not sort: grpc++ must come last
        "@com_github_grpc_grpc//:grpc++",
    ],
)

cc_library(
    name = "google_cloud_cpp_spanner_rest",
    srcs = google_cloud_cpp_spanner_rest_srcs,
    hdrs = google_cloud_cpp_spanner_rest_hdrs,
    visibility = [
        ":__subpackages__",
        "//:__pkg__",
    ],
    deps = [
        ":google_cloud_cpp_spanner",
        "//google/cloud:google_cloud_cpp_rest_internal",
        "//google/cloud:google_cloud_cpp_rest_protobuf_internal",
    ],
)

load(":google_cloud_cpp_spanner_mocks.bzl", "google_cloud_cpp_spanner_mocks_hdrs", "google_cloud_cpp_spanner_mocks_srcs")

cc_library(
    name = "google_cloud_cpp_spanner_mocks",
    testonly = True,
    srcs = google_cloud_cpp_spanner_mocks_srcs,
    hdrs = google_cloud_cpp_spanner_mocks_hdrs,
    visibility = [
        ":__subpackages__",
        "//:__pkg__",
    ],
    deps = [
        ":google_cloud_cpp_spanner",
        "//:common",
        "//google/cloud/testing_util:google_cloud_cpp_testing_private",
        "@com_google_googletest//:gtest_main",
    ],
)

load(":spanner_client_testing.bzl", "spanner_client_testing_hdrs", "spanner_client_testing_srcs")

cc_library(
    name = "spanner_client_testing_private",
    testonly = True,
    srcs = spanner_client_testing_srcs,
    hdrs = spanner_client_testing_hdrs,
    visibility = [
        ":__subpackages__",
    ],
    deps = [
        ":google_cloud_cpp_spanner",
        ":google_cloud_cpp_spanner_mocks",
        "//:common",
        "//google/cloud/testing_util:google_cloud_cpp_testing_private",
        "@com_google_googletest//:gtest_main",
    ],
)

# TODO(#3701): Delete this target after 2023-04-01.
cc_library(
    name = "spanner_client_testing",
    testonly = True,
    deprecation = """
    This target is deprecated and will be removed on or after 2023-04-01. More
    info: https://github.com/googleapis/google-cloud-cpp/issues/3701
    """,
    tags = ["manual"],
    visibility = ["//visibility:public"],
    deps = [":spanner_client_testing_private"],
)

load(":spanner_client_unit_tests.bzl", "spanner_client_unit_tests")

[cc_test(
    name = test.replace("/", "_").replace(".cc", ""),
    srcs = [test],
    deps = [
        ":google_cloud_cpp_spanner",
        ":google_cloud_cpp_spanner_mocks",
        ":spanner_client_testing",
        "//:common",
        "//google/cloud/testing_util:google_cloud_cpp_testing_grpc_private",
        "//google/cloud/testing_util:google_cloud_cpp_testing_private",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/numeric:int128",
        "@com_google_googletest//:gtest_main",
    ],
) for test in spanner_client_unit_tests]

load(":spanner_client_benchmarks.bzl", "spanner_client_benchmarks")

[cc_test(
    name = benchmark.replace("/", "_").replace(".cc", ""),
    srcs = [benchmark],
    tags = ["benchmark"],
    deps = [
        ":google_cloud_cpp_spanner",
        ":google_cloud_cpp_spanner_mocks",
        "//:common",
        "@com_google_benchmark//:benchmark_main",
    ],
) for benchmark in spanner_client_benchmarks]
