// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/dialogflow/v2/intent.proto

#include "google/cloud/dialogflow_es/internal/intents_tracing_stub.h"

namespace google {
namespace cloud {
namespace dialogflow_es_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

IntentsTracingStub::IntentsTracingStub(std::shared_ptr<IntentsStub> child)
    : child_(std::move(child)) {}

StatusOr<google::cloud::dialogflow::v2::ListIntentsResponse>
IntentsTracingStub::ListIntents(
    grpc::ClientContext& context,
    google::cloud::dialogflow::v2::ListIntentsRequest const& request) {
  return child_->ListIntents(context, request);
}

StatusOr<google::cloud::dialogflow::v2::Intent> IntentsTracingStub::GetIntent(
    grpc::ClientContext& context,
    google::cloud::dialogflow::v2::GetIntentRequest const& request) {
  return child_->GetIntent(context, request);
}

StatusOr<google::cloud::dialogflow::v2::Intent>
IntentsTracingStub::CreateIntent(
    grpc::ClientContext& context,
    google::cloud::dialogflow::v2::CreateIntentRequest const& request) {
  return child_->CreateIntent(context, request);
}

StatusOr<google::cloud::dialogflow::v2::Intent>
IntentsTracingStub::UpdateIntent(
    grpc::ClientContext& context,
    google::cloud::dialogflow::v2::UpdateIntentRequest const& request) {
  return child_->UpdateIntent(context, request);
}

Status IntentsTracingStub::DeleteIntent(
    grpc::ClientContext& context,
    google::cloud::dialogflow::v2::DeleteIntentRequest const& request) {
  return child_->DeleteIntent(context, request);
}

future<StatusOr<google::longrunning::Operation>>
IntentsTracingStub::AsyncBatchUpdateIntents(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::dialogflow::v2::BatchUpdateIntentsRequest const& request) {
  return child_->AsyncBatchUpdateIntents(cq, std::move(context), request);
}

future<StatusOr<google::longrunning::Operation>>
IntentsTracingStub::AsyncBatchDeleteIntents(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::cloud::dialogflow::v2::BatchDeleteIntentsRequest const& request) {
  return child_->AsyncBatchDeleteIntents(cq, std::move(context), request);
}

future<StatusOr<google::longrunning::Operation>>
IntentsTracingStub::AsyncGetOperation(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::longrunning::GetOperationRequest const& request) {
  return child_->AsyncGetOperation(cq, std::move(context), request);
}

future<Status> IntentsTracingStub::AsyncCancelOperation(
    google::cloud::CompletionQueue& cq,
    std::unique_ptr<grpc::ClientContext> context,
    google::longrunning::CancelOperationRequest const& request) {
  return child_->AsyncCancelOperation(cq, std::move(context), request);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace dialogflow_es_internal
}  // namespace cloud
}  // namespace google
