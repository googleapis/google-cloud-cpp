// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/dialogflow/v2/conversation_profile.proto

#include "google/cloud/dialogflow_es/internal/conversation_profiles_tracing_connection.h"
#include "google/cloud/internal/opentelemetry.h"
#include <memory>

namespace google {
namespace cloud {
namespace dialogflow_es_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

#ifdef GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

ConversationProfilesTracingConnection::ConversationProfilesTracingConnection(
    std::shared_ptr<dialogflow_es::ConversationProfilesConnection> child)
    : child_(std::move(child)) {}

StreamRange<google::cloud::dialogflow::v2::ConversationProfile>
ConversationProfilesTracingConnection::ListConversationProfiles(
    google::cloud::dialogflow::v2::ListConversationProfilesRequest request) {
  return child_->ListConversationProfiles(request);
}

StatusOr<google::cloud::dialogflow::v2::ConversationProfile>
ConversationProfilesTracingConnection::GetConversationProfile(
    google::cloud::dialogflow::v2::GetConversationProfileRequest const&
        request) {
  return child_->GetConversationProfile(request);
}

StatusOr<google::cloud::dialogflow::v2::ConversationProfile>
ConversationProfilesTracingConnection::CreateConversationProfile(
    google::cloud::dialogflow::v2::CreateConversationProfileRequest const&
        request) {
  return child_->CreateConversationProfile(request);
}

StatusOr<google::cloud::dialogflow::v2::ConversationProfile>
ConversationProfilesTracingConnection::UpdateConversationProfile(
    google::cloud::dialogflow::v2::UpdateConversationProfileRequest const&
        request) {
  return child_->UpdateConversationProfile(request);
}

Status ConversationProfilesTracingConnection::DeleteConversationProfile(
    google::cloud::dialogflow::v2::DeleteConversationProfileRequest const&
        request) {
  return child_->DeleteConversationProfile(request);
}

future<StatusOr<google::cloud::dialogflow::v2::ConversationProfile>>
ConversationProfilesTracingConnection::SetSuggestionFeatureConfig(
    google::cloud::dialogflow::v2::SetSuggestionFeatureConfigRequest const&
        request) {
  return child_->SetSuggestionFeatureConfig(request);
}

future<StatusOr<google::cloud::dialogflow::v2::ConversationProfile>>
ConversationProfilesTracingConnection::ClearSuggestionFeatureConfig(
    google::cloud::dialogflow::v2::ClearSuggestionFeatureConfigRequest const&
        request) {
  return child_->ClearSuggestionFeatureConfig(request);
}

#endif  // GOOGLE_CLOUD_CPP_HAVE_OPENTELEMETRY

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace dialogflow_es_internal
}  // namespace cloud
}  // namespace google
