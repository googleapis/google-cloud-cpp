// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/dialogflow/v2/environment.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_DIALOGFLOW_ES_ENVIRONMENTS_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_DIALOGFLOW_ES_ENVIRONMENTS_CLIENT_H

#include "google/cloud/dialogflow_es/environments_connection.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <memory>

namespace google {
namespace cloud {
namespace dialogflow_es {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service for managing [Environments][google.cloud.dialogflow.v2.Environment].
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class EnvironmentsClient {
 public:
  explicit EnvironmentsClient(
      std::shared_ptr<EnvironmentsConnection> connection, Options opts = {});
  ~EnvironmentsClient();

  ///@{
  /// @name Copy and move support
  EnvironmentsClient(EnvironmentsClient const&) = default;
  EnvironmentsClient& operator=(EnvironmentsClient const&) = default;
  EnvironmentsClient(EnvironmentsClient&&) = default;
  EnvironmentsClient& operator=(EnvironmentsClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(EnvironmentsClient const& a,
                         EnvironmentsClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(EnvironmentsClient const& a,
                         EnvironmentsClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Returns the list of all non-default environments of the specified agent.
  ///
  /// @param parent  Required. The agent to list all environments from.
  ///  Format:
  ///  - `projects/<Project ID>/agent`
  ///  - `projects/<Project ID>/locations/<Location ID>/agent`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::dialogflow::v2::Environment,google/cloud/dialogflow/v2/environment.proto#L139}
  ///
  /// [google.cloud.dialogflow.v2.ListEnvironmentsRequest]:
  /// @googleapis_reference_link{google/cloud/dialogflow/v2/environment.proto#L230}
  /// [google.cloud.dialogflow.v2.Environment]:
  /// @googleapis_reference_link{google/cloud/dialogflow/v2/environment.proto#L139}
  ///
  StreamRange<google::cloud::dialogflow::v2::Environment> ListEnvironments(
      std::string const& parent, Options opts = {});

  ///
  /// Returns the list of all non-default environments of the specified agent.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::dialogflow::v2::ListEnvironmentsRequest,google/cloud/dialogflow/v2/environment.proto#L230}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::dialogflow::v2::Environment,google/cloud/dialogflow/v2/environment.proto#L139}
  ///
  /// [google.cloud.dialogflow.v2.ListEnvironmentsRequest]:
  /// @googleapis_reference_link{google/cloud/dialogflow/v2/environment.proto#L230}
  /// [google.cloud.dialogflow.v2.Environment]:
  /// @googleapis_reference_link{google/cloud/dialogflow/v2/environment.proto#L139}
  ///
  StreamRange<google::cloud::dialogflow::v2::Environment> ListEnvironments(
      google::cloud::dialogflow::v2::ListEnvironmentsRequest request,
      Options opts = {});

  ///
  /// Retrieves the specified agent environment.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::dialogflow::v2::GetEnvironmentRequest,google/cloud/dialogflow/v2/environment.proto#L263}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::dialogflow::v2::Environment,google/cloud/dialogflow/v2/environment.proto#L139}
  ///
  /// [google.cloud.dialogflow.v2.GetEnvironmentRequest]:
  /// @googleapis_reference_link{google/cloud/dialogflow/v2/environment.proto#L263}
  /// [google.cloud.dialogflow.v2.Environment]:
  /// @googleapis_reference_link{google/cloud/dialogflow/v2/environment.proto#L139}
  ///
  StatusOr<google::cloud::dialogflow::v2::Environment> GetEnvironment(
      google::cloud::dialogflow::v2::GetEnvironmentRequest const& request,
      Options opts = {});

  ///
  /// Creates an agent environment.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::dialogflow::v2::CreateEnvironmentRequest,google/cloud/dialogflow/v2/environment.proto#L281}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::dialogflow::v2::Environment,google/cloud/dialogflow/v2/environment.proto#L139}
  ///
  /// [google.cloud.dialogflow.v2.CreateEnvironmentRequest]:
  /// @googleapis_reference_link{google/cloud/dialogflow/v2/environment.proto#L281}
  /// [google.cloud.dialogflow.v2.Environment]:
  /// @googleapis_reference_link{google/cloud/dialogflow/v2/environment.proto#L139}
  ///
  StatusOr<google::cloud::dialogflow::v2::Environment> CreateEnvironment(
      google::cloud::dialogflow::v2::CreateEnvironmentRequest const& request,
      Options opts = {});

  ///
  /// Updates the specified agent environment.
  ///
  /// This method allows you to deploy new agent versions into the environment.
  /// When an environment is pointed to a new agent version by setting
  /// `environment.agent_version`, the environment is temporarily set to the
  /// `LOADING` state. During that time, the environment continues serving the
  /// previous version of the agent. After the new agent version is done
  /// loading, the environment is set back to the `RUNNING` state. You can use
  /// "-" as Environment ID in environment name to update an agent version in
  /// the default environment. WARNING: this will negate all recent changes to
  /// the draft agent and can't be undone. You may want to save the draft agent
  /// to a version before calling this method.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::dialogflow::v2::UpdateEnvironmentRequest,google/cloud/dialogflow/v2/environment.proto#L302}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::dialogflow::v2::Environment,google/cloud/dialogflow/v2/environment.proto#L139}
  ///
  /// [google.cloud.dialogflow.v2.UpdateEnvironmentRequest]:
  /// @googleapis_reference_link{google/cloud/dialogflow/v2/environment.proto#L302}
  /// [google.cloud.dialogflow.v2.Environment]:
  /// @googleapis_reference_link{google/cloud/dialogflow/v2/environment.proto#L139}
  ///
  StatusOr<google::cloud::dialogflow::v2::Environment> UpdateEnvironment(
      google::cloud::dialogflow::v2::UpdateEnvironmentRequest const& request,
      Options opts = {});

  ///
  /// Deletes the specified agent environment.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::dialogflow::v2::DeleteEnvironmentRequest,google/cloud/dialogflow/v2/environment.proto#L317}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  ///
  /// [google.cloud.dialogflow.v2.DeleteEnvironmentRequest]:
  /// @googleapis_reference_link{google/cloud/dialogflow/v2/environment.proto#L317}
  ///
  Status DeleteEnvironment(
      google::cloud::dialogflow::v2::DeleteEnvironmentRequest const& request,
      Options opts = {});

  ///
  /// Gets the history of the specified environment.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::dialogflow::v2::GetEnvironmentHistoryRequest,google/cloud/dialogflow/v2/environment.proto#L335}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::dialogflow::v2::EnvironmentHistory::Entry,google/cloud/dialogflow/v2/environment.proto#L362}
  ///
  /// [google.cloud.dialogflow.v2.GetEnvironmentHistoryRequest]:
  /// @googleapis_reference_link{google/cloud/dialogflow/v2/environment.proto#L335}
  /// [google.cloud.dialogflow.v2.EnvironmentHistory.Entry]:
  /// @googleapis_reference_link{google/cloud/dialogflow/v2/environment.proto#L362}
  ///
  StreamRange<google::cloud::dialogflow::v2::EnvironmentHistory::Entry>
  GetEnvironmentHistory(
      google::cloud::dialogflow::v2::GetEnvironmentHistoryRequest request,
      Options opts = {});

 private:
  std::shared_ptr<EnvironmentsConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace dialogflow_es
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_DIALOGFLOW_ES_ENVIRONMENTS_CLIENT_H
