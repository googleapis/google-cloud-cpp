// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/workstations/v1/workstations.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_WORKSTATIONS_V1_WORKSTATIONS_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_WORKSTATIONS_V1_WORKSTATIONS_CLIENT_H

#include "google/cloud/workstations/v1/workstations_connection.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <google/longrunning/operations.grpc.pb.h>
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace workstations_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service for interacting with Cloud Workstations.
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class WorkstationsClient {
 public:
  explicit WorkstationsClient(
      std::shared_ptr<WorkstationsConnection> connection, Options opts = {});
  ~WorkstationsClient();

  ///@{
  /// @name Copy and move support
  WorkstationsClient(WorkstationsClient const&) = default;
  WorkstationsClient& operator=(WorkstationsClient const&) = default;
  WorkstationsClient(WorkstationsClient&&) = default;
  WorkstationsClient& operator=(WorkstationsClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(WorkstationsClient const& a,
                         WorkstationsClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(WorkstationsClient const& a,
                         WorkstationsClient const& b) {
    return !(a == b);
  }
  ///@}

  ///
  /// Returns the requested workstation cluster.
  ///
  /// @param name  Required. Name of the requested resource.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::WorkstationCluster,google/cloud/workstations/v1/workstations.proto#L280}
  ///
  /// [google.cloud.workstations.v1.GetWorkstationClusterRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L693}
  /// [google.cloud.workstations.v1.WorkstationCluster]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L280}
  ///
  StatusOr<google::cloud::workstations::v1::WorkstationCluster>
  GetWorkstationCluster(std::string const& name, Options opts = {});

  ///
  /// Returns the requested workstation cluster.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::workstations::v1::GetWorkstationClusterRequest,google/cloud/workstations/v1/workstations.proto#L693}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::WorkstationCluster,google/cloud/workstations/v1/workstations.proto#L280}
  ///
  /// [google.cloud.workstations.v1.GetWorkstationClusterRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L693}
  /// [google.cloud.workstations.v1.WorkstationCluster]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L280}
  ///
  StatusOr<google::cloud::workstations::v1::WorkstationCluster>
  GetWorkstationCluster(
      google::cloud::workstations::v1::GetWorkstationClusterRequest const&
          request,
      Options opts = {});

  ///
  /// Returns all workstation clusters in the specified location.
  ///
  /// @param parent  Required. Parent resource name.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::WorkstationCluster,google/cloud/workstations/v1/workstations.proto#L280}
  ///
  /// [google.cloud.workstations.v1.ListWorkstationClustersRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L704}
  /// [google.cloud.workstations.v1.WorkstationCluster]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L280}
  ///
  StreamRange<google::cloud::workstations::v1::WorkstationCluster>
  ListWorkstationClusters(std::string const& parent, Options opts = {});

  ///
  /// Returns all workstation clusters in the specified location.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::workstations::v1::ListWorkstationClustersRequest,google/cloud/workstations/v1/workstations.proto#L704}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::WorkstationCluster,google/cloud/workstations/v1/workstations.proto#L280}
  ///
  /// [google.cloud.workstations.v1.ListWorkstationClustersRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L704}
  /// [google.cloud.workstations.v1.WorkstationCluster]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L280}
  ///
  StreamRange<google::cloud::workstations::v1::WorkstationCluster>
  ListWorkstationClusters(
      google::cloud::workstations::v1::ListWorkstationClustersRequest request,
      Options opts = {});

  ///
  /// Creates a new workstation cluster.
  ///
  /// @param parent  Required. Parent resource name.
  /// @param workstation_cluster  Required. Workstation cluster to create.
  /// @param workstation_cluster_id  Required. ID to use for the workstation
  /// cluster.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::WorkstationCluster,google/cloud/workstations/v1/workstations.proto#L280}
  ///
  /// [google.cloud.workstations.v1.CreateWorkstationClusterRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L734}
  /// [google.cloud.workstations.v1.WorkstationCluster]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L280}
  ///
  future<StatusOr<google::cloud::workstations::v1::WorkstationCluster>>
  CreateWorkstationCluster(
      std::string const& parent,
      google::cloud::workstations::v1::WorkstationCluster const&
          workstation_cluster,
      std::string const& workstation_cluster_id, Options opts = {});

  ///
  /// Creates a new workstation cluster.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::workstations::v1::CreateWorkstationClusterRequest,google/cloud/workstations/v1/workstations.proto#L734}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::WorkstationCluster,google/cloud/workstations/v1/workstations.proto#L280}
  ///
  /// [google.cloud.workstations.v1.CreateWorkstationClusterRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L734}
  /// [google.cloud.workstations.v1.WorkstationCluster]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L280}
  ///
  future<StatusOr<google::cloud::workstations::v1::WorkstationCluster>>
  CreateWorkstationCluster(
      google::cloud::workstations::v1::CreateWorkstationClusterRequest const&
          request,
      Options opts = {});

  ///
  /// Updates an existing workstation cluster.
  ///
  /// @param workstation_cluster  Required. Workstation cluster to update.
  /// @param update_mask  Required. Mask that specifies which fields in the
  /// workstation cluster
  ///  should be updated.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::WorkstationCluster,google/cloud/workstations/v1/workstations.proto#L280}
  ///
  /// [google.cloud.workstations.v1.UpdateWorkstationClusterRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L756}
  /// [google.cloud.workstations.v1.WorkstationCluster]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L280}
  ///
  future<StatusOr<google::cloud::workstations::v1::WorkstationCluster>>
  UpdateWorkstationCluster(
      google::cloud::workstations::v1::WorkstationCluster const&
          workstation_cluster,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Updates an existing workstation cluster.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::workstations::v1::UpdateWorkstationClusterRequest,google/cloud/workstations/v1/workstations.proto#L756}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::WorkstationCluster,google/cloud/workstations/v1/workstations.proto#L280}
  ///
  /// [google.cloud.workstations.v1.UpdateWorkstationClusterRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L756}
  /// [google.cloud.workstations.v1.WorkstationCluster]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L280}
  ///
  future<StatusOr<google::cloud::workstations::v1::WorkstationCluster>>
  UpdateWorkstationCluster(
      google::cloud::workstations::v1::UpdateWorkstationClusterRequest const&
          request,
      Options opts = {});

  ///
  /// Deletes the specified workstation cluster.
  ///
  /// @param name  Required. Name of the workstation cluster to delete.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::WorkstationCluster,google/cloud/workstations/v1/workstations.proto#L280}
  ///
  /// [google.cloud.workstations.v1.DeleteWorkstationClusterRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L776}
  /// [google.cloud.workstations.v1.WorkstationCluster]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L280}
  ///
  future<StatusOr<google::cloud::workstations::v1::WorkstationCluster>>
  DeleteWorkstationCluster(std::string const& name, Options opts = {});

  ///
  /// Deletes the specified workstation cluster.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::workstations::v1::DeleteWorkstationClusterRequest,google/cloud/workstations/v1/workstations.proto#L776}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::WorkstationCluster,google/cloud/workstations/v1/workstations.proto#L280}
  ///
  /// [google.cloud.workstations.v1.DeleteWorkstationClusterRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L776}
  /// [google.cloud.workstations.v1.WorkstationCluster]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L280}
  ///
  future<StatusOr<google::cloud::workstations::v1::WorkstationCluster>>
  DeleteWorkstationCluster(
      google::cloud::workstations::v1::DeleteWorkstationClusterRequest const&
          request,
      Options opts = {});

  ///
  /// Returns the requested workstation configuration.
  ///
  /// @param name  Required. Name of the requested resource.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::WorkstationConfig,google/cloud/workstations/v1/workstations.proto#L374}
  ///
  /// [google.cloud.workstations.v1.GetWorkstationConfigRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L799}
  /// [google.cloud.workstations.v1.WorkstationConfig]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L374}
  ///
  StatusOr<google::cloud::workstations::v1::WorkstationConfig>
  GetWorkstationConfig(std::string const& name, Options opts = {});

  ///
  /// Returns the requested workstation configuration.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::workstations::v1::GetWorkstationConfigRequest,google/cloud/workstations/v1/workstations.proto#L799}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::WorkstationConfig,google/cloud/workstations/v1/workstations.proto#L374}
  ///
  /// [google.cloud.workstations.v1.GetWorkstationConfigRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L799}
  /// [google.cloud.workstations.v1.WorkstationConfig]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L374}
  ///
  StatusOr<google::cloud::workstations::v1::WorkstationConfig>
  GetWorkstationConfig(
      google::cloud::workstations::v1::GetWorkstationConfigRequest const&
          request,
      Options opts = {});

  ///
  /// Returns all WorkstationConfigs in the specified cluster.
  ///
  /// @param parent  Required. Parent resource name.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::WorkstationConfig,google/cloud/workstations/v1/workstations.proto#L374}
  ///
  /// [google.cloud.workstations.v1.ListWorkstationConfigsRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L810}
  /// [google.cloud.workstations.v1.WorkstationConfig]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L374}
  ///
  StreamRange<google::cloud::workstations::v1::WorkstationConfig>
  ListWorkstationConfigs(std::string const& parent, Options opts = {});

  ///
  /// Returns all WorkstationConfigs in the specified cluster.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::workstations::v1::ListWorkstationConfigsRequest,google/cloud/workstations/v1/workstations.proto#L810}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::WorkstationConfig,google/cloud/workstations/v1/workstations.proto#L374}
  ///
  /// [google.cloud.workstations.v1.ListWorkstationConfigsRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L810}
  /// [google.cloud.workstations.v1.WorkstationConfig]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L374}
  ///
  StreamRange<google::cloud::workstations::v1::WorkstationConfig>
  ListWorkstationConfigs(
      google::cloud::workstations::v1::ListWorkstationConfigsRequest request,
      Options opts = {});

  ///
  /// Returns all workstation configurations in the specified cluster on which
  /// the caller has the "workstations.workstation.create" permission.
  ///
  /// @param parent  Required. Parent resource name.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::WorkstationConfig,google/cloud/workstations/v1/workstations.proto#L374}
  ///
  /// [google.cloud.workstations.v1.ListUsableWorkstationConfigsRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L840}
  /// [google.cloud.workstations.v1.WorkstationConfig]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L374}
  ///
  StreamRange<google::cloud::workstations::v1::WorkstationConfig>
  ListUsableWorkstationConfigs(std::string const& parent, Options opts = {});

  ///
  /// Returns all workstation configurations in the specified cluster on which
  /// the caller has the "workstations.workstation.create" permission.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::workstations::v1::ListUsableWorkstationConfigsRequest,google/cloud/workstations/v1/workstations.proto#L840}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::WorkstationConfig,google/cloud/workstations/v1/workstations.proto#L374}
  ///
  /// [google.cloud.workstations.v1.ListUsableWorkstationConfigsRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L840}
  /// [google.cloud.workstations.v1.WorkstationConfig]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L374}
  ///
  StreamRange<google::cloud::workstations::v1::WorkstationConfig>
  ListUsableWorkstationConfigs(
      google::cloud::workstations::v1::ListUsableWorkstationConfigsRequest
          request,
      Options opts = {});

  ///
  /// Creates a new workstation configuration.
  ///
  /// @param parent  Required. Parent resource name.
  /// @param workstation_config  Required. Config to create.
  /// @param workstation_config_id  Required. ID to use for the config.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::WorkstationConfig,google/cloud/workstations/v1/workstations.proto#L374}
  ///
  /// [google.cloud.workstations.v1.CreateWorkstationConfigRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L870}
  /// [google.cloud.workstations.v1.WorkstationConfig]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L374}
  ///
  future<StatusOr<google::cloud::workstations::v1::WorkstationConfig>>
  CreateWorkstationConfig(
      std::string const& parent,
      google::cloud::workstations::v1::WorkstationConfig const&
          workstation_config,
      std::string const& workstation_config_id, Options opts = {});

  ///
  /// Creates a new workstation configuration.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::workstations::v1::CreateWorkstationConfigRequest,google/cloud/workstations/v1/workstations.proto#L870}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::WorkstationConfig,google/cloud/workstations/v1/workstations.proto#L374}
  ///
  /// [google.cloud.workstations.v1.CreateWorkstationConfigRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L870}
  /// [google.cloud.workstations.v1.WorkstationConfig]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L374}
  ///
  future<StatusOr<google::cloud::workstations::v1::WorkstationConfig>>
  CreateWorkstationConfig(
      google::cloud::workstations::v1::CreateWorkstationConfigRequest const&
          request,
      Options opts = {});

  ///
  /// Updates an existing workstation configuration.
  ///
  /// @param workstation_config  Required. Config to update.
  /// @param update_mask  Required. Mask specifying which fields in the config
  /// should be updated.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::WorkstationConfig,google/cloud/workstations/v1/workstations.proto#L374}
  ///
  /// [google.cloud.workstations.v1.UpdateWorkstationConfigRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L892}
  /// [google.cloud.workstations.v1.WorkstationConfig]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L374}
  ///
  future<StatusOr<google::cloud::workstations::v1::WorkstationConfig>>
  UpdateWorkstationConfig(
      google::cloud::workstations::v1::WorkstationConfig const&
          workstation_config,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Updates an existing workstation configuration.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::workstations::v1::UpdateWorkstationConfigRequest,google/cloud/workstations/v1/workstations.proto#L892}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::WorkstationConfig,google/cloud/workstations/v1/workstations.proto#L374}
  ///
  /// [google.cloud.workstations.v1.UpdateWorkstationConfigRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L892}
  /// [google.cloud.workstations.v1.WorkstationConfig]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L374}
  ///
  future<StatusOr<google::cloud::workstations::v1::WorkstationConfig>>
  UpdateWorkstationConfig(
      google::cloud::workstations::v1::UpdateWorkstationConfigRequest const&
          request,
      Options opts = {});

  ///
  /// Deletes the specified workstation configuration.
  ///
  /// @param name  Required. Name of the config to delete.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::WorkstationConfig,google/cloud/workstations/v1/workstations.proto#L374}
  ///
  /// [google.cloud.workstations.v1.DeleteWorkstationConfigRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L911}
  /// [google.cloud.workstations.v1.WorkstationConfig]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L374}
  ///
  future<StatusOr<google::cloud::workstations::v1::WorkstationConfig>>
  DeleteWorkstationConfig(std::string const& name, Options opts = {});

  ///
  /// Deletes the specified workstation configuration.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::workstations::v1::DeleteWorkstationConfigRequest,google/cloud/workstations/v1/workstations.proto#L911}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::WorkstationConfig,google/cloud/workstations/v1/workstations.proto#L374}
  ///
  /// [google.cloud.workstations.v1.DeleteWorkstationConfigRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L911}
  /// [google.cloud.workstations.v1.WorkstationConfig]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L374}
  ///
  future<StatusOr<google::cloud::workstations::v1::WorkstationConfig>>
  DeleteWorkstationConfig(
      google::cloud::workstations::v1::DeleteWorkstationConfigRequest const&
          request,
      Options opts = {});

  ///
  /// Returns the requested workstation.
  ///
  /// @param name  Required. Name of the requested resource.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::Workstation,google/cloud/workstations/v1/workstations.proto#L618}
  ///
  /// [google.cloud.workstations.v1.GetWorkstationRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L934}
  /// [google.cloud.workstations.v1.Workstation]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L618}
  ///
  StatusOr<google::cloud::workstations::v1::Workstation> GetWorkstation(
      std::string const& name, Options opts = {});

  ///
  /// Returns the requested workstation.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::workstations::v1::GetWorkstationRequest,google/cloud/workstations/v1/workstations.proto#L934}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::Workstation,google/cloud/workstations/v1/workstations.proto#L618}
  ///
  /// [google.cloud.workstations.v1.GetWorkstationRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L934}
  /// [google.cloud.workstations.v1.Workstation]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L618}
  ///
  StatusOr<google::cloud::workstations::v1::Workstation> GetWorkstation(
      google::cloud::workstations::v1::GetWorkstationRequest const& request,
      Options opts = {});

  ///
  /// Returns all Workstations using the specified config.
  ///
  /// @param parent  Required. Parent resource name.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::Workstation,google/cloud/workstations/v1/workstations.proto#L618}
  ///
  /// [google.cloud.workstations.v1.ListWorkstationsRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L945}
  /// [google.cloud.workstations.v1.Workstation]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L618}
  ///
  StreamRange<google::cloud::workstations::v1::Workstation> ListWorkstations(
      std::string const& parent, Options opts = {});

  ///
  /// Returns all Workstations using the specified config.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::workstations::v1::ListWorkstationsRequest,google/cloud/workstations/v1/workstations.proto#L945}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::Workstation,google/cloud/workstations/v1/workstations.proto#L618}
  ///
  /// [google.cloud.workstations.v1.ListWorkstationsRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L945}
  /// [google.cloud.workstations.v1.Workstation]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L618}
  ///
  StreamRange<google::cloud::workstations::v1::Workstation> ListWorkstations(
      google::cloud::workstations::v1::ListWorkstationsRequest request,
      Options opts = {});

  ///
  /// Returns all Workstations using the specified config on which the caller
  /// has the "workstations.workstations.use" permission.
  ///
  /// @param parent  Required. Parent resource name.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::Workstation,google/cloud/workstations/v1/workstations.proto#L618}
  ///
  /// [google.cloud.workstations.v1.ListUsableWorkstationsRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L975}
  /// [google.cloud.workstations.v1.Workstation]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L618}
  ///
  StreamRange<google::cloud::workstations::v1::Workstation>
  ListUsableWorkstations(std::string const& parent, Options opts = {});

  ///
  /// Returns all Workstations using the specified config on which the caller
  /// has the "workstations.workstations.use" permission.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::workstations::v1::ListUsableWorkstationsRequest,google/cloud/workstations/v1/workstations.proto#L975}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::Workstation,google/cloud/workstations/v1/workstations.proto#L618}
  ///
  /// [google.cloud.workstations.v1.ListUsableWorkstationsRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L975}
  /// [google.cloud.workstations.v1.Workstation]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L618}
  ///
  StreamRange<google::cloud::workstations::v1::Workstation>
  ListUsableWorkstations(
      google::cloud::workstations::v1::ListUsableWorkstationsRequest request,
      Options opts = {});

  ///
  /// Creates a new workstation.
  ///
  /// @param parent  Required. Parent resource name.
  /// @param workstation  Required. Workstation to create.
  /// @param workstation_id  Required. ID to use for the workstation.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::Workstation,google/cloud/workstations/v1/workstations.proto#L618}
  ///
  /// [google.cloud.workstations.v1.CreateWorkstationRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L1005}
  /// [google.cloud.workstations.v1.Workstation]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L618}
  ///
  future<StatusOr<google::cloud::workstations::v1::Workstation>>
  CreateWorkstation(
      std::string const& parent,
      google::cloud::workstations::v1::Workstation const& workstation,
      std::string const& workstation_id, Options opts = {});

  ///
  /// Creates a new workstation.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::workstations::v1::CreateWorkstationRequest,google/cloud/workstations/v1/workstations.proto#L1005}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::Workstation,google/cloud/workstations/v1/workstations.proto#L618}
  ///
  /// [google.cloud.workstations.v1.CreateWorkstationRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L1005}
  /// [google.cloud.workstations.v1.Workstation]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L618}
  ///
  future<StatusOr<google::cloud::workstations::v1::Workstation>>
  CreateWorkstation(
      google::cloud::workstations::v1::CreateWorkstationRequest const& request,
      Options opts = {});

  ///
  /// Updates an existing workstation.
  ///
  /// @param workstation  Required. Workstation to update.
  /// @param update_mask  Required. Mask specifying which fields in the config
  /// should be updated.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::Workstation,google/cloud/workstations/v1/workstations.proto#L618}
  ///
  /// [google.cloud.workstations.v1.UpdateWorkstationRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L1026}
  /// [google.cloud.workstations.v1.Workstation]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L618}
  ///
  future<StatusOr<google::cloud::workstations::v1::Workstation>>
  UpdateWorkstation(
      google::cloud::workstations::v1::Workstation const& workstation,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  ///
  /// Updates an existing workstation.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::workstations::v1::UpdateWorkstationRequest,google/cloud/workstations/v1/workstations.proto#L1026}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::Workstation,google/cloud/workstations/v1/workstations.proto#L618}
  ///
  /// [google.cloud.workstations.v1.UpdateWorkstationRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L1026}
  /// [google.cloud.workstations.v1.Workstation]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L618}
  ///
  future<StatusOr<google::cloud::workstations::v1::Workstation>>
  UpdateWorkstation(
      google::cloud::workstations::v1::UpdateWorkstationRequest const& request,
      Options opts = {});

  ///
  /// Deletes the specified workstation.
  ///
  /// @param name  Required. Name of the workstation to delete.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::Workstation,google/cloud/workstations/v1/workstations.proto#L618}
  ///
  /// [google.cloud.workstations.v1.DeleteWorkstationRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L1044}
  /// [google.cloud.workstations.v1.Workstation]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L618}
  ///
  future<StatusOr<google::cloud::workstations::v1::Workstation>>
  DeleteWorkstation(std::string const& name, Options opts = {});

  ///
  /// Deletes the specified workstation.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::workstations::v1::DeleteWorkstationRequest,google/cloud/workstations/v1/workstations.proto#L1044}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::Workstation,google/cloud/workstations/v1/workstations.proto#L618}
  ///
  /// [google.cloud.workstations.v1.DeleteWorkstationRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L1044}
  /// [google.cloud.workstations.v1.Workstation]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L618}
  ///
  future<StatusOr<google::cloud::workstations::v1::Workstation>>
  DeleteWorkstation(
      google::cloud::workstations::v1::DeleteWorkstationRequest const& request,
      Options opts = {});

  ///
  /// Starts running a workstation so that users can connect to it.
  ///
  /// @param name  Required. Name of the workstation to start.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::Workstation,google/cloud/workstations/v1/workstations.proto#L618}
  ///
  /// [google.cloud.workstations.v1.StartWorkstationRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L1063}
  /// [google.cloud.workstations.v1.Workstation]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L618}
  ///
  future<StatusOr<google::cloud::workstations::v1::Workstation>>
  StartWorkstation(std::string const& name, Options opts = {});

  ///
  /// Starts running a workstation so that users can connect to it.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::workstations::v1::StartWorkstationRequest,google/cloud/workstations/v1/workstations.proto#L1063}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::Workstation,google/cloud/workstations/v1/workstations.proto#L618}
  ///
  /// [google.cloud.workstations.v1.StartWorkstationRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L1063}
  /// [google.cloud.workstations.v1.Workstation]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L618}
  ///
  future<StatusOr<google::cloud::workstations::v1::Workstation>>
  StartWorkstation(
      google::cloud::workstations::v1::StartWorkstationRequest const& request,
      Options opts = {});

  ///
  /// Stops running a workstation, reducing costs.
  ///
  /// @param name  Required. Name of the workstation to stop.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::Workstation,google/cloud/workstations/v1/workstations.proto#L618}
  ///
  /// [google.cloud.workstations.v1.StopWorkstationRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L1082}
  /// [google.cloud.workstations.v1.Workstation]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L618}
  ///
  future<StatusOr<google::cloud::workstations::v1::Workstation>>
  StopWorkstation(std::string const& name, Options opts = {});

  ///
  /// Stops running a workstation, reducing costs.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::workstations::v1::StopWorkstationRequest,google/cloud/workstations/v1/workstations.proto#L1082}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::Workstation,google/cloud/workstations/v1/workstations.proto#L618}
  ///
  /// [google.cloud.workstations.v1.StopWorkstationRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L1082}
  /// [google.cloud.workstations.v1.Workstation]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L618}
  ///
  future<StatusOr<google::cloud::workstations::v1::Workstation>>
  StopWorkstation(
      google::cloud::workstations::v1::StopWorkstationRequest const& request,
      Options opts = {});

  ///
  /// Returns a short-lived credential that can be used to send authenticated
  /// and authorized traffic to a workstation.
  ///
  /// @param workstation  Required. Name of the workstation for which the access
  /// token should be
  ///  generated.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::GenerateAccessTokenResponse,google/cloud/workstations/v1/workstations.proto#L1127}
  ///
  /// [google.cloud.workstations.v1.GenerateAccessTokenRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L1101}
  /// [google.cloud.workstations.v1.GenerateAccessTokenResponse]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L1127}
  ///
  StatusOr<google::cloud::workstations::v1::GenerateAccessTokenResponse>
  GenerateAccessToken(std::string const& workstation, Options opts = {});

  ///
  /// Returns a short-lived credential that can be used to send authenticated
  /// and authorized traffic to a workstation.
  ///
  /// @param request
  /// @googleapis_link{google::cloud::workstations::v1::GenerateAccessTokenRequest,google/cloud/workstations/v1/workstations.proto#L1101}
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return
  /// @googleapis_link{google::cloud::workstations::v1::GenerateAccessTokenResponse,google/cloud/workstations/v1/workstations.proto#L1127}
  ///
  /// [google.cloud.workstations.v1.GenerateAccessTokenRequest]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L1101}
  /// [google.cloud.workstations.v1.GenerateAccessTokenResponse]:
  /// @googleapis_reference_link{google/cloud/workstations/v1/workstations.proto#L1127}
  ///
  StatusOr<google::cloud::workstations::v1::GenerateAccessTokenResponse>
  GenerateAccessToken(
      google::cloud::workstations::v1::GenerateAccessTokenRequest const&
          request,
      Options opts = {});

 private:
  std::shared_ptr<WorkstationsConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace workstations_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_WORKSTATIONS_V1_WORKSTATIONS_CLIENT_H
